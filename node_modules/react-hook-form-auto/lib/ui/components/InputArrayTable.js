"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InputArrayTable = void 0;

var _react = _interopRequireDefault(require("react"));

var _translation_utils = require("../../translation_utils");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import { renderLectures } from './renderLectures'
const renderRemove = ({
  idx,
  closeButton
}) => /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
  children: closeButton
}, idx);

const renderTableHeader = ({
  schema
}) => {
  const subType = schema.getType();
  const schemaDef = schema.getSchema();
  const fields = Object.keys(schemaDef);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("tr", {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("th", {}), fields.map(sub => /*#__PURE__*/(0, _jsxRuntime.jsx)("th", {
      children: (0, _translation_utils.trField)(subType, sub)
    }, sub))]
  });
};

const renderItems = ({
  items
}) => items.map(({
  idx,
  closeButton,
  inputs
}) => {
  const tdedInputs = inputs && inputs.map(input => {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("td", {
      children: input
    }, input.props.name);
  });
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("tr", {
    children: [renderRemove({
      idx,
      closeButton
    }), tdedInputs]
  }, idx);
});

const renderTable = props => /*#__PURE__*/(0, _jsxRuntime.jsxs)("table", {
  className: props.styles.table,
  children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("thead", {
    children: renderTableHeader(props)
  }), /*#__PURE__*/(0, _jsxRuntime.jsx)("tbody", {
    children: renderItems(props)
  })]
});

const InputArrayTable = props => /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {
  children: renderTable(props)
});

exports.InputArrayTable = InputArrayTable;