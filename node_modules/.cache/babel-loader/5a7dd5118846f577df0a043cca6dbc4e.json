{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Samples\\\\DepartamentoFormEjemplo.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router\";\nimport InfoErrorApi from '../Utils/InfoErrorApi';\nimport InfoExitoApi from '../Utils/InfoExitoApi';\nimport ApiSamples from \"./../Api/Services/SamplesApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DepartamentoFormEjemplo() {\n  _s();\n\n  var _departamento$data, _departamento$data$at, _departamento$data2, _departamento$data2$a;\n\n  const [departamento, setDepartamento] = useState({\n    data: {}\n  });\n  let {\n    departamentoId\n  } = useParams();\n  useEffect(() => {\n    async function fetchData() {\n      if (departamentoId) {\n        ApiSamples.getDepartamento(departamentoId).then(datos => {\n          if (!datos.error) {\n            establecerCampos(datos);\n          } else {\n            window.showModal(1);\n          }\n        });\n      }\n    }\n\n    console.log(\"Antes:\", departamento);\n    fetchData();\n  }, []);\n\n  function establecerCampos(datos) {\n    setDepartamento(datos);\n  }\n\n  const enviarDatos = datos => {\n    const data = {\n      \"data\": {\n        \"type\": departamento.data.type,\n        \"attributes\": {\n          \"nombre\": datos.nombre,\n          \"codigo_dane\": datos.dane\n        }\n      }\n    };\n\n    if (departamentoId) {\n      ApiSamples.updateDepartamento(departamentoId, data).then(datos => {\n        if (!datos.error) {\n          establecerCampos(datos);\n          window.showModal(2);\n        } else {\n          window.showModal(1);\n        }\n      });\n    } else {\n      data.data.type = \"departmentos\";\n      ApiSamples.addDepartamento(data).then(datos => {\n        if (!datos.error) {\n          establecerCampos(datos);\n          window.showModal(2);\n        } else {\n          window.showModal(1);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InfoErrorApi, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(InfoExitoApi, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        nombre: ((_departamento$data = departamento.data) === null || _departamento$data === void 0 ? void 0 : (_departamento$data$at = _departamento$data.attributes) === null || _departamento$data$at === void 0 ? void 0 : _departamento$data$at.nombre) ? departamento.data.attributes.nombre : '',\n        dane: ((_departamento$data2 = departamento.data) === null || _departamento$data2 === void 0 ? void 0 : (_departamento$data2$a = _departamento$data2.attributes) === null || _departamento$data2$a === void 0 ? void 0 : _departamento$data2$a.codigo_dane) ? departamento.data.attributes.codigo_dane : ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        let errores = {};\n\n        if (!valores.nombre) {\n          errores.nombre = 'Debe ingresar un nombre';\n        }\n\n        if (!valores.dane) {\n          errores.dane = 'Debe ingresar un cÃ³digo DANE';\n        }\n\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        console.log(valores.nombre);\n        console.log(valores.dane);\n        enviarDatos(valores);\n        resetForm();\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-rounded block-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header block-header-default\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: \"Registro Departamento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row justify-content-center py-sm-3 py-md-5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-10 col-md-8\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"C\\xF3digo Dane\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      type: \"text\",\n                      id: \"dane\",\n                      name: \"dane\",\n                      className: \"form-control\",\n                      placeholder: \"C\\xF3digo DANE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"dane\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.dane\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 115,\n                        columnNumber: 89\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Nombre\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      type: \"text\",\n                      id: \"nombre\",\n                      name: \"nombre\",\n                      className: \"form-control\",\n                      placeholder: \"Nombre\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"nombre\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.nombre\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 120,\n                        columnNumber: 91\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full block-content-sm bg-body-light text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-sm btn-success\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this), \" \", departamentoId ? 'Actualizar' : 'Registrar']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DepartamentoFormEjemplo, \"+8HRHBimhmq1Gop2qpnClZ6Zz7Y=\", false, function () {\n  return [useParams];\n});\n\n_c = DepartamentoFormEjemplo;\nexport default DepartamentoFormEjemplo;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartamentoFormEjemplo\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/Samples/DepartamentoFormEjemplo.js"],"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","useParams","InfoErrorApi","InfoExitoApi","ApiSamples","DepartamentoFormEjemplo","departamento","setDepartamento","data","departamentoId","fetchData","getDepartamento","then","datos","error","establecerCampos","window","showModal","console","log","enviarDatos","type","nombre","dane","updateDepartamento","addDepartamento","attributes","codigo_dane","valores","errores","resetForm","errors"],"mappings":"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","sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport InfoExitoApi from '../Utils/InfoExitoApi';\r\nimport ApiSamples from \"./../Api/Services/SamplesApi\";\r\n\r\nfunction DepartamentoFormEjemplo() {\r\n\r\n    const [departamento, setDepartamento] = useState({ data: {} });\r\n\r\n    let { departamentoId } = useParams();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if(departamentoId){\r\n                ApiSamples.getDepartamento(departamentoId).then(\r\n                    datos => {\r\n                        if(!datos.error){\r\n                            establecerCampos(datos)\r\n                        }\r\n                        else{\r\n                            window.showModal(1)\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        console.log(\"Antes:\", departamento);\r\n        fetchData();\r\n    }, []);\r\n    \r\n    function establecerCampos(datos){\r\n        setDepartamento(datos);\r\n    }\r\n\r\n    const enviarDatos = (datos) => {\r\n        const data = {\r\n            \"data\" : {\r\n                \"type\": departamento.data.type,\r\n                \"attributes\": {\r\n                    \"nombre\": datos.nombre,\r\n                    \"codigo_dane\": datos.dane\r\n                }\r\n            }\r\n        }\r\n        if(departamentoId){\r\n            ApiSamples.updateDepartamento(departamentoId, data).then(\r\n                datos => {\r\n                    if(!datos.error){\r\n                        establecerCampos(datos)\r\n                        window.showModal(2)\r\n                    }\r\n                    else{\r\n                        window.showModal(1)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        else{            \r\n            data.data.type = \"departmentos\"\r\n            ApiSamples.addDepartamento(data).then(\r\n                datos => {\r\n                    if(!datos.error){\r\n                        establecerCampos(datos)\r\n                        window.showModal(2)\r\n                    }\r\n                    else{\r\n                        window.showModal(1)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n    \r\n    return(        \r\n        <div>\r\n            { <InfoErrorApi /> }\r\n            { <InfoExitoApi /> }\r\n            <Formik\r\n                initialValues={{\r\n                    nombre: (departamento.data?.attributes?.nombre ? departamento.data.attributes.nombre : ''),\r\n                    dane: (departamento.data?.attributes?.codigo_dane ? departamento.data.attributes.codigo_dane : '')\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    let errores = {}\r\n                    if(!valores.nombre){\r\n                        errores.nombre = 'Debe ingresar un nombre'\r\n                    }\r\n                    \r\n                    if(!valores.dane){\r\n                        errores.dane = 'Debe ingresar un cÃ³digo DANE'\r\n                    }\r\n                    return errores\r\n                }}\r\n                onSubmit={(valores, {resetForm}) => {\r\n                    console.log(valores.nombre);\r\n                    console.log(valores.dane);\r\n                    enviarDatos(valores);\r\n                    resetForm();\r\n                }}>\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"block block-rounded block-bordered\">\r\n                            <div className=\"block-header block-header-default\">\r\n                                <h3 className=\"block-title\">Registro Departamento</h3>\r\n                            </div>\r\n                            <div className=\"block-content\">\r\n                                <div className=\"row justify-content-center py-sm-3 py-md-5\">\r\n                                    <div className=\"col-sm-10 col-md-8\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>CÃ³digo Dane</label>\r\n                                            <Field type=\"text\" id=\"dane\" name=\"dane\" className=\"form-control\" placeholder=\"CÃ³digo DANE\" />\r\n                                            <ErrorMessage name=\"dane\" component={() => (<span className=\"text-danger\">{errors.dane}</span>)} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Nombre</label>\r\n                                            <Field type=\"text\" id=\"nombre\" name=\"nombre\" className=\"form-control\" placeholder=\"Nombre\" />\r\n                                            <ErrorMessage name=\"nombre\" component={() => (<span className=\"text-danger\">{errors.nombre}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"block-content block-content-full block-content-sm bg-body-light text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-sm btn-success\">\r\n                                    <i className=\"fa fa-check\"></i> { departamentoId ? 'Actualizar' : 'Registrar' }\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>            \r\n        </div>\r\n    )\r\n\r\n  }\r\n\r\nexport default DepartamentoFormEjemplo;"]},"metadata":{},"sourceType":"module"}