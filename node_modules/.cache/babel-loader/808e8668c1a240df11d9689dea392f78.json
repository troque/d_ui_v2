{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Utils\\\\Modals\\\\ModalRemitirExpediente.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { getToken, getUser, removeUserSession, setUserSession } from '../../../components/Utils/Common';\nimport ParametrosMasApi from \"../../Api/Services/ParametrosMasApi\";\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../Spinner';\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ModalRemitirExpediente(props) {\n  _s();\n\n  const [getListaDependenciaDestino, setListaDependenciaDestino] = useState({\n    data: {}\n  });\n  const [getRespuestaDependenciaDestino, setRespuestaDependenciaDestino] = useState(false);\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getDependenciaSeleccionada, setDependenciaSeleccionada] = useState(\"\");\n  const [getUsuarioSleccionado, setUsuarioSleccionado] = useState(\"\");\n  const [getListaUusariosDependencia, setListaUusariosDependencia] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [errorApi, setErrorApi] = useState('');\n  const [getTextoTitulo, setTextoTitulo] = useState('');\n  const [isRedirect, setIsRedirect] = useState(false);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [getEnviaaJefe, setEnviaaJefe] = useState(false);\n  const [getCheckBoxObj, setCheckBoxObj] = useState(getListaUusariosDependencia.data.reduce((acc, d) => (acc[d.attributes.name] = false, acc), {}));\n  /*Redirects*/\n\n  const redirectToRoutes = () => {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/MisPendientes/`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      ParametrosMasApi.getAllTiposDependenciaOrigen().then(datos => !datos.error ? (setListaDependenciaDestino(datos), setRespuestaDependenciaDestino(true)) : window.showModal(1));\n      obtenerParametros();\n    }\n\n    fetchData();\n  }, []);\n\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombres\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      }; //buscamos el parametro\n\n      GenericApi.getByDataGeneric('parametro/parametro-nombre', data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          window.showModal(1);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const selectDependenciaDestino = () => {\n    return getListaDependenciaDestino.data.map((dependencia, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: dependencia.id,\n        children: dependencia.attributes.nombre\n      }, dependencia.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectChangeDependencia = e => {\n    if (e.target.value === \"\") return;\n    setUsuarioSleccionado(\"\");\n    setDependenciaSeleccionada(e.target.value);\n    setListaUusariosDependencia({\n      data: [],\n      links: [],\n      meta: []\n    });\n\n    if (e.target.value == getUser()[\"id_dependencia\"]) {\n      setEnviaaJefe(false);\n      setTextoTitulo(\"Seleccione el usuario al cual desea remitir el proceso\");\n      cargarUusariosDependencia(e.target.value);\n    } else {\n      setEnviaaJefe(true);\n      getListaDependenciaDestino.data.find(element => {\n        if (element.id === e.target.value) {\n          if (element.attributes.nombre_solo_usuario_jefe) {\n            setUsuarioSleccionado(element.attributes.nombre_solo_usuario_jefe);\n          }\n        }\n      });\n      setTextoTitulo(\"El expediente serÃ¡ enviado al jefe de la dependencia:\");\n    }\n  };\n\n  const cargarUsuuarioJefe = () => {\n    const idUusario = getListaDependenciaDestino.data.find(element => {\n      return element.id === getDependenciaSeleccionada;\n    });\n\n    if (idUusario != undefined) {\n      if (idUusario.attributes.nombre_usuario_jefe) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"bg-success text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: idUusario.attributes.nombre_usuario_jefe\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"bg-warning text-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"La dependencia no cuenta con jefe encargado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 68\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"bg-warning text-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"La dependencia no cuenta con jefe encargado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const cargarUusariosDependencia = e => {\n    window.showSpinner(true);\n    GenericApi.getByIdGeneric('usuario/get-usuarios-dependencia', e).then(datos => {\n      if (!datos.error) {\n        if (datos[\"data\"] != \"\") {\n          setListaUusariosDependencia(datos);\n          setCheckBoxObj(datos.data.reduce((acc, d) => (acc[d.attributes.name] = false, acc), {}));\n          window.showSpinner(false);\n        } else {\n          setErrorApi(datos.error.toString());\n          window.showModal(1);\n          window.showSpinner(false);\n        }\n      } else {\n        setErrorApi(datos.error.toString());\n        window.showModal(1);\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  const toggleOneChange = event => {\n    const target = event.target;\n    const value = target.checked;\n    const name = target.name;\n    const newCheckBoxObj = {};\n\n    for (let k in getCheckBoxObj) {\n      if (k == name) {\n        newCheckBoxObj[k] = true;\n      } else {\n        newCheckBoxObj[k] = false;\n      }\n    }\n\n    setCheckBoxObj(newCheckBoxObj);\n\n    if (value == true) {\n      console.log(name);\n      setUsuarioSleccionado(name);\n    }\n  };\n\n  const listaUsuariosDependencia = () => {\n    return getListaUusariosDependencia.data.map((usuario, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: usuario.attributes.name,\n            name: usuario.attributes.name,\n            checked: getCheckBoxObj[usuario.attributes.name] || \"\",\n            onChange: toggleOneChange.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [usuario.attributes.nombre, \" \", usuario.attributes.apellido]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this)]\n      }, \"th\" + usuario.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const enviarDatos = valores => {\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"proceso_disciplinario\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": props.object.id,\n          \"id_dependencia_origen\": getDependenciaSeleccionada ? getDependenciaSeleccionada : \"\",\n          \"usuario_a_remitir\": getUsuarioSleccionado ? getUsuarioSleccionado : \"\",\n          \"descripcion_a_remitir\": valores.informacion ? valores.informacion : \"\"\n        }\n      }\n    };\n    console.log(JSON.stringify(data));\n    GenericApi.updateGeneric('proceso-diciplinario', props.object.id, data).then(datos => {\n      if (!datos.error) {\n        window.location.reload();\n        window.showModal(2); //setIsRedirect(true);\n      } else {\n        //console.log(\"hay error\");\n        console.log(datos.error);\n        window.showModal(1);\n      }\n\n      window.showSpinner(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 14\n    }, this), isRedirect ? redirectToRoutes() : null, /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        informacion: '',\n        dependenciaDestino: '',\n        usuarios: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        setCountTextArea(valores.informacion.length);\n        let errores = {};\n\n        if (!getDependenciaSeleccionada) {\n          errores.dependenciaDestino = 'Debe ingresar un valor';\n        }\n\n        if (!valores.informacion) {\n          errores.informacion = 'Debe ingresar un valor';\n        } else if (valores.informacion.length <= getMinimoTextArea) {\n          errores.informacion = 'La descripciÃ³n debe tener almenos ' + getMinimoTextArea + ' caracteres';\n        }\n\n        if (!getUsuarioSleccionado) {\n          errores.usuarios = 'Debe seleccionar un usuario';\n        }\n\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        enviarDatos(valores);\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal fade\",\n            id: \"modal-block-popout-remitir-proceso\",\n            tabIndex: \"-1\",\n            role: \"dialog\",\n            \"aria-labelledby\": \"modal-block-popout\",\n            \"aria-hidden\": \"true\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-dialog modal-lg\",\n              role: \"document\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block block-themed block-transparent mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"block-header bg-primary-dark\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"block-title\",\n                      children: [\"REMITIR EL \", props.object.attributes ? props.object.attributes.nombre_tipo_expediente : \"\", \": \", props.object.attributes ? props.object.attributes.radicado : \"\", \" VIGENCIA: \", props.object.attributes ? props.object.attributes.vigencia : \"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 46\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"block-options\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: \"btn-block-option\",\n                        \"data-dismiss\": \"modal\",\n                        \"aria-label\": \"Close\",\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fa fa-fw fa-times\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 344,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"block-content\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-12\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-group\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: \"dependenciaDestino\",\n                            children: [\"Seleccione la dependencia a remitir \", /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-danger\",\n                              children: \"*\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 353,\n                              columnNumber: 129\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 353,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Field, {\n                            as: \"select\",\n                            className: \"form-control\",\n                            id: \"dependenciaDestino\",\n                            name: \"dependenciaDestino\",\n                            value: getDependenciaSeleccionada,\n                            onChange: selectChangeDependencia,\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"\",\n                              children: \"Por favor seleccione\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 355,\n                              columnNumber: 61\n                            }, this), getRespuestaDependenciaDestino ? selectDependenciaDestino() : null]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 354,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            name: \"dependenciaDestino\",\n                            component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-danger\",\n                              children: errors.dependenciaDestino\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 358,\n                              columnNumber: 115\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 358,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 352,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 351,\n                        columnNumber: 49\n                      }, this), !getEnviaaJefe && getDependenciaSeleccionada != '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-12\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: getTextoTitulo\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 367,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 367,\n                          columnNumber: 92\n                        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          name: \"usuarios\",\n                          component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: errors.usuarios\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 368,\n                            columnNumber: 109\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 368,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                          className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                                children: \"Seleccionar\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 372,\n                                columnNumber: 73\n                              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                children: \"Nombre Funcionario\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 373,\n                                columnNumber: 73\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 371,\n                              columnNumber: 69\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 370,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                            children: listaUsuariosDependencia()\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 376,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 369,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 366,\n                        columnNumber: 57\n                      }, this) : null, getEnviaaJefe && getDependenciaSeleccionada != '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-12\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: getTextoTitulo\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 388,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 388,\n                          columnNumber: 92\n                        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          name: \"usuarios\",\n                          component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: errors.usuarios\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 389,\n                            columnNumber: 109\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 389,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                          className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                            children: cargarUsuuarioJefe()\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 391,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 390,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 387,\n                        columnNumber: 57\n                      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-12\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-group\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: \"informacion\",\n                            children: [\"Informaci\\xF3n para su remisi\\xF3n \", /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-danger\",\n                              children: \"*\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 402,\n                              columnNumber: 115\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 402,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Field, {\n                            as: \"textarea\",\n                            className: \"form-control\",\n                            id: \"informacion\",\n                            name: \"informacion\",\n                            rows: \"6\",\n                            placeholder: \"Informaci\\xF3n para su remisi\\xF3n....\",\n                            maxLength: getMaximoTextArea,\n                            minLength: getMinimoTextArea\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 403,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-right\",\n                            children: /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-primary\",\n                              children: [countTextArea, \" / \", getMaximoTextArea]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 406,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 405,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            name: \"informacion\",\n                            component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-danger\",\n                              children: errors.informacion\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 408,\n                              columnNumber: 108\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 408,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 401,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 400,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"block-content block-content-full text-right bg-light\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-sm btn-primary\",\n                      children: \"Remitir\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 416,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ModalRemitirExpediente, \"Q2W+nfhayU0riNeoSdzTCgVxv/I=\");\n\n_c = ModalRemitirExpediente;\nexport default ModalRemitirExpediente;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalRemitirExpediente\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/Utils/Modals/ModalRemitirExpediente.js"],"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","getToken","getUser","removeUserSession","setUserSession","ParametrosMasApi","GenericApi","Spinner","Navigate","ModalRemitirExpediente","props","getListaDependenciaDestino","setListaDependenciaDestino","data","getRespuestaDependenciaDestino","setRespuestaDependenciaDestino","countTextArea","setCountTextArea","getDependenciaSeleccionada","setDependenciaSeleccionada","getUsuarioSleccionado","setUsuarioSleccionado","getListaUusariosDependencia","setListaUusariosDependencia","links","meta","errorApi","setErrorApi","getTextoTitulo","setTextoTitulo","isRedirect","setIsRedirect","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","getEnviaaJefe","setEnviaaJefe","getCheckBoxObj","setCheckBoxObj","reduce","acc","d","attributes","name","redirectToRoutes","fetchData","getAllTiposDependenciaOrigen","then","datos","error","window","showModal","obtenerParametros","getByDataGeneric","length","filter","includes","map","filteredName","console","log","selectDependenciaDestino","dependencia","i","id","nombre","selectChangeDependencia","e","target","value","cargarUusariosDependencia","find","element","nombre_solo_usuario_jefe","cargarUsuuarioJefe","idUusario","undefined","nombre_usuario_jefe","showSpinner","getByIdGeneric","toString","toggleOneChange","event","checked","newCheckBoxObj","k","listaUsuariosDependencia","usuario","bind","apellido","enviarDatos","valores","object","informacion","JSON","stringify","updateGeneric","location","reload","dependenciaDestino","usuarios","errores","resetForm","errors","nombre_tipo_expediente","radicado","vigencia"],"mappings":"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","sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getToken, getUser, removeUserSession, setUserSession } from '../../../components/Utils/Common';\r\nimport ParametrosMasApi from \"../../Api/Services/ParametrosMasApi\";\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../Spinner';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nfunction ModalRemitirExpediente(props) {\r\n\r\n    const [getListaDependenciaDestino, setListaDependenciaDestino] = useState({ data: {} });\r\n    const [getRespuestaDependenciaDestino, setRespuestaDependenciaDestino] = useState(false);\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getDependenciaSeleccionada, setDependenciaSeleccionada] = useState(\"\");\r\n    const [getUsuarioSleccionado, setUsuarioSleccionado] = useState(\"\");\r\n    const [getListaUusariosDependencia, setListaUusariosDependencia] = useState({ data: [], links: [], meta: [] });\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getTextoTitulo, setTextoTitulo] = useState('');\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n\r\n    \r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n\r\n    const [getEnviaaJefe, setEnviaaJefe] = useState(false);\r\n    const [getCheckBoxObj, setCheckBoxObj] = useState(getListaUusariosDependencia.data.reduce((acc, d) => (acc[d.attributes.name] = false, acc), {}));\r\n\r\n    /*Redirects*/\r\n    const redirectToRoutes = () => {\r\n        return <Navigate to={`/MisPendientes/`} />;\r\n    }\r\n\r\n   \r\n    useEffect(() => {\r\n\r\n        async function fetchData() {\r\n\r\n\r\n            ParametrosMasApi.getAllTiposDependenciaOrigen().then(\r\n                datos => !datos.error ? (setListaDependenciaDestino(datos), setRespuestaDependenciaDestino(true)) : window.showModal(1)\r\n            )\r\n            obtenerParametros();\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const obtenerParametros = () => {\r\n        try {\r\n\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombres\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric('parametro/parametro-nombre',data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        window.showModal(1);\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const selectDependenciaDestino = () => {\r\n        return (\r\n            getListaDependenciaDestino.data.map((dependencia, i) => {\r\n                return (\r\n                    <option key={dependencia.id} value={dependencia.id}>{dependencia.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectChangeDependencia = (e) => {\r\n        if (e.target.value === \"\") return;\r\n\r\n        setUsuarioSleccionado(\"\");\r\n        setDependenciaSeleccionada(e.target.value);\r\n        setListaUusariosDependencia({ data: [], links: [], meta: [] });\r\n        if (e.target.value == getUser()[\"id_dependencia\"]) {\r\n            setEnviaaJefe(false);\r\n            setTextoTitulo(\"Seleccione el usuario al cual desea remitir el proceso\");\r\n            cargarUusariosDependencia(e.target.value);\r\n        }\r\n        else {\r\n            setEnviaaJefe(true);\r\n            getListaDependenciaDestino.data.find((element) => {\r\n                if (element.id === e.target.value) {\r\n                    if (element.attributes.nombre_solo_usuario_jefe) {\r\n                        setUsuarioSleccionado(element.attributes.nombre_solo_usuario_jefe);\r\n                    }\r\n\r\n                }\r\n            })\r\n\r\n\r\n            setTextoTitulo(\"El expediente serÃ¡ enviado al jefe de la dependencia:\");\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const cargarUsuuarioJefe = () => {\r\n\r\n        const idUusario = getListaDependenciaDestino.data.find((element) => {\r\n            return element.id === getDependenciaSeleccionada;\r\n        })\r\n        if (idUusario != undefined) {\r\n            if (idUusario.attributes.nombre_usuario_jefe) {\r\n\r\n                return (\r\n                    <tr>\r\n                        <td className='bg-success text-white'>\r\n                            <strong>{idUusario.attributes.nombre_usuario_jefe}</strong>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            }\r\n\r\n            else {\r\n                return (\r\n                    <tr><td className='bg-warning text-dark'><div ><strong>La dependencia no cuenta con jefe encargado</strong></div></td></tr>\r\n                )\r\n            }\r\n        }\r\n\r\n        else {\r\n            return (\r\n                <tr><td className='bg-warning text-dark'><div ><strong>La dependencia no cuenta con jefe encargado</strong></div></td></tr>\r\n            )\r\n        }\r\n\r\n\r\n\r\n    }\r\n    const cargarUusariosDependencia = (e) => {\r\n        window.showSpinner(true);\r\n\r\n        GenericApi.getByIdGeneric('usuario/get-usuarios-dependencia', e).then(\r\n            datos => {\r\n\r\n                if (!datos.error) {\r\n                    if (datos[\"data\"] != \"\") {\r\n                        setListaUusariosDependencia(datos)\r\n                        setCheckBoxObj(datos.data.reduce((acc, d) => (acc[d.attributes.name] = false, acc), {}));\r\n                        window.showSpinner(false);\r\n                    }\r\n                    else {\r\n                        setErrorApi(datos.error.toString())\r\n                        window.showModal(1)\r\n                        window.showSpinner(false);\r\n\r\n                    }\r\n                }\r\n                else {\r\n                    setErrorApi(datos.error.toString())\r\n                    window.showModal(1)\r\n                    window.showSpinner(false);\r\n                }\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const toggleOneChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.checked;\r\n        const name = target.name;\r\n\r\n\r\n        const newCheckBoxObj = {};\r\n\r\n\r\n        for (let k in getCheckBoxObj) {\r\n\r\n            if (k == name) {\r\n                newCheckBoxObj[k] = true;\r\n            }\r\n            else {\r\n                newCheckBoxObj[k] = false;\r\n            }\r\n\r\n        }\r\n\r\n        setCheckBoxObj(newCheckBoxObj);\r\n        if (value == true) {\r\n            console.log(name);\r\n            setUsuarioSleccionado(name);\r\n        }\r\n\r\n    }\r\n\r\n    const listaUsuariosDependencia = () => {\r\n\r\n\r\n        return (\r\n            getListaUusariosDependencia.data.map((usuario, i) => {\r\n                return (\r\n                    <tr key={\"th\" + usuario.id}>\r\n                        <td>\r\n\r\n\r\n\r\n                            <input\r\n\r\n                                type=\"checkbox\"\r\n                                id={usuario.attributes.name}\r\n                                name={usuario.attributes.name}\r\n                                checked={getCheckBoxObj[usuario.attributes.name] || \"\"}\r\n                                onChange={toggleOneChange.bind(this)}\r\n                            />\r\n\r\n                        </td>\r\n                        <td>\r\n                            {usuario.attributes.nombre} {usuario.attributes.apellido}\r\n                        </td>\r\n\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const enviarDatos = (valores) => {\r\n        window.showSpinner(true);\r\n        let data;\r\n\r\n\r\n        data = {\r\n\r\n            \"data\": {\r\n                \"type\": \"proceso_disciplinario\",\r\n                \"attributes\": {\r\n\r\n                    \"id_proceso_disciplinario\": props.object.id,\r\n                    \"id_dependencia_origen\": getDependenciaSeleccionada ? getDependenciaSeleccionada : \"\",\r\n                    \"usuario_a_remitir\": getUsuarioSleccionado ? getUsuarioSleccionado : \"\",\r\n                    \"descripcion_a_remitir\": valores.informacion ? valores.informacion : \"\",\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        console.log(JSON.stringify(data));\r\n\r\n        GenericApi.updateGeneric('proceso-diciplinario', props.object.id, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                   \r\n                    window.location.reload();\r\n                    window.showModal(2)\r\n                    //setIsRedirect(true);\r\n                }\r\n                else {\r\n                    //console.log(\"hay error\");\r\n                    console.log(datos.error);\r\n                    window.showModal(1)\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {isRedirect ? redirectToRoutes() : null}\r\n            <Formik\r\n                initialValues={{\r\n                    informacion: '',\r\n                    dependenciaDestino: '',\r\n                    usuarios: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    setCountTextArea(valores.informacion.length)\r\n                    let errores = {}\r\n\r\n                    if (!getDependenciaSeleccionada) {\r\n                        errores.dependenciaDestino = 'Debe ingresar un valor'\r\n                    }\r\n                    if (!valores.informacion) {\r\n                        errores.informacion = 'Debe ingresar un valor'\r\n                    }\r\n                    else if (valores.informacion.length <= getMinimoTextArea) {\r\n                        errores.informacion = 'La descripciÃ³n debe tener almenos '+getMinimoTextArea+' caracteres'\r\n                    }\r\n\r\n                    if (!getUsuarioSleccionado) {\r\n                        errores.usuarios = 'Debe seleccionar un usuario'\r\n                    }\r\n                    return errores\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n\r\n                        <div className=\"modal fade\" id=\"modal-block-popout-remitir-proceso\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"modal-block-popout\" aria-hidden=\"true\">\r\n                            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"block block-themed block-transparent mb-0\">\r\n                                        <div className=\"block-header bg-primary-dark\">\r\n                                             <h3 className=\"block-title\">REMITIR EL {(props.object.attributes)?props.object.attributes.nombre_tipo_expediente:\"\"}: {(props.object.attributes)?props.object.attributes.radicado:\"\"} VIGENCIA: {(props.object.attributes)?props.object.attributes.vigencia:\"\"}</h3>\r\n                                            <div className=\"block-options\">\r\n                                                <button type=\"button\" className=\"btn-block-option\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                    <i className=\"fa fa-fw fa-times\"></i>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"block-content\">\r\n                                            <div className=\"row\">\r\n\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"dependenciaDestino\">Seleccione la dependencia a remitir <span className=\"text-danger\">*</span></label>\r\n                                                        <Field as=\"select\" className=\"form-control\" id=\"dependenciaDestino\" name=\"dependenciaDestino\" value={getDependenciaSeleccionada} onChange={selectChangeDependencia}>\r\n                                                            <option value=\"\">Por favor seleccione</option>\r\n                                                            {getRespuestaDependenciaDestino ? selectDependenciaDestino() : null}\r\n                                                        </Field>\r\n                                                        <ErrorMessage name=\"dependenciaDestino\" component={() => (<span className=\"text-danger\">{errors.dependenciaDestino}</span>)} />\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                {\r\n                                                    (!getEnviaaJefe && getDependenciaSeleccionada != '') ? (\r\n\r\n\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <label>{getTextoTitulo}</label><br />\r\n                                                            <ErrorMessage name=\"usuarios\" component={() => (<span className=\"text-danger\">{errors.usuarios}</span>)} />\r\n                                                            <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th>Seleccionar</th>\r\n                                                                        <th>Nombre Funcionario</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    {listaUsuariosDependencia()}\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n\r\n                                                    ) : null\r\n                                                }\r\n                                                {\r\n                                                    (getEnviaaJefe && getDependenciaSeleccionada != '') ? (\r\n\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <label>{getTextoTitulo}</label><br />\r\n                                                            <ErrorMessage name=\"usuarios\" component={() => (<span className=\"text-danger\">{errors.usuarios}</span>)} />\r\n                                                            <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                                                <tbody>\r\n                                                                    {cargarUsuuarioJefe()}\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    ) : null\r\n\r\n                                                }\r\n\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"informacion\">InformaciÃ³n para su remisiÃ³n <span className=\"text-danger\">*</span></label>\r\n                                                        <Field as=\"textarea\" className=\"form-control\" id=\"informacion\" name=\"informacion\" rows=\"6\" placeholder=\"InformaciÃ³n para su remisiÃ³n....\" \r\n                                                        maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                                        <div className=\"text-right\">\r\n                                                            <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                                        </div>\r\n                                                        <ErrorMessage name=\"informacion\" component={() => (<span className=\"text-danger\">{errors.informacion}</span>)} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                        <div className=\"block-content block-content-full text-right bg-light\">\r\n                                            <button type=\"submit\" className=\"btn btn-sm btn-primary\" >Remitir</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalRemitirExpediente;\r\n"]},"metadata":{},"sourceType":"module"}