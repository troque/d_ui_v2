{"ast":null,"code":"import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Modal from'react-bootstrap/Modal';import Button from'react-bootstrap/Button';import'../../Utils/Constants';import ModalGen from'./ModalGeneric';import{useLocation}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ModalItemsAgregar(props){// Se inicializan las constantes\nvar _useState=useState(props.data.show),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useState3=useState(props.data.agregar),_useState4=_slicedToArray(_useState3,2),getAgregar=_useState4[0],setAgregar=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),getNombreLista=_useState6[0],setNombreLista=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),getNombreItemAgregado=_useState8[0],setNombreItemAgregado=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),getItemsListado=_useState10[0],setItemsListado=_useState10[1];var _useState11=useState({title:\"\",message:\"\",show:false}),_useState12=_slicedToArray(_useState11,2),getModalState=_useState12[0],setModalState=_useState12[1];var location=useLocation();var _location$state=location.state,from=_location$state.from,getData=_location$state.getData;// Metodo encargado de generar el modal\nuseEffect(function(){// Se setea el valor para mostrar el modal\nsetShow(props.data.show);// Se setea el nombre de la lista\nsetNombreLista(props.data.message);// Se setea en caso que se vaya a agregar por primera vez\nsetAgregar(props.data.agregar);// Se setea la lista en vacia\nsetItemsListado([]);},[props.data.show]);// Metodo encargado de cerrar el modal\nvar handleClose=function handleClose(){// Se setea la propiedad en false\nprops.data.show=false;// Se quita el modal\nsetShow(false);};// Metodo encargado de agregar los campos al listado general\nvar agregarItem=function agregarItem(){// Se valida que haya un caracter\nif(!getNombreItemAgregado){// Se setea el mensaje\nsetModalState({title:\"Agregar Item :: Nombre\",message:'El item se encuentra vacio',show:true,alert:global.Constants.TIPO_ALERTA.ERROR});return false;}// Se valida que haya escrito el nombre del campo\nif(getNombreItemAgregado&&getNombreItemAgregado.length<3){// Se setea el mensaje\nsetModalState({title:\"Agregar Item :: Nombre\",message:'El item debe tener minimo 3 caracteres',show:true,alert:global.Constants.TIPO_ALERTA.ERROR});return false;}// Se valida que no contenga caractereces especiales\nif(containsSpecialChars(getNombreItemAgregado)){// Se setea el mensaje\nsetModalState({title:\"Agregar Item :: Nombre\",message:'Tiene caracteres invalidos',show:true,alert:global.Constants.TIPO_ALERTA.ERROR});return false;}// Se inicializa la variable\nvar encontroRepetido=0;// Se valida que no haya otro item repetido en la lista\ngetItemsListado&&getItemsListado.length>0&&getItemsListado.forEach(function(e){// Se captura los valores\nvar nombreItem=e.items.forEach(function(i){// Se valida que haya otro item repetido\nif(i==getNombreItemAgregado){// Se aumenta el valor en 1\nencontroRepetido++;}});});// Se valida que no se haya encontrado repetido\nif(encontroRepetido>0){// Se setea el mensaje\nsetModalState({title:\"Agregar item\",message:'El nombre del item ya se encuentra en la lista, por favor escriba otro diferente',show:true,alert:global.Constants.TIPO_ALERTA.ERROR});return false;}// Se setean los valores\nsetNombreItemAgregado(\"\");// Se valida que sea la primera vez del push\nif(getItemsListado&&getItemsListado.length==0){// Se añade los elementos\ngetItemsListado.push({nombreCampo:getNombreLista,tipoCampo:2,items:[getNombreItemAgregado]});}else if(getItemsListado&&getItemsListado.length>0){// Se añade los elementos\ngetItemsListado[0].items.push(getNombreItemAgregado);}};// Metodo encargado de guardar los valores de la lista\nvar guardar=function guardar(){// Se valida que no se haya encontrado repetido\nif(getItemsListado&&getItemsListado.length==0){// Se setea el mensaje\nsetModalState({title:\"Guardar item\",message:'Debe agregar al menos 1 item...',show:true,alert:global.Constants.TIPO_ALERTA.ERROR});return false;}// Se cierra los modales\nhandleClose();// Se valida que sea undefined es la primera vez que guarda el array\nif(getData==undefined){// Se setean los valores\nsetModalState({title:\"Agregar campo :: Agregado con éxito\",message:'Campos agregados con éxito',redirect:'/ActuacionesAdministracion/'+from.id,from:{from:from,getData:getItemsListado},show:true,alert:global.Constants.TIPO_ALERTA.EXITO});}else if(getData!=undefined){// Se añade\ngetData.push(getItemsListado[0]);// Se setean los valores\nsetModalState({title:\"Agregar campo :: Agregado con éxito\",message:'Campos agregados con éxito',redirect:'/ActuacionesAdministracion/'+from.id,from:{from:from,getData:getData},show:true,alert:global.Constants.TIPO_ALERTA.EXITO});}};// Metodo encargado de listar los items en la tabla\nvar listaItems=function listaItems(){// Se valida que exista informacion\nif(getItemsListado){// Se retorna\nreturn(// Se mapea la informacion\ngetItemsListado.map(function(item,i){// Se retorna la informacion\nreturn/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",style:{marginTop:'10px'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",style:{display:'flex'},children:[/*#__PURE__*/_jsx(\"input\",{as:\"input\",type:\"text\",className:\"form-control\",style:{marginRight:\"15px\"},id:\"valorItem\"+item.items,name:\"valorItem\"+item.items,value:validarItems(item.items),disabled:true}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return eliminarCampo(item);},type:\"button\",className:\"btn btn btn-primary\",title:\"Eliminar\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-fw fa-trash-alt\"})})]})})},item.items+i);}));}};// Metodo encargado de retorna los items separados\nvar validarItems=function validarItems(item){// Se valida que exista y tenga un elemento\nif(item&&item.length==0){// Se retorna el primer elemento\nreturn item;}else if(item&&item.length>0){// Se retorna por comas\nreturn item.join(\", \");}};// Metodo encargado de eliminar el campo seleccionado\nvar eliminarCampo=function eliminarCampo(campos){// Se busca el index del elemento dentro del array\nvar index=getItemsListado.indexOf(campos);// Se valida que el elemento exista\nif(index>-1){// Se elimina el elemento dentro del array\ngetItemsListado.splice(index,1);}// Se setea el mensaje\nsetModalState({title:\"Item :: Eliminado con éxito\",message:'Item eliminado con éxito',show:true,alert:global.Constants.TIPO_ALERTA.EXITO});};// Metodo encargado de validar los caracteres invalidos\nfunction containsSpecialChars(str){// Se valida que no contenga alguno invalido\nvar result=global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(function(specialChar){// Se incluye el string\nif(str.includes(specialChar)){// Se retorna true\nreturn true;}// Se retorna false\nreturn false;});// Se retorna el valor\nreturn result;}// Metodo encargado de validar que haya al menos un elemento en la lista\nvar validarItemsListado=function validarItemsListado(){// Se llama el metodo a cerrar\nhandleClose();};// Metodo encargado de setear el valor del nombre del campo\nvar changeNombreItemAgregado=function changeNombreItemAgregado(e){// Se setea el valor del campo\nsetNombreItemAgregado(e.target.value);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ModalGen,{data:getModalState}),/*#__PURE__*/_jsx(Modal,{show:show,children:/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed block-transparent mb-0\",children:[/*#__PURE__*/_jsxs(Modal.Header,{className:\"block-header bg-primary-dark\",children:[/*#__PURE__*/_jsxs(Modal.Title,{className:\"block-title\",children:[\" \",props.data.title]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:validarItemsListado,className:\"btn-block-option\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-fw fa-times\"})})]}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"nombreLista\",children:\"Nombre lista\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"nombreLista\",name:\"nombreLista\",value:getNombreLista,disabled:true})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control mt-4\",id:\"nombreItem\",name:\"nombreItem\",value:getNombreItemAgregado,placeholder:\"Item...\",onChange:changeNombreItemAgregado})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",style:{marginTop:'-3px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",style:{marginTop:'27px',cursor:'pointer'},children:/*#__PURE__*/_jsx(\"a\",{onClick:function onClick(){return agregarItem();},className:\"btn btn-rounded btn-primary\",children:\"Agregar Item\"})})}),getItemsListado&&getItemsListado.length?/*#__PURE__*/_jsx(\"div\",{class:\"block-content\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered table-striped table-vcenter js-dataTable-full table-responsive-md\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{style:{textAlign:'center'},children:/*#__PURE__*/_jsx(\"th\",{children:\"Listado de Items\"})})}),/*#__PURE__*/_jsx(\"tbody\",{children:listaItems()})]})}):null]})}),/*#__PURE__*/_jsx(Modal.Footer,{style:{justifyContent:'center'},children:/*#__PURE__*/_jsx(Button,{className:\"btn btn-rounded btn-primary\",variant:\"primary\",onClick:guardar,children:\"Guardar\"})})]})})]});}export default ModalItemsAgregar;","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","ModalGen","useLocation","ModalItemsAgregar","props","data","show","setShow","agregar","getAgregar","setAgregar","getNombreLista","setNombreLista","getNombreItemAgregado","setNombreItemAgregado","getItemsListado","setItemsListado","title","message","getModalState","setModalState","location","state","from","getData","handleClose","agregarItem","alert","global","Constants","TIPO_ALERTA","ERROR","length","containsSpecialChars","encontroRepetido","forEach","e","nombreItem","items","i","push","nombreCampo","tipoCampo","guardar","undefined","redirect","id","EXITO","listaItems","map","item","marginTop","display","marginRight","validarItems","eliminarCampo","join","campos","index","indexOf","splice","str","result","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","validarItemsListado","changeNombreItemAgregado","target","value","cursor","textAlign","justifyContent"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Utils/Modals/ModalItemsAgregar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../Utils/Constants';\r\nimport ModalGen from './ModalGeneric';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction ModalItemsAgregar(props) {\r\n\r\n    // Se inicializan las constantes\r\n    const [show, setShow] = useState(props.data.show);\r\n    const [getAgregar, setAgregar] = useState(props.data.agregar);\r\n    const [getNombreLista, setNombreLista] = useState(\"\");\r\n    const [getNombreItemAgregado, setNombreItemAgregado] = useState(\"\");\r\n    const [getItemsListado, setItemsListado] = useState([]);\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n\r\n    const location = useLocation();\r\n    const { from, getData } = location.state;\r\n\r\n    // Metodo encargado de generar el modal\r\n    useEffect(() => {\r\n\r\n        // Se setea el valor para mostrar el modal\r\n        setShow(props.data.show);\r\n\r\n        // Se setea el nombre de la lista\r\n        setNombreLista(props.data.message);\r\n\r\n        // Se setea en caso que se vaya a agregar por primera vez\r\n        setAgregar(props.data.agregar);\r\n\r\n        // Se setea la lista en vacia\r\n        setItemsListado([]);\r\n\r\n    }, [props.data.show]);\r\n\r\n    // Metodo encargado de cerrar el modal\r\n    const handleClose = () => {\r\n\r\n        // Se setea la propiedad en false\r\n        props.data.show = false;\r\n\r\n        // Se quita el modal\r\n        setShow(false);\r\n    };\r\n\r\n    // Metodo encargado de agregar los campos al listado general\r\n    const agregarItem = () => {\r\n\r\n        // Se valida que haya un caracter\r\n        if (!getNombreItemAgregado) {\r\n\r\n            // Se setea el mensaje\r\n            setModalState({ title: \"Agregar Item :: Nombre\", message: 'El item se encuentra vacio', show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n            return false;\r\n        }\r\n\r\n        // Se valida que haya escrito el nombre del campo\r\n        if (getNombreItemAgregado && getNombreItemAgregado.length < 3) {\r\n\r\n            // Se setea el mensaje\r\n            setModalState({ title: \"Agregar Item :: Nombre\", message: 'El item debe tener minimo 3 caracteres', show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n            return false;\r\n        }\r\n\r\n        // Se valida que no contenga caractereces especiales\r\n        if (containsSpecialChars(getNombreItemAgregado)) {\r\n\r\n            // Se setea el mensaje\r\n            setModalState({ title: \"Agregar Item :: Nombre\", message: 'Tiene caracteres invalidos', show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n            return false;\r\n        }\r\n\r\n        // Se inicializa la variable\r\n        let encontroRepetido = 0;\r\n\r\n        // Se valida que no haya otro item repetido en la lista\r\n        getItemsListado && getItemsListado.length > 0 && getItemsListado.forEach(e => {\r\n\r\n            // Se captura los valores\r\n            let nombreItem = e.items.forEach(i => {\r\n\r\n                // Se valida que haya otro item repetido\r\n                if (i == getNombreItemAgregado) {\r\n\r\n                    // Se aumenta el valor en 1\r\n                    encontroRepetido++;\r\n                }\r\n            });\r\n        });\r\n\r\n        // Se valida que no se haya encontrado repetido\r\n        if (encontroRepetido > 0) {\r\n\r\n            // Se setea el mensaje\r\n            setModalState({ title: \"Agregar item\", message: 'El nombre del item ya se encuentra en la lista, por favor escriba otro diferente', show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n            return false;\r\n        }\r\n\r\n        // Se setean los valores\r\n        setNombreItemAgregado(\"\");\r\n\r\n        // Se valida que sea la primera vez del push\r\n        if (getItemsListado && getItemsListado.length == 0) {\r\n\r\n            // Se añade los elementos\r\n            getItemsListado.push({ nombreCampo: getNombreLista, tipoCampo: 2, items: [getNombreItemAgregado] });\r\n        } else if (getItemsListado && getItemsListado.length > 0) {\r\n\r\n            // Se añade los elementos\r\n            getItemsListado[0].items.push(getNombreItemAgregado);\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de guardar los valores de la lista\r\n    const guardar = () => {\r\n\r\n        // Se valida que no se haya encontrado repetido\r\n        if (getItemsListado && getItemsListado.length == 0) {\r\n\r\n            // Se setea el mensaje\r\n            setModalState({ title: \"Guardar item\", message: 'Debe agregar al menos 1 item...', show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n            return false;\r\n        }\r\n\r\n        // Se cierra los modales\r\n        handleClose();\r\n\r\n        // Se valida que sea undefined es la primera vez que guarda el array\r\n        if (getData == undefined) {\r\n\r\n            // Se setean los valores\r\n            setModalState({\r\n                title: \"Agregar campo :: Agregado con éxito\",\r\n                message: 'Campos agregados con éxito',\r\n                redirect: '/ActuacionesAdministracion/' + from.id,\r\n                from: { from: from, getData: getItemsListado },\r\n                show: true,\r\n                alert: global.Constants.TIPO_ALERTA.EXITO\r\n            });\r\n\r\n        } else if (getData != undefined) {\r\n\r\n            // Se añade\r\n            getData.push(getItemsListado[0]);\r\n\r\n            // Se setean los valores\r\n            setModalState({\r\n                title: \"Agregar campo :: Agregado con éxito\",\r\n                message: 'Campos agregados con éxito',\r\n                redirect: '/ActuacionesAdministracion/' + from.id,\r\n                from: { from: from, getData: getData },\r\n                show: true,\r\n                alert: global.Constants.TIPO_ALERTA.EXITO\r\n            });\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de listar los items en la tabla\r\n    const listaItems = () => {\r\n\r\n        // Se valida que exista informacion\r\n        if (getItemsListado) {\r\n\r\n            // Se retorna\r\n            return (\r\n\r\n                // Se mapea la informacion\r\n                getItemsListado.map((item, i) => {\r\n\r\n                    // Se retorna la informacion\r\n                    return (\r\n                        <tr key={item.items + i} >\r\n                            <div className=\"form-group\" style={{ marginTop: '10px' }}>\r\n                                <div className='col-md-12' style={{ display: 'flex' }}>\r\n                                    <input\r\n                                        as=\"input\"\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        style={{ marginRight: \"15px\" }}\r\n                                        id={\"valorItem\" + item.items}\r\n                                        name={\"valorItem\" + item.items}\r\n                                        value={validarItems(item.items)}\r\n                                        disabled\r\n                                    />\r\n                                    <button onClick={() => eliminarCampo(item)} type=\"button\" className=\"btn btn btn-primary\" title='Eliminar'>\r\n                                        <i className=\"fa fa-fw fa-trash-alt\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </tr>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de retorna los items separados\r\n    const validarItems = (item) => {\r\n\r\n        // Se valida que exista y tenga un elemento\r\n        if (item && item.length == 0) {\r\n\r\n            // Se retorna el primer elemento\r\n            return item;\r\n        } else if (item && item.length > 0) {\r\n\r\n            // Se retorna por comas\r\n            return item.join(\", \");\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de eliminar el campo seleccionado\r\n    const eliminarCampo = (campos) => {\r\n\r\n        // Se busca el index del elemento dentro del array\r\n        let index = getItemsListado.indexOf(campos);\r\n\r\n        // Se valida que el elemento exista\r\n        if (index > -1) {\r\n\r\n            // Se elimina el elemento dentro del array\r\n            getItemsListado.splice(index, 1);\r\n        }\r\n\r\n        // Se setea el mensaje\r\n        setModalState({ title: \"Item :: Eliminado con éxito\", message: 'Item eliminado con éxito', show: true, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n    }\r\n\r\n    // Metodo encargado de validar los caracteres invalidos\r\n    function containsSpecialChars(str) {\r\n\r\n        // Se valida que no contenga alguno invalido\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n\r\n            // Se incluye el string\r\n            if (str.includes(specialChar)) {\r\n\r\n                // Se retorna true\r\n                return true;\r\n            }\r\n\r\n            // Se retorna false\r\n            return false;\r\n        });\r\n\r\n        // Se retorna el valor\r\n        return result;\r\n    }\r\n\r\n    // Metodo encargado de validar que haya al menos un elemento en la lista\r\n    const validarItemsListado = () => {\r\n\r\n        // Se llama el metodo a cerrar\r\n        handleClose();\r\n    }\r\n\r\n    // Metodo encargado de setear el valor del nombre del campo\r\n    const changeNombreItemAgregado = (e) => {\r\n\r\n        // Se setea el valor del campo\r\n        setNombreItemAgregado(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<ModalGen data={getModalState} />}\r\n            <Modal show={show}>\r\n                <div className=\"block block-themed block-transparent mb-0\">\r\n                    <Modal.Header className=\"block-header bg-primary-dark\">\r\n                        <Modal.Title className='block-title'> {props.data.title}</Modal.Title>\r\n                        <Button variant=\"primary\" onClick={validarItemsListado} className='btn-block-option'>\r\n                            <i className=\"fa fa-fw fa-times\"></i>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"nombreLista\">Nombre lista</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"nombreLista\"\r\n                                        name=\"nombreLista\"\r\n                                        value={getNombreLista}\r\n                                        disabled />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-8\">\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mt-4\"\r\n                                        id=\"nombreItem\"\r\n                                        name=\"nombreItem\"\r\n                                        value={getNombreItemAgregado}\r\n                                        placeholder=\"Item...\"\r\n                                        onChange={changeNombreItemAgregado} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-4\" style={{ marginTop: '-3px' }}>\r\n                                <div className=\"form-group\" style={{ marginTop: '27px', cursor: 'pointer' }}>\r\n                                    <a onClick={() => agregarItem()} className=\"btn btn-rounded btn-primary\" >\r\n                                        Agregar Item\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Se valida que exista informacion de los items */}\r\n                            {getItemsListado && getItemsListado.length ?\r\n                                <div class=\"block-content\">\r\n                                    <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full table-responsive-md\">\r\n                                        <thead>\r\n                                            <tr style={{ textAlign: 'center' }}>\r\n                                                <th>Listado de Items</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {listaItems()}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                : null}\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{ justifyContent: 'center' }}>\r\n                        <Button className='btn btn-rounded btn-primary' variant=\"primary\" onClick={guardar}>\r\n                            Guardar\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </div >\r\n            </Modal >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalItemsAgregar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}