{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Maestras\\\\GenericForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { Autoform } from 'react-hook-form-auto'; //import styles from 'rhfa-emergency-styles';\n\nimport styles from './Models/Styles';\nimport 'rhfa-emergency-styles/dist/styles.css';\nimport Spinner from '../Utils/Spinner';\nimport ModalGen from '../Utils/Modals/ModalGeneric';\nimport GenericApi from '../Api/Services/GenericApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GenericForm(props) {\n  _s();\n\n  const {\n    formName,\n    service,\n    ddlServices = [],\n    ddlServicesFunction = null,\n    model,\n    onSubmit = null,\n    successRedirect = ''\n  } = props; //const navigate = useNavigate();\n\n  const {\n    id\n  } = useParams();\n  const [showForm, setShowForm] = useState(false);\n  const [modelSchema, setModelSchema] = useState({});\n  const [initialValues, setInitialValues] = useState({});\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  let submitButtonText = id == undefined ? 'Crear' : 'Editar';\n  let formRef;\n  useEffect(() => {\n    window.showSpinner(true);\n\n    async function initialData() {\n      if (id != undefined) {\n        GenericApi.getByIdGeneric(service, id).then(datos => {\n          return !datos.error ? setInitialValues(datos.data.attributes) : {};\n        });\n      }\n\n      return {};\n    }\n\n    (async function () {\n      var data = await initialData();\n      var ddlData = {};\n\n      for (var i = 0; i < ddlServices.length; i++) {\n        var element = ddlServices[i];\n        var ddlServiceData = await GenericApi.getAllGeneric(element).then(datos => {\n          var ddlList = [];\n\n          if (!datos.error) {\n            datos.data.forEach(value => {\n              let item = typeof ddlServicesFunction == 'function' ? ddlServicesFunction(element, value) : {\n                value: value.id,\n                label: value.attributes.nombre\n              };\n              ddlList.push(item);\n            });\n          }\n\n          return ddlList;\n        }); //console.log('END execution with result =', ddlServiceData);\n\n        ddlData[element] = ddlServiceData;\n      }\n\n      loadForm(data, ddlData);\n      window.showSpinner(false);\n    })();\n  }, []);\n\n  const loadForm = (data, ddlData) => {\n    //console.log(\"model type: \" + typeof model);\n    let modelDef = typeof model == 'function' ? model(ddlData) : model;\n    setModelSchema(modelDef);\n    setShowForm(true); //asigna valores iniciales al formulario\n\n    Object.entries(data).forEach(_ref => {\n      let [key, value] = _ref;\n      formRef.setValue(key, value);\n    });\n  };\n\n  const errors = error => {\n    console.log('errors');\n    console.log(error);\n  };\n\n  const submit = data => {\n    console.log(data);\n\n    if (typeof onSubmit == 'function') {\n      onSubmit(data);\n      return;\n    }\n\n    window.showSpinner(true);\n    var requestData = {\n      \"data\": {\n        \"type\": service,\n        \"attributes\": data\n      }\n    };\n\n    if (id == undefined) {\n      GenericApi.addGeneric(service, requestData).then(datos => {\n        window.showSpinner(false);\n        if (!datos.error) setModalState({\n          title: \"Registro creado\",\n          message: \"Registro creado con exito\",\n          show: true,\n          redirect: successRedirect\n        });else setModalState({\n          title: \"Error\",\n          message: \"Error creando el registro\",\n          show: true\n        });\n      });\n    } else {\n      GenericApi.updateGeneric(service, id, requestData).then(datos => {\n        window.showSpinner(false);\n        if (!datos.error) setModalState({\n          title: \"Registro actualizado\",\n          message: \"Registro actualizado con exito\",\n          show: true,\n          redirect: successRedirect\n        });else setModalState({\n          title: \"Error\",\n          message: \"Error actualizando el registro\",\n          show: true\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block block-rounded block-bordered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-content\",\n          children: /*#__PURE__*/_jsxDEV(\"nav\", {\n            \"aria-label\": \"breadcrumb\",\n            children: /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"breadcrumb breadcrumb-alt push\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"breadcrumb-item\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                  underline: \"hover\",\n                  className: \"text-dark\",\n                  to: successRedirect,\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [\"Lista de \", formName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 125\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"breadcrumb-item\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [submitButtonText, \" \", formName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block block-themed\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"block-title\",\n            children: [\"Datos b\\xE1sicos \", formName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-content\",\n          children: showForm ? /*#__PURE__*/_jsxDEV(Autoform, {\n            schema: modelSchema,\n            initialValues: initialValues,\n            styles: styles,\n            submitButton: true,\n            submitButtonText: submitButtonText,\n            config: {\n              arrayMode: 'table',\n              horizontal: false\n            },\n            onSubmit: submit,\n            onErrors: errors,\n            ref: e => formRef = e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 13\n  }, this);\n}\n\n_s(GenericForm, \"DRzSLSQyzdwPy8OemV73hFMAd/A=\", false, function () {\n  return [useParams];\n});\n\n_c = GenericForm;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenericForm\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/GenericForm.js"],"names":["React","useEffect","useState","useParams","Link","useNavigate","Autoform","styles","Spinner","ModalGen","GenericApi","GenericForm","props","formName","service","ddlServices","ddlServicesFunction","model","onSubmit","successRedirect","id","showForm","setShowForm","modelSchema","setModelSchema","initialValues","setInitialValues","modalState","setModalState","title","message","show","submitButtonText","undefined","formRef","window","showSpinner","initialData","getByIdGeneric","then","datos","error","data","attributes","ddlData","i","length","element","ddlServiceData","getAllGeneric","ddlList","forEach","value","item","label","nombre","push","loadForm","modelDef","Object","entries","key","setValue","errors","console","log","submit","requestData","addGeneric","redirect","updateGeneric","arrayMode","horizontal","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport { Autoform } from 'react-hook-form-auto';\r\n//import styles from 'rhfa-emergency-styles';\r\nimport styles from './Models/Styles';\r\nimport 'rhfa-emergency-styles/dist/styles.css';\r\nimport Spinner from '../Utils/Spinner';\r\nimport ModalGen from '../Utils/Modals/ModalGeneric';\r\nimport GenericApi from '../Api/Services/GenericApi';\r\n\r\n\r\nexport default function GenericForm(props) {\r\n    const {\r\n        formName,\r\n        service,\r\n        ddlServices = [],\r\n        ddlServicesFunction = null,\r\n        model,\r\n        onSubmit = null,\r\n        successRedirect = ''\r\n    } = props\r\n\r\n    //const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [modelSchema, setModelSchema] = useState({});\r\n    const [initialValues, setInitialValues] = useState({});\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    let submitButtonText = id == undefined ? 'Crear' : 'Editar';\r\n    let formRef;\r\n\r\n    useEffect(() => {\r\n        window.showSpinner(true);\r\n\r\n        async function initialData() {\r\n            if (id != undefined) {\r\n                GenericApi.getByIdGeneric(service, id).then(\r\n                    datos => {\r\n                        return !datos.error ? setInitialValues(datos.data.attributes) : {};\r\n                    }\r\n                )\r\n            }\r\n            return {};\r\n        }\r\n\r\n        (async function () {\r\n            var data = await initialData();\r\n            var ddlData = {};\r\n            for (var i = 0; i < ddlServices.length; i++) {\r\n                var element = ddlServices[i];\r\n                var ddlServiceData = await GenericApi.getAllGeneric(element).then(\r\n                    datos => {\r\n                        var ddlList = [];\r\n                        if (!datos.error) {\r\n                            datos.data.forEach(value => {\r\n                                let item = typeof ddlServicesFunction == 'function' ? ddlServicesFunction(element, value) : { value: value.id, label: value.attributes.nombre };\r\n                                ddlList.push(item);\r\n                            });\r\n                        }\r\n                        return ddlList;\r\n                    }\r\n                );\r\n                //console.log('END execution with result =', ddlServiceData);\r\n                ddlData[element] = ddlServiceData;\r\n            }\r\n\r\n            loadForm(data, ddlData);\r\n            window.showSpinner(false);\r\n        })();\r\n    }, []);\r\n\r\n    const loadForm = (data, ddlData) => {\r\n        //console.log(\"model type: \" + typeof model);\r\n        let modelDef = typeof model == 'function' ? model(ddlData) : model;\r\n        setModelSchema(modelDef);\r\n        setShowForm(true);\r\n\r\n        //asigna valores iniciales al formulario\r\n        Object.entries(data).forEach(([key, value]) => {\r\n            formRef.setValue(key, value);\r\n        });\r\n    }\r\n\r\n    const errors = (error) => {\r\n        console.log('errors');\r\n        console.log(error);\r\n    }\r\n\r\n    const submit = (data) => {\r\n        console.log(data);\r\n        if (typeof onSubmit == 'function') {\r\n            onSubmit(data);\r\n            return;\r\n        }\r\n\r\n        window.showSpinner(true);\r\n        var requestData = {\r\n            \"data\": {\r\n                \"type\": service,\r\n                \"attributes\": data,\r\n            }\r\n        }\r\n        if (id == undefined) {\r\n            GenericApi.addGeneric(service, requestData).then(\r\n                datos => {\r\n                    window.showSpinner(false);\r\n                    if (!datos.error)\r\n                        setModalState({ title: \"Registro creado\", message: \"Registro creado con exito\", show: true, redirect: successRedirect });\r\n                    else\r\n                        setModalState({ title: \"Error\", message: \"Error creando el registro\", show: true });\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            GenericApi.updateGeneric(service, id, requestData).then(\r\n                datos => {\r\n                    window.showSpinner(false);\r\n                    if (!datos.error)\r\n                        setModalState({ title: \"Registro actualizado\", message: \"Registro actualizado con exito\", show: true, redirect: successRedirect });\r\n                    else\r\n                        setModalState({ title: \"Error\", message: \"Error actualizando el registro\", show: true });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    return (<div>\r\n        <Spinner />\r\n        <ModalGen data={modalState} />\r\n        <div className=\"col-md-12\">\r\n            <div className=\"block block-rounded block-bordered\">\r\n                <div className=\"block-content\">\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                            <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={successRedirect}><small>Lista de {formName}</small></Link></li>\r\n                            <li class=\"breadcrumb-item\"> <small>{submitButtonText} {formName}</small></li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n            <div className=\"block block-themed\">\r\n                <div className=\"block-header\">\r\n                    <h3 className=\"block-title\">Datos básicos {formName}</h3>\r\n                </div>\r\n                <div className=\"block-content\">\r\n                    {showForm ?\r\n                        <Autoform\r\n                            schema={modelSchema}\r\n                            initialValues={initialValues}\r\n                            styles={styles}\r\n                            submitButton={true}\r\n                            submitButtonText={submitButtonText}\r\n                            config={{ arrayMode: 'table', horizontal: false }}\r\n                            onSubmit={submit}\r\n                            onErrors={errors}\r\n                            ref={e => formRef = e}\r\n                        >\r\n                        </Autoform>\r\n                        : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}