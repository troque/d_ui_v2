{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Maestras\\\\ConsecutivoActuacionesForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport Spinner from '../Utils/Spinner';\nimport { Link } from \"react-router-dom\";\nimport GenericApi from '../Api/Services/GenericApi';\nimport { useLocation } from 'react-router-dom';\nimport '../Utils/Constants';\nimport ModalGen from '../Utils/Modals/ModalGeneric';\nimport InfoErrorApi from '../Utils/InfoErrorApi';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ConsecutivoDesgloseForm() {\n  _s();\n  // Constates de la pagina    \n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n\n  // Constantes generales\n  const [errorApi, setErrorApi] = useState('');\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n\n  // Constantes para cargar los valores\n  const [getVigencia, setVigencia] = useState();\n  const [getConsecutivo, setConsecutivo] = useState();\n  const [getRespuestaVigencia, setRespuestaVigencia] = useState(false);\n\n  // Constantes para los errores\n  const [getMensajeErrorDependencias, setMensajeErrorDependencias] = useState(\"\");\n  const [getMensajeErrorEstado, setMensajeErrorEstado] = useState(\"\");\n\n  // Constante para el array de los estados y dependencias\n  const [getArrayEstados, setArrayEstados] = useState([]);\n  const [getListaVigencias, setListaVigencias] = useState([]);\n\n  // Se inicializa el array de estados\n  const getListaEstados = [{\n    value: '1',\n    label: 'Activo'\n  }, {\n    value: '0',\n    label: 'Inactivo'\n  }];\n  const getEstadoDisabled = from != null ? true : false;\n  useEffect(() => {\n    async function fetchData() {\n      // Se habilita el cargando\n      window.showSpinner(true);\n\n      // Se cargan las vigencias disponibles\n      cargarVigencias();\n\n      // Se valida que haya informacion enviada por parametros al formulario\n      if (from != null) {\n        // Se cargan los datos\n        setConsecutivo(from.attributes.consecutivo);\n        setVigencia(from.attributes.id_vigencia.id);\n\n        // Se carga el estado\n        if (from.attributes.estado == 1) {\n          // Se setea la data\n          setArrayEstados({\n            label: 'ACTIVO',\n            value: from.attributes.estado\n          });\n        } else {\n          // Se setea la data\n          setArrayEstados({\n            label: 'INACTIVO',\n            value: from.attributes.estado\n          });\n        }\n      } else {\n        // Se setea la data\n        setArrayEstados({\n          label: 'INACTIVO',\n          value: from.attributes.estado\n        });\n\n        // Se deshabilita el cargando\n        window.showSpinner(false);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // Metodo encargado de enviar los valores para crear\n  const enviarDatos = valores => {\n    // Se valida que haya un estado seleccionado valido\n    if (!getArrayEstados.value) {\n      // Se redeclara el mensaje\n      setMensajeErrorEstado(\"Debe seleccionar un estado\");\n\n      // Se setea en false\n      return false;\n    }\n\n    // Se inicializa el array\n    let data = {\n      \"data\": {\n        \"type\": \"mas-consecutivo-actuaciones\",\n        \"attributes\": {\n          \"id_vigencia\": getVigencia,\n          \"consecutivo\": getConsecutivo,\n          \"estado\": getArrayEstados.value\n        }\n      }\n    };\n\n    // Se utiliza el cargando\n    window.showSpinner(true);\n\n    // Se inicializa la API\n    GenericApi.addGeneric('mas-consecutivo-actuaciones', data).then(\n    // Variable de API\n    datos => {\n      // Se utiliza el cargando\n      window.showSpinner(false);\n\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setea el modal\n        setModalState({\n          title: \"CONSECUTIVO ACTUACIONES :: CREAR CONSECUTIVO\",\n          message: global.Constants.MENSAJES_MODAL.EXITOSO,\n          show: true,\n          redirect: '/ConsecutivoActuaciones',\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        // Se setea el modal\n        setModalState({\n          title: \"CONSECUTIVO ACTUACIONES :: CREAR CONSECUTIVO\",\n          message: datos.error.toString().toUpperCase(),\n          show: true,\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  // Metodo encargado de actualizar los valores\n  const actualizarDatos = valores => {\n    // Se inicializa el valor del id\n    const id = from.id;\n\n    // Se inicializa el array a enviar por post\n    let data = {\n      \"data\": {\n        \"type\": \"mas-consecutivo-actuaciones\",\n        \"attributes\": {\n          \"id_vigencia\": getVigencia,\n          \"consecutivo\": getConsecutivo,\n          \"estado\": getArrayEstados.value,\n          \"form\": true\n        }\n      }\n    };\n\n    // Se utiliza el cargando\n    window.showSpinner(true);\n\n    // API Encargada de actualizar \n    GenericApi.updateGeneric('mas-consecutivo-actuaciones', id, data).then(\n    // Variable de respuesta de la API\n    datos => {\n      // Se deshabilita el cargando\n      window.showSpinner(false);\n\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setea el modal\n        setModalState({\n          title: \"CONSECUTIVO ACTUACIONES :: ACTUALIZACIÓN DE DATOS\",\n          message: global.Constants.MENSAJES_MODAL.EXITOSO,\n          show: true,\n          redirect: '/ConsecutivoActuaciones',\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        // Se setea el modal\n        setModalState({\n          title: \"CONSECUTIVO ACTUACIONES :: ACTUALIZACIÓN DE DATOS\",\n          message: datos.error.toString(),\n          show: true,\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  // Metodo encargado de setear el valor del estado\n  const selectChangeEstados = v => {\n    // Se carga el tipo de estado en el array del select\n    setArrayEstados(v);\n  };\n  const selectVigencia = () => {\n    // Se retorna\n    return (\n      // Se recorre la lista de vigencias\n      getListaVigencias.data.map((vigencia, i) => {\n        // Se retorna cada option\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: vigencia.id,\n          children: vigencia.attributes.vigencia\n        }, vigencia.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this);\n      })\n    );\n  };\n  const cargarVigencias = () => {\n    // Se consume la API\n    GenericApi.getGeneric(\"vigencia?estado=1\").then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya\n      if (!datos.error) {\n        // Se setea la lista de vigencias\n        setListaVigencias(datos);\n        setRespuestaVigencia(true);\n      }\n\n      // Se deshabilita el cargando\n      window.showSpinner(false);\n    });\n  };\n  const handleInputChange = event => {\n    // Se captura la informacion del input\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    // Se valida cuando el input es vigencia\n    if (name == \"vigencia\") {\n      // Se setea la data\n      setVigencia(value);\n    }\n\n    // Se valida cuando el input es el consecutivo\n    if (name == \"Consecutivo\") {\n      // Se valida que el campo sea entero\n      if (validarEnteroEnCampo(event.target.name)) {\n        // Se setea la data\n        setConsecutivo(value);\n      }\n    }\n  };\n  function validarEnteroEnCampo(identificadorDelCampo) {\n    // Se captura el id del elemento html\n    let field = document.getElementById(identificadorDelCampo);\n\n    // Se convierte la data en entero\n    let valueInt = parseInt(field.value);\n\n    // Se valida que no sea un numero entero\n    if (!Number.isInteger(valueInt)) {\n      // Se retorna en false\n      return false;\n    } else {\n      // Se le asigna el valor al input\n      field.value = valueInt;\n\n      // Se retorna en true\n      return true;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n      error: errorApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        vigencia: '',\n        Consecutivo: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        // Se inicializa el array\n        let errores = {};\n\n        // Se valida que tenga valores\n        if (!getVigencia) {\n          errores.vigencia = 'Debe ingresar un valor';\n        }\n        if (!getConsecutivo) {\n          errores.Consecutivo = 'Debe ingresar un valor';\n        }\n\n        // Se retorna los errores\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        // Se valida si viene data en el from para actualizar\n        if (from != null) {\n          // Se manda a actualizar los datos\n          actualizarDatos(valores);\n        } else {\n          // Se manda a crear los datos\n          enviarDatos(valores);\n        }\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-rounded block-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block block-themed\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-content\",\n                  children: /*#__PURE__*/_jsxDEV(\"nav\", {\n                    \"aria-label\": \"breadcrumb\",\n                    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                      className: \"breadcrumb breadcrumb-alt push\",\n                      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                        class: \"breadcrumb-item\",\n                        children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: \"Administraci\\xF3n\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 322,\n                          columnNumber: 78\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 322,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        class: \"breadcrumb-item\",\n                        children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: \"Maestras\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 323,\n                          columnNumber: 78\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 323,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        class: \"breadcrumb-item\",\n                        children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                          underline: \"hover\",\n                          className: \"text-dark\",\n                          to: `/ConsecutivoDesglose`,\n                          children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                            children: \"Lista de consecutivos de desglose\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 324,\n                            columnNumber: 153\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 324,\n                          columnNumber: 78\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 324,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        class: \"breadcrumb-item\",\n                        children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: [from != null ? 'Actualizar' : 'Crear', \" consecutivos de desglose\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 325,\n                          columnNumber: 78\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 325,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"block-title\",\n                  children: \"Datos b\\xE1sicos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"vigencia\",\n                        children: [\"VIGENCIA \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 337,\n                          columnNumber: 84\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        value: getVigencia,\n                        onChange: handleInputChange,\n                        as: \"select\",\n                        className: \"form-control\",\n                        id: \"vigencia\",\n                        name: \"vigencia\",\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 339,\n                          columnNumber: 53\n                        }, this), getRespuestaVigencia ? selectVigencia() : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 338,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"vigencia\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: errors.vigencia\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 342,\n                          columnNumber: 97\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"Consecutivo\",\n                        children: [\"CONSECUTIVO \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 347,\n                          columnNumber: 90\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 347,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        as: \"input\",\n                        type: \"number\",\n                        className: \"form-control\",\n                        id: \"Consecutivo\",\n                        name: \"Consecutivo\",\n                        value: from != null ? getConsecutivo : null,\n                        onChange: handleInputChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 348,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"Consecutivo\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: errors.Consecutivo\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 349,\n                          columnNumber: 100\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 349,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"estado\",\n                        children: [\"ESTADO \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 354,\n                          columnNumber: 80\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 49\n                      }, this), getArrayEstados ? /*#__PURE__*/_jsxDEV(Select, {\n                        id: \"estado\",\n                        name: \"estado\",\n                        isMulti: false,\n                        value: getArrayEstados,\n                        placeholder: global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION,\n                        noOptionsMessage: () => \"Sin datos\",\n                        options: getListaEstados.map(e => ({\n                          label: e.label.toUpperCase(),\n                          value: e.value\n                        })),\n                        isDisabled: getEstadoDisabled,\n                        onChange: e => selectChangeEstados(e)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 356,\n                        columnNumber: 53\n                      }, this) : null, getMensajeErrorEstado ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: getMensajeErrorEstado\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 371,\n                        columnNumber: 53\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right bg-light\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: from != null ? \"ACTUALIZAR\" : \"CREAR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: '/ConsecutivoActuaciones',\n                className: \"font-size-h5 font-w600\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: \"CANCELAR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ConsecutivoDesgloseForm, \"oEqbbFCQJXPssW37XAIuAW2NCQU=\", false, function () {\n  return [useLocation];\n});\n_c = ConsecutivoDesgloseForm;\n;\nvar _c;\n$RefreshReg$(_c, \"ConsecutivoDesgloseForm\");","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","Spinner","Link","GenericApi","useLocation","ModalGen","InfoErrorApi","Select","ConsecutivoDesgloseForm","location","from","state","errorApi","setErrorApi","getModalState","setModalState","title","message","show","getVigencia","setVigencia","getConsecutivo","setConsecutivo","getRespuestaVigencia","setRespuestaVigencia","getMensajeErrorDependencias","setMensajeErrorDependencias","getMensajeErrorEstado","setMensajeErrorEstado","getArrayEstados","setArrayEstados","getListaVigencias","setListaVigencias","getListaEstados","value","label","getEstadoDisabled","fetchData","window","showSpinner","cargarVigencias","attributes","consecutivo","id_vigencia","id","estado","enviarDatos","valores","data","addGeneric","then","datos","error","global","Constants","MENSAJES_MODAL","EXITOSO","redirect","alert","TIPO_ALERTA","EXITO","toString","toUpperCase","ERROR","actualizarDatos","updateGeneric","selectChangeEstados","v","selectVigencia","map","vigencia","i","getGeneric","handleInputChange","event","target","type","checked","name","validarEnteroEnCampo","identificadorDelCampo","field","document","getElementById","valueInt","parseInt","Number","isInteger","Consecutivo","errores","resetForm","errors","MENSAJE_INFORMATIVO","SELECCIONE_UNA_OPCION","e"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/ConsecutivoActuacionesForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport Spinner from '../Utils/Spinner';\r\nimport { Link } from \"react-router-dom\";\r\nimport GenericApi from '../Api/Services/GenericApi';\r\nimport { useLocation } from 'react-router-dom';\r\nimport '../Utils/Constants';\r\nimport ModalGen from '../Utils/Modals/ModalGeneric';\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport Select from 'react-select';\r\n\r\nexport default function ConsecutivoDesgloseForm() {\r\n\r\n    // Constates de la pagina    \r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n\r\n    // Constantes generales\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n\r\n    // Constantes para cargar los valores\r\n    const [getVigencia, setVigencia] = useState();\r\n    const [getConsecutivo, setConsecutivo] = useState();\r\n    const [getRespuestaVigencia, setRespuestaVigencia] = useState(false);\r\n\r\n\r\n    // Constantes para los errores\r\n    const [getMensajeErrorDependencias, setMensajeErrorDependencias] = useState(\"\");\r\n    const [getMensajeErrorEstado, setMensajeErrorEstado] = useState(\"\");\r\n\r\n    // Constante para el array de los estados y dependencias\r\n    const [getArrayEstados, setArrayEstados] = useState([]);\r\n    const [getListaVigencias, setListaVigencias] = useState([]);\r\n\r\n    // Se inicializa el array de estados\r\n    const getListaEstados =\r\n        [\r\n            { value: '1', label: 'Activo' },\r\n            { value: '0', label: 'Inactivo' }\r\n        ];\r\n    const getEstadoDisabled = from != null ? true : false;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            // Se habilita el cargando\r\n            window.showSpinner(true);\r\n\r\n            // Se cargan las vigencias disponibles\r\n            cargarVigencias();\r\n\r\n            // Se valida que haya informacion enviada por parametros al formulario\r\n            if (from != null) {\r\n\r\n                // Se cargan los datos\r\n                setConsecutivo(from.attributes.consecutivo);\r\n                setVigencia(from.attributes.id_vigencia.id);\r\n\r\n                // Se carga el estado\r\n                if (from.attributes.estado == 1) {\r\n\r\n                    // Se setea la data\r\n                    setArrayEstados({ label: 'ACTIVO', value: from.attributes.estado });\r\n                } else {\r\n\r\n                    // Se setea la data\r\n                    setArrayEstados({ label: 'INACTIVO', value: from.attributes.estado });\r\n                }\r\n\r\n            } else {\r\n\r\n                // Se setea la data\r\n                setArrayEstados({ label: 'INACTIVO', value: from.attributes.estado });\r\n\r\n                // Se deshabilita el cargando\r\n                window.showSpinner(false);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Metodo encargado de enviar los valores para crear\r\n    const enviarDatos = (valores) => {\r\n\r\n        // Se valida que haya un estado seleccionado valido\r\n        if (!getArrayEstados.value) {\r\n\r\n            // Se redeclara el mensaje\r\n            setMensajeErrorEstado(\"Debe seleccionar un estado\");\r\n\r\n            // Se setea en false\r\n            return false;\r\n        }\r\n\r\n        // Se inicializa el array\r\n        let data = {\r\n            \"data\": {\r\n                \"type\": \"mas-consecutivo-actuaciones\",\r\n                \"attributes\": {\r\n                    \"id_vigencia\": getVigencia,\r\n                    \"consecutivo\": getConsecutivo,\r\n                    \"estado\": getArrayEstados.value\r\n                }\r\n            }\r\n        };\r\n\r\n        // Se utiliza el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa la API\r\n        GenericApi.addGeneric('mas-consecutivo-actuaciones', data).then(\r\n\r\n            // Variable de API\r\n            datos => {\r\n\r\n                // Se utiliza el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: \"CONSECUTIVO ACTUACIONES :: CREAR CONSECUTIVO\", message: global.Constants.MENSAJES_MODAL.EXITOSO, show: true, redirect: '/ConsecutivoActuaciones', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: \"CONSECUTIVO ACTUACIONES :: CREAR CONSECUTIVO\", message: datos.error.toString().toUpperCase(), show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de actualizar los valores\r\n    const actualizarDatos = (valores) => {\r\n\r\n        // Se inicializa el valor del id\r\n        const id = from.id;\r\n\r\n        // Se inicializa el array a enviar por post\r\n        let data = {\r\n            \"data\": {\r\n                \"type\": \"mas-consecutivo-actuaciones\",\r\n                \"attributes\": {\r\n                    \"id_vigencia\": getVigencia,\r\n                    \"consecutivo\": getConsecutivo,\r\n                    \"estado\": getArrayEstados.value,\r\n                    \"form\": true\r\n                }\r\n            }\r\n        };\r\n\r\n        // Se utiliza el cargando\r\n        window.showSpinner(true);\r\n\r\n        // API Encargada de actualizar \r\n        GenericApi.updateGeneric('mas-consecutivo-actuaciones', id, data).then(\r\n\r\n            // Variable de respuesta de la API\r\n            datos => {\r\n\r\n                // Se deshabilita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: \"CONSECUTIVO ACTUACIONES :: ACTUALIZACIÓN DE DATOS\", message: global.Constants.MENSAJES_MODAL.EXITOSO, show: true, redirect: '/ConsecutivoActuaciones', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: \"CONSECUTIVO ACTUACIONES :: ACTUALIZACIÓN DE DATOS\", message: datos.error.toString(), show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de setear el valor del estado\r\n    const selectChangeEstados = (v) => {\r\n\r\n        // Se carga el tipo de estado en el array del select\r\n        setArrayEstados(v);\r\n    }\r\n\r\n    const selectVigencia = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre la lista de vigencias\r\n            getListaVigencias.data.map((vigencia, i) => {\r\n\r\n                // Se retorna cada option\r\n                return (\r\n                    <option key={vigencia.id} value={vigencia.id}>{vigencia.attributes.vigencia}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const cargarVigencias = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getGeneric(\"vigencia?estado=1\").then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya\r\n                if (!datos.error) {\r\n\r\n                    // Se setea la lista de vigencias\r\n                    setListaVigencias(datos);\r\n                    setRespuestaVigencia(true);\r\n                }\r\n\r\n                // Se deshabilita el cargando\r\n                window.showSpinner(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n\r\n        // Se captura la informacion del input\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        // Se valida cuando el input es vigencia\r\n        if (name == \"vigencia\") {\r\n\r\n            // Se setea la data\r\n            setVigencia(value);\r\n        }\r\n\r\n        // Se valida cuando el input es el consecutivo\r\n        if (name == \"Consecutivo\") {\r\n\r\n            // Se valida que el campo sea entero\r\n            if (validarEnteroEnCampo(event.target.name)) {\r\n\r\n                // Se setea la data\r\n                setConsecutivo(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    function validarEnteroEnCampo(identificadorDelCampo) {\r\n\r\n        // Se captura el id del elemento html\r\n        let field = document.getElementById(identificadorDelCampo);\r\n\r\n        // Se convierte la data en entero\r\n        let valueInt = parseInt(field.value);\r\n\r\n        // Se valida que no sea un numero entero\r\n        if (!Number.isInteger(valueInt)) {\r\n\r\n            // Se retorna en false\r\n            return false;\r\n        } else {\r\n\r\n            // Se le asigna el valor al input\r\n            field.value = valueInt;\r\n\r\n            // Se retorna en true\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<InfoErrorApi error={errorApi} />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    vigencia: '',\r\n                    Consecutivo: '',\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n\r\n                    // Se inicializa el array\r\n                    let errores = {};\r\n\r\n                    // Se valida que tenga valores\r\n                    if (!getVigencia) {\r\n                        errores.vigencia = 'Debe ingresar un valor';\r\n                    }\r\n                    if (!getConsecutivo) {\r\n                        errores.Consecutivo = 'Debe ingresar un valor';\r\n                    }\r\n\r\n                    // Se retorna los errores\r\n                    return errores;\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n\r\n                    // Se valida si viene data en el from para actualizar\r\n                    if (from != null) {\r\n\r\n                        // Se manda a actualizar los datos\r\n                        actualizarDatos(valores);\r\n                    } else {\r\n\r\n                        // Se manda a crear los datos\r\n                        enviarDatos(valores);\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"block block-rounded block-bordered\">\r\n                            <div className=\"block block-themed\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"block-content\">\r\n                                        <nav aria-label=\"breadcrumb\">\r\n                                            <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                                <li class=\"breadcrumb-item\"> <small>Administración</small></li>\r\n                                                <li class=\"breadcrumb-item\"> <small>Maestras</small></li>\r\n                                                <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/ConsecutivoDesglose`}> <small>Lista de consecutivos de desglose</small></Link></li>\r\n                                                <li class=\"breadcrumb-item\"> <small>{from != null ? 'Actualizar' : 'Crear'} consecutivos de desglose</small></li>\r\n                                            </ol>\r\n                                        </nav>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-header\">\r\n                                    <h3 className=\"block-title\">Datos básicos</h3>\r\n                                </div>\r\n                                <div className=\"block-content\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"vigencia\">VIGENCIA <span className=\"text-danger\">*</span></label>\r\n                                                <Field value={getVigencia} onChange={handleInputChange} as=\"select\" className=\"form-control\" id=\"vigencia\" name=\"vigencia\">\r\n                                                    <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                    {getRespuestaVigencia ? selectVigencia() : null}\r\n                                                </Field>\r\n                                                <ErrorMessage name=\"vigencia\" component={() => (<span className=\"text-danger\">{errors.vigencia}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"Consecutivo\">CONSECUTIVO <span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"input\" type=\"number\" className=\"form-control\" id=\"Consecutivo\" name=\"Consecutivo\" value={from != null ? getConsecutivo : null} onChange={handleInputChange}></Field>\r\n                                                <ErrorMessage name=\"Consecutivo\" component={() => (<span className=\"text-danger\">{errors.Consecutivo}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"estado\">ESTADO <span className=\"text-danger\">*</span></label>\r\n                                                {(getArrayEstados) ?\r\n                                                    <Select\r\n                                                        id='estado'\r\n                                                        name='estado'\r\n                                                        isMulti={false}\r\n                                                        value={getArrayEstados}\r\n                                                        placeholder={global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}\r\n                                                        noOptionsMessage={() => \"Sin datos\"}\r\n                                                        options={getListaEstados.map(e =>\r\n                                                            ({ label: e.label.toUpperCase(), value: e.value })\r\n                                                        )}\r\n                                                        isDisabled={getEstadoDisabled}\r\n                                                        onChange={(e) => selectChangeEstados(e)}\r\n                                                    />\r\n                                                    : null}\r\n                                                {getMensajeErrorEstado ?\r\n                                                    <span className=\"text-danger\">{getMensajeErrorEstado}</span>\r\n                                                    : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"block-content block-content-full text-right bg-light\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\" >\r\n                                    {from != null ? \"ACTUALIZAR\" : \"CREAR\"}\r\n                                </button>\r\n                                <Link to={'/ConsecutivoActuaciones'} className=\"font-size-h5 font-w600\">\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">CANCELAR</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}