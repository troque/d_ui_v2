{"ast":null,"code":"import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useLocation}from'react-router-dom';import DataTable from'react-data-table-component';import GenericApi from'../../Api/Services/GenericApi';import ParametrosMasApi from\"../../Api/Services/ParametrosMasApi\";import Spinner from'../../Utils/Spinner';import ModalGen from'../../Utils/Modals/ModalGeneric';import'../../Utils/Constants';import{getUser}from'../../Utils/Common';import\"react-datepicker/dist/react-datepicker.css\";import DatePicker,{registerLocale}from\"react-datepicker\";import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ActuacionParametrosPlantillaForm(props){var location=useLocation();var from=location.state.from;var radicado=from.radicado;var procesoDisciplinarioId=from.procesoDisciplinarioId;var id_etapa=from.idEtapa;var fechaRegistro=from.fechaRegistro;var fechaIngreso=from.fechaIngreso;var dependencia=getUser().nombre_dependencia?getUser().nombre_dependencia.nombre:\"\";var registradoPor=from.registradoPor;var vigencia=from.vigencia;var generadoPor=getUser().nombre_completo?getUser().nombre_completo:\"\";var _useState=useState({title:\"\",message:\"\",show:false}),_useState2=_slicedToArray(_useState,2),modalState=_useState2[0],setModalState=_useState2[1];var _useState3=useState({params:[]}),_useState4=_slicedToArray(_useState3,2),getListaParametros=_useState4[0],setListaParametros=_useState4[1];var _useState5=useState({data:[]}),_useState6=_slicedToArray(_useState5,2),getListaCamposPorParametroTemporal=_useState6[0],setListaCamposPorParametroTemporal=_useState6[1];var _useState7=useState({data:[]}),_useState8=_slicedToArray(_useState7,2),getListaCamposPorCamposTemporal=_useState8[0],setListaCamposPorCamposTemporal=_useState8[1];//const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\nvar _useState9=useState({data:[],links:[],meta:[]}),_useState10=_slicedToArray(_useState9,2),getAntecedentesLista=_useState10[0],setAntecedentesLista=_useState10[1];var _useState11=useState({data:[],links:[],meta:[]}),_useState12=_slicedToArray(_useState11,2),getInteresadosLista=_useState12[0],setInteresadosLista=_useState12[1];var _useState13=useState({data:[],links:[],meta:[]}),_useState14=_slicedToArray(_useState13,2),getEntidadesInvestigadoLista=_useState14[0],setEntidadesInvestigadoLista=_useState14[1];var _useState15=useState({data:[],links:[],meta:[]}),_useState16=_slicedToArray(_useState15,2),getCargosInvestigadoLista=_useState16[0],setCargosInvestigadoLista=_useState16[1];var _useState17=useState({data:[],links:[],meta:[]}),_useState18=_slicedToArray(_useState17,2),getEntidadInvestigadoLista=_useState18[0],setEntidadInvestigadoLista=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),getParametrosCampos=_useState20[0],setParametrosCampos=_useState20[1];var _useState21=useState({data:[]}),_useState22=_slicedToArray(_useState21,2),getListaParametrosBaseDatos=_useState22[0],setListaParametrosBaseDatos=_useState22[1];var _useState23=useState([]),_useState24=_slicedToArray(_useState23,2),getCamposAdicionales=_useState24[0],setCamposAdicionales=_useState24[1];var _useState25=useState(),_useState26=_slicedToArray(_useState25,2),getMaxDate=_useState26[0],setMaxDate=_useState26[1];var _useState27=useState(moment().format('YYYY-MM-DD')),_useState28=_slicedToArray(_useState27,2),value=_useState28[0],setValue=_useState28[1];var _useState29=useState(true),_useState30=_slicedToArray(_useState29,2),getIsLoading=_useState30[0],setIsLoading=_useState30[1];var numeroLlamados=0;var numeroTotalLlamados=6;// Metodo encargado de cargar la informacion general del formulario\nuseEffect(function(){// Se setea el maximo de fecha\nsetMaxDate(new Date().toISOString().split(\"T\")[0]);// Se inicializa la funcion asyncrona\nfunction fetchData(){return _fetchData.apply(this,arguments);}// Se llama el metodo\nfunction _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Metodo encargado de cargar los parametros de la plantilla\ncargarTablaParametrosActuaciones();case 1:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[props.id_mas_actuacion]);// Metodo encargado de cargar los parametros generales de la plantilla de la BD\nvar cargarTablaParametrosActuaciones=function cargarTablaParametrosActuaciones(){// Se inicializa el array\nvar array=[];// Se inicializa la API\nGenericApi.getGeneric('parametro-campos').then(// Se inicializa la variable de respuesta\nfunction(datos){validacionSpinner();// Se valida que no haya error\nif(!datos.error){// Se recorre el array para insertar los valores necesarios\nfor(var index=0;index<datos.data.length;index++){// Se captura los datos por posicion\nvar element=datos.data[index].attributes;var title=element.nombre_campo;var estado=element.estado==\"1\"?true:false;var type=element.type;var _value=validarValueParametros(type,estado);// Se añade el dato al array general\narray.push({title:title,value:_value,type:type,check:estado});}// Se setea la respuesta en la constante\nsetListaParametrosBaseDatos(array);// Se generan la lista de parametros del documento\ncargarParametros(array);}});};// Metodo encargado de retorna el valor por el elemento\nvar validarValueParametros=function validarValueParametros(element,estado){// Se inicializa la variable\nvar valor;// Se valida por el elemento\nif((element==\"Sinproc\"||element==\"Número de radicado\"||element==\"Radicación\"||element==\"Radicado\")&&estado){valor=radicado;}else if(element==\"Usuario\"&&estado){valor=registradoPor;}else if((element==\"Dependencia Origen\"||element==\"Dependencia\")&&estado){valor=dependencia;}else if(element==\"Vigencia\"&&estado){valor=vigencia;}else if(element==\"Fecha de Registro\"&&estado){valor=fechaRegistro;}else if(element==\"Fecha de Ingreso\"&&estado){valor=fechaIngreso;}else if(element==\"Generado\"&&estado){valor=generadoPor;}else if((element==\"Número de auto (generado despues de aprobación)\"||element==\"Auto\")&&estado){valor=\"${numero_de_auto}\";}// Se retorna el valor\nreturn valor;};var selectCampos=function selectCampos(parametro){return getListaParametrosBaseDatos.map(function(item,i){var itemFilter=getListaCamposPorParametroTemporal.data.filter(function(x){return x.parametro==parametro;});if(itemFilter!=undefined&&itemFilter.length>0&&itemFilter[0].id_campo===i){return/*#__PURE__*/_jsx(\"option\",{selected:true,value:i,children:item.title},i);}else{return/*#__PURE__*/_jsx(\"option\",{value:i,children:item.title},i);}});};var handleChangeInteresados=function handleChangeInteresados(e,parametro,id_campo){var _e$target=e.target,value=_e$target.value,checked=_e$target.checked;var valorId=getInteresadosLista.map(function(item){if(value==item.id){item.checked=checked;}return item;});setInteresadosLista(valorId);var val=getInteresadosLista.map(function(p){if(p.checked==true){var primerApellido=p.attributes.primer_apellido!=null?p.attributes.primer_apellido:\"\";var segundoApellido=p.attributes.segundo_apellido!=null?p.attributes.segundo_apellido:\"\";var primerNombre=p.attributes.primer_nombre!=null?p.attributes.primer_nombre:\"\";var segundoNombre=p.attributes.segundo_nombre!=null?p.attributes.segundo_nombre:\"\";var sujetoProcesalNombre=p.attributes.sujeto_procesal_nombre!=\"\"?p.attributes.sujeto_procesal_nombre:\"\";var nombreCompleto=sujetoProcesalNombre+\" \"+primerApellido+\" \"+segundoApellido+\" \"+primerNombre+\" \"+segundoNombre;var nombre=nombreCompleto;return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};function checkeoAutomaticoInteresados(parametro,id_campo){setInteresadosLista(getInteresadosLista);var primerApellido=getInteresadosLista[0].attributes.primer_apellido!=null?getInteresadosLista[0].attributes.primer_apellido:\"\";var segundoApellido=getInteresadosLista[0].attributes.segundo_apellido!=null?getInteresadosLista[0].attributes.segundo_apellido:\"\";var primerNombre=getInteresadosLista[0].attributes.primer_nombre!=null?getInteresadosLista[0].attributes.primer_nombre:\"\";var segundoNombre=getInteresadosLista[0].attributes.segundo_nombre!=null?getInteresadosLista[0].attributes.segundo_nombre:\"\";var sujetoProcesalNombre=getInteresadosLista[0].attributes.sujeto_procesal_nombre!=null?getInteresadosLista[0].attributes.sujeto_procesal_nombre:\"\";var nombreCompleto=sujetoProcesalNombre+\" \"+primerApellido+\" \"+segundoApellido+\" \"+primerNombre+\" \"+segundoNombre;var nombre=nombreCompleto;// var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\nselectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoAntecedentes(parametro,id_campo){setAntecedentesLista(getAntecedentesLista);var nombre=\"\".concat(getAntecedentesLista[0].attributes.descripcion);selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoInvestigadosNombre(parametro,id_campo){setEntidadInvestigadoLista(getEntidadesInvestigadoLista);var nombre=\"\".concat(getEntidadesInvestigadoLista[0].attributes.nombre_investigado);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoInvestigadosCargo(parametro,id_campo){setCargosInvestigadoLista(getCargosInvestigadoLista);var nombre=\"\".concat(getCargosInvestigadoLista[0].attributes.cargo);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoInvestigadosEntidad(parametro,id_campo){setEntidadesInvestigadoLista(getEntidadInvestigadoLista);var nombre=\"\".concat(getEntidadInvestigadoLista[0].attributes.nombre_entidad);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoFechaAntecedentes(parametro,id_campo){setAntecedentesLista(getAntecedentesLista);var nombre=\"\".concat(getAntecedentesLista[0].attributes.fecha_creado);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}var handleChangeAntecedentes=function handleChangeAntecedentes(e,parametro,id_campo){var _e$target2=e.target,value=_e$target2.value,checked=_e$target2.checked;var valorId=getAntecedentesLista.map(function(item){if(value==item.id){item.checked=checked;}return item;});setAntecedentesLista(valorId);var val=getAntecedentesLista.map(function(p){if(p.checked==true){var nombre=\"\".concat(p.attributes.descripcion);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeFechaAntecedentes=function handleChangeFechaAntecedentes(e,parametro,id_campo){var _e$target3=e.target,value=_e$target3.value,checked=_e$target3.checked;var valorId=getAntecedentesLista.map(function(item){if(value==item.id){item.checked=checked;}return item;});setAntecedentesLista(valorId);var val=getAntecedentesLista.map(function(p){if(p.checked==true){var nombre=\"\".concat(p.attributes.fecha_creado);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeInvestigados=function handleChangeInvestigados(e,parametro,id_campo){var _e$target4=e.target,value=_e$target4.value,checked=_e$target4.checked;var valorId=getEntidadesInvestigadoLista.map(function(item){if(value==item.attributes.nombre_investigado){item.checked=checked;}return item;});setEntidadesInvestigadoLista(valorId);var val=getEntidadesInvestigadoLista.map(function(p){if(p.checked==true){var value=\"\".concat(p.attributes.nombre_investigado);var nombre=\"\".concat(p.attributes.nombre_investigado);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeCargosInvestigados=function handleChangeCargosInvestigados(e,parametro,id_campo){var _e$target5=e.target,value=_e$target5.value,checked=_e$target5.checked;var valorId=getCargosInvestigadoLista.map(function(item){if(value==item.attributes.cargo){item.checked=checked;}return item;});setCargosInvestigadoLista(valorId);var val=getCargosInvestigadoLista.map(function(p){if(p.checked==true){var value=\"\".concat(p.attributes.cargo);var nombre=\"\".concat(p.attributes.cargo);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeEntidadesInvestigados=function handleChangeEntidadesInvestigados(e,parametro,id_campo){var _e$target6=e.target,value=_e$target6.value,checked=_e$target6.checked;var valorId=getEntidadInvestigadoLista.map(function(item){if(value==item.attributes.nombre_entidad){item.checked=checked;}return item;});setCargosInvestigadoLista(valorId);var val=getEntidadInvestigadoLista.map(function(p){if(p.checked==true){var value=\"\".concat(p.attributes.nombre_entidad);var nombre=\"\".concat(p.attributes.nombre_entidad);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var selectAntecedentes=function selectAntecedentes(parametro,id_campo){if(Array.isArray(getAntecedentesLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getAntecedentesLista&&getAntecedentesLista.length==1){checkeoAutomaticoAntecedentes(parametro,id_campo);return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getAntecedentesLista[0].id,name:'check'+getAntecedentesLista[0].id,value:getAntecedentesLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",getAntecedentesLista[0].attributes.descripcion]},'keyCheck'+getAntecedentesLista[0].id);}else if(getAntecedentesLista.length>1){return getAntecedentesLista.map(function(item,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+item.id,name:'check'+item.id,value:item.id,onChange:function onChange(e){return handleChangeAntecedentes(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",item.attributes.descripcion]},'keyCheck'+item.id)// <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n;});}}};var selectFechaAntecedentes=function selectFechaAntecedentes(parametro,id_campo){if(Array.isArray(getAntecedentesLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getAntecedentesLista&&getAntecedentesLista.length==1){checkeoAutomaticoFechaAntecedentes(parametro,id_campo);return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getAntecedentesLista[0].attributes.fecha_creado,name:'check'+getAntecedentesLista[0].attributes.fecha_creado,value:getAntecedentesLista[0].attributes.fecha_creado,onChange:function onChange(e){return handleChangeFechaAntecedentes(0,parametro,id_campo);},defaultChecked:true,disabled:true}),\" \",getAntecedentesLista[0].attributes.fecha_creado]},'keyCheck'+getAntecedentesLista[0].attributes.fecha_creado);}else if(getAntecedentesLista.length>1){return getAntecedentesLista.map(function(item,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+item.fecha_creado,name:'check'+item.fecha_creado,value:item.fecha_creado//onChange={(e) => handleChangeFechaAntecedentes(e, parametro, id_campo)}\n,defaultChecked:item.checked}),\" \",item.attributes.fecha_creado]},'keyCheck'+item.fecha_creado)// <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n;});}}};var selectInteresados=function selectInteresados(parametro,id_campo){if(Array.isArray(getInteresadosLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getInteresadosLista&&getInteresadosLista.length==1){checkeoAutomaticoInteresados(parametro,id_campo);var primerApellido=getInteresadosLista[0].attributes.primer_apellido!=\"\"?getInteresadosLista[0].attributes.primer_apellido:\"\";var segundoApellido=getInteresadosLista[0].attributes.segundo_apellido!=\"\"?getInteresadosLista[0].attributes.segundo_apellido:\"\";var primerNombre=getInteresadosLista[0].attributes.primer_nombre!=\"\"?getInteresadosLista[0].attributes.primer_nombre:\"\";var segundoNombre=getInteresadosLista[0].attributes.segundo_nombre!=\"\"?getInteresadosLista[0].attributes.segundo_nombre:\"\";var sujetoProcesalNombre=getInteresadosLista[0].attributes.sujeto_procesal_nombre!=\"\"?getInteresadosLista[0].attributes.sujeto_procesal_nombre:\"\";var nombreCompleto=sujetoProcesalNombre+\" \"+primerApellido+\" \"+segundoApellido+\" \"+primerNombre+\" \"+segundoNombre;var nombre=nombreCompleto;// var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getInteresadosLista[0].id,name:'check'+getInteresadosLista[0].id,value:getInteresadosLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",nombre]},'keyCheck'+getInteresadosLista[0].id);}else if(getInteresadosLista.length>1){return getInteresadosLista.map(function(item,i){var primerApellido=item.attributes.primer_apellido!=null?item.attributes.primer_apellido:\"\";var segundoApellido=item.attributes.segundo_apellido!=null?item.attributes.segundo_apellido:\"\";var primerNombre=item.attributes.primer_nombre!=null?item.attributes.primer_nombre:\"\";var segundoNombre=item.attributes.segundo_nombre!=null?item.attributes.segundo_nombre:\"\";var sujetoProcesalNombre=item.attributes.sujeto_procesal_nombre!=\"\"?item.attributes.sujeto_procesal_nombre:\"\";var nombreCompleto=sujetoProcesalNombre+\" \"+primerApellido+\" \"+segundoApellido+\" \"+primerNombre+\" \"+segundoNombre;var nombre=nombreCompleto;// var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+nombre,name:'check'+nombre,value:item.id,onChange:function onChange(e){return handleChangeInteresados(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",nombre]},'keyCheck'+nombre)// <option key={nombre} value={nombre}>{nombre}</option>\n;});}}};var selectInvestigados=function selectInvestigados(parametro,id_campo){if(Array.isArray(getEntidadesInvestigadoLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getEntidadesInvestigadoLista&&getEntidadesInvestigadoLista.length==1){checkeoAutomaticoInvestigadosNombre(parametro,id_campo);var nombre=\"\".concat(getEntidadesInvestigadoLista[0].attributes.nombre_investigado);if(nombre==\"null\"){nombre=\"NO_APLICA\";}return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getEntidadesInvestigadoLista[0].id,name:'check'+getEntidadesInvestigadoLista[0].id,value:getEntidadesInvestigadoLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",nombre]},'keyCheck'+getEntidadesInvestigadoLista[0].id);}else if(getEntidadesInvestigadoLista.length>1){return getEntidadesInvestigadoLista.map(function(item,i){var value=\"\".concat(item.attributes.nombre_investigado);var nombre=\"\".concat(item.attributes.nombre_investigado);if(nombre!=\"null\"){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:nombre,name:nombre,value:nombre,onChange:function onChange(e){return handleChangeInvestigados(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",nombre]},nombre)//<option key={value} value={value}>{nombre}</option>\n;}});}}};var selectCargosInvestigados=function selectCargosInvestigados(parametro,id_campo){if(Array.isArray(getCargosInvestigadoLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getCargosInvestigadoLista&&getCargosInvestigadoLista.length==1){checkeoAutomaticoInvestigadosCargo(parametro,id_campo);var nombre=\"\".concat(getCargosInvestigadoLista[0].attributes.cargo);if(nombre==\"null\"){nombre=\"NO_APLICA\";}return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getCargosInvestigadoLista[0].id,name:'check'+getCargosInvestigadoLista[0].id,value:getCargosInvestigadoLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",nombre]},'keyCheck'+getCargosInvestigadoLista[0].id);}else if(getCargosInvestigadoLista.length>1){return getCargosInvestigadoLista.map(function(item,i){var value=\"\".concat(item.attributes.cargo);var nombre=\"\".concat(item.attributes.cargo);if(nombre!=\"null\"){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:nombre,name:nombre,value:nombre,onChange:function onChange(e){return handleChangeCargosInvestigados(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",nombre]},nombre)// <option key={value} value={value}>{nombre}</option>\n;}});}}};var selectEntidadesInvestigados=function selectEntidadesInvestigados(parametro,id_campo){if(Array.isArray(getEntidadInvestigadoLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getEntidadInvestigadoLista&&getEntidadInvestigadoLista.length==1){checkeoAutomaticoInvestigadosEntidad(parametro,id_campo);var nombre=\"\".concat(getEntidadInvestigadoLista[0].attributes.nombre_entidad);if(nombre==\"null\"){nombre=\"NO_APLICA\";}return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getEntidadInvestigadoLista[0].id,name:'check'+getEntidadInvestigadoLista[0].id,value:getEntidadInvestigadoLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",nombre]},'keyCheck'+getEntidadInvestigadoLista[0].id);}else if(getEntidadInvestigadoLista.length>1){return getEntidadInvestigadoLista.map(function(item,i){var value=\"\".concat(item.attributes.nombre_entidad);var nombre=\"\".concat(item.attributes.nombre_entidad);if(nombre!=\"null\"){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:nombre,name:nombre,value:nombre,onChange:function onChange(e){return handleChangeEntidadesInvestigados(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",nombre]},nombre)//<option key={value} value={value}>{nombre}</option>\n;}});}}};var cargarValoresDeParametro=function cargarValoresDeParametro(parametro){var arrayOtherElements=[\"Dependencia Origen\",\"Delegada\",\"Radicado\",\"Radicación\",\"Auto\"];var campoParametro=getListaCamposPorParametroTemporal.data.filter(function(item){return item.parametro==parametro;});var tempCampo=campoParametro[0];if(tempCampo!=undefined&&getListaParametrosBaseDatos[tempCampo.id_campo]!=undefined){var itemCampo=getListaParametrosBaseDatos[tempCampo.id_campo];// Tiene un valor por defecto\nif(itemCampo.value!=null){var newParamsItem=getListaCamposPorParametroTemporal.data.map(function(item){if(item.parametro==parametro){item.id_campo=tempCampo.id_campo;var itemCampoId=getListaParametrosBaseDatos[tempCampo.id_campo];item.valor=itemCampoId.value!=null?itemCampoId.value:\"\";item.valorTemporal=itemCampoId.value!=null?itemCampoId.value:\"\";}return item;});var validarElemento=document.getElementById('id'+itemCampo.title);if(validarElemento&&!validarElemento.hasAttribute(\"disabled\")){validarElemento.setAttribute(\"disabled\",\"true\");}// setListaCamposPorParametro({ data: newParams });\nreturn/*#__PURE__*/_jsx(_Fragment,{children:itemCampo.value});}else if(itemCampo.title==\"Fecha Hechos\"){var validarElemento=document.getElementById('id'+tempCampo.parametro);if(validarElemento&&!validarElemento.hasAttribute(\"disabled\")){validarElemento.setAttribute(\"disabled\",\"true\");}return/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:selectFechaAntecedentes(parametro,tempCampo.id_campo)});}else if(itemCampo.type==\"Antecedentes\"){var validarElemento=document.getElementById('id'+tempCampo.parametro);if(validarElemento&&!validarElemento.hasAttribute(\"disabled\")){validarElemento.setAttribute(\"disabled\",\"true\");}return/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:selectAntecedentes(parametro,tempCampo.id_campo)});}else if(itemCampo.type==\"Interesados\"){var validarElemento=document.getElementById('id'+tempCampo.parametro);if(getInteresadosLista[0]&&getInteresadosLista.length==1&&validarElemento&&!validarElemento.hasAttribute(\"disabled\")){validarElemento.setAttribute(\"disabled\",\"true\");}return/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:selectInteresados(parametro,tempCampo.id_campo)});}else if(itemCampo.type==\"Investigado\"){var validarElemento=document.getElementById('id'+tempCampo.parametro);if(getEntidadesInvestigadoLista[0]&&getEntidadInvestigadoLista.length==1&&validarElemento&&!validarElemento.hasAttribute(\"disabled\")){validarElemento.setAttribute(\"disabled\",\"true\");}return/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:selectInvestigados(parametro,tempCampo.id_campo)});}else if(itemCampo.type==\"Cargo\"){var validarElemento=document.getElementById('id'+tempCampo.parametro);if(getCargosInvestigadoLista[0]&&getCargosInvestigadoLista.length==1&&validarElemento&&!validarElemento.hasAttribute(\"disabled\")){validarElemento.setAttribute(\"disabled\",\"true\");}return/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:selectCargosInvestigados(parametro,tempCampo.id_campo)});}else if(itemCampo.type==\"Entidad\"){var validarElemento=document.getElementById('id'+tempCampo.parametro);if(getEntidadInvestigadoLista[0]&&getEntidadInvestigadoLista.length==1&&validarElemento&&!validarElemento.hasAttribute(\"disabled\")){validarElemento.setAttribute(\"disabled\",\"true\");}return/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:selectEntidadesInvestigados(parametro,tempCampo.id_campo)});}else{return/*#__PURE__*/_jsx(\"label\",{children:\"Seleccione un campo\"});}}return/*#__PURE__*/_jsx(_Fragment,{});};var selectChangeListaCampos=function selectChangeListaCampos(parametro,id_campo,value){var newParams=getListaCamposPorParametroTemporal.data.map(function(item){if(item.parametro==parametro){item.id_campo=id_campo;var itemCampo=getListaParametrosBaseDatos[id_campo];item.valor=itemCampo.value!=null?itemCampo.value:value;item.valorTemporal=itemCampo.value!=null?itemCampo.value:value;}return item;});//setListaCamposPorParametroDefinitiva({ data: newParams });\n};// Metodo encargado de generar las columnas de los parametros de la plantilla\nvar columnsParametros=[{name:'PARAMETROS DE LA PLANTILLA',cell:function cell(parametro){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"strong\",{children:parametro.toUpperCase()})});},sortable:true,width:\"15%\"},{name:'CAMPO',cell:function cell(parametro){return/*#__PURE__*/_jsxs(\"select\",{className:\"form-control\",id:\"id\".concat(parametro),name:\"name\".concat(parametro),onChange:function onChange(e){return selectChangeListaCampos(parametro,e.target.value,\"\");},disabled:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Por favor seleccione\"}),selectCampos(parametro)]});},sortable:false,width:\"25%\"},{name:'VALOR SELECCIONADO',width:\"50%\",cell:function cell(parametro){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:cargarValoresDeParametro(parametro)})});}}// {\n//     name: 'Activar/Inactivar',\n//     width: \"10%\",\n//     cell: parametro =>\n//         <div className='row'>\n//             <div className='col'>\n//                 {cargarCheckParametro(parametro)}\n//             </div>\n//         </div>\n// }\n];// Metodo encargado de generar las columnas de los parametros de la plantilla\nvar columnsCampos=[{name:'CAMPO',cell:function cell(campo){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"strong\",{children:campo.nombreCampo?campo.nombreCampo:\"\"})});},sortable:true,width:\"15%\"},{name:'TIPO',cell:function cell(campo){return/*#__PURE__*/_jsx(\"select\",{className:\"form-control\",id:\"idCampo\".concat(campo.nombreCampo),name:\"name\".concat(campo.nombreCampo),disabled:true,children:/*#__PURE__*/_jsxs(\"option\",{value:validarTipoCampo(campo.tipoCampo),selected:true,children:[\" \",validarTipoCampo(campo.tipoCampo),\" \"]})});},sortable:false,width:\"25%\"},{name:'ITEMS',width:\"50%\",cell:function cell(campo){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:cargarValoresCampos(campo)})});}}];// Metodo encargado de setear el valor al mismo input\nvar changeTextInput=function changeTextInput(e,arrayDatos){// Se setea temporalmente\nvar elementoHtml=document.getElementById(e.target.name);var nombreElemento=e.target.name;// Se captura el valor escrito\nvar valor=e.target.value;// El elemento existe\nif(elementoHtml){// Se setea el nuevo valor\nelementoHtml.title=valor;// Se asigna el item dentro del array para enviarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;// Se valida que la key sea igual al elemento modificado\nif(key==nombreElemento){// Se añade el item\ne.items=[valor];}});}// Se setea en el from cada que vez que finaliza la acción\nfrom.getCamposAdicionales=getCamposAdicionales;};// Metodo encargado de cambiar el valor de la fecha\nvar changeDateInput=function changeDateInput(e){// Se formatea\nvar newDate=moment(e.target.value).format('DD/MM/YYYY');// Se captura el nombre del elemento\nvar nombreElemento=e.target.name;// Se setea los valores\nsetValue(newDate);// Se asigna el item dentro del array para enviarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;// Se valida que la key sea igual al elemento modificado\nif(key==nombreElemento){// Se añade el item\ne.items=[newDate];}});// Se setea en el from cada que vez que finaliza la acción\nfrom.getCamposAdicionales=getCamposAdicionales;};// Metodo encargado de cambiar el valor del input\nvar changeCheckInput=function changeCheckInput(e,value){// Se captura el elemento html\nvar nombreElemento=value;// Se captura el elemento del check true o false\nvar checkeado=e.target.checked;// Se captura el valor chequeado html\nvar valorCheck=e.target.value;// Se valida cuando esta chequeado\nif(checkeado==true){// Se asigna el item dentro del array para enviarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;// Se valida que la key sea igual al elemento modificado\nif(key==nombreElemento){// Se valida la primera vez\nif(!e.itemsSeleccionado){// Se añade el item\ne.itemsSeleccionado=[valorCheck];}else{// Se añade el item al array\ne.itemsSeleccionado.push(valorCheck);}}});}else if(checkeado==false){// Se asigna el item dentro del array para quitarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;var items=e.itemsSeleccionado?e.itemsSeleccionado:[];// Continua el proceso para quitarlo del array\nif(items.length>0&&key==nombreElemento){// Se busca la posicion del elemento\nvar index=items.indexOf(valorCheck);// Se quita el elemento\nitems.splice(index,1);}});}// Se setea en el from cada que vez que finaliza la acción\nfrom.getCamposAdicionales=getCamposAdicionales;};// Metodo encargado de cargar los valores de los campos\nvar cargarValoresCampos=function cargarValoresCampos(campo){// Se inicializa la variable de campos\nvar campoParametro=campo;// Se capturan la informacion del campo\nvar tipoCampo=campoParametro.tipoCampo;var nombreCampo=campoParametro.nombreCampo;var itemCampo=tipoCampo==2?campoParametro.items:\"\";// Se valida cuando el tipo campo es un listado\nif(tipoCampo==2){// Se retorna el mapeo\nreturn(// Se recorre el elemento\nitemCampo.map(function(item,i){// Se retorna el HTML\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12 mt-1 ml-2 mb-1\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:item,name:item,value:item,onChange:function onChange(e){return changeCheckInput(e,nombreCampo);},defaultChecked:item.checked}),\" \",item]},item);}));}else if(tipoCampo==1){// Se retorna el html del tipo fecha \nreturn/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mt-2 mb-2\",children:/*#__PURE__*/_jsx(\"input\",{type:\"date\",className:\"form-control\",id:nombreCampo,name:nombreCampo,onChange:changeDateInput,max:getMaxDate})});}else if(tipoCampo==0){// Se retorna el html del tipo texto\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mt-2 mb-2\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:nombreCampo,name:nombreCampo,placeholder:nombreCampo,onChange:function onChange(e){return changeTextInput(e,campo);}})});}};// Metodo encargado de retorna los items separados\nvar validarItems=function validarItems(item){// Se valida que exista y tenga un elemento\nif(item&&item.length==0){// Se retorna el primer elemento\nreturn item;}else if(item&&item.length>0){// Se retorna por comas\nreturn item.join(\", \");}};// Metodo encargado de validar el tipo del campo\nvar validarTipoCampo=function validarTipoCampo(tipo){// Se inicializa la variable\nvar nombreRetornado;// Se valida el tipo\nif(tipo==0){// Se redeclara la variable\nnombreRetornado=\"Texto\";}else if(tipo==1){// Se redeclara la variable\nnombreRetornado=\"Fecha\";}else if(tipo==2){// Se redeclara la variable\nnombreRetornado=\"Lista\";}// Se retorna el valor\nreturn nombreRetornado;};// Metodo encargado de cargar los parametros de la base de datos\nvar cargarParametros=function cargarParametros(listaParametrosBaseDatos){// Se setean los valores en null y vacios para que no salga el limitante de las hooks\nsetListaParametros(null);setAntecedentesLista({data:[]});setInteresadosLista({data:[]});setEntidadesInvestigadoLista({data:[]});setCargosInvestigadoLista({data:[]});setEntidadInvestigadoLista({data:[]});setListaCamposPorParametroTemporal({data:[]});setListaParametros({data:[]});// Se inicializa el array\nvar data={\"data\":{\"type\":'mas_actuaciones',\"attributes\":{\"id\":props.id_mas_actuacion}}};// Se inicializa la API\nGenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/'+props.id_mas_actuacion,data).then(// Se inicializa la variable de respuesta\nfunction(datos){validacionSpinner();// Se valida que no haya error\nif(!datos.error){// Se setean los valores a la lista general de parametros\nsetListaParametros(datos);// Se recorre los parametros generales de la plantilla\nvar parametrosCampos=datos.params.map(function(item,i){// Se busca el parametro con el de la base de datos\nvar indexCampo=listaParametrosBaseDatos.findIndex(// Se inicializa la variable\nfunction(x){return(// Se valida que el parametro de la base de datos sea igual al parametro de la plantilla\nx.title==item);});// Se valida que haya encontrado un valor para asignarle el id\nif(indexCampo>=0){// Se retorna el array\nreturn{parametro:item,id_campo:indexCampo,valor:\"\"};}else{// Se retorna el array\nreturn{parametro:item,id_campo:\"\",valor:\"\"};}});// Parametros de los campos e items\nvar parametrosItems=datos.campos&&datos.campos.map(function(item,i){// Se captura el tipo de campo\nvar tipoCampo=item.tipoCampo;// Se valida cuando es tipo lista\nif(tipoCampo==2){// Se setea la lista\nreturn{item:true,parametro:item.nombreCampo,id_campo:item.nombreCampo+i,valor:item.items};}else{// Se setea la lista\nreturn{item:true,parametro:item.nombreCampo,id_campo:item.nombreCampo+i,valor:\"\"};}});// Se setean los valores de las listas\nsetListaCamposPorParametroTemporal({data:parametrosCampos});setListaCamposPorCamposTemporal({data:parametrosItems});// Se cargan los antecedentes, interesados y entidades del investigado\ncargarEntidadesInvestigado();cargarAntecedentes();cargarInteresados();}});// Se inicializa la API\nGenericApi.getGeneric('mas_actuaciones/'+props.id_mas_actuacion).then(// Se inicializa la variable de respuesta\nfunction(datos){validacionSpinner();// Se valida que no haya error\nif(!datos.error){// Se valida que hayan campos adicionales\nif(datos.data.attributes.campos.length>0){// Se setean los valores a la lista\nsetCamposAdicionales(datos.data.attributes.campos);// Se setean los campos en el from\nfrom.campos=datos.data.attributes.campos;}else if(from.campos){// Se setean los campos en el from\ndelete from.campos;}}});// Se quita el cargando\nwindow.showSpinner(false);};var cargarAntecedentes=function cargarAntecedentes(){var data={\"data\":{\"type\":'antecedente',\"attributes\":{\"antecedentes\":\"antecedentes\",\"descripcion\":\"descripcion\",\"id_proceso_disciplinario\":procesoDisciplinarioId,\"fecha_registro\":Date.now(),\"id_dependencia\":-1,\"estado\":\"1\",'per_page':100,'current_page':1}}};GenericApi.getByDataGeneric('antecedentes/get-antecedentes/'+procesoDisciplinarioId,data).then(function(datos){validacionSpinner();if(!datos.error){var parametrosCampos=datos.data.map(function(item){item.checked=false;return item;});setAntecedentesLista(parametrosCampos);}});};var cargarInteresados=function cargarInteresados(){var data={\"data\":{\"type\":\"interesado\",\"attributes\":{\"id_proceso_disciplinario\":procesoDisciplinarioId,\"tipo_documento\":\"1\",\"numero_documento\":\"1\",\"primer_nombre\":\"1\",\"segundo_nombre\":\"1\",\"primer_apellido\":\"1\",\"segundo_apellido\":\"1\",\"estado\":\"1\",'per_page':100,'current_page':1}}};GenericApi.getByDataGeneric('datos-interesado/datos-interesado/'+procesoDisciplinarioId,data).then(function(datos){validacionSpinner();if(!datos.error){var parametrosCampos=datos.data.map(function(item){item.checked=false;return item;});setInteresadosLista(parametrosCampos);}else{setModalState({title:\"Datos del interesado\",message:datos.error.toString(),show:true,redirect:null,from:{from:from}});}});};var cargarEntidadesInvestigado=function cargarEntidadesInvestigado(){var data={\"data\":{\"type\":\"entidad_investigado\",\"attributes\":{\"id_proceso_disciplinario\":procesoDisciplinarioId,\"id_etapa\":\"1\",\"requiere_registro\":true,\"estado\":\"1\",'per_page':100,'current_page':1}}};GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\"+procesoDisciplinarioId,data).then(function(datos){validacionSpinner();if(!datos.error){var parametrosCampos=datos.data.map(function(item){var nombreInvestigado=item.attributes.nombre_investigado;var cargoInvestigado=item.attributes.cargo;var entidadInvestigado=item.attributes.nombre_entidad;if(nombreInvestigado==null){item.attributes.nombre_investigado=\"NO_APLICA\";}if(cargoInvestigado==null){item.attributes.cargo=\"NO_APLICA\";}if(entidadInvestigado==null){item.attributes.nombre_entidad=\"NO_APLICA\";}item.checked=false;return item;});setEntidadesInvestigadoLista(parametrosCampos);setCargosInvestigadoLista(parametrosCampos);setEntidadInvestigadoLista(parametrosCampos);}else{setModalState({title:\"Entidades del investigado\",message:datos.error.toString(),show:true,redirect:null,from:{from:from}});}});};var descargarArchivo=function descargarArchivo(){try{window.showSpinner(true);var params=getListaCamposPorParametroTemporal.data.map(function(item){return{\"param\":item.parametro,\"value\":item.valor};});var data={\"data\":{\"type\":\"mas_actuaciones\",\"attributes\":{\"params\":params}}};GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/'+props.id_mas_actuacion,data).then(function(datos){if(!datos.error){downloadBase64File(datos.content_type,datos.base_64,datos.file_name,global.Constants.TIPO_DOCUMENTO_PERMITIDO_ACTUACIONES.DOCX);window.showSpinner(false);}else{setModalState({title:\"SINPROC No \"+radicado+\" :: \",message:datos.error.toString(),show:true,redirect:null,from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});}catch(error){console.error(error);}};function downloadBase64File(contentType,base64Data,fileName,extension){var linkSource=\"data:\".concat(contentType,\";base64,\").concat(base64Data);var downloadLink=document.createElement(\"a\");downloadLink.href=linkSource;downloadLink.download=fileName;downloadLink.click();}var cargarCheckParametro=function cargarCheckParametro(parametro){return/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+parametro+'1',name:'check'+parametro+'1',value:parametro+'1',onChange:function onChange(e){return handleChangeStatus(e,parametro);}})},'keyCheck'+parametro+'1');};var handleChangeStatus=function handleChangeStatus(e,parametro){// Se captura el elemento enviado por parametros\nvar itemFilter=getListaCamposPorParametroTemporal.data.filter(function(x){return x.parametro==parametro;});// Se valida si esta checkeado\nif(e.target.checked){// Se devuelve el valor a vacio\nvar newParams=getListaCamposPorParametroTemporal.data.map(function(item){// Se valida que el item recorrido sea igual al parametro checkeado\nif(item.parametro==parametro){// Se captura el id del campo\nitem.id_campo=itemFilter[0].id_campo;var itemCampo=getListaParametrosBaseDatos[itemFilter[0].id_campo];// Se redefine el valor del item a vacio\nitem.valor=\"\";item.valorTemporal=itemCampo.value!=null?itemCampo.value:itemFilter[0].value;}// Se retorna el item\nreturn item;});}else{// Se devuelve el valor a vacio\nvar newParams=getListaCamposPorParametroTemporal.data.map(function(item){// Se valida que el item recorrido sea igual al parametro checkeado\nif(item.parametro==parametro){// Se captura el id del campo\nitem.id_campo=itemFilter[0].id_campo;var itemCampo=getListaParametrosBaseDatos[itemFilter[0].id_campo];// Se redefine el valor del item a su valor original\nitem.valor=item.valorTemporal;item.valorTemporal=itemCampo.value!=null?itemCampo.value:itemFilter[0].value;}// Se retorna el item\nreturn item;});}};var validacionSpinner=function validacionSpinner(){numeroLlamados++;if(numeroLlamados>=numeroTotalLlamados){setIsLoading(false);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(ModalGen,{data:modalState}),getIsLoading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-primary\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"CARGANDO...\"})})}):/*#__PURE__*/_jsx(_Fragment,{children:getListaParametros!=null?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(\"label\",{children:\"PAR\\xC1METROS DE LA PLANTILLA\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-2 mb-2\",children:/*#__PURE__*/_jsx(DataTable,{className:\"table table-bordered table-striped table-vcenter js-dataTable-full\",columns:columnsParametros,data:getListaParametros.params,noDataComponent:global.Constants.DATA_TABLE.SIN_DATOS_TABLE,striped:true})}),getCamposAdicionales&&getCamposAdicionales.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",style:{marginTop:'50px'},children:/*#__PURE__*/_jsx(\"label\",{children:\"CAMPOS ADICIONALES\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-2 mb-2\",children:/*#__PURE__*/_jsx(DataTable,{className:\"table table-bordered table-striped table-vcenter js-dataTable-full\",columns:columnsCampos,data:getCamposAdicionales,noDataComponent:global.Constants.DATA_TABLE.SIN_DATOS_TABLE,striped:true})})]}):null,/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12 mt-4 mb-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"mr-2\",htmlFor:\"documento_ruta\",children:\"DESCARGAR DOCUMENTO PRE-DILIGENCIADO CON LOS VALORES SELECCIONADOS\"}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",title:\"Descargar documento diligenciado\",onClick:function onClick(){return descargarArchivo();},className:\"btn btn-rounded btn-primary\",children:[\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-file-word\"})]})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-4\",children:/*#__PURE__*/_jsx(\"label\",{children:\"CARGANDO PAR\\xC1METROS DE LA PLANTILLA...\"})})})]});}export default ActuacionParametrosPlantillaForm;","map":{"version":3,"names":["React","useEffect","useState","useLocation","DataTable","GenericApi","ParametrosMasApi","Spinner","ModalGen","getUser","DatePicker","registerLocale","moment","ActuacionParametrosPlantillaForm","props","location","from","state","radicado","procesoDisciplinarioId","id_etapa","idEtapa","fechaRegistro","fechaIngreso","dependencia","nombre_dependencia","nombre","registradoPor","vigencia","generadoPor","nombre_completo","title","message","show","modalState","setModalState","params","getListaParametros","setListaParametros","data","getListaCamposPorParametroTemporal","setListaCamposPorParametroTemporal","getListaCamposPorCamposTemporal","setListaCamposPorCamposTemporal","links","meta","getAntecedentesLista","setAntecedentesLista","getInteresadosLista","setInteresadosLista","getEntidadesInvestigadoLista","setEntidadesInvestigadoLista","getCargosInvestigadoLista","setCargosInvestigadoLista","getEntidadInvestigadoLista","setEntidadInvestigadoLista","getParametrosCampos","setParametrosCampos","getListaParametrosBaseDatos","setListaParametrosBaseDatos","getCamposAdicionales","setCamposAdicionales","getMaxDate","setMaxDate","format","value","setValue","getIsLoading","setIsLoading","numeroLlamados","numeroTotalLlamados","Date","toISOString","split","fetchData","cargarTablaParametrosActuaciones","id_mas_actuacion","array","getGeneric","then","datos","validacionSpinner","error","index","length","element","attributes","nombre_campo","estado","type","validarValueParametros","push","check","cargarParametros","valor","selectCampos","parametro","map","item","i","itemFilter","filter","x","undefined","id_campo","handleChangeInteresados","e","target","checked","valorId","id","val","p","primerApellido","primer_apellido","segundoApellido","segundo_apellido","primerNombre","primer_nombre","segundoNombre","segundo_nombre","sujetoProcesalNombre","sujeto_procesal_nombre","nombreCompleto","selectChangeListaCampos","toString","checkeoAutomaticoInteresados","checkeoAutomaticoAntecedentes","descripcion","checkeoAutomaticoInvestigadosNombre","nombre_investigado","checkeoAutomaticoInvestigadosCargo","cargo","checkeoAutomaticoInvestigadosEntidad","nombre_entidad","checkeoAutomaticoFechaAntecedentes","fecha_creado","handleChangeAntecedentes","handleChangeFechaAntecedentes","handleChangeInvestigados","handleChangeCargosInvestigados","handleChangeEntidadesInvestigados","selectAntecedentes","Array","isArray","selectFechaAntecedentes","selectInteresados","selectInvestigados","selectCargosInvestigados","selectEntidadesInvestigados","cargarValoresDeParametro","arrayOtherElements","campoParametro","tempCampo","itemCampo","newParamsItem","itemCampoId","valorTemporal","validarElemento","document","getElementById","hasAttribute","setAttribute","newParams","columnsParametros","name","cell","toUpperCase","sortable","width","columnsCampos","campo","nombreCampo","validarTipoCampo","tipoCampo","cargarValoresCampos","changeTextInput","arrayDatos","elementoHtml","nombreElemento","forEach","key","items","changeDateInput","newDate","changeCheckInput","checkeado","valorCheck","itemsSeleccionado","indexOf","splice","validarItems","join","tipo","nombreRetornado","listaParametrosBaseDatos","getByDataGeneric","parametrosCampos","indexCampo","findIndex","parametrosItems","campos","cargarEntidadesInvestigado","cargarAntecedentes","cargarInteresados","window","showSpinner","now","redirect","nombreInvestigado","cargoInvestigado","entidadInvestigado","descargarArchivo","downloadBase64File","content_type","base_64","file_name","global","Constants","TIPO_DOCUMENTO_PERMITIDO_ACTUACIONES","DOCX","alert","TIPO_ALERTA","ERROR","console","contentType","base64Data","fileName","extension","linkSource","downloadLink","createElement","href","download","click","cargarCheckParametro","handleChangeStatus","DATA_TABLE","SIN_DATOS_TABLE","marginTop"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Herramientas/ActuacionParametrosPlantillaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport ParametrosMasApi from \"../../Api/Services/ParametrosMasApi\";\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport '../../Utils/Constants';\r\nimport { getUser } from '../../Utils/Common';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport moment from 'moment';\r\n\r\nfunction ActuacionParametrosPlantillaForm(props) {\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let id_etapa = from.idEtapa;\r\n    const fechaRegistro = from.fechaRegistro;\r\n    const fechaIngreso = from.fechaIngreso;\r\n    const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\r\n    const registradoPor = from.registradoPor;\r\n    const vigencia = from.vigencia;\r\n    const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaParametros, setListaParametros] = useState({ params: [] });\r\n    const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({ data: [] });\r\n    const [getListaCamposPorCamposTemporal, setListaCamposPorCamposTemporal] = useState({ data: [] });\r\n    //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getInteresadosLista, setInteresadosLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getParametrosCampos, setParametrosCampos] = useState();\r\n    const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({ data: [] });\r\n\r\n    const [getCamposAdicionales, setCamposAdicionales] = useState([]);\r\n    const [getMaxDate, setMaxDate] = useState();\r\n    const [value, setValue] = useState(moment().format('YYYY-MM-DD'));\r\n    const [getIsLoading, setIsLoading] = useState(true);\r\n\r\n    let numeroLlamados = 0;\r\n    let numeroTotalLlamados = 6;\r\n\r\n    // Metodo encargado de cargar la informacion general del formulario\r\n    useEffect(() => {\r\n\r\n        // Se setea el maximo de fecha\r\n        setMaxDate(new Date().toISOString().split(\"T\")[0]);\r\n\r\n        // Se inicializa la funcion asyncrona\r\n        async function fetchData() {\r\n\r\n            // Metodo encargado de cargar los parametros de la plantilla\r\n            cargarTablaParametrosActuaciones();\r\n        }\r\n\r\n        // Se llama el metodo\r\n        fetchData();\r\n    }, [props.id_mas_actuacion]);\r\n\r\n    // Metodo encargado de cargar los parametros generales de la plantilla de la BD\r\n    const cargarTablaParametrosActuaciones = () => {\r\n\r\n        // Se inicializa el array\r\n        var array = [];\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('parametro-campos').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                validacionSpinner()\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se recorre el array para insertar los valores necesarios\r\n                    for (let index = 0; index < datos.data.length; index++) {\r\n\r\n                        // Se captura los datos por posicion\r\n                        const element = datos.data[index].attributes;\r\n                        const title = element.nombre_campo;\r\n                        const estado = element.estado == \"1\" ? true : false;\r\n                        const type = element.type;\r\n                        const value = validarValueParametros(type, estado);\r\n\r\n                        // Se añade el dato al array general\r\n                        array.push({ title: title, value: value, type: type, check: estado });\r\n                    }\r\n\r\n                    // Se setea la respuesta en la constante\r\n                    setListaParametrosBaseDatos(array);\r\n\r\n                    // Se generan la lista de parametros del documento\r\n                    cargarParametros(array);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de retorna el valor por el elemento\r\n    const validarValueParametros = (element, estado) => {\r\n\r\n        // Se inicializa la variable\r\n        let valor;\r\n\r\n        // Se valida por el elemento\r\n        if ((element == \"Sinproc\" || element == \"Número de radicado\"\r\n            || element == \"Radicación\" || element == \"Radicado\") && estado) {\r\n            valor = radicado;\r\n        } else if (element == \"Usuario\" && estado) {\r\n            valor = registradoPor;\r\n        } else if ((element == \"Dependencia Origen\" || element == \"Dependencia\") && estado) {\r\n            valor = dependencia;\r\n        } else if (element == \"Vigencia\" && estado) {\r\n            valor = vigencia;\r\n        } else if (element == \"Fecha de Registro\" && estado) {\r\n            valor = fechaRegistro;\r\n        } else if (element == \"Fecha de Ingreso\" && estado) {\r\n            valor = fechaIngreso;\r\n        } else if (element == \"Generado\" && estado) {\r\n            valor = generadoPor;\r\n        } else if ((element == \"Número de auto (generado despues de aprobación)\" || element == \"Auto\") && estado) {\r\n            valor = \"${numero_de_auto}\";\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return valor;\r\n    }\r\n\r\n    const selectCampos = (parametro) => {\r\n        return (\r\n            getListaParametrosBaseDatos.map((item, i) => {\r\n\r\n                var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n                if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\r\n                    return (\r\n                        <option selected key={i} value={i}>{item.title}</option>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <option key={i} value={i}>{item.title}</option>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleChangeInteresados = (e, parametro, id_campo) => {\r\n\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getInteresadosLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setInteresadosLista(valorId);\r\n        let val = getInteresadosLista.map((p) => {\r\n            if (p.checked == true) {\r\n\r\n                var primerApellido = p.attributes.primer_apellido != null ? p.attributes.primer_apellido : \"\";\r\n                var segundoApellido = p.attributes.segundo_apellido != null ? p.attributes.segundo_apellido : \"\";\r\n                var primerNombre = p.attributes.primer_nombre != null ? p.attributes.primer_nombre : \"\";\r\n                var segundoNombre = p.attributes.segundo_nombre != null ? p.attributes.segundo_nombre : \"\";\r\n                var sujetoProcesalNombre = p.attributes.sujeto_procesal_nombre != \"\" ? p.attributes.sujeto_procesal_nombre : \"\";\r\n                var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n                var nombre = nombreCompleto;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n    }\r\n\r\n    function checkeoAutomaticoInteresados(parametro, id_campo) {\r\n        setInteresadosLista(getInteresadosLista);\r\n\r\n        var primerApellido = getInteresadosLista[0].attributes.primer_apellido != null ? getInteresadosLista[0].attributes.primer_apellido : \"\";\r\n        var segundoApellido = getInteresadosLista[0].attributes.segundo_apellido != null ? getInteresadosLista[0].attributes.segundo_apellido : \"\";\r\n        var primerNombre = getInteresadosLista[0].attributes.primer_nombre != null ? getInteresadosLista[0].attributes.primer_nombre : \"\";\r\n        var segundoNombre = getInteresadosLista[0].attributes.segundo_nombre != null ? getInteresadosLista[0].attributes.segundo_nombre : \"\";\r\n        var sujetoProcesalNombre = getInteresadosLista[0].attributes.sujeto_procesal_nombre != null ? getInteresadosLista[0].attributes.sujeto_procesal_nombre : \"\";\r\n        var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n        var nombre = nombreCompleto;\r\n\r\n        // var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\r\n        setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\r\n        var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\r\n        setCargosInvestigadoLista(getCargosInvestigadoLista);\r\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\r\n        setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\r\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoFechaAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.fecha_creado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    const handleChangeAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.descripcion}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeFechaAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.fecha_creado}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadesInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_investigado) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setEntidadesInvestigadoLista(valorId);\r\n        let val = getEntidadesInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_investigado}`;\r\n                var nombre = `${p.attributes.nombre_investigado}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getCargosInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.cargo) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getCargosInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.cargo}`;\r\n                var nombre = `${p.attributes.cargo}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_entidad) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getEntidadInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_entidad}`;\r\n                var nombre = `${p.attributes.nombre_entidad}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const selectAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].id}\r\n                            name={'check' + getAntecedentesLista[0].id}\r\n                            value={getAntecedentesLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.descripcion}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.id}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.id}\r\n                                    name={'check' + item.id}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.descripcion}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectFechaAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoFechaAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].attributes.fecha_creado} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].attributes.fecha_creado}\r\n                            name={'check' + getAntecedentesLista[0].attributes.fecha_creado}\r\n                            value={getAntecedentesLista[0].attributes.fecha_creado}\r\n                            onChange={(e) => handleChangeFechaAntecedentes(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.fecha_creado}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.fecha_creado}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.fecha_creado}\r\n                                    name={'check' + item.fecha_creado}\r\n                                    value={item.fecha_creado}\r\n                                    //onChange={(e) => handleChangeFechaAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.fecha_creado}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInteresados = (parametro, id_campo) => {\r\n        if (Array.isArray(getInteresadosLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getInteresadosLista && getInteresadosLista.length == 1) {\r\n                checkeoAutomaticoInteresados(parametro, id_campo);\r\n\r\n                var primerApellido = getInteresadosLista[0].attributes.primer_apellido != \"\" ? getInteresadosLista[0].attributes.primer_apellido : \"\";\r\n                var segundoApellido = getInteresadosLista[0].attributes.segundo_apellido != \"\" ? getInteresadosLista[0].attributes.segundo_apellido : \"\";\r\n                var primerNombre = getInteresadosLista[0].attributes.primer_nombre != \"\" ? getInteresadosLista[0].attributes.primer_nombre : \"\";\r\n                var segundoNombre = getInteresadosLista[0].attributes.segundo_nombre != \"\" ? getInteresadosLista[0].attributes.segundo_nombre : \"\";\r\n                var sujetoProcesalNombre = getInteresadosLista[0].attributes.sujeto_procesal_nombre != \"\" ? getInteresadosLista[0].attributes.sujeto_procesal_nombre : \"\";\r\n                var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n                var nombre = nombreCompleto;\r\n\r\n                // var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getInteresadosLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getInteresadosLista[0].id}\r\n                            name={'check' + getInteresadosLista[0].id}\r\n                            value={getInteresadosLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getInteresadosLista.length > 1) {\r\n                return (\r\n                    getInteresadosLista.map((item, i) => {\r\n\r\n                        var primerApellido = item.attributes.primer_apellido != null ? item.attributes.primer_apellido : \"\";\r\n                        var segundoApellido = item.attributes.segundo_apellido != null ? item.attributes.segundo_apellido : \"\";\r\n                        var primerNombre = item.attributes.primer_nombre != null ? item.attributes.primer_nombre : \"\";\r\n                        var segundoNombre = item.attributes.segundo_nombre != null ? item.attributes.segundo_nombre : \"\";\r\n                        var sujetoProcesalNombre = item.attributes.sujeto_procesal_nombre != \"\" ? item.attributes.sujeto_procesal_nombre : \"\";\r\n                        var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n                        var nombre = nombreCompleto;\r\n\r\n                        // var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + nombre}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + nombre}\r\n                                    name={'check' + nombre}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeInteresados(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {nombre}\r\n                            </div>\r\n                            // <option key={nombre} value={nombre}>{nombre}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadesInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\r\n                let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadesInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            value={getEntidadesInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadesInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadesInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_investigado}`;\r\n                        var nombre = `${item.attributes.nombre_investigado}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectCargosInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getCargosInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\r\n                var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getCargosInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getCargosInvestigadoLista[0].id}\r\n                            name={'check' + getCargosInvestigadoLista[0].id}\r\n                            value={getCargosInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getCargosInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getCargosInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.cargo}`;\r\n                        var nombre = `${item.attributes.cargo}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeCargosInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                // <option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectEntidadesInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\r\n                var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadInvestigadoLista[0].id}\r\n                            value={getEntidadInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_entidad}`;\r\n                        var nombre = `${item.attributes.nombre_entidad}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeEntidadesInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const cargarValoresDeParametro = (parametro) => {\r\n\r\n        const arrayOtherElements = [\r\n            \"Dependencia Origen\",\r\n            \"Delegada\",\r\n            \"Radicado\",\r\n            \"Radicación\",\r\n            \"Auto\"\r\n        ];\r\n\r\n        var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\r\n            return item.parametro == parametro;\r\n        });\r\n\r\n        var tempCampo = campoParametro[0];\r\n\r\n        if (tempCampo != undefined && getListaParametrosBaseDatos[tempCampo.id_campo] != undefined) {\r\n            var itemCampo = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n\r\n            // Tiene un valor por defecto\r\n            if (itemCampo.value != null) {\r\n\r\n                var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\r\n                    if (item.parametro == parametro) {\r\n                        item.id_campo = tempCampo.id_campo;\r\n                        var itemCampoId = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n                        item.valor = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                        item.valorTemporal = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                var validarElemento = document.getElementById('id' + itemCampo.title);\r\n\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                // setListaCamposPorParametro({ data: newParams });\r\n\r\n                return (\r\n                    <>{itemCampo.value}</>\r\n                )\r\n            } else if (itemCampo.title == \"Fecha Hechos\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectFechaAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Antecedentes\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Interesados\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getInteresadosLista[0] && getInteresadosLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectInteresados(parametro, tempCampo.id_campo)}\r\n                        {/* {handleChangeInteresados(0, parametro, tempCampo.id_campo)} */}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Investigado\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getEntidadesInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Cargo\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getCargosInvestigadoLista[0] && getCargosInvestigadoLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectCargosInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Entidad\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getEntidadInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectEntidadesInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <label>Seleccione un campo</label>\r\n                )\r\n            }\r\n        }\r\n        return (<></>)\r\n    }\r\n\r\n    const selectChangeListaCampos = (parametro, id_campo, value) => {\r\n\r\n        var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n            if (item.parametro == parametro) {\r\n                item.id_campo = id_campo;\r\n                var itemCampo = getListaParametrosBaseDatos[id_campo];\r\n\r\n                item.valor = (itemCampo.value != null) ? itemCampo.value : value;\r\n                item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : value;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        //setListaCamposPorParametroDefinitiva({ data: newParams });\r\n    }\r\n\r\n    // Metodo encargado de generar las columnas de los parametros de la plantilla\r\n    const columnsParametros = [\r\n        {\r\n            name: 'PARAMETROS DE LA PLANTILLA',\r\n            cell: parametro => <div><strong>{parametro.toUpperCase()}</strong></div>,\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            name: 'CAMPO',\r\n            cell: parametro =>\r\n                <select className=\"form-control\" id={`id${parametro}`} name={`name${parametro}`}\r\n                    onChange={e => selectChangeListaCampos(parametro, e.target.value, \"\")} disabled>\r\n                    <option value=\"\">Por favor seleccione</option>\r\n                    {selectCampos(parametro)}\r\n                </select>,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'VALOR SELECCIONADO',\r\n            width: \"50%\",\r\n            cell: parametro =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresDeParametro(parametro)}\r\n                    </div>\r\n                </div>\r\n        },\r\n        // {\r\n        //     name: 'Activar/Inactivar',\r\n        //     width: \"10%\",\r\n        //     cell: parametro =>\r\n        //         <div className='row'>\r\n        //             <div className='col'>\r\n        //                 {cargarCheckParametro(parametro)}\r\n        //             </div>\r\n        //         </div>\r\n        // }\r\n    ];\r\n\r\n    // Metodo encargado de generar las columnas de los parametros de la plantilla\r\n    const columnsCampos = [\r\n        {\r\n            name: 'CAMPO',\r\n            cell: campo =>\r\n                <div>\r\n                    <strong>{campo.nombreCampo ? campo.nombreCampo : \"\"}</strong>\r\n                </div>,\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            name: 'TIPO',\r\n            cell: campo =>\r\n                <select className=\"form-control\" id={`idCampo${campo.nombreCampo}`} name={`name${campo.nombreCampo}`} disabled>\r\n                    <option value={validarTipoCampo(campo.tipoCampo)} selected> {validarTipoCampo(campo.tipoCampo)} </option>\r\n                </select>\r\n            ,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'ITEMS',\r\n            width: \"50%\",\r\n            cell: campo =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresCampos(campo)}\r\n                    </div>\r\n                </div>\r\n        },\r\n    ];\r\n\r\n    // Metodo encargado de setear el valor al mismo input\r\n    const changeTextInput = (e, arrayDatos) => {\r\n\r\n        // Se setea temporalmente\r\n        let elementoHtml = document.getElementById(e.target.name);\r\n        let nombreElemento = e.target.name;\r\n\r\n        // Se captura el valor escrito\r\n        let valor = e.target.value;\r\n\r\n        // El elemento existe\r\n        if (elementoHtml) {\r\n\r\n            // Se setea el nuevo valor\r\n            elementoHtml.title = valor;\r\n\r\n            // Se asigna el item dentro del array para enviarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n\r\n                // Se valida que la key sea igual al elemento modificado\r\n                if (key == nombreElemento) {\r\n\r\n                    // Se añade el item\r\n                    e.items = [valor];\r\n                }\r\n            })\r\n        }\r\n\r\n        // Se setea en el from cada que vez que finaliza la acción\r\n        from.getCamposAdicionales = getCamposAdicionales;\r\n    }\r\n\r\n    // Metodo encargado de cambiar el valor de la fecha\r\n    const changeDateInput = (e) => {\r\n\r\n        // Se formatea\r\n        const newDate = moment(e.target.value).format('DD/MM/YYYY');\r\n\r\n        // Se captura el nombre del elemento\r\n        let nombreElemento = e.target.name;\r\n\r\n        // Se setea los valores\r\n        setValue(newDate);\r\n\r\n        // Se asigna el item dentro del array para enviarlo\r\n        getCamposAdicionales.forEach(e => {\r\n\r\n            // Se captura la key\r\n            let key = e.nombreCampo;\r\n\r\n            // Se valida que la key sea igual al elemento modificado\r\n            if (key == nombreElemento) {\r\n\r\n                // Se añade el item\r\n                e.items = [newDate];\r\n            }\r\n        })\r\n\r\n        // Se setea en el from cada que vez que finaliza la acción\r\n        from.getCamposAdicionales = getCamposAdicionales;\r\n    };\r\n\r\n    // Metodo encargado de cambiar el valor del input\r\n    const changeCheckInput = (e, value) => {\r\n\r\n        // Se captura el elemento html\r\n        let nombreElemento = value;\r\n\r\n        // Se captura el elemento del check true o false\r\n        let checkeado = e.target.checked;\r\n\r\n        // Se captura el valor chequeado html\r\n        let valorCheck = e.target.value;\r\n\r\n        // Se valida cuando esta chequeado\r\n        if (checkeado == true) {\r\n\r\n            // Se asigna el item dentro del array para enviarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n\r\n                // Se valida que la key sea igual al elemento modificado\r\n                if (key == nombreElemento) {\r\n\r\n                    // Se valida la primera vez\r\n                    if (!e.itemsSeleccionado) {\r\n\r\n                        // Se añade el item\r\n                        e.itemsSeleccionado = [valorCheck];\r\n                    } else {\r\n\r\n                        // Se añade el item al array\r\n                        e.itemsSeleccionado.push(valorCheck);\r\n                    }\r\n                }\r\n            })\r\n        } else if (checkeado == false) {\r\n\r\n            // Se asigna el item dentro del array para quitarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n                let items = e.itemsSeleccionado ? e.itemsSeleccionado : [];\r\n\r\n                // Continua el proceso para quitarlo del array\r\n                if (items.length > 0 && (key == nombreElemento)) {\r\n\r\n                    // Se busca la posicion del elemento\r\n                    var index = items.indexOf(valorCheck);\r\n\r\n                    // Se quita el elemento\r\n                    items.splice(index, 1);\r\n                }\r\n            })\r\n        }\r\n\r\n        // Se setea en el from cada que vez que finaliza la acción\r\n        from.getCamposAdicionales = getCamposAdicionales;\r\n    }\r\n\r\n    // Metodo encargado de cargar los valores de los campos\r\n    const cargarValoresCampos = (campo) => {\r\n\r\n        // Se inicializa la variable de campos\r\n        const campoParametro = campo;\r\n\r\n        // Se capturan la informacion del campo\r\n        const tipoCampo = campoParametro.tipoCampo;\r\n        const nombreCampo = campoParametro.nombreCampo;\r\n        const itemCampo = tipoCampo == 2 ? campoParametro.items : \"\";\r\n\r\n        // Se valida cuando el tipo campo es un listado\r\n        if (tipoCampo == 2) {\r\n\r\n            // Se retorna el mapeo\r\n            return (\r\n\r\n                // Se recorre el elemento\r\n                itemCampo.map((item, i) => {\r\n\r\n                    // Se retorna el HTML\r\n                    return (\r\n                        <div className=\"col-md-12 mt-1 ml-2 mb-1\" key={item}>\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id={item}\r\n                                name={item}\r\n                                value={item}\r\n                                onChange={(e) => changeCheckInput(e, nombreCampo)}\r\n                                defaultChecked={item.checked} /> {item}\r\n                        </div>\r\n                    )\r\n                })\r\n            )\r\n        } else if (tipoCampo == 1) {\r\n\r\n            // Se retorna el html del tipo fecha \r\n            return (\r\n                <div className=\"custom-control custom-switch custom-control-lg mt-2 mb-2\">\r\n                    <input type=\"date\"\r\n                        className=\"form-control\"\r\n                        id={nombreCampo}\r\n                        name={nombreCampo}\r\n                        onChange={changeDateInput}\r\n                        max={getMaxDate}\r\n                    />\r\n                </div>\r\n            )\r\n        } else if (tipoCampo == 0) {\r\n\r\n            // Se retorna el html del tipo texto\r\n            return (\r\n                <div className=\"custom-control custom-switch custom-control-lg mt-2 mb-2\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        id={nombreCampo}\r\n                        name={nombreCampo}\r\n                        placeholder={nombreCampo}\r\n                        onChange={e => changeTextInput(e, campo)} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de retorna los items separados\r\n    const validarItems = (item) => {\r\n\r\n        // Se valida que exista y tenga un elemento\r\n        if (item && item.length == 0) {\r\n\r\n            // Se retorna el primer elemento\r\n            return item;\r\n        } else if (item && item.length > 0) {\r\n\r\n            // Se retorna por comas\r\n            return item.join(\", \");\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de validar el tipo del campo\r\n    const validarTipoCampo = (tipo) => {\r\n\r\n        // Se inicializa la variable\r\n        let nombreRetornado;\r\n\r\n        // Se valida el tipo\r\n        if (tipo == 0) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Texto\";\r\n        } else if (tipo == 1) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Fecha\";\r\n        } else if (tipo == 2) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Lista\";\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return nombreRetornado;\r\n    }\r\n\r\n    // Metodo encargado de cargar los parametros de la base de datos\r\n    const cargarParametros = (listaParametrosBaseDatos) => {\r\n\r\n        // Se setean los valores en null y vacios para que no salga el limitante de las hooks\r\n        setListaParametros(null);\r\n        setAntecedentesLista({ data: [] });\r\n        setInteresadosLista({ data: [] });\r\n        setEntidadesInvestigadoLista({ data: [] });\r\n        setCargosInvestigadoLista({ data: [] });\r\n        setEntidadInvestigadoLista({ data: [] });\r\n        setListaCamposPorParametroTemporal({ data: [] });\r\n        setListaParametros({ data: [] });\r\n\r\n        // Se inicializa el array\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'mas_actuaciones',\r\n                \"attributes\": {\r\n                    \"id\": props.id_mas_actuacion\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + props.id_mas_actuacion, data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                validacionSpinner()\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los valores a la lista general de parametros\r\n                    setListaParametros(datos);\r\n\r\n                    // Se recorre los parametros generales de la plantilla\r\n                    var parametrosCampos = datos.params.map((item, i) => {\r\n\r\n                        // Se busca el parametro con el de la base de datos\r\n                        var indexCampo = listaParametrosBaseDatos.findIndex(\r\n\r\n                            // Se inicializa la variable\r\n                            x =>\r\n\r\n                                // Se valida que el parametro de la base de datos sea igual al parametro de la plantilla\r\n                                x.title == item\r\n                        );\r\n\r\n                        // Se valida que haya encontrado un valor para asignarle el id\r\n                        if (indexCampo >= 0) {\r\n\r\n                            // Se retorna el array\r\n                            return { parametro: item, id_campo: indexCampo, valor: \"\" };\r\n                        } else {\r\n\r\n                            // Se retorna el array\r\n                            return { parametro: item, id_campo: \"\", valor: \"\" };\r\n                        }\r\n                    });\r\n\r\n                    // Parametros de los campos e items\r\n                    var parametrosItems = datos.campos && datos.campos.map((item, i) => {\r\n\r\n                        // Se captura el tipo de campo\r\n                        let tipoCampo = item.tipoCampo;\r\n\r\n                        // Se valida cuando es tipo lista\r\n                        if (tipoCampo == 2) {\r\n\r\n                            // Se setea la lista\r\n                            return { item: true, parametro: item.nombreCampo, id_campo: item.nombreCampo + i, valor: item.items };\r\n                        } else {\r\n\r\n                            // Se setea la lista\r\n                            return { item: true, parametro: item.nombreCampo, id_campo: item.nombreCampo + i, valor: \"\" };\r\n                        }\r\n                    });\r\n\r\n                    // Se setean los valores de las listas\r\n                    setListaCamposPorParametroTemporal({ data: parametrosCampos });\r\n                    setListaCamposPorCamposTemporal({ data: parametrosItems });\r\n\r\n                    // Se cargan los antecedentes, interesados y entidades del investigado\r\n                    cargarEntidadesInvestigado();\r\n                    cargarAntecedentes();\r\n                    cargarInteresados();\r\n                }\r\n            }\r\n        )\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('mas_actuaciones/' + props.id_mas_actuacion).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n                \r\n                validacionSpinner()\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se valida que hayan campos adicionales\r\n                    if (datos.data.attributes.campos.length > 0) {\r\n\r\n                        // Se setean los valores a la lista\r\n                        setCamposAdicionales(datos.data.attributes.campos);\r\n\r\n                        // Se setean los campos en el from\r\n                        from.campos = datos.data.attributes.campos;\r\n                    } else if (from.campos) {\r\n\r\n                        // Se setean los campos en el from\r\n                        delete from.campos;\r\n                    }\r\n                }\r\n            }\r\n        )\r\n\r\n        // Se quita el cargando\r\n        window.showSpinner(false);\r\n    }\r\n\r\n    const cargarAntecedentes = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'antecedente',\r\n                \"attributes\": {\r\n                    \"antecedentes\": \"antecedentes\",\r\n                    \"descripcion\": \"descripcion\",\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"fecha_registro\": Date.now(),\r\n                    \"id_dependencia\": -1,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n        GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n\r\n                validacionSpinner()\r\n\r\n                if (!datos.error) {\r\n\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n\r\n                    setAntecedentesLista(parametrosCampos);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarInteresados = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"interesado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"tipo_documento\": \"1\",\r\n                    \"numero_documento\": \"1\",\r\n                    \"primer_nombre\": \"1\",\r\n                    \"segundo_nombre\": \"1\",\r\n                    \"primer_apellido\": \"1\",\r\n                    \"segundo_apellido\": \"1\",\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n\r\n                validacionSpinner()\r\n\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setInteresadosLista(parametrosCampos);\r\n                } else {\r\n                    setModalState({ title: \"Datos del interesado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarEntidadesInvestigado = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"entidad_investigado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": \"1\",\r\n                    \"requiere_registro\": true,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n\r\n                validacionSpinner()\r\n\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n\r\n                        var nombreInvestigado = item.attributes.nombre_investigado;\r\n                        var cargoInvestigado = item.attributes.cargo;\r\n                        var entidadInvestigado = item.attributes.nombre_entidad;\r\n\r\n                        if (nombreInvestigado == null) {\r\n                            item.attributes.nombre_investigado = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (cargoInvestigado == null) {\r\n                            item.attributes.cargo = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (entidadInvestigado == null) {\r\n                            item.attributes.nombre_entidad = \"NO_APLICA\";\r\n                        }\r\n\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setEntidadesInvestigadoLista(parametrosCampos);\r\n                    setCargosInvestigadoLista(parametrosCampos);\r\n                    setEntidadInvestigadoLista(parametrosCampos);\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Entidades del investigado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const descargarArchivo = () => {\r\n\r\n        try {\r\n            window.showSpinner(true);\r\n\r\n            var params = getListaCamposPorParametroTemporal.data.map(item => {\r\n                return {\r\n                    \"param\": item.parametro,\r\n                    \"value\": item.valor\r\n                };\r\n            });\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"mas_actuaciones\",\r\n                    \"attributes\": {\r\n                        \"params\": params,\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + props.id_mas_actuacion, data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        downloadBase64File(datos.content_type, datos.base_64, datos.file_name, global.Constants.TIPO_DOCUMENTO_PERMITIDO_ACTUACIONES.DOCX);\r\n                        window.showSpinner(false);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: \", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    function downloadBase64File(contentType, base64Data, fileName, extension) {\r\n        const linkSource = `data:${contentType};base64,${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    const cargarCheckParametro = (parametro) => {\r\n\r\n        return (\r\n            <div className=\"col-md-12\" key={'keyCheck' + parametro + '1'} >\r\n                <input type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    id={'check' + parametro + '1'}\r\n                    name={'check' + parametro + '1'}\r\n                    value={parametro + '1'}\r\n                    onChange={(e) => handleChangeStatus(e, parametro)}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n\r\n    const handleChangeStatus = (e, parametro) => {\r\n\r\n        // Se captura el elemento enviado por parametros\r\n        var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n        // Se valida si esta checkeado\r\n        if (e.target.checked) {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a vacio\r\n                    item.valor = \"\";\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n\r\n\r\n        } else {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a su valor original\r\n                    item.valor = item.valorTemporal;\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n        }\r\n    }\r\n\r\n    const validacionSpinner = () => {\r\n        numeroLlamados++\r\n        if(numeroLlamados >= numeroTotalLlamados){\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <ModalGen data={modalState} />\r\n            {\r\n                getIsLoading\r\n                ?\r\n                    <div className=\"text-center\">\r\n                        <div className=\"spinner-border text-primary\" role=\"status\">\r\n                            <span className=\"sr-only\">CARGANDO...</span>\r\n                        </div>\r\n                    </div>\r\n                :\r\n                    <>\r\n                        {\r\n                            getListaParametros != null \r\n                            ?\r\n                                <>\r\n                                    <div className='col-md-12'>\r\n                                        <label>PARÁMETROS DE LA PLANTILLA</label>\r\n                                    </div>\r\n                                    <div className='col-md-12 mt-2 mb-2'>\r\n                                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                            columns={columnsParametros}\r\n                                            data={getListaParametros.params}\r\n                                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                                            striped\r\n                                        />\r\n                                    </div>\r\n                                    {getCamposAdicionales && getCamposAdicionales.length > 0 ?\r\n                                        <>\r\n                                            <div className='col-md-12' style={{ marginTop: '50px' }}>\r\n                                                <label>CAMPOS ADICIONALES</label>\r\n                                            </div>\r\n                                            <div className='col-md-12 mt-2 mb-2'>\r\n                                                <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                                    columns={columnsCampos}\r\n                                                    data={getCamposAdicionales}\r\n                                                    noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                                                    striped\r\n                                                />\r\n                                            </div>\r\n                                        </>\r\n                                        : null\r\n                                    }\r\n                                    <div className='col-md-12 mt-4 mb-2'>\r\n                                        <label className='mr-2' htmlFor=\"documento_ruta\">DESCARGAR DOCUMENTO PRE-DILIGENCIADO CON LOS VALORES SELECCIONADOS</label>\r\n                                        <button type=\"button\" title='Descargar documento diligenciado' onClick={() => descargarArchivo()} className=\"btn btn-rounded btn-primary\"> <i className=\"fas fa-file-word\"></i></button>\r\n                                    </div>\r\n                                </>\r\n                            :\r\n                            <div className='col-md-12 mt-4'>\r\n                                <label>CARGANDO PARÁMETROS DE LA PLANTILLA...</label>\r\n                            </div>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ActuacionParametrosPlantillaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}