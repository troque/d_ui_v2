{"ast":null,"code":"import React from'react';import GenericForm from'./GenericForm';import{DepartamentoModel}from'./Models/DepartamentoModel';import{jsx as _jsx}from\"react/jsx-runtime\";export default function DepartamentoForm(){return/*#__PURE__*/_jsx(GenericForm,{formName:\"departamento\",service:\"departamento\",model:DepartamentoModel,successRedirect:\"/Departamento\"});};// import React, { useEffect, useState } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { Autoform } from 'react-hook-form-auto'\n// import { DepartamentoModel } from './Models/DepartamentoModel'\n// import styles from 'rhfa-emergency-styles'\n// import 'rhfa-emergency-styles/dist/styles.css'\n// import ApiSamples from \"./../Api/Services/SamplesApi\";\n// import Spinner from '../Utils/Spinner';\n// import ModalGen from '../Utils/Modals/ModalGeneric';\n// export default function DepartamentoForm() {\n//     const navigate = useNavigate();\n//     const { id } = useParams();\n//     const [departamentoData, setDepartamento] = useState({});\n//     const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\n//     let submitButtonText = id == undefined ? 'Crear' : 'Actualizar';\n//     let formRef;\n//     useEffect(() => {\n//         async function fetchData() {\n//             if (id != undefined) {\n//                 window.showSpinner(true);\n//                 ApiSamples.getDepartamento(id).then(\n//                     datos => {\n//                         window.showSpinner(false);\n//                         //init state values\n//                         if (!datos.error) {\n//                             Object.entries(datos.data.attributes).forEach(([key, value]) => {\n//                                 formRef.setValue(key, value);\n//                             });\n//                         }\n//                         return !datos.error ? setDepartamento(datos.data.attributes) : window.showModal();\n//                     }\n//                 )\n//             }\n//         }\n//         fetchData();\n//     }, []);\n//     const errors = (error) => {\n//         console.log('errors');\n//         console.log(error);\n//     }\n//     const submit = (data) => {\n//         window.showSpinner(true);\n//         var requestData = {\n//             \"data\": {\n//                 \"type\": \"departamento\",\n//                 \"attributes\": data,\n//             }\n//         }\n//         if (id == undefined) {\n//             ApiSamples.addDepartamento(requestData).then(\n//                 datos => {\n//                     window.showSpinner(false);\n//                     if (!datos.error)\n//                         setModalState({ title: \"Registro creado\", message: \"Registro creado con exito\", show: true, redirect:\"/Departamento\" });\n//                     else\n//                         setModalState({ title: \"Error\", message: \"Error creando el registro\", show: true });\n//                 }\n//             )\n//         }\n//         else {\n//             ApiSamples.updateDepartamento(id, requestData).then(\n//                 datos => {\n//                     window.showSpinner(false);\n//                     if (!datos.error) \n//                         setModalState({ title: \"Registro actualizado\", message: \"Registro actualizado con exito\", show: true, redirect:\"/Departamento\" });\n//                     else\n//                         setModalState({ title: \"Error\", message: \"Error actualizando el registro\", show: true });\n//                 }\n//             )\n//         }\n//     }\n//     return (<div>\n//         <Spinner />\n//         <ModalGen data={modalState} />\n//         <Autoform\n//             schema={DepartamentoModel}\n//             initialValues={departamentoData}\n//             styles={styles}\n//             submitButton={true}\n//             submitButtonText={submitButtonText}\n//             config={{ arrayMode: 'table', horizontal: true }}\n//             onSubmit={submit}\n//             onErrors={errors}\n//             ref={e => formRef = e}\n//         />\n//     </div>\n//     );\n// };","map":{"version":3,"names":["React","GenericForm","DepartamentoModel","DepartamentoForm"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/DepartamentoForm.js"],"sourcesContent":["import React from 'react';\r\nimport GenericForm from './GenericForm';\r\nimport { DepartamentoModel } from './Models/DepartamentoModel';\r\n\r\nexport default function DepartamentoForm() {\r\n\r\n    return (<GenericForm\r\n        formName='departamento'\r\n        service='departamento'\r\n        model={DepartamentoModel}\r\n        successRedirect='/Departamento'\r\n    />\r\n    );\r\n};\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import { Autoform } from 'react-hook-form-auto'\r\n// import { DepartamentoModel } from './Models/DepartamentoModel'\r\n// import styles from 'rhfa-emergency-styles'\r\n// import 'rhfa-emergency-styles/dist/styles.css'\r\n// import ApiSamples from \"./../Api/Services/SamplesApi\";\r\n// import Spinner from '../Utils/Spinner';\r\n// import ModalGen from '../Utils/Modals/ModalGeneric';\r\n\r\n\r\n// export default function DepartamentoForm() {\r\n//     const navigate = useNavigate();\r\n//     const { id } = useParams();\r\n//     const [departamentoData, setDepartamento] = useState({});\r\n//     const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n//     let submitButtonText = id == undefined ? 'Crear' : 'Actualizar';\r\n//     let formRef;\r\n\r\n//     useEffect(() => {\r\n//         async function fetchData() {\r\n//             if (id != undefined) {\r\n//                 window.showSpinner(true);\r\n//                 ApiSamples.getDepartamento(id).then(\r\n//                     datos => {\r\n//                         window.showSpinner(false);\r\n//                         //init state values\r\n//                         if (!datos.error) {\r\n//                             Object.entries(datos.data.attributes).forEach(([key, value]) => {\r\n//                                 formRef.setValue(key, value);\r\n//                             });\r\n//                         }\r\n//                         return !datos.error ? setDepartamento(datos.data.attributes) : window.showModal();\r\n//                     }\r\n//                 )\r\n//             }\r\n//         }\r\n//         fetchData();\r\n//     }, []);\r\n\r\n//     const errors = (error) => {\r\n//         console.log('errors');\r\n//         console.log(error);\r\n//     }\r\n\r\n//     const submit = (data) => {\r\n//         window.showSpinner(true);\r\n//         var requestData = {\r\n//             \"data\": {\r\n//                 \"type\": \"departamento\",\r\n//                 \"attributes\": data,\r\n//             }\r\n//         }\r\n//         if (id == undefined) {\r\n//             ApiSamples.addDepartamento(requestData).then(\r\n//                 datos => {\r\n//                     window.showSpinner(false);\r\n//                     if (!datos.error)\r\n//                         setModalState({ title: \"Registro creado\", message: \"Registro creado con exito\", show: true, redirect:\"/Departamento\" });\r\n//                     else\r\n//                         setModalState({ title: \"Error\", message: \"Error creando el registro\", show: true });\r\n//                 }\r\n//             )\r\n//         }\r\n//         else {\r\n//             ApiSamples.updateDepartamento(id, requestData).then(\r\n//                 datos => {\r\n//                     window.showSpinner(false);\r\n//                     if (!datos.error) \r\n//                         setModalState({ title: \"Registro actualizado\", message: \"Registro actualizado con exito\", show: true, redirect:\"/Departamento\" });\r\n//                     else\r\n//                         setModalState({ title: \"Error\", message: \"Error actualizando el registro\", show: true });\r\n//                 }\r\n//             )\r\n//         }\r\n//     }\r\n\r\n//     return (<div>\r\n//         <Spinner />\r\n//         <ModalGen data={modalState} />\r\n//         <Autoform\r\n//             schema={DepartamentoModel}\r\n//             initialValues={departamentoData}\r\n//             styles={styles}\r\n//             submitButton={true}\r\n//             submitButtonText={submitButtonText}\r\n//             config={{ arrayMode: 'table', horizontal: true }}\r\n//             onSubmit={submit}\r\n//             onErrors={errors}\r\n//             ref={e => formRef = e}\r\n//         />\r\n//     </div>\r\n//     );\r\n// };"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,YAAW,KAAM,eAAe,CACvC,OAASC,iBAAiB,KAAQ,4BAA4B,CAAC,2CAE/D,cAAe,SAASC,iBAAgB,EAAG,CAEvC,mBAAQ,KAAC,WAAW,EAChB,QAAQ,CAAC,cAAc,CACvB,OAAO,CAAC,cAAc,CACtB,KAAK,CAAED,iBAAkB,CACzB,eAAe,CAAC,eAAe,EACjC,CAEN,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}