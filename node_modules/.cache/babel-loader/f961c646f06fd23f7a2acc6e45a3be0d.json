{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\";\nimport AuthApi from '../Api/Services/AuthApi';\nimport InfoErrorApi from '../Utils/InfoErrorApi';\nimport InfoExitoApi from '../Utils/InfoExitoApi';\nimport Spinner from '../Utils/Spinner';\nimport { getToken, getUser, removeUserSession, setUserSession } from '../../components/Utils/Common';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState(\"ForsecurityDiscUno\");\n  const [password, setPassword] = useState(\"jNL6mR4BDpT\");\n  const [error, setError] = useState(null);\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setError(null);\n    setLoading(true);\n    AuthApi.login(email, password).then(datos => {\n      if (!datos.error) {\n        setUserSession(datos.token, datos.user.attributes);\n        navigate(\"/\");\n      } else {\n        setError(\"Usuario/contraseña invalidos\");\n        setEmail('');\n        setPassword('');\n      }\n\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Usuario o Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"text\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 76\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 86\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        disabled: !validateForm(),\n        children: \"Ingresar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"BnTcLHUDWZeIMlZRdIkCIPWciYM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/Login/Login.js"],"names":["React","useState","Form","Button","AuthApi","InfoErrorApi","InfoExitoApi","Spinner","getToken","getUser","removeUserSession","setUserSession","useNavigate","Login","navigate","loading","setLoading","email","setEmail","password","setPassword","error","setError","validateForm","length","handleSubmit","event","preventDefault","login","then","datos","token","user","attributes","e","target","value","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,iBAA5B,EAA+CC,cAA/C,QAAqE,+BAArE;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,oBAAD,CAAlC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,aAAD,CAAxC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,WAASsB,YAAT,GAAwB;AACpB,WAAON,KAAK,CAACO,MAAN,GAAe,CAAf,IAAoBL,QAAQ,CAACK,MAAT,GAAkB,CAA7C;AACH;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,IAAAA,OAAO,CAACwB,KAAR,CAAcX,KAAd,EAAqBE,QAArB,EAA+BU,IAA/B,CAAoCC,KAAK,IAAI;AACzC,UAAI,CAACA,KAAK,CAACT,KAAX,EAAkB;AACdV,QAAAA,cAAc,CAACmB,KAAK,CAACC,KAAP,EAAcD,KAAK,CAACE,IAAN,CAAWC,UAAzB,CAAd;AACAnB,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,OAHD,MAIK;AACDQ,QAAAA,QAAQ,CAAC,8BAAD,CAAR;AACAJ,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,QAAAA,WAAW,CAAC,EAAD,CAAX;AACH;;AACDJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAXD;AAYH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAES,YAAhB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,IAAI,EAAC,IAAjB;AAAsB,QAAA,SAAS,EAAC,OAAhC;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,SAAS,MADb;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,KAAK,EAAER,KAHX;AAII,UAAA,QAAQ,EAAGiB,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,IAAI,EAAC,IAAjB;AAAsB,QAAA,SAAS,EAAC,UAAhC;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,KAAK,EAAEjB,QAFX;AAGI,UAAA,QAAQ,EAAGe,CAAD,IAAOd,WAAW,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAHhC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,EAkBKf,KAAK,iBAAI;AAAA,gCAAE;AAAO,UAAA,KAAK,EAAE;AAAEgB,YAAAA,KAAK,EAAE;AAAT,WAAd;AAAA,oBAAiChB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAAF,eAAiD;AAAA;AAAA;AAAA;AAAA,gBAAjD;AAAA,sBAlBd,eAkByE;AAAA;AAAA;AAAA;AAAA,cAlBzE,eAmBI,QAAC,MAAD;AAAQ,QAAA,KAAK,MAAb;AAAc,QAAA,IAAI,EAAC,IAAnB;AAAwB,QAAA,IAAI,EAAC,QAA7B;AAAsC,QAAA,QAAQ,EAAE,CAACE,YAAY,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GAzDuBV,K;UACHD,W;;;KADGC,K","sourcesContent":["import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Login.css\";\r\nimport AuthApi from '../Api/Services/AuthApi';\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport InfoExitoApi from '../Utils/InfoExitoApi';\r\nimport Spinner from '../Utils/Spinner';\r\nimport { getToken, getUser, removeUserSession, setUserSession } from '../../components/Utils/Common';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState(false);\r\n    const [email, setEmail] = useState(\"ForsecurityDiscUno\");\r\n    const [password, setPassword] = useState(\"jNL6mR4BDpT\");\r\n    const [error, setError] = useState(null);\r\n\r\n    function validateForm() {\r\n        return email.length > 0 && password.length > 0;\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        setError(null);\r\n        setLoading(true);\r\n        AuthApi.login(email, password).then(datos => {\r\n            if (!datos.error) {\r\n                setUserSession(datos.token, datos.user.attributes);\r\n                navigate(\"/\");\r\n            }\r\n            else {\r\n                setError(\"Usuario/contraseña invalidos\");\r\n                setEmail('');\r\n                setPassword('');\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <Spinner />\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group size=\"lg\" controlId=\"email\">\r\n                    <Form.Label>Usuario o Email</Form.Label>\r\n                    <Form.Control\r\n                        autoFocus\r\n                        type=\"text\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"password\">\r\n                    <Form.Label>Contraseña</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                {error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\r\n                <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n                    Ingresar\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}