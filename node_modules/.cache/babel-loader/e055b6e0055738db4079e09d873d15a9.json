{"ast":null,"code":"import _toConsumableArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import'rhfa-emergency-styles/dist/styles.css';import Spinner from'../Utils/Spinner';import{ErrorMessage,Field,Form,Formik}from'formik';import{useParams}from\"react-router\";import{Link}from\"react-router-dom\";import InfoErrorApi from'../Utils/InfoErrorApi';import InfoExitoApi from'../Utils/InfoExitoApi';import GenericApi from'../Api/Services/GenericApi';import ModalGen from'../Utils/Modals/ModalGeneric';import{Navigate}from\"react-router-dom\";import'../Utils/Constants';import Select from'react-select';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function UsuarioDetalle(){// Variables de la clase\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),getNombre=_useState2[0],setNombre=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),getApellido=_useState4[0],setApeliido=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),getUser=_useState6[0],setUser=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),getEmail=_useState8[0],setEmail=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),getIdDependencia=_useState10[0],setIdDependencia=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),getEstado=_useState12[0],setEstado=_useState12[1];var _useState13=useState({data:{}}),_useState14=_slicedToArray(_useState13,2),listaTipoDerechoPeticion=_useState14[0],setListaDerechoPeticion=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),respuestaTipoDerechoPeticion=_useState16[0],setRespuestaDerechoPeticion=_useState16[1];var _useState17=useState({data:{}}),_useState18=_slicedToArray(_useState17,2),listaTipoProcesoDisciplinario=_useState18[0],setListaProcesoDisciplinario=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),respuestaProcesoDisciplinario=_useState20[0],setRespuestaProcesoDisciplinario=_useState20[1];var _useState21=useState({data:{}}),_useState22=_slicedToArray(_useState21,2),listaTiposQueja=_useState22[0],setListaTiposQueja=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),respuestaTiposQueja=_useState24[0],setRespuestaTiposQueja=_useState24[1];var _useState25=useState({data:{}}),_useState26=_slicedToArray(_useState25,2),listaTerminosRespuesta=_useState26[0],setListaTerminosRespuesta=_useState26[1];var _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),respuestaTerminosRespuesta=_useState28[0],setRespuestaTerminosRespuesta=_useState28[1];var _useState29=useState({data:{}}),_useState30=_slicedToArray(_useState29,2),listaDependenciaOrigen=_useState30[0],setListaDependenciaOrigen=_useState30[1];var _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),respuestaDependenciaOrigen=_useState32[0],setDependenciaOrigen=_useState32[1];var _useState33=useState({data:{}}),_useState34=_slicedToArray(_useState33,2),getListaRoles=_useState34[0],setListaRoles=_useState34[1];var _useState35=useState(false),_useState36=_slicedToArray(_useState35,2),getRespuestaTipoExpediente=_useState36[0],setRespuestaTipoExpediente=_useState36[1];var _useState37=useState({data:{}}),_useState38=_slicedToArray(_useState37,2),getTiposExpedientes=_useState38[0],setTiposExpedientes=_useState38[1];var _useState39=useState(false),_useState40=_slicedToArray(_useState39,2),getRespuestaRoles=_useState40[0],setRespuestaRoles=_useState40[1];var _useState41=useState([]),_useState42=_slicedToArray(_useState41,2),rolesAsociados=_useState42[0],setRolesAsociados=_useState42[1];var _useState43=useState([]),_useState44=_slicedToArray(_useState43,2),tipoExpAsociados=_useState44[0],setTipoExpAsociados=_useState44[1];var _useState45=useState(''),_useState46=_slicedToArray(_useState45,2),getReparto=_useState46[0],setReparto=_useState46[1];var _useState47=useState(''),_useState48=_slicedToArray(_useState47,2),getIdGrupoTrabajo=_useState48[0],setIdGrupoTrabajo=_useState48[1];var _useState49=useState(''),_useState50=_slicedToArray(_useState49,2),getIdDependenciaSecretariaComun=_useState50[0],setIdDependenciaSecretariaComun=_useState50[1];var _useState51=useState(false),_useState52=_slicedToArray(_useState51,2),respuestaGrupoTrabajo=_useState52[0],setRespuestaGrupoTrabajo=_useState52[1];var _useState53=useState({data:{}}),_useState54=_slicedToArray(_useState53,2),listaGruposTrabajo=_useState54[0],setListaGruposTrabajo=_useState54[1];var _useState55=useState({title:\"\",message:\"\",show:false}),_useState56=_slicedToArray(_useState55,2),getModalState=_useState56[0],setModalState=_useState56[1];var _useState57=useState([]),_useState58=_slicedToArray(_useState57,2),getListaGruposSeleccionadas=_useState58[0],setListaGruposSeleccionadas=_useState58[1];var _useState59=useState(\"\"),_useState60=_slicedToArray(_useState59,2),getErrorGrupos=_useState60[0],setErrorGrupos=_useState60[1];// Se captura el id del usuario\nvar _useParams=useParams(),id=_useParams.id;// Metodo encargado de cargar o consumir los servicios\nuseEffect(function(){// Se inicializa el cargando\nwindow.showSpinner(true);// Se cargan los metodos\nfunction fetchData(){return _fetchData.apply(this,arguments);}// Se usa la funcion\nfunction _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Se cargan las dependencias\ngetAllDependenciaOrigen();case 1:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[]);// Metodo encargado de cargar las dependencias\nvar getAllDependenciaOrigen=function getAllDependenciaOrigen(){// Se consume la API\nGenericApi.getByIdGeneric('mas-dependencia-filtrado',global.Constants.ACCESO_DEPENDENCIA.MODIFICAR_USUARIO).then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){setListaDependenciaOrigen(datos);// Se setean los datos\nsetDependenciaOrigen(true);// Se setea la variable en true                    \ngetUserById();// Se llama el metodo para cargar los usuarios\n}else{// Se setea el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/',alert:global.Constants.TIPO_ALERTA.ERROR});}});};// Metodo encargado de cargar los datos del usuario con el id\nvar getUserById=function getUserById(){// Se consume la API\nGenericApi.getByIdGeneric('usuario',id).then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se valida que haya data\nif(datos[\"data\"]!=\"\"){// Se setean los valores\nsetNombre(datos[\"data\"][\"attributes\"][\"nombre\"]);setApeliido(datos[\"data\"][\"attributes\"][\"apellido\"]);setEmail(datos[\"data\"][\"attributes\"][\"email\"]);setUser(datos[\"data\"][\"attributes\"][\"name\"]);setIdDependencia(datos[\"data\"][\"attributes\"][\"id_dependencia\"]);setEstado(datos[\"data\"][\"attributes\"][\"estado\"]);setReparto(datos[\"data\"][\"attributes\"][\"reparto_habilitado\"]);// Se valida que haya el id del secretaria comun\nif(datos[\"data\"][\"attributes\"][\"id_mas_grupo_trabajo_secretaria_comun\"]!=null){// Se setea el id del grupo\nvalidarGruposSeleccionados(datos[\"data\"][\"attributes\"][\"id_mas_grupo_trabajo_secretaria_comun\"]);}// Se valida que haya el id de los roles\nif(datos[\"data\"][\"attributes\"][\"ids_roles\"]){// Se setea el id de los roles\ndatos[\"data\"][\"attributes\"][\"ids_roles\"].split(',').map(function(rol,i){// Se setea cada id\nsetRolesAsociados(function(oldArray){return[].concat(_toConsumableArray(oldArray),[rol]);});});}// Se valida que haya el id de los tipo de expediente\nif(datos[\"data\"][\"attributes\"][\"ids_tipo_expediente\"]){// Se setea el id de los tipo de expediente\ndatos[\"data\"][\"attributes\"][\"ids_tipo_expediente\"].map(function(rol,i){// Se setea cada id\nsetTipoExpAsociados(function(oldArray){return[].concat(_toConsumableArray(oldArray),[rol]);});});}// Se cargan los roles\ngetllRoles();}else{// Se setea el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/',alert:global.Constants.TIPO_ALERTA.ERROR});// Se quita el cargando\nwindow.showSpinner(false);}}else{// Se setea el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/',alert:global.Constants.TIPO_ALERTA.ERROR});// Se quita el cargando\nwindow.showSpinner(false);}});};// Metodo encargado de cargar los roles\nvar getllRoles=function getllRoles(){// Se consume la API\nGenericApi.getAllGeneric('role').then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se setean los datos\nsetListaRoles(datos);// Se setea la variable en true\nsetRespuestaRoles(true);// Se cargan los tipos de expediente\ncargarTiposExpedientes();}else{// Se setea el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/',alert:global.Constants.TIPO_ALERTA.ERROR});// Se quita el cargando\nwindow.showSpinner(false);}});};// Metodo encargado de cargar los tipos de expediente\nvar cargarTiposExpedientes=function cargarTiposExpedientes(){// Se consume la API\nGenericApi.getAllGeneric('mas-tipo-expediente').then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se setean los datos\nsetTiposExpedientes(datos);// Se setea la variable en true\nsetRespuestaTipoExpediente(true);// Se cargan los tipos de derecho peticion\ncargarTiposDerechoPeticion();}else{// Se setea el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/',alert:global.Constants.TIPO_ALERTA.ERROR});// Se quita el cargando\nwindow.showSpinner(false);}});};// Metodo encargado de cargar los tipos de derecho peticion \nvar cargarTiposDerechoPeticion=function cargarTiposDerechoPeticion(){// Se consume la API\nGenericApi.getAllGeneric('mas-tipo-derecho-peticion').then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se setean los datos\nsetListaDerechoPeticion(datos);// Se setea la variable en true\nsetRespuestaDerechoPeticion(true);// Se cargan los tipos de queja\ncargarTiposQueja();}else{// Se setea el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/',alert:global.Constants.TIPO_ALERTA.ERROR});// Se quita el cargando\nwindow.showSpinner(false);}});};// Metodo encargado de cargar los tipos de queja\nvar cargarTiposQueja=function cargarTiposQueja(){// Se consume la API\nGenericApi.getAllGeneric('mas-tipo-queja').then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){setListaTiposQueja(datos);// Se setean los datos\nsetRespuestaTiposQueja(true);// Se setea la variable en true\nsetListaProcesoDisciplinario(datos);// Se setea la variable en true                    \nsetRespuestaProcesoDisciplinario(true);cargarTerminoRespuesta();// Se cargan los terminos de respuesta\n}else{// Se setea el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/',alert:global.Constants.TIPO_ALERTA.ERROR});// Se quita el cargando\nwindow.showSpinner(false);}});};// Metodo encargado de cargar los terminos de respuesta\nvar cargarTerminoRespuesta=function cargarTerminoRespuesta(){// Se consume la API\nGenericApi.getAllGeneric('mas-termino-respuesta').then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se setean los datos\nsetListaTerminosRespuesta(datos);// Se setea la variable en true\nsetRespuestaTerminosRespuesta(true);// Se cargan los tipos de proceso disciplinario\ncargarIdDependenciaSecretariaComun();}else{// Se setea el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/',alert:global.Constants.TIPO_ALERTA.ERROR});// Se quita el cargando\nwindow.showSpinner(false);}});};// Metodo encargado de cargar el id de la dependecia de secretaria comun\nvar cargarIdDependenciaSecretariaComun=function cargarIdDependenciaSecretariaComun(){// Se inicializa la data\nvar data={\"data\":{\"type\":'mas_parametro',\"attributes\":{\"nombre\":\"id_dependencia_secretaria_comun\"}}};// Buscamos el parametro\nGenericApi.getByDataGeneric(\"parametro/parametro-nombre\",data).then(// Se inicializa el valor de la API\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se setea el ID de la dependencia secretaria comun\nsetIdDependenciaSecretariaComun(datos.data[0].attributes.valor);// Se consumen los grupos de trabajo\ncargarGruposDeTrabajo();}else{// Se setea el mensaje\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/',alert:global.Constants.TIPO_ALERTA.ERROR});// Se quita el cargando\nwindow.showSpinner(false);}});};// Metodo encargado de consumir los grupos de trabajo\nvar cargarGruposDeTrabajo=function cargarGruposDeTrabajo(){// Se consume le API\nGenericApi.getGeneric(\"mas_grupo_trabajo\").then(// Se inicializa la variable de la api\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se setea la respuesta en true\nsetRespuestaGrupoTrabajo(true);// Se setean los datos\nsetListaGruposTrabajo(datos);}else{// Se setean los mensajes\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/',alert:global.Constants.TIPO_ALERTA.ERROR});// Se quita el cargando\nwindow.showSpinner(false);}// Se quita el cargando\nwindow.showSpinner(false);});};// Metodo encargado de setear el valor de la lista de grupo seleccionados\nvar selectChangeGrupo=function selectChangeGrupo(v){// Se valida que no sea null\nif(v!=null){// Se setea el valor\nsetListaGruposSeleccionadas(v);}else{// Se setea el mensaje de error\nsetErrorGrupos('Campo requerido');}};// Metodo secundaria para cargar los grupos de trabajo\nvar selectGrupoTrabajo=function selectGrupoTrabajo(){// Se retorna la informacion del select\nreturn(// Se valida que tenga informacion\nlistaGruposTrabajo.data.length>0&&listaGruposTrabajo.data.map(function(grupoTrabajo,i){// Se retorna cada option value\nreturn/*#__PURE__*/_jsx(\"option\",{value:grupoTrabajo.id,children:grupoTrabajo.attributes.nombre},grupoTrabajo.id);}));};// Metodo encargado de setear cada valor del check\nvar handleInputChange=function handleInputChange(event){// Se inicializan las constantes\nvar target=event.target;var value=target.type==='checkbox'?target.checked:target.value;var name=target.name;// Se valida que sea nombre el check\nif(name==\"nombre\"){// Se setea el valor\nsetNombre(value);}// Se valida que sea apellido el check\nif(name==\"apellido\"){// Se setea el valor\nsetApeliido(value);}// Se valida que sea correo el check\nif(name==\"correo\"){// Se setea el valor\nsetEmail(value);}// Se valida que sea dependencia el check\nif(name==\"dependencia\"){// Se valida que el valor sea diferente de secretaria comun\nif(value!=getIdDependenciaSecretariaComun){// Se setea la lista vacia\nsetListaGruposSeleccionadas([]);}// Se setea el id con el valor\nsetIdDependencia(value);}// Se valida que sea estado el check\nif(name==\"estado\"){// Se setea el valor\nsetEstado(value);}// Se valida que sea reparto el check\nif(name==\"reparto\"){// Se setea el valor\nsetReparto(value);}// Se valida que sea grupoTrabajo el check\nif(name==\"grupoTrabajo\"){// Se setea el valor\nsetIdGrupoTrabajo(value);}};// Metodo encargado de cargar cada valor del select de las dependencias\nvar selectDependenciaOrigen=function selectDependenciaOrigen(){// Se retorna\nreturn(// Se recorren la lista\nlistaDependenciaOrigen.data.map(function(dependencia,i){// Se retorna cada select \nreturn/*#__PURE__*/_jsx(\"option\",{value:dependencia.id,children:dependencia.attributes.nombre},dependencia.id);}));};// Metodo encargado de cargar cada valor del select de los grupos seleccionados\nvar validarGruposSeleccionados=function validarGruposSeleccionados(grupos){// Se separan por comas en la variable\nvar auxGrupoSplit=grupos.split(\",\");// Se recorren la lista\nauxGrupoSplit.forEach(function(element){// Se consume la api por elemento\nGenericApi.getByIdGeneric(\"mas_grupo_trabajo\",element).then(// Se incializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se añade al array de los grupos seleccionados\ngetListaGruposSeleccionadas.push({label:datos.data.attributes.nombre,value:datos.data.id});}});});};// Metodo encargado de enviar los valores el backend\nvar enviarDatos=function enviarDatos(){// Se usa el cargando\nwindow.showSpinner(true);// Se inicializa la variable\nvar data;// Se setean los valores en el array\ndata={\"data\":{\"type\":\"usuario\",\"attributes\":{\"nombre\":getNombre?getNombre:\"\",\"apellido\":getApellido?getApellido:\"\",\"name\":getUser?getUser:\"\",\"email\":getEmail?getEmail:\"\",\"id_dependencia\":getIdDependencia?getIdDependencia:\"\",\"roles\":rolesAsociados,\"expedientes\":tipoExpAsociados,\"estado\":getEstado?getEstado:\"\",\"reparto_habilitado\":getReparto?getReparto:\"\",\"id_mas_grupo_trabajo_secretaria_comun\":getListaGruposSeleccionadas?getListaGruposSeleccionadas:\"\"}}};// Se ejecuta la API\nGenericApi.updateGeneric('usuario',id,data).then(// Se inicializa la variable de respuesta\nfunction(datos){// Se quita el cargando\nwindow.showSpinner(false);// Se valida que no haya error\nif(!datos.error){// Se setean los valores en el modal\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:global.Constants.MENSAJES_MODAL.EXITOSO,show:true,redirect:'/Usuario',alert:global.Constants.TIPO_ALERTA.EXITO});}else{// Se setean los valores en el modal\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,alert:global.Constants.TIPO_ALERTA.ERROR});}});};// Metodo encargado para checkear los valores por rol\nvar agregarCheck=function agregarCheck(e,rolId){// Se valida el valor en true\nif(e==true){// Se setean los valores\nsetRolesAsociados(function(oldArray){return[].concat(_toConsumableArray(oldArray),[rolId]);});}else{// Se inicializa la variable\nvar index=rolesAsociados.indexOf(rolId);// Se valida que sea diferente de null o vacio\nif(index!=-1){// Se quita el check\nrolesAsociados.splice(index,1);}}};// Metodo encargado de checkear el valor de los tipos de expediente\nvar agregarCheckTipoExp=function agregarCheckTipoExp(e,extId,subExpid){// Se valida que sea true\nif(e==true){// Se setea el valor\nsetTipoExpAsociados(function(oldArray){return[].concat(_toConsumableArray(oldArray),[extId+\"|\"+subExpid]);});}else{// Se busca el indice\nvar index=tipoExpAsociados.indexOf(extId+\"|\"+subExpid);// se valida se encuentre valor\nif(index!=-1){// Se quita el valor del array\ntipoExpAsociados.splice(index,1);}}};// Metodo encargado de listar cada rol\nvar listarRoles=function listarRoles(){// Se retorna\nreturn(// Se recorre la lista de roles\ngetListaRoles.data.map(function(rol,i){// Se retorna por posicion\nreturn/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:/*#__PURE__*/_jsx(_Fragment,{children:rolesAsociados.length>0?rolesAsociados.indexOf(rol.id.toString())>-1?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{defaultChecked:\"true\",type:\"checkbox\",onChange:function onChange(e){return agregarCheck(e.target.checked,rol.id);},className:\"custom-control-input\",id:rol.id,name:rol.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:rol.id})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(e){return agregarCheck(e.target.checked,rol.id);},className:\"custom-control-input\",id:rol.id,name:rol.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:rol.id})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onClick:function onClick(e){return agregarCheck(e.target.checked,rol.id);},className:\"custom-control-input\",id:rol.id,name:rol.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:rol.id})]})})})}),/*#__PURE__*/_jsx(\"td\",{children:rol.attributes.nombre.toUpperCase()})]},rol.id+1);}));};// TIPO DE EXPEDIENTE = DERECHO DE PETICION\nvar componenteTipoExpedienteDerecho=function componenteTipoExpedienteDerecho(){// Se retorna\nreturn(// Se recorre la lista de derechos de peticion\nlistaTipoDerechoPeticion.data.map(function(derecho,i){// Se retorna por posicion\nreturn/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:/*#__PURE__*/_jsx(_Fragment,{children:tipoExpAsociados.indexOf(('1|'+derecho.id).toString())>-1?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{defaultChecked:true,type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'1',derecho.id);},className:\"custom-control-input\",id:'derecho'+derecho.id,name:'derecho'+derecho.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'derecho'+derecho.id})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'1',derecho.id);},className:\"custom-control-input\",id:'derecho'+derecho.id,name:'derecho'+derecho.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'derecho'+derecho.id})]})})})}),/*#__PURE__*/_jsx(\"td\",{children:derecho.attributes.nombre})]},derecho.id+1);}));};// Metodo encargado de cargar los tipos de expediente asociados\nvar listarTiposExpedientesAsociados=function listarTiposExpedientesAsociados(){// Se retorna\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:// Se recorre el array\ngetTiposExpedientes.data.map(function(tipoExp,i){// Se retorna por posicion\nreturn/*#__PURE__*/_jsx(\"div\",{id:\"accordion\",role:\"tablist\",\"aria-multiselectable\":\"true\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"block block-rounded mb-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header block-header-default\",role:\"tab\",id:\"accordion_h1\",children:/*#__PURE__*/_jsxs(\"a\",{className:\"font-w600\",\"data-toggle\":\"collapse\",\"data-parent\":\"#accordion\",href:\"#accordion_q1\",\"aria-expanded\":\"true\",\"aria-controls\":\"accordion_q1\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-folder\"}),\" \",tipoExp.attributes.nombre,\" \"]})}),/*#__PURE__*/_jsx(\"div\",{id:\"accordion_q1\",className:\"show\",role:\"tabpanel\",\"aria-labelledby\":\"accordion_h1\",\"data-parent\":\"#accordion\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"block-content\",children:[tipoExp.id==='1'&&respuestaTipoDerechoPeticion?componenteTipoExpedienteDerecho():'',tipoExp.id==='2'&&respuestaTiposQueja?componenteTipoExpedienteReferente():'',tipoExp.id==='3'&&respuestaTiposQueja?componenteTipoExpedienteQueja():'',tipoExp.id==='4'&&respuestaTerminosRespuesta?componenteTipoExpedienteTutela():'',tipoExp.id==='5'&&respuestaProcesoDisciplinario?componenteTipoExpedienteProcesoDisciplinario():'']})})]})},tipoExp.id);})})});};// TIPO DE EXPEDIENTE = REFERENTE\nvar componenteTipoExpedienteReferente=function componenteTipoExpedienteReferente(){// Se retorna\nreturn(// Se recorre el array\nlistaTiposQueja.data.map(function(quejaDef,i){// Se retorna por posicion\nreturn/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:/*#__PURE__*/_jsx(_Fragment,{children:tipoExpAsociados.indexOf(('2|'+quejaDef.id).toString())>-1?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{defaultChecked:true,type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'2',quejaDef.id);},className:\"custom-control-input\",id:'quejaDef'+quejaDef.id,name:'quejaDef'+quejaDef.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'quejaDef'+quejaDef.id})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'2',quejaDef.id);},className:\"custom-control-input\",id:'quejaDef'+quejaDef.id,name:'quejaDef'+quejaDef.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'quejaDef'+quejaDef.id})]})})})}),/*#__PURE__*/_jsx(\"td\",{children:quejaDef.attributes.nombre})]},quejaDef.id+1);}));};// TIPO DE EXPEDIENTE = QUEJA\nvar componenteTipoExpedienteQueja=function componenteTipoExpedienteQueja(){// Se retorna\nreturn(// Se recorre el array\nlistaTiposQueja.data.map(function(queja,i){// Se retorna por posicion\nreturn/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:/*#__PURE__*/_jsx(_Fragment,{children:tipoExpAsociados.indexOf(('3|'+queja.id).toString())>-1?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{defaultChecked:true,type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'3',queja.id);},className:\"custom-control-input\",id:'queja'+queja.id,name:'queja'+queja.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'queja'+queja.id})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'3',queja.id);},className:\"custom-control-input\",id:'queja'+queja.id,name:'queja'+queja.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'queja'+queja.id})]})})})}),/*#__PURE__*/_jsx(\"td\",{children:queja.attributes.nombre})]},queja.id+1);}));};// TIPO DE EXPEDIENTE = TUTELA\nvar componenteTipoExpedienteTutela=function componenteTipoExpedienteTutela(){// Se retorna\nreturn(// Se recorre el array\nlistaTerminosRespuesta.data.map(function(termino,i){// Se retorna por posicion\nreturn/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:/*#__PURE__*/_jsx(_Fragment,{children:tipoExpAsociados.indexOf(('4|'+termino.id).toString())>-1?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{defaultChecked:true,type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'4',termino.id);},className:\"custom-control-input\",id:'termino'+termino.id,name:'termino'+termino.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'termino'+termino.id})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'4',termino.id);},className:\"custom-control-input\",id:'termino'+termino.id,name:'termino'+termino.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'termino'+termino.id})]})})})}),/*#__PURE__*/_jsx(\"td\",{children:termino.attributes.nombre})]},termino.id+1);}));};// TIPO DE EXPEDIENTE = PROCESO_DISCIPLINARIO\nvar componenteTipoExpedienteProcesoDisciplinario=function componenteTipoExpedienteProcesoDisciplinario(){// Se retorna\nreturn(// Se recorre el array\nlistaTipoProcesoDisciplinario.data.map(function(proceso,i){// Se retorna por posicion\nreturn/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:/*#__PURE__*/_jsx(_Fragment,{children:tipoExpAsociados.indexOf(('5|'+proceso.id).toString())>-1?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{defaultChecked:true,type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'5',proceso.id);},className:\"custom-control-input\",id:'proceso'+proceso.id,name:'proceso'+proceso.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'proceso'+proceso.id})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'5',proceso.id);},className:\"custom-control-input\",id:'proceso'+proceso.id,name:'termino'+proceso.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'proceso'+proceso.id})]})})})}),/*#__PURE__*/_jsx(\"td\",{children:proceso.attributes.nombre})]},proceso.id+1);}));};// Metodo encargado de cargar el formulario general\nvar componentFormularioUsuario=function componentFormularioUsuario(){// Se retorna\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{nombre:'',apellido:'',correo:'',dependencia:'',roles:'',tipoExpediente:'',estado:'',reparto:''},enableReinitialize:true,validate:function validate(valores){var errores={};if(!getNombre){errores.nombre=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(!getApellido){errores.apellido=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(!getEmail){errores.correo=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(!getIdDependencia){errores.dependencia=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(rolesAsociados.length==0){errores.roles=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}/*if (tipoExpAsociados.length == 0) {\r\n\r\n                            errores.tipoExpediente = \"Debe seleccionar al menos un expediente\";\r\n                        }*/if(getEstado==''){errores.estado=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(!getReparto){errores.reparto=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}return errores;},onSubmit:function onSubmit(valores,_ref){var resetForm=_ref.resetForm;enviarDatos();},children:function children(_ref2){var _listaGruposTrabajo$d;var errors=_ref2.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"block-title\",children:\"ADMINISTRACI\\xD3N :: USUARIOS\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row text-right w2d-enter\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(Link,{to:'/Usuario',title:\"Regresar\",children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-primary\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-backward\"}),\" \"]})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"nombre\",children:[\"NOMBRES \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{disabled:true,value:getNombre,type:\"text\",id:\"nombre\",name:\"nombre\",className:\"form-control\",onChange:handleInputChange}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"nombre\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.nombre});}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"apellido\",children:[\"APELLIDOS \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{disabled:true,value:getApellido,type:\"text\",id:\"apellido\",name:\"apellido\",className:\"form-control\",placeholder:\"Apellido\",onChange:handleInputChange}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"apellido\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.apellido});}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"user\",children:[\"USUARIO \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{value:getUser,type:\"text\",id:\"user\",name:\"user\",className:\"form-control\",placeholder:\"Usuario\",disabled:true})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"correo\",children:[\"CORREO \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{disabled:true,value:getEmail,type:\"text\",id:\"correo\",name:\"correo\",onChange:handleInputChange,className:\"form-control\",placeholder:\"Correo\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"correo\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.correo});}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"dependencia\",children:[\"DEPENDENCIA \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Field,{as:\"select\",value:getIdDependencia,onChange:handleInputChange,className:\"form-control\",id:\"dependencia\",name:\"dependencia\",placeholder:\"Dependencia\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}),respuestaDependenciaOrigen?selectDependenciaOrigen():null]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"dependencia\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.dependencia});}})]})}),getIdDependencia==getIdDependenciaSecretariaComun?/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"dependencgrupoTrabajoia\",children:[\"GRUPO DE TRABAJO \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),respuestaGrupoTrabajo&&listaGruposTrabajo.data.length>0?/*#__PURE__*/_jsx(Select,{id:\"grupoTrabajo\",name:\"grupoTrabajo\",isMulti:true,value:getListaGruposSeleccionadas,placeholder:\"Selecciona\",noOptionsMessage:function noOptionsMessage(){return\"Sin datos\";},options:listaGruposTrabajo===null||listaGruposTrabajo===void 0?void 0:(_listaGruposTrabajo$d=listaGruposTrabajo.data)===null||_listaGruposTrabajo$d===void 0?void 0:_listaGruposTrabajo$d.map(function(e){return{label:e.attributes.nombre,value:e.id};}),onChange:function onChange(e){return selectChangeGrupo(e);}}):null,/*#__PURE__*/_jsx(ErrorMessage,{name:\"grupoTrabajo\",component:function component(){return/*#__PURE__*/_jsxs(\"span\",{className:\"text-danger\",children:[errors.grupoTrabajo,\" \",getErrorGrupos]});}})]})}):null,/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"estado\",children:[\"ESTADO \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Field,{as:\"select\",value:getEstado,onChange:handleInputChange,className:\"form-control\",id:\"estado\",name:\"estado\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"ACTIVO\"}),/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"INACTIVO\"})]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"estado\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.estado});}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"reparto\",children:[\"HABILITADO PARA REPARTO\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Field,{as:\"select\",value:getReparto,onChange:handleInputChange,className:\"form-control\",id:\"reparto\",name:\"reparto\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"SI\"}),/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"NO\"})]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"reparto\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.reparto});}})]})})]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"block-title\",children:\"ASIGNACI\\xD3N DE ROLES\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"block-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"DEBE SELECCIONAR AL MENOS UN ROL\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"roles\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.roles});}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered table-striped table-vcenter js-dataTable-full\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{width:\"50px\"},children:\"SELECCIONAR\"}),/*#__PURE__*/_jsx(\"th\",{children:\"NOMBRE DE ROL\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:getRespuestaRoles?listarRoles():null})]})})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"block-title\",children:\"TIPOS DE EXPEDIENTES QUE EL USUARIO PUEDE GESTIONAR\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(ErrorMessage,{name:\"tipoExpediente\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.tipoExpediente});}})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:getRespuestaTipoExpediente?listarTiposExpedientesAsociados():null})]}),/*#__PURE__*/_jsx(\"div\",{className:\"block-content block-content-full text-right bg-light\",children:/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:[\" \",global.Constants.BOTON_NOMBRE.ACTUALIZAR,\" \"]})})]})]})})]});}})});};// Metodo encargado de general form\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(ModalGen,{data:getModalState}),/*#__PURE__*/_jsx(\"div\",{className:\"w2d_block\",children:/*#__PURE__*/_jsx(\"nav\",{\"aria-label\":\"breadcrumb\",children:/*#__PURE__*/_jsxs(\"ol\",{className:\"breadcrumb breadcrumb-alt push\",children:[/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/Usuario\",children:/*#__PURE__*/_jsx(\"small\",{children:\"Lista de usuarios\"})})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(\"small\",{children:\" Actualizar usuario\"})]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:componentFormularioUsuario()})]});}// Se exporta la clase\nexport default UsuarioDetalle;","map":{"version":3,"names":["React","useEffect","useState","Spinner","ErrorMessage","Field","Form","Formik","useParams","Link","InfoErrorApi","InfoExitoApi","GenericApi","ModalGen","Navigate","Select","UsuarioDetalle","getNombre","setNombre","getApellido","setApeliido","getUser","setUser","getEmail","setEmail","getIdDependencia","setIdDependencia","getEstado","setEstado","data","listaTipoDerechoPeticion","setListaDerechoPeticion","respuestaTipoDerechoPeticion","setRespuestaDerechoPeticion","listaTipoProcesoDisciplinario","setListaProcesoDisciplinario","respuestaProcesoDisciplinario","setRespuestaProcesoDisciplinario","listaTiposQueja","setListaTiposQueja","respuestaTiposQueja","setRespuestaTiposQueja","listaTerminosRespuesta","setListaTerminosRespuesta","respuestaTerminosRespuesta","setRespuestaTerminosRespuesta","listaDependenciaOrigen","setListaDependenciaOrigen","respuestaDependenciaOrigen","setDependenciaOrigen","getListaRoles","setListaRoles","getRespuestaTipoExpediente","setRespuestaTipoExpediente","getTiposExpedientes","setTiposExpedientes","getRespuestaRoles","setRespuestaRoles","rolesAsociados","setRolesAsociados","tipoExpAsociados","setTipoExpAsociados","getReparto","setReparto","getIdGrupoTrabajo","setIdGrupoTrabajo","getIdDependenciaSecretariaComun","setIdDependenciaSecretariaComun","respuestaGrupoTrabajo","setRespuestaGrupoTrabajo","listaGruposTrabajo","setListaGruposTrabajo","title","message","show","getModalState","setModalState","getListaGruposSeleccionadas","setListaGruposSeleccionadas","getErrorGrupos","setErrorGrupos","id","window","showSpinner","fetchData","getAllDependenciaOrigen","getByIdGeneric","global","Constants","ACCESO_DEPENDENCIA","MODIFICAR_USUARIO","then","datos","error","getUserById","toString","redirect","alert","TIPO_ALERTA","ERROR","validarGruposSeleccionados","split","map","rol","i","oldArray","getllRoles","getAllGeneric","cargarTiposExpedientes","cargarTiposDerechoPeticion","cargarTiposQueja","cargarTerminoRespuesta","cargarIdDependenciaSecretariaComun","getByDataGeneric","attributes","valor","cargarGruposDeTrabajo","getGeneric","selectChangeGrupo","v","selectGrupoTrabajo","length","grupoTrabajo","nombre","handleInputChange","event","target","value","type","checked","name","selectDependenciaOrigen","dependencia","grupos","auxGrupoSplit","forEach","element","push","label","enviarDatos","updateGeneric","MENSAJES_MODAL","EXITOSO","EXITO","agregarCheck","e","rolId","index","indexOf","splice","agregarCheckTipoExp","extId","subExpid","listarRoles","toUpperCase","componenteTipoExpedienteDerecho","derecho","listarTiposExpedientesAsociados","tipoExp","componenteTipoExpedienteReferente","componenteTipoExpedienteQueja","componenteTipoExpedienteTutela","componenteTipoExpedienteProcesoDisciplinario","quejaDef","queja","termino","proceso","componentFormularioUsuario","apellido","correo","roles","tipoExpediente","estado","reparto","valores","errores","MENSAJE_ERROR","CAMPO_OBLIGATORIO","resetForm","errors","MENSAJE_INFORMATIVO","SELECCIONE_UNA_OPCION","width","BOTON_NOMBRE","ACTUALIZAR"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/UsuarioDetalle.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport 'rhfa-emergency-styles/dist/styles.css'\r\nimport Spinner from '../Utils/Spinner';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useParams } from \"react-router\";\r\nimport { Link, } from \"react-router-dom\";\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport InfoExitoApi from '../Utils/InfoExitoApi';\r\nimport GenericApi from '../Api/Services/GenericApi';\r\nimport ModalGen from '../Utils/Modals/ModalGeneric';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport '../Utils/Constants';\r\nimport Select from 'react-select';\r\n\r\nfunction UsuarioDetalle() {\r\n\r\n    // Variables de la clase\r\n    const [getNombre, setNombre] = useState('');\r\n    const [getApellido, setApeliido] = useState('');\r\n    const [getUser, setUser] = useState('');\r\n    const [getEmail, setEmail] = useState('');\r\n    const [getIdDependencia, setIdDependencia] = useState('');\r\n    const [getEstado, setEstado] = useState('');\r\n\r\n    const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({ data: {} });\r\n    const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\r\n\r\n    const [listaTipoProcesoDisciplinario, setListaProcesoDisciplinario] = useState({ data: {} });\r\n    const [respuestaProcesoDisciplinario, setRespuestaProcesoDisciplinario] = useState(false);\r\n\r\n    const [listaTiposQueja, setListaTiposQueja] = useState({ data: {} });\r\n    const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\r\n\r\n    const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({ data: {} });\r\n    const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\r\n\r\n    const [listaDependenciaOrigen, setListaDependenciaOrigen] = useState({ data: {} });\r\n    const [respuestaDependenciaOrigen, setDependenciaOrigen] = useState(false);\r\n    const [getListaRoles, setListaRoles] = useState({ data: {} });\r\n    const [getRespuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\r\n    const [getTiposExpedientes, setTiposExpedientes] = useState({ data: {} });\r\n    const [getRespuestaRoles, setRespuestaRoles] = useState(false);\r\n    const [rolesAsociados, setRolesAsociados] = useState([]);\r\n    const [tipoExpAsociados, setTipoExpAsociados] = useState([]);\r\n    const [getReparto, setReparto] = useState('');\r\n    const [getIdGrupoTrabajo, setIdGrupoTrabajo] = useState('');\r\n    const [getIdDependenciaSecretariaComun, setIdDependenciaSecretariaComun] = useState('');\r\n    const [respuestaGrupoTrabajo, setRespuestaGrupoTrabajo] = useState(false);\r\n    const [listaGruposTrabajo, setListaGruposTrabajo] = useState({ data: {} });\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaGruposSeleccionadas, setListaGruposSeleccionadas] = useState([]);\r\n    const [getErrorGrupos, setErrorGrupos] = useState(\"\");\r\n\r\n    // Se captura el id del usuario\r\n    let { id } = useParams();\r\n\r\n    // Metodo encargado de cargar o consumir los servicios\r\n    useEffect(() => {\r\n\r\n        // Se inicializa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se cargan los metodos\r\n        async function fetchData() {\r\n\r\n            // Se cargan las dependencias\r\n            getAllDependenciaOrigen();\r\n        }\r\n\r\n        // Se usa la funcion\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Metodo encargado de cargar las dependencias\r\n    const getAllDependenciaOrigen = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getByIdGeneric('mas-dependencia-filtrado', global.Constants.ACCESO_DEPENDENCIA.MODIFICAR_USUARIO).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    setListaDependenciaOrigen(datos);// Se setean los datos\r\n                    setDependenciaOrigen(true);// Se setea la variable en true                    \r\n                    getUserById();// Se llama el metodo para cargar los usuarios\r\n\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    // Metodo encargado de cargar los datos del usuario con el id\r\n    const getUserById = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getByIdGeneric('usuario', id).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se valida que haya data\r\n                    if (datos[\"data\"] != \"\") {\r\n\r\n                        // Se setean los valores\r\n                        setNombre(datos[\"data\"][\"attributes\"][\"nombre\"]);\r\n                        setApeliido(datos[\"data\"][\"attributes\"][\"apellido\"]);\r\n                        setEmail(datos[\"data\"][\"attributes\"][\"email\"]);\r\n                        setUser(datos[\"data\"][\"attributes\"][\"name\"]);\r\n                        setIdDependencia(datos[\"data\"][\"attributes\"][\"id_dependencia\"]);\r\n                        setEstado(datos[\"data\"][\"attributes\"][\"estado\"]);\r\n                        setReparto(datos[\"data\"][\"attributes\"][\"reparto_habilitado\"]);\r\n\r\n                        // Se valida que haya el id del secretaria comun\r\n                        if (datos[\"data\"][\"attributes\"][\"id_mas_grupo_trabajo_secretaria_comun\"] != null) {\r\n\r\n                            // Se setea el id del grupo\r\n                            validarGruposSeleccionados(datos[\"data\"][\"attributes\"][\"id_mas_grupo_trabajo_secretaria_comun\"]);\r\n                        }\r\n\r\n                        // Se valida que haya el id de los roles\r\n                        if (datos[\"data\"][\"attributes\"][\"ids_roles\"]) {\r\n\r\n                            // Se setea el id de los roles\r\n                            datos[\"data\"][\"attributes\"][\"ids_roles\"].split(',').map((rol, i) => {\r\n\r\n                                // Se setea cada id\r\n                                setRolesAsociados(oldArray => [...oldArray, rol]);\r\n                            });\r\n\r\n                        }\r\n\r\n                        // Se valida que haya el id de los tipo de expediente\r\n                        if (datos[\"data\"][\"attributes\"][\"ids_tipo_expediente\"]) {\r\n\r\n                            // Se setea el id de los tipo de expediente\r\n                            datos[\"data\"][\"attributes\"][\"ids_tipo_expediente\"].map((rol, i) => {\r\n\r\n                                // Se setea cada id\r\n                                setTipoExpAsociados(oldArray => [...oldArray, rol]);\r\n                            });\r\n\r\n                        }\r\n\r\n                        // Se cargan los roles\r\n                        getllRoles();\r\n\r\n                    } else {\r\n\r\n                        // Se setea el mensaje de error\r\n                        setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                        // Se quita el cargando\r\n                        window.showSpinner(false);\r\n                    }\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los roles\r\n    const getllRoles = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric('role').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los datos\r\n                    setListaRoles(datos);\r\n\r\n                    // Se setea la variable en true\r\n                    setRespuestaRoles(true);\r\n\r\n                    // Se cargan los tipos de expediente\r\n                    cargarTiposExpedientes();\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los tipos de expediente\r\n    const cargarTiposExpedientes = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric('mas-tipo-expediente').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los datos\r\n                    setTiposExpedientes(datos);\r\n\r\n                    // Se setea la variable en true\r\n                    setRespuestaTipoExpediente(true);\r\n\r\n                    // Se cargan los tipos de derecho peticion\r\n                    cargarTiposDerechoPeticion();\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los tipos de derecho peticion \r\n    const cargarTiposDerechoPeticion = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric('mas-tipo-derecho-peticion').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los datos\r\n                    setListaDerechoPeticion(datos);\r\n\r\n                    // Se setea la variable en true\r\n                    setRespuestaDerechoPeticion(true);\r\n\r\n                    // Se cargan los tipos de queja\r\n                    cargarTiposQueja();\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los tipos de queja\r\n    const cargarTiposQueja = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric('mas-tipo-queja').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n\r\n                    setListaTiposQueja(datos);// Se setean los datos\r\n                    setRespuestaTiposQueja(true);// Se setea la variable en true\r\n\r\n                    setListaProcesoDisciplinario(datos);// Se setea la variable en true                    \r\n                    setRespuestaProcesoDisciplinario(true);\r\n\r\n                    cargarTerminoRespuesta();// Se cargan los terminos de respuesta\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los terminos de respuesta\r\n    const cargarTerminoRespuesta = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric('mas-termino-respuesta').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los datos\r\n                    setListaTerminosRespuesta(datos);\r\n\r\n                    // Se setea la variable en true\r\n                    setRespuestaTerminosRespuesta(true);\r\n\r\n                    // Se cargan los tipos de proceso disciplinario\r\n                    cargarIdDependenciaSecretariaComun();\r\n\r\n\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar el id de la dependecia de secretaria comun\r\n    const cargarIdDependenciaSecretariaComun = () => {\r\n\r\n        // Se inicializa la data\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'mas_parametro',\r\n                \"attributes\": {\r\n                    \"nombre\": \"id_dependencia_secretaria_comun\"\r\n                }\r\n            }\r\n        }\r\n\r\n        // Buscamos el parametro\r\n        GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n\r\n            // Se inicializa el valor de la API\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea el ID de la dependencia secretaria comun\r\n                    setIdDependenciaSecretariaComun(datos.data[0].attributes.valor);\r\n\r\n                    // Se consumen los grupos de trabajo\r\n                    cargarGruposDeTrabajo();\r\n                } else {\r\n\r\n                    // Se setea el mensaje\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    // Metodo encargado de consumir los grupos de trabajo\r\n    const cargarGruposDeTrabajo = () => {\r\n\r\n        // Se consume le API\r\n        GenericApi.getGeneric(\"mas_grupo_trabajo\").then(\r\n\r\n            // Se inicializa la variable de la api\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea la respuesta en true\r\n                    setRespuestaGrupoTrabajo(true);\r\n\r\n                    // Se setean los datos\r\n                    setListaGruposTrabajo(datos);\r\n                } else {\r\n\r\n                    // Se setean los mensajes\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de setear el valor de la lista de grupo seleccionados\r\n    const selectChangeGrupo = (v) => {\r\n\r\n        // Se valida que no sea null\r\n        if (v != null) {\r\n\r\n            // Se setea el valor\r\n            setListaGruposSeleccionadas(v);\r\n        } else {\r\n\r\n            // Se setea el mensaje de error\r\n            setErrorGrupos('Campo requerido');\r\n        }\r\n    }\r\n\r\n    // Metodo secundaria para cargar los grupos de trabajo\r\n    const selectGrupoTrabajo = () => {\r\n\r\n        // Se retorna la informacion del select\r\n        return (\r\n\r\n            // Se valida que tenga informacion\r\n            listaGruposTrabajo.data.length > 0 && listaGruposTrabajo.data.map((grupoTrabajo, i) => {\r\n\r\n                // Se retorna cada option value\r\n                return (\r\n                    <option key={grupoTrabajo.id} value={grupoTrabajo.id}>{grupoTrabajo.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de setear cada valor del check\r\n    const handleInputChange = (event) => {\r\n\r\n        // Se inicializan las constantes\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        // Se valida que sea nombre el check\r\n        if (name == \"nombre\") {\r\n\r\n            // Se setea el valor\r\n            setNombre(value);\r\n        }\r\n\r\n        // Se valida que sea apellido el check\r\n        if (name == \"apellido\") {\r\n\r\n            // Se setea el valor\r\n            setApeliido(value);\r\n        }\r\n\r\n        // Se valida que sea correo el check\r\n        if (name == \"correo\") {\r\n\r\n            // Se setea el valor\r\n            setEmail(value);\r\n        }\r\n\r\n        // Se valida que sea dependencia el check\r\n        if (name == \"dependencia\") {\r\n\r\n            // Se valida que el valor sea diferente de secretaria comun\r\n            if (value != getIdDependenciaSecretariaComun) {\r\n\r\n                // Se setea la lista vacia\r\n                setListaGruposSeleccionadas([]);\r\n            }\r\n\r\n            // Se setea el id con el valor\r\n            setIdDependencia(value);\r\n        }\r\n\r\n        // Se valida que sea estado el check\r\n        if (name == \"estado\") {\r\n\r\n            // Se setea el valor\r\n            setEstado(value);\r\n        }\r\n\r\n        // Se valida que sea reparto el check\r\n        if (name == \"reparto\") {\r\n\r\n            // Se setea el valor\r\n            setReparto(value);\r\n        }\r\n\r\n        // Se valida que sea grupoTrabajo el check\r\n        if (name == \"grupoTrabajo\") {\r\n\r\n            // Se setea el valor\r\n            setIdGrupoTrabajo(value);\r\n        }\r\n\r\n    }\r\n\r\n    // Metodo encargado de cargar cada valor del select de las dependencias\r\n    const selectDependenciaOrigen = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorren la lista\r\n            listaDependenciaOrigen.data.map((dependencia, i) => {\r\n\r\n                // Se retorna cada select \r\n                return (\r\n                    <option key={dependencia.id} value={dependencia.id}>{dependencia.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar cada valor del select de los grupos seleccionados\r\n    const validarGruposSeleccionados = (grupos) => {\r\n\r\n        // Se separan por comas en la variable\r\n        let auxGrupoSplit = grupos.split(\",\");\r\n\r\n        // Se recorren la lista\r\n        auxGrupoSplit.forEach(element => {\r\n\r\n            // Se consume la api por elemento\r\n            GenericApi.getByIdGeneric(\"mas_grupo_trabajo\", element).then(\r\n\r\n                // Se incializa la variable de respuesta\r\n                datos => {\r\n\r\n                    // Se valida que no haya error\r\n                    if (!datos.error) {\r\n\r\n                        // Se añade al array de los grupos seleccionados\r\n                        getListaGruposSeleccionadas.push({ label: datos.data.attributes.nombre, value: datos.data.id });\r\n                    }\r\n                }\r\n            )\r\n        });\r\n    }\r\n\r\n    // Metodo encargado de enviar los valores el backend\r\n    const enviarDatos = () => {\r\n\r\n        // Se usa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa la variable\r\n        let data;\r\n\r\n        // Se setean los valores en el array\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"usuario\",\r\n                \"attributes\": {\r\n                    \"nombre\": getNombre ? getNombre : \"\",\r\n                    \"apellido\": getApellido ? getApellido : \"\",\r\n                    \"name\": getUser ? getUser : \"\",\r\n                    \"email\": getEmail ? getEmail : \"\",\r\n                    \"id_dependencia\": getIdDependencia ? getIdDependencia : \"\",\r\n                    \"roles\": rolesAsociados,\r\n                    \"expedientes\": tipoExpAsociados,\r\n                    \"estado\": getEstado ? getEstado : \"\",\r\n                    \"reparto_habilitado\": getReparto ? getReparto : \"\",\r\n                    \"id_mas_grupo_trabajo_secretaria_comun\": getListaGruposSeleccionadas ? getListaGruposSeleccionadas : \"\",\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se ejecuta la API\r\n        GenericApi.updateGeneric('usuario', id, data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los valores en el modal\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: global.Constants.MENSAJES_MODAL.EXITOSO, show: true, redirect: '/Usuario', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n\r\n                    // Se setean los valores en el modal\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado para checkear los valores por rol\r\n    const agregarCheck = (e, rolId) => {\r\n\r\n        // Se valida el valor en true\r\n        if (e == true) {\r\n\r\n            // Se setean los valores\r\n            setRolesAsociados(oldArray => [...oldArray, rolId]);\r\n        } else {\r\n\r\n            // Se inicializa la variable\r\n            var index = rolesAsociados.indexOf(rolId);\r\n\r\n            // Se valida que sea diferente de null o vacio\r\n            if (index != -1) {\r\n\r\n                // Se quita el check\r\n                rolesAsociados.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de checkear el valor de los tipos de expediente\r\n    const agregarCheckTipoExp = (e, extId, subExpid) => {\r\n\r\n        // Se valida que sea true\r\n        if (e == true) {\r\n\r\n            // Se setea el valor\r\n            setTipoExpAsociados(oldArray => [...oldArray, (extId + \"|\" + subExpid)]);\r\n        } else {\r\n\r\n            // Se busca el indice\r\n            var index = tipoExpAsociados.indexOf((extId + \"|\" + subExpid));\r\n\r\n            // se valida se encuentre valor\r\n            if (index != -1) {\r\n\r\n                // Se quita el valor del array\r\n                tipoExpAsociados.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de listar cada rol\r\n    const listarRoles = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre la lista de roles\r\n            getListaRoles.data.map((rol, i) => {\r\n\r\n                // Se retorna por posicion\r\n                return (\r\n                    <tr key={(rol.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (rolesAsociados.length > 0) ? (\r\n                                            (rolesAsociados.indexOf(rol.id.toString()) > -1) ? (\r\n                                                <div>\r\n                                                    <input defaultChecked=\"true\" type=\"checkbox\" onChange={e => agregarCheck(e.target.checked, rol.id)} className=\"custom-control-input\" id={rol.id} name={rol.id} />\r\n                                                    <label className=\"custom-control-label\" htmlFor={rol.id}></label>\r\n                                                </div>\r\n                                            ) :\r\n                                                <div>\r\n                                                    <input type=\"checkbox\" onChange={e => agregarCheck(e.target.checked, rol.id)} className=\"custom-control-input\" id={rol.id} name={rol.id} />\r\n                                                    <label className=\"custom-control-label\" htmlFor={rol.id}></label>\r\n                                                </div>\r\n\r\n                                        ) :\r\n                                            <div>\r\n                                                <input type=\"checkbox\" onClick={e => agregarCheck(e.target.checked, rol.id)} className=\"custom-control-input\" id={rol.id} name={rol.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={rol.id}></label>\r\n                                            </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {rol.attributes.nombre.toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // TIPO DE EXPEDIENTE = DERECHO DE PETICION\r\n    const componenteTipoExpedienteDerecho = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre la lista de derechos de peticion\r\n            listaTipoDerechoPeticion.data.map((derecho, i) => {\r\n\r\n                // Se retorna por posicion\r\n                return (\r\n                    <tr key={(derecho.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (tipoExpAsociados.indexOf(('1|' + derecho.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '1', derecho.id)} className=\"custom-control-input\" id={'derecho' + derecho.id} name={'derecho' + derecho.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'derecho' + derecho.id}></label>\r\n                                            </div>\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '1', derecho.id)} className=\"custom-control-input\" id={'derecho' + derecho.id} name={'derecho' + derecho.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'derecho' + derecho.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {derecho.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los tipos de expediente asociados\r\n    const listarTiposExpedientesAsociados = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n            <div className='row'>\r\n                <div className=\"col-md-12\">\r\n                    {\r\n                        // Se recorre el array\r\n                        getTiposExpedientes.data.map((tipoExp, i) => {\r\n\r\n                            // Se retorna por posicion\r\n                            return (\r\n                                <div key={tipoExp.id} id=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\r\n                                    <div className=\"block block-rounded mb-1\">\r\n                                        <div className=\"block-header block-header-default\" role=\"tab\" id=\"accordion_h1\">\r\n                                            <a className=\"font-w600\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#accordion_q1\" aria-expanded=\"true\" aria-controls=\"accordion_q1\"><i className=\"fas fa-folder\" /> {tipoExp.attributes.nombre} </a>\r\n                                        </div>\r\n                                        <div id=\"accordion_q1\" className=\"show\" role=\"tabpanel\" aria-labelledby=\"accordion_h1\" data-parent=\"#accordion\">\r\n                                            <div className=\"block-content\">\r\n                                                {/*DERECHO DE PETICION*/}\r\n                                                {tipoExp.id === '1' && respuestaTipoDerechoPeticion ? componenteTipoExpedienteDerecho() : ''}\r\n                                                {/*PODER REFERENTE A SOLIICTUD*/}\r\n                                                {tipoExp.id === '2' && respuestaTiposQueja ? componenteTipoExpedienteReferente() : ''}\r\n                                                {/*QUEJA*/}\r\n                                                {tipoExp.id === '3' && respuestaTiposQueja ? componenteTipoExpedienteQueja() : ''}\r\n                                                {/*TUTELA*/}\r\n                                                {tipoExp.id === '4' && respuestaTerminosRespuesta ? componenteTipoExpedienteTutela() : ''}\r\n                                                {/*PROCESO DISCIPLINARIO*/}\r\n                                                {tipoExp.id === '5' && respuestaProcesoDisciplinario ? componenteTipoExpedienteProcesoDisciplinario() : ''}\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div >\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    // TIPO DE EXPEDIENTE = REFERENTE\r\n    const componenteTipoExpedienteReferente = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array\r\n            listaTiposQueja.data.map((quejaDef, i) => {\r\n\r\n                // Se retorna por posicion\r\n                return (\r\n                    <tr key={(quejaDef.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (tipoExpAsociados.indexOf(('2|' + quejaDef.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '2', quejaDef.id)} className=\"custom-control-input\" id={'quejaDef' + quejaDef.id} name={'quejaDef' + quejaDef.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'quejaDef' + quejaDef.id}></label>\r\n                                            </div>\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '2', quejaDef.id)} className=\"custom-control-input\" id={'quejaDef' + quejaDef.id} name={'quejaDef' + quejaDef.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'quejaDef' + quejaDef.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {quejaDef.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // TIPO DE EXPEDIENTE = QUEJA\r\n    const componenteTipoExpedienteQueja = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array\r\n            listaTiposQueja.data.map((queja, i) => {\r\n\r\n                // Se retorna por posicion\r\n                return (\r\n                    <tr key={(queja.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (tipoExpAsociados.indexOf(('3|' + queja.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '3', queja.id)} className=\"custom-control-input\" id={'queja' + queja.id} name={'queja' + queja.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'queja' + queja.id}></label>\r\n                                            </div>\r\n\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '3', queja.id)} className=\"custom-control-input\" id={'queja' + queja.id} name={'queja' + queja.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'queja' + queja.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {queja.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    // TIPO DE EXPEDIENTE = TUTELA\r\n    const componenteTipoExpedienteTutela = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array\r\n            listaTerminosRespuesta.data.map((termino, i) => {\r\n\r\n                // Se retorna por posicion\r\n                return (\r\n                    <tr key={(termino.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (tipoExpAsociados.indexOf(('4|' + termino.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '4', termino.id)} className=\"custom-control-input\" id={'termino' + termino.id} name={'termino' + termino.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'termino' + termino.id}></label>\r\n                                            </div>\r\n\r\n\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '4', termino.id)} className=\"custom-control-input\" id={'termino' + termino.id} name={'termino' + termino.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'termino' + termino.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {termino.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    // TIPO DE EXPEDIENTE = PROCESO_DISCIPLINARIO\r\n    const componenteTipoExpedienteProcesoDisciplinario = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array\r\n            listaTipoProcesoDisciplinario.data.map((proceso, i) => {\r\n\r\n                // Se retorna por posicion\r\n                return (\r\n                    <tr key={(proceso.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (tipoExpAsociados.indexOf(('5|' + proceso.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '5', proceso.id)} className=\"custom-control-input\" id={'proceso' + proceso.id} name={'proceso' + proceso.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'proceso' + proceso.id}></label>\r\n                                            </div>\r\n\r\n\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '5', proceso.id)} className=\"custom-control-input\" id={'proceso' + proceso.id} name={'termino' + proceso.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'proceso' + proceso.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {proceso.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar el formulario general\r\n    const componentFormularioUsuario = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n            <>\r\n                <Formik\r\n                    initialValues={{\r\n\r\n                        nombre: '',\r\n                        apellido: '',\r\n                        correo: '',\r\n                        dependencia: '',\r\n                        roles: '',\r\n                        tipoExpediente: '',\r\n                        estado: '',\r\n                        reparto: ''\r\n\r\n                    }}\r\n                    enableReinitialize\r\n                    validate={(valores) => {\r\n\r\n                        let errores = {}\r\n\r\n                        if (!getNombre) {\r\n                            errores.nombre = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getApellido) {\r\n                            errores.apellido = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getEmail) {\r\n                            errores.correo = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getIdDependencia) {\r\n                            errores.dependencia = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (rolesAsociados.length == 0) {\r\n\r\n                            errores.roles = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        /*if (tipoExpAsociados.length == 0) {\r\n\r\n                            errores.tipoExpediente = \"Debe seleccionar al menos un expediente\";\r\n                        }*/\r\n\r\n                        if (getEstado == '') {\r\n\r\n                            errores.estado = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getReparto) {\r\n                            errores.reparto = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n\r\n                        return errores\r\n                    }}\r\n                    onSubmit={(valores, { resetForm }) => {\r\n\r\n                        enviarDatos();\r\n                    }}\r\n                >\r\n                    {({ errors }) => (\r\n                        <Form>\r\n\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"block block-themed\">\r\n                                    <div className=\"block-header\">\r\n                                        <h3 className=\"block-title\">ADMINISTRACIÓN :: USUARIOS</h3>\r\n                                    </div>\r\n\r\n                                    <div className=\"block-content\">\r\n\r\n                                        <div className=\"row text-right w2d-enter\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <Link to={'/Usuario'} title='Regresar'>\r\n                                                    <button type=\"button\" className=\"btn btn-primary\"><i className=\"fas fa-backward\"></i> </button>\r\n                                                </Link>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n\r\n                                            <div className=\"col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor='nombre'>NOMBRES <span className=\"text-danger\">*</span></label>\r\n                                                    <Field disabled value={getNombre} type=\"text\" id=\"nombre\" name=\"nombre\" className=\"form-control\" onChange={handleInputChange} />\r\n                                                    <ErrorMessage name=\"nombre\" component={() => (<span className=\"text-danger\">{errors.nombre}</span>)} />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor='apellido'>APELLIDOS <span className=\"text-danger\">*</span></label>\r\n                                                    <Field disabled value={getApellido} type=\"text\" id=\"apellido\" name=\"apellido\" className=\"form-control\" placeholder=\"Apellido\"\r\n                                                        onChange={handleInputChange} />\r\n                                                    <ErrorMessage name=\"apellido\" component={() => (<span className=\"text-danger\">{errors.apellido}</span>)} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor='user'>USUARIO <span className=\"text-danger\">*</span></label>\r\n                                                    <Field value={getUser} type=\"text\" id=\"user\" name=\"user\" className=\"form-control\" placeholder=\"Usuario\" disabled />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor='correo'>CORREO <span className=\"text-danger\">*</span></label>\r\n                                                    <Field disabled value={getEmail} type=\"text\" id=\"correo\" name=\"correo\"\r\n                                                        onChange={handleInputChange} className=\"form-control\" placeholder=\"Correo\" />\r\n                                                    <ErrorMessage name=\"correo\" component={() => (<span className=\"text-danger\">{errors.correo}</span>)} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"dependencia\">DEPENDENCIA <span className=\"text-danger\">*</span></label>\r\n                                                    <Field as=\"select\" value={getIdDependencia} onChange={handleInputChange} className=\"form-control\" id=\"dependencia\" name=\"dependencia\" placeholder=\"Dependencia\">\r\n                                                        <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                        {respuestaDependenciaOrigen ? selectDependenciaOrigen() : null}\r\n                                                    </Field>\r\n                                                    <ErrorMessage name=\"dependencia\" component={() => (<span className=\"text-danger\">{errors.dependencia}</span>)} />\r\n                                                </div>\r\n                                            </div>\r\n                                            {getIdDependencia == getIdDependenciaSecretariaComun ?\r\n                                                (\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"dependencgrupoTrabajoia\">GRUPO DE TRABAJO <span className=\"text-danger\">*</span></label>\r\n                                                            {respuestaGrupoTrabajo && listaGruposTrabajo.data.length > 0 ?\r\n                                                                <Select\r\n                                                                    id='grupoTrabajo'\r\n                                                                    name='grupoTrabajo'\r\n                                                                    isMulti={true}\r\n                                                                    value={getListaGruposSeleccionadas}\r\n                                                                    placeholder=\"Selecciona\"\r\n                                                                    noOptionsMessage={() => \"Sin datos\"}\r\n                                                                    options={listaGruposTrabajo?.data?.map(e =>\r\n                                                                        ({ label: e.attributes.nombre, value: e.id }))}\r\n                                                                    onChange={(e) => selectChangeGrupo(e)}\r\n                                                                />\r\n                                                                : null}\r\n                                                            <ErrorMessage name=\"grupoTrabajo\" component={() => (<span className=\"text-danger\">{errors.grupoTrabajo} {getErrorGrupos}</span>)} />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            <div className=\"col-md-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"estado\">ESTADO <span className=\"text-danger\">*</span></label>\r\n                                                    <Field as=\"select\" value={getEstado} onChange={handleInputChange} className=\"form-control\" id=\"estado\" name=\"estado\">\r\n                                                        <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                        <option value=\"1\">ACTIVO</option>\r\n                                                        <option value=\"0\">INACTIVO</option>\r\n                                                    </Field>\r\n                                                    <ErrorMessage name=\"estado\" component={() => (<span className=\"text-danger\">{errors.estado}</span>)} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"reparto\">HABILITADO PARA REPARTO<span className=\"text-danger\">*</span></label>\r\n                                                    <Field as=\"select\" value={getReparto} onChange={handleInputChange} className=\"form-control\" id=\"reparto\" name=\"reparto\">\r\n                                                        <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                        <option value=\"1\">SI</option>\r\n                                                        <option value=\"0\">NO</option>\r\n                                                    </Field>\r\n                                                    <ErrorMessage name=\"reparto\" component={() => (<span className=\"text-danger\">{errors.reparto}</span>)} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"block block-themed\">\r\n                                    <div className=\"block-header\">\r\n                                        <h3 className=\"block-title\">ASIGNACIÓN DE ROLES</h3>\r\n                                    </div>\r\n                                    <div className=\"block-content\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <label >DEBE SELECCIONAR AL MENOS UN ROL<span className=\"text-danger\">*</span></label>\r\n                                                <ErrorMessage name=\"roles\" component={() => (<span className=\"text-danger\">{errors.roles}</span>)} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th style={{ width: \"50px\" }}>SELECCIONAR</th>\r\n                                                            <th>NOMBRE DE ROL</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody >\r\n                                                        {getRespuestaRoles ? listarRoles() : null}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"block block-themed\">\r\n                                    <div className=\"block-header\">\r\n                                        <h3 className=\"block-title\">TIPOS DE EXPEDIENTES QUE EL USUARIO PUEDE GESTIONAR</h3>\r\n                                    </div>\r\n                                    <div className=\"block-content\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ErrorMessage name=\"tipoExpediente\" component={() => (<span className=\"text-danger\">{errors.tipoExpediente}</span>)} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                {getRespuestaTipoExpediente ? listarTiposExpedientesAsociados() : null}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"block-content block-content-full text-right bg-light\">\r\n                                            <button type=\"submit\" className=\"btn btn-rounded btn-primary\"> {global.Constants.BOTON_NOMBRE.ACTUALIZAR} </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </>\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de general form\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <div className=\"w2d_block\">\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                        <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/Usuario`}><small>Lista de usuarios</small></Link></li>\r\n                        <li className=\"breadcrumb-item\"> <small> Actualizar usuario</small></li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n                {componentFormularioUsuario()}\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n// Se exporta la clase\r\nexport default UsuarioDetalle;"],"mappings":"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"},"metadata":{},"sourceType":"module"}