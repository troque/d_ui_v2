{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAutofieldState = exports.useAutoformState = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = require(\"./utils\");\n\nvar _coercing = require(\"./coercing\");\n\nvar _pubsub = require(\"./pubsub\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst useAutoformState = _ref => {\n  let {\n    initialValues,\n    onSubmit,\n    onChange,\n    schema,\n    skin,\n    formHook,\n    skipManualReset\n  } = _ref;\n  const stateRef = (0, _react.useRef)({\n    stateControl: new _pubsub.PubSub(),\n    fields: {}\n  });\n  const {\n    stateControl\n  } = stateRef.current;\n  const coercersBase = {\n    initialValues,\n    stateRef,\n    skin,\n    onSubmit,\n    schema\n  };\n  const coercedSubmit = (0, _coercing.createCoercers)(_objectSpread(_objectSpread({}, coercersBase), {}, {\n    notify: onSubmit\n  }));\n  let coercedChange;\n\n  if (onChange) {\n    const coercedChangeDoc = onChange && (0, _coercing.createCoercers)(_objectSpread(_objectSpread({}, coercersBase), {}, {\n      notify: onChange\n    }));\n\n    coercedChange = () => {\n      const doc = formHook.getValues();\n      return coercedChangeDoc(doc);\n    };\n  } else {\n    coercedChange = null;\n  }\n\n  const schemaDef = schema.getSchema();\n\n  const findOrInitState = name => {\n    return (0, _utils.valueOrCreate)(stateRef.current.fields, name, () => {\n      const nameForVisible = `${name}.initiallyVisible`;\n      const initiallyVisible = (0, _utils.objectTraverse)(schemaDef, nameForVisible, {\n        returnValue: true\n      });\n      return {\n        visible: initiallyVisible === null ? true : initiallyVisible,\n        helperText: null\n      };\n    });\n  };\n\n  const setValue = function (name, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const fieldState = findOrInitState(name);\n\n    const newState = _objectSpread(_objectSpread({}, fieldState), {}, {\n      value,\n      changed: true\n    });\n\n    if (!options.skipSetInput) formHook.setValue(name, value, options);\n  };\n\n  stateControl.findOrInitState = findOrInitState;\n  stateControl.setValue = setValue;\n  /**\n   * Sets values in the stateRef. Doesn't trigger.\n   */\n\n  const setValues = (values, _ref2) => {\n    let {\n      parent = null,\n      field\n    } = _ref2;\n    const fields = Object.keys(values);\n    fields.forEach(field => {\n      const cur = values[field];\n\n      if (typeof cur == 'object') {\n        return setValues(cur, {\n          parent: field,\n          field\n        });\n      } else {\n        const name = inputName({\n          parent,\n          field\n        });\n        findOrInitState(fieldName);\n      }\n    });\n  };\n\n  const resetState = (values, omit) => {\n    stateRef.current.fields = {};\n    setValues(values || {});\n    const currentValues = formHook.getValues();\n\n    if (!skipManualReset) {\n      // Reset by setting everything to initialValues or null.\n      function resetValues(obj) {\n        let initials = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        let path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n        let isArray = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        const fields = Object.keys(obj);\n        fields.forEach((field, idx) => {\n          const value = obj[field];\n          const elPath = isArray ? `${path}.${idx}` : path ? `${path}.${field}` : field;\n          const initial = initials[field];\n          if (typeof value == 'object') resetValues(value, initial, elPath, Array.isArray(value));else {\n            const initialOrNull = typeof initial == 'undefined' ? null : initial;\n            formHook.setValue(elPath, initialOrNull);\n          }\n        });\n      }\n\n      resetValues(currentValues, initialValues);\n    }\n\n    formHook.reset(values, omit);\n  };\n\n  const changeAndPublish = (name, attr, value) => {\n    const state = findOrInitState(name);\n    stateControl.publish(name, _objectSpread(_objectSpread({}, state), {}, {\n      [attr]: value\n    }));\n    state[attr] = value;\n  };\n\n  const setVisible = (name, visible) => {\n    changeAndPublish(name, 'visible', visible);\n  };\n\n  const setHelperText = (name, text) => {\n    changeAndPublish(name, 'helperText', text);\n  };\n\n  return {\n    coercedSubmit,\n    coercedChange,\n    setValue,\n    setVisible,\n    setHelperText,\n    resetState,\n    stateControl\n  };\n}; // Subscribes to visible, helperText and potential future additions\n\n\nexports.useAutoformState = useAutoformState;\n\nconst useAutofieldState = _ref3 => {\n  let {\n    name,\n    stateControl\n  } = _ref3;\n  const initialState = stateControl.findOrInitState(name);\n  const [state, setState] = (0, _react.useState)(_objectSpread({}, initialState));\n  (0, _react.useEffect)(() => {\n    stateControl.subscribe(name, setState);\n    return () => {\n      stateControl.unsubscribe(name, setState);\n    };\n  }, []);\n  return state;\n};\n\nexports.useAutofieldState = useAutofieldState;","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/node_modules/react-hook-form-auto/lib/autoform_state.js"],"names":["Object","defineProperty","exports","value","useAutofieldState","useAutoformState","_react","_interopRequireWildcard","require","_utils","_coercing","_pubsub","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","initialValues","onSubmit","onChange","schema","skin","formHook","skipManualReset","stateRef","useRef","stateControl","PubSub","fields","current","coercersBase","coercedSubmit","createCoercers","notify","coercedChange","coercedChangeDoc","doc","getValues","schemaDef","getSchema","findOrInitState","name","valueOrCreate","nameForVisible","initiallyVisible","objectTraverse","returnValue","visible","helperText","setValue","options","fieldState","newState","changed","skipSetInput","setValues","values","parent","field","cur","inputName","fieldName","resetState","omit","currentValues","resetValues","initials","path","isArray","idx","elPath","initial","Array","initialOrNull","reset","changeAndPublish","attr","state","publish","setVisible","setHelperText","text","initialState","setState","useState","useEffect","subscribe","unsubscribe"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAutofieldState = exports.useAutoformState = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = require(\"./utils\");\n\nvar _coercing = require(\"./coercing\");\n\nvar _pubsub = require(\"./pubsub\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst useAutoformState = ({\n  initialValues,\n  onSubmit,\n  onChange,\n  schema,\n  skin,\n  formHook,\n  skipManualReset\n}) => {\n  const stateRef = (0, _react.useRef)({\n    stateControl: new _pubsub.PubSub(),\n    fields: {}\n  });\n  const {\n    stateControl\n  } = stateRef.current;\n  const coercersBase = {\n    initialValues,\n    stateRef,\n    skin,\n    onSubmit,\n    schema\n  };\n  const coercedSubmit = (0, _coercing.createCoercers)(_objectSpread(_objectSpread({}, coercersBase), {}, {\n    notify: onSubmit\n  }));\n  let coercedChange;\n\n  if (onChange) {\n    const coercedChangeDoc = onChange && (0, _coercing.createCoercers)(_objectSpread(_objectSpread({}, coercersBase), {}, {\n      notify: onChange\n    }));\n\n    coercedChange = () => {\n      const doc = formHook.getValues();\n      return coercedChangeDoc(doc);\n    };\n  } else {\n    coercedChange = null;\n  }\n\n  const schemaDef = schema.getSchema();\n\n  const findOrInitState = name => {\n    return (0, _utils.valueOrCreate)(stateRef.current.fields, name, () => {\n      const nameForVisible = `${name}.initiallyVisible`;\n      const initiallyVisible = (0, _utils.objectTraverse)(schemaDef, nameForVisible, {\n        returnValue: true\n      });\n      return {\n        visible: initiallyVisible === null ? true : initiallyVisible,\n        helperText: null\n      };\n    });\n  };\n\n  const setValue = (name, value, options = {}) => {\n    const fieldState = findOrInitState(name);\n\n    const newState = _objectSpread(_objectSpread({}, fieldState), {}, {\n      value,\n      changed: true\n    });\n\n    if (!options.skipSetInput) formHook.setValue(name, value, options);\n  };\n\n  stateControl.findOrInitState = findOrInitState;\n  stateControl.setValue = setValue;\n  /**\n   * Sets values in the stateRef. Doesn't trigger.\n   */\n\n  const setValues = (values, {\n    parent = null,\n    field\n  }) => {\n    const fields = Object.keys(values);\n    fields.forEach(field => {\n      const cur = values[field];\n\n      if (typeof cur == 'object') {\n        return setValues(cur, {\n          parent: field,\n          field\n        });\n      } else {\n        const name = inputName({\n          parent,\n          field\n        });\n        findOrInitState(fieldName);\n      }\n    });\n  };\n\n  const resetState = (values, omit) => {\n    stateRef.current.fields = {};\n    setValues(values || {});\n    const currentValues = formHook.getValues();\n\n    if (!skipManualReset) {\n      // Reset by setting everything to initialValues or null.\n      function resetValues(obj, initials = {}, path = '', isArray = false) {\n        const fields = Object.keys(obj);\n        fields.forEach((field, idx) => {\n          const value = obj[field];\n          const elPath = isArray ? `${path}.${idx}` : path ? `${path}.${field}` : field;\n          const initial = initials[field];\n          if (typeof value == 'object') resetValues(value, initial, elPath, Array.isArray(value));else {\n            const initialOrNull = typeof initial == 'undefined' ? null : initial;\n            formHook.setValue(elPath, initialOrNull);\n          }\n        });\n      }\n\n      resetValues(currentValues, initialValues);\n    }\n\n    formHook.reset(values, omit);\n  };\n\n  const changeAndPublish = (name, attr, value) => {\n    const state = findOrInitState(name);\n    stateControl.publish(name, _objectSpread(_objectSpread({}, state), {}, {\n      [attr]: value\n    }));\n    state[attr] = value;\n  };\n\n  const setVisible = (name, visible) => {\n    changeAndPublish(name, 'visible', visible);\n  };\n\n  const setHelperText = (name, text) => {\n    changeAndPublish(name, 'helperText', text);\n  };\n\n  return {\n    coercedSubmit,\n    coercedChange,\n    setValue,\n    setVisible,\n    setHelperText,\n    resetState,\n    stateControl\n  };\n}; // Subscribes to visible, helperText and potential future additions\n\n\nexports.useAutoformState = useAutoformState;\n\nconst useAutofieldState = ({\n  name,\n  stateControl\n}) => {\n  const initialState = stateControl.findOrInitState(name);\n  const [state, setState] = (0, _react.useState)(_objectSpread({}, initialState));\n  (0, _react.useEffect)(() => {\n    stateControl.subscribe(name, setState);\n    return () => {\n      stateControl.unsubscribe(name, setState);\n    };\n  }, []);\n  return state;\n};\n\nexports.useAutofieldState = useAutofieldState;"]},"metadata":{},"sourceType":"script"}