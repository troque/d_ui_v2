{"ast":null,"code":"import AuthApi from '../Api/Services/AuthApi'; // return the user data from the session storage\n\nexport const getUser = () => {\n  const userStr = localStorage.getItem('user');\n  if (userStr) return JSON.parse(userStr);else return null;\n}; // return the token from the session storage\n\nexport const getToken = () => {\n  return localStorage.getItem('token') || null;\n};\nexport const getBearerToken = () => {\n  const token = getToken();\n  return `Bearer ${token}`;\n}; // remove the token and user from the session storage\n\nexport const removeUserSession = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n}; // set the token and user from the session storage\n\nexport const setUserSession = (token, user, functionalities) => {\n  localStorage.setItem('token', token);\n  localStorage.setItem('user', JSON.stringify(user));\n  localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  localStorage.setItem('roles', JSON.stringify(user.roles));\n}; //valida acceso de usuario a modulo y funcionalida\n// export const hasAccess = async (modulo, funcionalidad) => {\n//     return await AuthApi.hasAccess(modulo, funcionalidad);\n//  }\n\nexport const hasAccess = (modulo, funcionalidad) => {\n  try {\n    var userRoles = JSON.parse(localStorage.getItem('roles'));\n    if (userRoles != undefined && userRoles.split(\",\").includes('Administrador')) return true;\n    var arrayFunc = JSON.parse(JSON.parse(localStorage.getItem('functionalities') || null));\n    const found = arrayFunc.find(element => element.modulo == modulo && element.funcionalidad == funcionalidad);\n    return found != undefined;\n  } catch (ex) {\n    // console.log(ex);\n    return false;\n  }\n};\nexport const getRol = () => {\n  const rolesStr = sessionStorage.getItem('roles');\n  if (rolesStr) return JSON.parse(rolesStr);else return null;\n};\nexport const handleError = error => {\n  if (error.response.status == 401) {\n    //Unauthorized\n    removeUserSession();\n    window.location.href = \"/Login\";\n  }\n\n  return;\n};\nexport const quitarAcentos = cadena => {\n  if (cadena != \"\") {\n    const acentos = {\n      'á': 'a',\n      'é': 'e',\n      'í': 'i',\n      'ó': 'o',\n      'ú': 'u',\n      'Á': 'A',\n      'É': 'E',\n      'Í': 'I',\n      'Ó': 'O',\n      'Ú': 'U'\n    };\n    return cadena.split('').map(letra => acentos[letra] || letra).join('').toString();\n  } else {\n    return cadena;\n  }\n};","map":{"version":3,"names":["AuthApi","getUser","userStr","localStorage","getItem","JSON","parse","getToken","getBearerToken","token","removeUserSession","removeItem","setUserSession","user","functionalities","setItem","stringify","roles","hasAccess","modulo","funcionalidad","userRoles","undefined","split","includes","arrayFunc","found","find","element","ex","getRol","rolesStr","sessionStorage","handleError","error","response","status","window","location","href","quitarAcentos","cadena","acentos","map","letra","join","toString"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Utils/Common.js"],"sourcesContent":["import AuthApi from '../Api/Services/AuthApi';\r\n\r\n// return the user data from the session storage\r\nexport const getUser = () => {\r\n    const userStr = localStorage.getItem('user');\r\n    if (userStr) return JSON.parse(userStr);\r\n    else return null;\r\n}\r\n\r\n// return the token from the session storage\r\nexport const getToken = () => {\r\n    return localStorage.getItem('token') || null;\r\n}\r\n\r\nexport const getBearerToken = () => {\r\n    const token = getToken();\r\n    return `Bearer ${token}`;\r\n}\r\n\r\n// remove the token and user from the session storage\r\nexport const removeUserSession = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n}\r\n\r\n// set the token and user from the session storage\r\nexport const setUserSession = (token, user, functionalities) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\r\n    localStorage.setItem('roles', JSON.stringify(user.roles));\r\n}\r\n\r\n//valida acceso de usuario a modulo y funcionalida\r\n// export const hasAccess = async (modulo, funcionalidad) => {\r\n//     return await AuthApi.hasAccess(modulo, funcionalidad);\r\n//  }\r\n\r\nexport const hasAccess = (modulo, funcionalidad) => {\r\n\r\n    try {\r\n        var userRoles = JSON.parse(localStorage.getItem('roles'));\r\n        if (userRoles != undefined && userRoles.split(\",\").includes('Administrador')) return true;\r\n        var arrayFunc = JSON.parse(JSON.parse(localStorage.getItem('functionalities') || null));\r\n        const found = arrayFunc.find(element => element.modulo == modulo && element.funcionalidad == funcionalidad);\r\n\r\n        return found != undefined;\r\n    }\r\n    catch (ex) {\r\n        // console.log(ex);\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nexport const getRol = () => {\r\n    const rolesStr = sessionStorage.getItem('roles');\r\n    if (rolesStr) return JSON.parse(rolesStr);\r\n    else return null;\r\n}\r\n\r\n\r\nexport const handleError = (error) => {\r\n    if (error.response.status == 401) { //Unauthorized\r\n        removeUserSession();\r\n        window.location.href = \"/Login\";\r\n    }\r\n    return;\r\n}\r\n\r\nexport const quitarAcentos = (cadena) => {\r\n    if (cadena != \"\") {\r\n        const acentos = { 'á': 'a', 'é': 'e', 'í': 'i', 'ó': 'o', 'ú': 'u', 'Á': 'A', 'É': 'E', 'Í': 'I', 'Ó': 'O', 'Ú': 'U' };\r\n        return cadena.split('').map(letra => acentos[letra] || letra).join('').toString();\r\n    }\r\n    else {\r\n        return cadena;\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}