{"ast":null,"code":"import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{ErrorMessage,Field,Form,Formik}from'formik';import{useLocation}from'react-router-dom';import Spinner from'../../Utils/Spinner';import GenericApi from'../../Api/Services/GenericApi';import{getUser}from'../../Utils/Common';import ModalGen from'../../Utils/Modals/ModalGeneric';import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function EnviaraAlguienDeSecretariaComunAleatorio(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),getUsuarioSleccionado=_useState2[0],setUsuarioSleccionado=_useState2[1];var _useState3=useState({data:{}}),_useState4=_slicedToArray(_useState3,2),getListaUusariosDependencia=_useState4[0],setListaUusariosDependencia=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),getUsuarioNombre=_useState6[0],setUsuarioNombre=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),getUsuarioApellido=_useState8[0],setUsuarioApellido=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),getUsuarioName=_useState10[0],setUsuarioName=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),getUsuarioDependenciaNombre=_useState12[0],setUsuarioDependenciaNombre=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),getUsuarioGruposTrabajo=_useState14[0],setUsuarioGruposTrabajo=_useState14[1];var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),countTextArea=_useState16[0],setCountTextArea=_useState16[1];var _useState17=useState(0),_useState18=_slicedToArray(_useState17,2),getMaximoTextArea=_useState18[0],setMaximoTextArea=_useState18[1];var _useState19=useState(0),_useState20=_slicedToArray(_useState19,2),getMinimoTextArea=_useState20[0],setMinimoTextArea=_useState20[1];var _useState21=useState({title:\"\",message:\"\",show:false}),_useState22=_slicedToArray(_useState21,2),getModalState=_useState22[0],setModalState=_useState22[1];var _useState23=useState(''),_useState24=_slicedToArray(_useState23,2),getIdGrupoTrabajo=_useState24[0],setIdGrupoTrabajo=_useState24[1];var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),respuestaGrupoTrabajo=_useState26[0],setRespuestaGrupoTrabajo=_useState26[1];var _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),respuestaUsuariosGrupoTrabajo=_useState28[0],setRespuestaUsuariosGrupoTrabajo=_useState28[1];var _useState29=useState({data:{}}),_useState30=_slicedToArray(_useState29,2),listaGruposTrabajo=_useState30[0],setListaGruposTrabajo=_useState30[1];var _useState31=useState(''),_useState32=_slicedToArray(_useState31,2),getNombreProceso=_useState32[0],setNombreProceso=_useState32[1];var _useState33=useState(false),_useState34=_slicedToArray(_useState33,2),respuestaUsuarioAleatorio=_useState34[0],setRespuestaUsuarioAleatorio=_useState34[1];var _useState35=useState(),_useState36=_slicedToArray(_useState35,2),getUsuarioAleatorio=_useState36[0],setUsuarioAleatorio=_useState36[1];var _useState37=useState(false),_useState38=_slicedToArray(_useState37,2),getExisteUsuarioValido=_useState38[0],setExisteUsuarioValido=_useState38[1];var _useState39=useState([]),_useState40=_slicedToArray(_useState39,2),getListaSemaforosActivosSecretaria=_useState40[0],setListaSemaforosActivosSecretaria=_useState40[1];var location=useLocation();var from=location.state.from;var procesoDisciplinarioId=from.procesoDisciplinarioId;var numeroLlamadosFinalizar=0;var numeroTotalLlamadosFinalizar=1;/**\r\n     * Funcion principal\r\n     */useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:window.showSpinner(true);nombreProceso();case 2:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[]);// Funcion para validar y detener el spinner\nvar validacionSpinnerFinalizar=function validacionSpinnerFinalizar(){numeroLlamadosFinalizar++;if(numeroLlamadosFinalizar>=numeroTotalLlamadosFinalizar){window.showSpinner(false);var tituloModal=getNombreProceso+\" :: Enviar a alguien de secretaria común dirigidamente\";var mensajeModal='El proceso con radicado: '+from.radicado+' fue asignado al usuario: '+getUsuarioNombre+' '+getUsuarioApellido+' ('+getUsuarioName+')  de la dependencia: '+getUsuarioDependenciaNombre+'';setModalState({title:tituloModal.toUpperCase(),message:mensajeModal.toUpperCase(),show:true,redirect:'/MisPendientes',alert:global.Constants.TIPO_ALERTA.EXITO});}};var nombreProceso=function nombreProceso(){GenericApi.getByIdGeneric(\"nombre-proceso\",from.procesoDisciplinarioId).then(function(datos){if(!datos.error){setNombreProceso(datos.data.attributes.nombre);obtenerParametros();cargarGruposDeTrabajo();obtenerSemaforosProcesoDisciplinario();}});};var cargarGruposDeTrabajo=function cargarGruposDeTrabajo(){GenericApi.getGeneric(\"mas_grupo_trabajo\").then(function(datos){if(!datos.error){setRespuestaGrupoTrabajo(true);setListaGruposTrabajo(datos);}window.showSpinner(false);});};var obtenerSemaforosProcesoDisciplinario=function obtenerSemaforosProcesoDisciplinario(){GenericApi.getAllGeneric(\"semaforo/get-semaforo-proceso-disciplinario/\"+global.Constants.SEMAFORO_EVENTOS.EVENTO_SECRETARIA_COMUN+\"/\"+procesoDisciplinarioId).then(function(datos){if(!datos.error){setListaSemaforosActivosSecretaria(datos);}window.showSpinner(false);});};var selectGrupoTrabajo=function selectGrupoTrabajo(){if(listaGruposTrabajo.data.length>=1){return listaGruposTrabajo.data.map(function(grupoTrabajo,i){return/*#__PURE__*/_jsx(\"option\",{value:grupoTrabajo.id,children:grupoTrabajo.attributes.nombre},grupoTrabajo.id);});}};// Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisión-\nfunction containsSpecialChars(str){var result=global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(function(specialChar){if(str.includes(specialChar)){return true;}return false;});return result;}var enviarDatos=function enviarDatos(valores){var iduserdependencia=getUser().id_dependencia;window.showSpinner(true);var data;data={\"data\":{\"type\":\"transacciones\",\"attributes\":{\"id_proceso_disciplinario\":procesoDisciplinarioId,\"id_dependencia_origen\":iduserdependencia,\"usuario_a_remitir\":getUsuarioAleatorio.nombre_funcionario,\"descripcion_a_remitir\":valores.informacion,\"id_etapa\":3}}};//Finalizando semaforo        \nGenericApi.getByIdGeneric('get-semaforo-evento',4).then(function(datosSemaforoFinaliza){if(datosSemaforoFinaliza.data.length>=1){datosSemaforoFinaliza.data.forEach(function(element){if(getListaSemaforosActivosSecretaria.some(function(dato){return dato.id==element.id;})&&element.attributes.id_mas_grupo_trabajo_inicia.id.toString()!==getIdGrupoTrabajo.toString()){var _data={\"data\":{\"type\":\"semaforo\",\"attributes\":{\"id_proceso_disciplinario\":from.procesoDisciplinarioId,\"id_semaforo\":element.id,\"id_actuacion_finaliza\":null,\"id_dependencia_finaliza\":null,\"id_usuario_finaliza\":getUsuarioAleatorio.id_funcionario}}};GenericApi.getByDataGeneric('set-finaliza-semaforo',_data);}});}});var tituloModal=getNombreProceso.toUpperCase()+\" :: Enviar a alguien de secretaria común aleatoriamente\";var mensajeModal='El proceso con radicado: '+from.radicado+' fue asignado al usuario: '+getUsuarioNombre+' '+getUsuarioApellido+' ('+getUsuarioName+')  de la dependencia: '+getUsuarioDependenciaNombre+'';GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario',data).then(function(datos){if(!datos.error){validacionSpinnerFinalizar();GenericApi.getByIdGeneric('get-semaforo-evento',4).then(function(datosSemaforo){numeroTotalLlamadosFinalizar++;validacionSpinnerFinalizar();if(!datosSemaforo.error){datosSemaforo.data.forEach(function(element,index){if(element.attributes.id_mas_evento_inicio.id==4){if(!getListaSemaforosActivosSecretaria.some(function(objeto){return objeto.id.toString()===element.id.toString();})){if(element.attributes.id_mas_grupo_trabajo_inicia.id.toString()==getIdGrupoTrabajo.toString()){var date=new Date();var datapdxsemaforo={\"data\":{\"type\":\"pdxsemaforo\",\"attributes\":{\"id_semaforo\":element.id,\"id_proceso_disciplinario\":procesoDisciplinarioId,\"id_actuacion\":\"\",\"fecha_inicio\":date.toLocaleDateString('zh-Hans-CN'),\"estado\":1}}};numeroTotalLlamadosFinalizar++;GenericApi.getByDataGeneric('pdxsemaforo',datapdxsemaforo).then(function(datosSemaforo){numeroTotalLlamadosFinalizar++;validacionSpinnerFinalizar();});}}}});}else{setModalState({title:tituloModal.toUpperCase(),message:\"HA OCURRIDO UN ERROR CON LA SEMAFORIZACIÓN\",show:true,alert:global.Constants.TIPO_ALERTA.ERROR});}});}else{setModalState({title:tituloModal.toUpperCase(),message:datos.error.toString(),show:true,redirect:'/AntecedentesLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});/*GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    GenericApi.getByIdGeneric('get-semaforo-evento', 4).then(\r\n                        datosSemaforo => {\r\n                            if (!datosSemaforo.error) {\r\n                                datosSemaforo.data.forEach(element => {\r\n                                    if (element.attributes.id_mas_evento_inicio.id == 4) {\r\n                                        if (element.attributes.id_mas_grupo_trabajo_inicia.id == getIdGrupoTrabajo) {\r\n                                            let date = new Date();\r\n                                            let datapdxsemaforo = {\r\n                                                \"data\": {\r\n                                                    \"type\": \"pdxsemaforo\",\r\n                                                    \"attributes\": {\r\n                                                        \"id_semaforo\": element.id,\r\n                                                        \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                                                        \"id_actuacion\": \"\",\r\n                                                        \"fecha_inicio\": date.toLocaleDateString('zh-Hans-CN'),\r\n                                                        \"estado\": 1,\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            GenericApi.addGeneric('pdxsemaforo', datapdxsemaforo)\r\n                                        }\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                setModalState({ title: tituiloModal.toUpperCase(), message: \"HA OCURRIDO UN ERROR CON LA SEMAFORIZACIÓN\", show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                            }\r\n                        }\r\n                    )\r\n                    setModalState({ title: tituiloModal.toUpperCase(), message: mensajeModal.toUpperCase(), show: true, redirect: '/MisPendientes', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                }\r\n                else {\r\n                    setModalState({ title: tituiloModal.toUpperCase(), message: datos.error.toString(), show: true, redirect: '/AntecedentesLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )*/};var handleInputChange=function handleInputChange(event){var target=event.target;var value=target.type==='checkbox'?target.checked:target.value;var name=target.name;if(name==\"grupoTrabajo\"){setIdGrupoTrabajo(value);cargarUsuariosPorGrupo(value);cargarUsuarioAleatorio(value);}};// consultamos la cantidad maxima de caracteres para el textarea\nvar obtenerParametros=function obtenerParametros(){try{var data={\"data\":{\"type\":'mas_parametro',\"attributes\":{\"nombre\":\"minimo_caracteres_textarea|maximo_caracteres_textarea\"}}};GenericApi.getByDataGeneric('parametro/parametro-nombre',data).then(function(datos){if(!datos.error){if(datos[\"data\"].length>0){datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea');}).map(function(filteredName){return setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]);});datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea');}).map(function(filteredName){return setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]);});}}else{window.showModal(1);}});}catch(error){// console.log(error);\n}};var cargarUsuariosPorGrupo=function cargarUsuariosPorGrupo(idGrupo){window.showSpinner(true);var tituloModal=getNombreProceso+\" :: Enviar a alguien de mi dependencia\";GenericApi.getAllGeneric(\"usuario/get-usuarios-grupotrabajo/\"+idGrupo+\"/\"+procesoDisciplinarioId).then(function(datos){if(!datos.error){setRespuestaUsuariosGrupoTrabajo(true);setListaUusariosDependencia(datos);window.showSpinner(false);}else{setModalState({title:tituloModal.toUpperCase(),message:datos.error.toString(),show:true,redirect:'/Transacciones',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});};var cargarUsuarioAleatorio=function cargarUsuarioAleatorio(idGrupo){window.showSpinner(true);var tituloModal=\"SINPROC No \"+from.radicado+\" :: Enviar a alguien de secretaria común\";var mensajeModal=\"No existen usuarios que puedan atender este expediente\";GenericApi.getAllGeneric(\"mas_grupo_trabajo/repartoAleatorio/\"+idGrupo+\"/\"+procesoDisciplinarioId).then(function(datos){if(datos!=\"\"){if(!datos.error){setRespuestaUsuarioAleatorio(true);setUsuarioAleatorio(datos);GenericApi.getGeneric('usuario/get-usuario-por-name/'+datos.nombre_funcionario).then(function(datos){if(!datos.error){setUsuarioNombre(datos.data[0].attributes.nombre);setUsuarioApellido(datos.data[0].attributes.apellido);setUsuarioName(datos.data[0].attributes.name);setUsuarioDependenciaNombre(datos.data[0].attributes.dependencia.nombre);setUsuarioGruposTrabajo(datos.data[0].attributes.grupo_trabajo_secretaria_comun.split(','));setExisteUsuarioValido(true);}});}else{setModalState({title:tituloModal.toUpperCase(),message:datos.error.toString(),show:true,redirect:'/Transacciones',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});setExisteUsuarioValido(false);}}else{setUsuarioNombre(\"\");setUsuarioApellido(\"\");setUsuarioName(\"\");setUsuarioDependenciaNombre(\"\");setUsuarioGruposTrabajo([]);setModalState({title:tituloModal.toUpperCase(),message:mensajeModal.toUpperCase(),show:true,from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});setExisteUsuarioValido(false);}window.showSpinner(false);});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(ModalGen,{data:getModalState}),/*#__PURE__*/_jsx(Formik,{initialValues:{informacion:'',usuario:''},enableReinitialize:true,validate:function validate(valores){setCountTextArea(valores.informacion.length);var errores={};if(!valores.informacion){errores.informacion='Debe ingresar un valor';}else if(valores.informacion.length<=getMinimoTextArea){errores.informacion='La descripción debe tener almenos '+getMinimoTextArea+' caracteres';}if(valores.informacion){if(containsSpecialChars(valores.informacion))errores.informacion='Tiene caracteres inválidos';}return errores;},onSubmit:function onSubmit(valores,_ref){var resetForm=_ref.resetForm;enviarDatos(valores);},children:function children(_ref2){var errors=_ref2.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"w2d_block let\",children:/*#__PURE__*/_jsx(\"nav\",{\"aria-label\":\"breadcrumb\",children:/*#__PURE__*/_jsxs(\"ol\",{className:\"breadcrumb breadcrumb-alt push\",children:[/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/MisPendientes\",children:/*#__PURE__*/_jsx(\"small\",{children:\"Mis Pendientes\"})})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/RamasProceso/\",state:{from:from},children:/*#__PURE__*/_jsx(\"small\",{children:\"Ramas del proceso\"})})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Enviar a alguien de secretaria com\\xFAn aleatoriamente\"})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsxs(\"h3\",{className:\"block-title\",children:[getNombreProceso.toUpperCase(),\" \",/*#__PURE__*/_jsx(\"strong\",{children:\" :: ENVIAR A ALGUIEN DE SECRETARIA COM\\xDAN ALEATORIAMENTE\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"grupoTrabajo\",children:[\"SELECCIONE EL GRUPO DE TRABAJO \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Field,{value:getIdGrupoTrabajo,onChange:handleInputChange,as:\"select\",className:\"form-control\",id:\"grupoTrabajo\",name:\"grupoTrabajo\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Por favor seleccione\"}),respuestaGrupoTrabajo?selectGrupoTrabajo():null]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"grupoTrabajo\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.grupoTrabajo});}})]})}),getExisteUsuarioValido?/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"USUARIO A RECIBIR GESTION: \"}),\" \",getUsuarioNombre!=\"\"?\" \"+getUsuarioNombre.toUpperCase()+\" \"+getUsuarioApellido.toUpperCase()+\" (\"+getUsuarioName.toUpperCase()+\") DE LA DEPENDENCIA \"+getUsuarioDependenciaNombre.toUpperCase():null]})}):null,getExisteUsuarioValido?/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"informacion\",children:[\"OBSERVACIONES \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{as:\"textarea\",className:\"form-control\",id:\"informacion\",name:\"informacion\",rows:\"6\",placeholder:\"INFORMACI\\xD3N PARA SU REMISI\\xD3N...\",maxLength:getMaximoTextArea,minLength:getMinimoTextArea}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-primary\",children:[countTextArea,\" / \",getMaximoTextArea]})}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"informacion\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.informacion});}})]})}):null]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[getExisteUsuarioValido?/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:\"REMITIR\"}):null,/*#__PURE__*/_jsx(Link,{to:'/Transacciones',state:{from:from},className:\"font-size-h5 font-w600\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:\"CANCELAR\"})})]})]})]})]});}})]});}export default EnviaraAlguienDeSecretariaComunAleatorio;","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","useLocation","Spinner","GenericApi","getUser","ModalGen","Link","EnviaraAlguienDeSecretariaComunAleatorio","getUsuarioSleccionado","setUsuarioSleccionado","data","getListaUusariosDependencia","setListaUusariosDependencia","getUsuarioNombre","setUsuarioNombre","getUsuarioApellido","setUsuarioApellido","getUsuarioName","setUsuarioName","getUsuarioDependenciaNombre","setUsuarioDependenciaNombre","getUsuarioGruposTrabajo","setUsuarioGruposTrabajo","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","title","message","show","getModalState","setModalState","getIdGrupoTrabajo","setIdGrupoTrabajo","respuestaGrupoTrabajo","setRespuestaGrupoTrabajo","respuestaUsuariosGrupoTrabajo","setRespuestaUsuariosGrupoTrabajo","listaGruposTrabajo","setListaGruposTrabajo","getNombreProceso","setNombreProceso","respuestaUsuarioAleatorio","setRespuestaUsuarioAleatorio","getUsuarioAleatorio","setUsuarioAleatorio","getExisteUsuarioValido","setExisteUsuarioValido","getListaSemaforosActivosSecretaria","setListaSemaforosActivosSecretaria","location","from","state","procesoDisciplinarioId","numeroLlamadosFinalizar","numeroTotalLlamadosFinalizar","fetchData","window","showSpinner","nombreProceso","validacionSpinnerFinalizar","tituloModal","mensajeModal","radicado","toUpperCase","redirect","alert","global","Constants","TIPO_ALERTA","EXITO","getByIdGeneric","then","datos","error","attributes","nombre","obtenerParametros","cargarGruposDeTrabajo","obtenerSemaforosProcesoDisciplinario","getGeneric","getAllGeneric","SEMAFORO_EVENTOS","EVENTO_SECRETARIA_COMUN","selectGrupoTrabajo","length","map","grupoTrabajo","i","id","containsSpecialChars","str","result","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","enviarDatos","valores","iduserdependencia","id_dependencia","nombre_funcionario","informacion","datosSemaforoFinaliza","forEach","element","dato","id_mas_grupo_trabajo_inicia","toString","id_funcionario","getByDataGeneric","addGeneric","datosSemaforo","index","id_mas_evento_inicio","objeto","date","Date","datapdxsemaforo","toLocaleDateString","ERROR","handleInputChange","event","target","value","type","checked","name","cargarUsuariosPorGrupo","cargarUsuarioAleatorio","filter","filteredName","showModal","idGrupo","apellido","dependencia","grupo_trabajo_secretaria_comun","usuario","errores","resetForm","errors"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Transacciones/EnviaraAlguienDeSecretariaComunAleatorio.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport { getUser } from '../../Utils/Common';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction EnviaraAlguienDeSecretariaComunAleatorio() {\r\n\r\n    const [getUsuarioSleccionado, setUsuarioSleccionado] = useState(\"\");\r\n    const [getListaUusariosDependencia, setListaUusariosDependencia] = useState({ data: {} });\r\n    const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\r\n    const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\r\n    const [getUsuarioName, setUsuarioName] = useState(\"\");\r\n    const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\r\n    const [getUsuarioGruposTrabajo, setUsuarioGruposTrabajo] = useState([]);\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getIdGrupoTrabajo, setIdGrupoTrabajo] = useState('');\r\n    const [respuestaGrupoTrabajo, setRespuestaGrupoTrabajo] = useState(false);\r\n    const [respuestaUsuariosGrupoTrabajo, setRespuestaUsuariosGrupoTrabajo] = useState(false);\r\n    const [listaGruposTrabajo, setListaGruposTrabajo] = useState({ data: {} });\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n    const [respuestaUsuarioAleatorio, setRespuestaUsuarioAleatorio] = useState(false);\r\n    const [getUsuarioAleatorio, setUsuarioAleatorio] = useState();\r\n    const [getExisteUsuarioValido, setExisteUsuarioValido] = useState(false);\r\n    const [getListaSemaforosActivosSecretaria, setListaSemaforosActivosSecretaria] = useState([]);\r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    \r\n    let numeroLlamadosFinalizar = 0;\r\n    let numeroTotalLlamadosFinalizar = 1;\r\n\r\n    /**\r\n     * Funcion principal\r\n     */\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            nombreProceso();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Funcion para validar y detener el spinner\r\n    const validacionSpinnerFinalizar = () => {\r\n        numeroLlamadosFinalizar++\r\n        if(numeroLlamadosFinalizar >= numeroTotalLlamadosFinalizar){\r\n            window.showSpinner(false);\r\n            const tituloModal = getNombreProceso + \" :: Enviar a alguien de secretaria común dirigidamente\";\r\n            const mensajeModal = 'El proceso con radicado: ' + from.radicado + ' fue asignado al usuario: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ')  de la dependencia: ' + getUsuarioDependenciaNombre + '';\r\n            setModalState({ title: tituloModal.toUpperCase(), message: mensajeModal.toUpperCase(), show: true, redirect: '/MisPendientes', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n        }\r\n    }\r\n\r\n\r\n    const nombreProceso = () => {\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                    obtenerParametros();\r\n                    cargarGruposDeTrabajo();\r\n                    obtenerSemaforosProcesoDisciplinario()\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarGruposDeTrabajo = () => {\r\n        GenericApi.getGeneric(\"mas_grupo_trabajo\").then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setRespuestaGrupoTrabajo(true);\r\n                    setListaGruposTrabajo(datos);\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    const obtenerSemaforosProcesoDisciplinario = () => {\r\n\r\n        GenericApi.getAllGeneric(\"semaforo/get-semaforo-proceso-disciplinario/\"+global.Constants.SEMAFORO_EVENTOS.EVENTO_SECRETARIA_COMUN+\"/\"+procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaSemaforosActivosSecretaria(datos)\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const selectGrupoTrabajo = () => {\r\n        if (listaGruposTrabajo.data.length >= 1) {\r\n            return (\r\n                listaGruposTrabajo.data.map((grupoTrabajo, i) => {\r\n                    return (\r\n                        <option key={grupoTrabajo.id} value={grupoTrabajo.id}>{grupoTrabajo.attributes.nombre}</option>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisión-\r\n    function containsSpecialChars(str) {\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n\r\n\r\n    const enviarDatos = (valores) => {\r\n        const iduserdependencia = getUser().id_dependencia;\r\n        window.showSpinner(true);\r\n        let data;\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"transacciones\",\r\n                \"attributes\": {\r\n\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_dependencia_origen\": iduserdependencia,\r\n                    \"usuario_a_remitir\": getUsuarioAleatorio.nombre_funcionario,\r\n                    \"descripcion_a_remitir\": valores.informacion,\r\n                    \"id_etapa\": 3\r\n                }\r\n            }\r\n        }\r\n\r\n        //Finalizando semaforo        \r\n        GenericApi.getByIdGeneric('get-semaforo-evento', 4).then(\r\n            datosSemaforoFinaliza => {\r\n                if (datosSemaforoFinaliza.data.length >= 1) {\r\n                    datosSemaforoFinaliza.data.forEach(element => {\r\n                        if(getListaSemaforosActivosSecretaria.some(dato => dato.id == element.id) && element.attributes.id_mas_grupo_trabajo_inicia.id.toString() !== getIdGrupoTrabajo.toString()){\r\n                            let data = {\r\n                                \"data\": {\r\n                                    \"type\": \"semaforo\",\r\n                                    \"attributes\": {\r\n                                        \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                                        \"id_semaforo\": element.id,\r\n                                        \"id_actuacion_finaliza\": null,\r\n                                        \"id_dependencia_finaliza\": null,\r\n                                        \"id_usuario_finaliza\": getUsuarioAleatorio.id_funcionario\r\n                                    }\r\n                                }\r\n                            }    \r\n                            GenericApi.getByDataGeneric('set-finaliza-semaforo', data);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        )\r\n\r\n        const tituloModal = getNombreProceso.toUpperCase() + \" :: Enviar a alguien de secretaria común aleatoriamente\";\r\n        const mensajeModal = 'El proceso con radicado: ' + from.radicado + ' fue asignado al usuario: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ')  de la dependencia: ' + getUsuarioDependenciaNombre + '';\r\n\r\n        GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    validacionSpinnerFinalizar()\r\n\r\n                    GenericApi.getByIdGeneric('get-semaforo-evento', 4).then(\r\n                        datosSemaforo => {\r\n\r\n                            numeroTotalLlamadosFinalizar++\r\n                            validacionSpinnerFinalizar()\r\n\r\n                            if (!datosSemaforo.error) {\r\n\r\n                                datosSemaforo.data.forEach((element, index) => {\r\n                                    if (element.attributes.id_mas_evento_inicio.id == 4) {\r\n                                        if (!getListaSemaforosActivosSecretaria.some(objeto => objeto.id.toString() === element.id.toString())) {\r\n                                            if(element.attributes.id_mas_grupo_trabajo_inicia.id.toString() == getIdGrupoTrabajo.toString()){\r\n                                                let date = new Date();\r\n                                                let datapdxsemaforo = {\r\n                                                    \"data\": {\r\n                                                        \"type\": \"pdxsemaforo\",\r\n                                                        \"attributes\": {\r\n                                                            \"id_semaforo\": element.id,\r\n                                                            \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                                                            \"id_actuacion\": \"\",\r\n                                                            \"fecha_inicio\": date.toLocaleDateString('zh-Hans-CN'),\r\n                                                            \"estado\": 1,\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n\r\n                                                numeroTotalLlamadosFinalizar++\r\n\r\n                                                GenericApi.getByDataGeneric('pdxsemaforo', datapdxsemaforo).then(\r\n                                                    datosSemaforo => {\r\n                                                        numeroTotalLlamadosFinalizar++\r\n                                                        validacionSpinnerFinalizar()                                                        \r\n                                                    }\r\n                                                )\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                setModalState({ title: tituloModal.toUpperCase(), message: \"HA OCURRIDO UN ERROR CON LA SEMAFORIZACIÓN\", show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                            }\r\n                        }\r\n                    )\r\n                } else {\r\n                    setModalState({ title: tituloModal.toUpperCase(), message: datos.error.toString(), show: true, redirect: '/AntecedentesLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n\r\n        /*GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    GenericApi.getByIdGeneric('get-semaforo-evento', 4).then(\r\n                        datosSemaforo => {\r\n                            if (!datosSemaforo.error) {\r\n                                datosSemaforo.data.forEach(element => {\r\n                                    if (element.attributes.id_mas_evento_inicio.id == 4) {\r\n                                        if (element.attributes.id_mas_grupo_trabajo_inicia.id == getIdGrupoTrabajo) {\r\n                                            let date = new Date();\r\n                                            let datapdxsemaforo = {\r\n                                                \"data\": {\r\n                                                    \"type\": \"pdxsemaforo\",\r\n                                                    \"attributes\": {\r\n                                                        \"id_semaforo\": element.id,\r\n                                                        \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                                                        \"id_actuacion\": \"\",\r\n                                                        \"fecha_inicio\": date.toLocaleDateString('zh-Hans-CN'),\r\n                                                        \"estado\": 1,\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            GenericApi.addGeneric('pdxsemaforo', datapdxsemaforo)\r\n                                        }\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                setModalState({ title: tituiloModal.toUpperCase(), message: \"HA OCURRIDO UN ERROR CON LA SEMAFORIZACIÓN\", show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                            }\r\n                        }\r\n                    )\r\n                    setModalState({ title: tituiloModal.toUpperCase(), message: mensajeModal.toUpperCase(), show: true, redirect: '/MisPendientes', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                }\r\n                else {\r\n                    setModalState({ title: tituiloModal.toUpperCase(), message: datos.error.toString(), show: true, redirect: '/AntecedentesLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )*/\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if (name == \"grupoTrabajo\") {\r\n            setIdGrupoTrabajo(value);\r\n            cargarUsuariosPorGrupo(value);\r\n            cargarUsuarioAleatorio(value);\r\n        }\r\n    }\r\n\r\n    // consultamos la cantidad maxima de caracteres para el textarea\r\n    const obtenerParametros = () => {\r\n        try {\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.getByDataGeneric('parametro/parametro-nombre', data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (datos[\"data\"].length > 0) {\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                        }\r\n                    } else {\r\n                        window.showModal(1);\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n        }\r\n    }\r\n\r\n    const cargarUsuariosPorGrupo = (idGrupo) => {\r\n        window.showSpinner(true);\r\n        const tituloModal = getNombreProceso + \" :: Enviar a alguien de mi dependencia\";\r\n        GenericApi.getAllGeneric(\"usuario/get-usuarios-grupotrabajo/\"+idGrupo+\"/\"+procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setRespuestaUsuariosGrupoTrabajo(true);\r\n                    setListaUusariosDependencia(datos);\r\n                    window.showSpinner(false);\r\n                } else {\r\n                    setModalState({ title: tituloModal.toUpperCase(), message: datos.error.toString(), show: true, redirect: '/Transacciones', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const cargarUsuarioAleatorio = (idGrupo) => {\r\n        window.showSpinner(true);\r\n        const tituloModal = \"SINPROC No \" + from.radicado + \" :: Enviar a alguien de secretaria común\";\r\n        const mensajeModal = \"No existen usuarios que puedan atender este expediente\";\r\n        GenericApi.getAllGeneric(\"mas_grupo_trabajo/repartoAleatorio/\" + idGrupo + \"/\" + procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (datos != \"\") {\r\n                    if (!datos.error) {\r\n                        setRespuestaUsuarioAleatorio(true);\r\n                        setUsuarioAleatorio(datos);\r\n                        GenericApi.getGeneric('usuario/get-usuario-por-name/' + datos.nombre_funcionario).then(\r\n                            datos => {\r\n                                if (!datos.error) {\r\n                                    setUsuarioNombre(datos.data[0].attributes.nombre);\r\n                                    setUsuarioApellido(datos.data[0].attributes.apellido);\r\n                                    setUsuarioName(datos.data[0].attributes.name);\r\n                                    setUsuarioDependenciaNombre(datos.data[0].attributes.dependencia.nombre);\r\n                                    setUsuarioGruposTrabajo(datos.data[0].attributes.grupo_trabajo_secretaria_comun.split(','))\r\n                                    setExisteUsuarioValido(true);\r\n                                }\r\n                            }\r\n                        )\r\n                    } else {\r\n                        setModalState({ title: tituloModal.toUpperCase(), message: datos.error.toString(), show: true, redirect: '/Transacciones', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                        setExisteUsuarioValido(false);\r\n\r\n                    }\r\n                } else {\r\n                    setUsuarioNombre(\"\");\r\n                    setUsuarioApellido(\"\");\r\n                    setUsuarioName(\"\");\r\n                    setUsuarioDependenciaNombre(\"\");                    \r\n                    setUsuarioGruposTrabajo([]);\r\n                    setModalState({ title: tituloModal.toUpperCase(), message: mensajeModal.toUpperCase(), show: true, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    setExisteUsuarioValido(false);\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    informacion: '',\r\n                    usuario: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    setCountTextArea(valores.informacion.length)\r\n                    let errores = {}\r\n\r\n                    if (!valores.informacion) {\r\n                        errores.informacion = 'Debe ingresar un valor'\r\n                    }\r\n                    else if (valores.informacion.length <= getMinimoTextArea) {\r\n                        errores.informacion = 'La descripción debe tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                    }\r\n                    if (valores.informacion) {\r\n                        if (containsSpecialChars(valores.informacion))\r\n                            errores.informacion = 'Tiene caracteres inválidos'\r\n                    }\r\n\r\n                    return errores\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"w2d_block let\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <small>Enviar a alguien de secretaria común aleatoriamente</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">{getNombreProceso.toUpperCase()} <strong> :: ENVIAR A ALGUIEN DE SECRETARIA COMÚN ALEATORIAMENTE</strong></h3>\r\n                            </div>\r\n                            <div className=\"block-content\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"grupoTrabajo\">SELECCIONE EL GRUPO DE TRABAJO <span className=\"text-danger\">*</span></label>\r\n                                            <Field value={getIdGrupoTrabajo} onChange={handleInputChange} as=\"select\" className=\"form-control\" id=\"grupoTrabajo\" name=\"grupoTrabajo\">\r\n                                                <option value=\"\">Por favor seleccione</option>\r\n                                                {respuestaGrupoTrabajo ? selectGrupoTrabajo() : null}\r\n                                            </Field>\r\n                                            <ErrorMessage name=\"grupoTrabajo\" component={() => (<span className=\"text-danger\">{errors.grupoTrabajo}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                    {getExisteUsuarioValido ?\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>USUARIO A RECIBIR GESTION: </label> {getUsuarioNombre != \"\" ? \" \" + getUsuarioNombre.toUpperCase() + \" \" + getUsuarioApellido.toUpperCase() + \" (\" + getUsuarioName.toUpperCase() + \") DE LA DEPENDENCIA \" + getUsuarioDependenciaNombre.toUpperCase() : null}\r\n                                            </div>\r\n                                        </div> : null}\r\n                                    {getExisteUsuarioValido ?\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"informacion\">OBSERVACIONES <span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"textarea\" className=\"form-control\" id=\"informacion\" name=\"informacion\" rows=\"6\" placeholder=\"INFORMACIÓN PARA SU REMISIÓN...\"\r\n                                                    maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                                <div className=\"text-right\">\r\n                                                    <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                                </div>\r\n                                                <ErrorMessage name=\"informacion\" component={() => (<span className=\"text-danger\">{errors.informacion}</span>)} />\r\n                                            </div>\r\n                                        </div> : null}\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right\">\r\n                                    {getExisteUsuarioValido ?\r\n                                        <button type=\"submit\" className=\"btn btn-rounded btn-primary\">REMITIR</button>\r\n                                        : null}\r\n                                    <Link to={'/Transacciones'} state={{ from: from }} className=\"font-size-h5 font-w600\" >\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">CANCELAR</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EnviaraAlguienDeSecretariaComunAleatorio;"],"mappings":"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"},"metadata":{},"sourceType":"module"}