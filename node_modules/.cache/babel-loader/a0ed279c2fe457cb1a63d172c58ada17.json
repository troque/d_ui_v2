{"ast":null,"code":"import _objectWithoutProperties from \"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"alignment\", \"allowedPlacements\", \"autoAlignment\"],\n  _excluded2 = [\"mainAxis\", \"crossAxis\", \"fallbackPlacements\", \"fallbackStrategy\", \"flipAlignment\"],\n  _excluded3 = [\"strategy\"],\n  _excluded4 = [\"mainAxis\", \"crossAxis\", \"limiter\"],\n  _excluded5 = [\"apply\"];\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  var reference = _ref.reference,\n    floating = _ref.floating;\n  var commonX = reference.x + reference.width / 2 - floating.width / 2;\n  var commonY = reference.y + reference.height / 2 - floating.height / 2;\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var commonAlign = reference[length] / 2 - floating[length] / 2;\n  var side = getSide(placement);\n  var isVertical = mainAxis === 'x';\n  var coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\nvar computePosition = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(reference, floating, config) {\n    var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform, validMiddleware, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, resetCount, i, _validMiddleware$i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _config$placement = config.placement, placement = _config$placement === void 0 ? 'bottom' : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? 'absolute' : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform = config.platform;\n            validMiddleware = middleware.filter(Boolean);\n            _context.next = 4;\n            return platform.isRTL == null ? void 0 : platform.isRTL(floating);\n          case 4:\n            rtl = _context.sent;\n            if (!(process.env.NODE_ENV !== \"production\")) {\n              _context.next = 10;\n              break;\n            }\n            if (platform == null) {\n              console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n            }\n            if (!(validMiddleware.filter(function (_ref) {\n              var name = _ref.name;\n              return name === 'autoPlacement' || name === 'flip';\n            }).length > 1)) {\n              _context.next = 9;\n              break;\n            }\n            throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement` middleware', 'detected. This will lead to an infinite loop. Ensure only one of', 'either has been passed to the `middleware` array.'].join(' '));\n          case 9:\n            if (!reference || !floating) {\n              console.error(['Floating UI: The reference and/or floating element was not defined', 'when `computePosition()` was called. Ensure that both elements have', 'been created and can be measured.'].join(' '));\n            }\n          case 10:\n            _context.next = 12;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n          case 12:\n            rects = _context.sent;\n            _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;\n            statefulPlacement = placement;\n            middlewareData = {};\n            resetCount = 0;\n            i = 0;\n          case 18:\n            if (!(i < validMiddleware.length)) {\n              _context.next = 52;\n              break;\n            }\n            _validMiddleware$i = validMiddleware[i], name = _validMiddleware$i.name, fn = _validMiddleware$i.fn;\n            _context.next = 22;\n            return fn({\n              x: x,\n              y: y,\n              initialPlacement: placement,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData,\n              rects: rects,\n              platform: platform,\n              elements: {\n                reference: reference,\n                floating: floating\n              }\n            });\n          case 22:\n            _yield$fn = _context.sent;\n            nextX = _yield$fn.x;\n            nextY = _yield$fn.y;\n            data = _yield$fn.data;\n            reset = _yield$fn.reset;\n            x = nextX != null ? nextX : x;\n            y = nextY != null ? nextY : y;\n            middlewareData = _objectSpread(_objectSpread({}, middlewareData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, middlewareData[name]), data)));\n            if (process.env.NODE_ENV !== \"production\") {\n              if (resetCount > 50) {\n                console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n              }\n            }\n            if (!(reset && resetCount <= 50)) {\n              _context.next = 49;\n              break;\n            }\n            resetCount++;\n            if (!(typeof reset === 'object')) {\n              _context.next = 47;\n              break;\n            }\n            if (reset.placement) {\n              statefulPlacement = reset.placement;\n            }\n            if (!reset.rects) {\n              _context.next = 44;\n              break;\n            }\n            if (!(reset.rects === true)) {\n              _context.next = 42;\n              break;\n            }\n            _context.next = 39;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n          case 39:\n            _context.t0 = _context.sent;\n            _context.next = 43;\n            break;\n          case 42:\n            _context.t0 = reset.rects;\n          case 43:\n            rects = _context.t0;\n          case 44:\n            _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);\n            x = _computeCoordsFromPla2.x;\n            y = _computeCoordsFromPla2.y;\n          case 47:\n            i = -1;\n            return _context.abrupt(\"continue\", 49);\n          case 49:\n            i++;\n            _context.next = 18;\n            break;\n          case 52:\n            return _context.abrupt(\"return\", {\n              x: x,\n              y: y,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData\n            });\n          case 53:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function computePosition(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nfunction expandPaddingObject(padding) {\n  return _objectSpread({\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }, padding);\n}\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return _objectSpread(_objectSpread({}, rect), {}, {\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nfunction detectOverflow(_x4, _x5) {\n  return _detectOverflow.apply(this, arguments);\n}\nfunction _detectOverflow() {\n  _detectOverflow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(middlewareArguments, options) {\n    var _await$platform$isEle, x, y, platform, rects, elements, strategy, _options7, _options7$boundary, boundary, _options7$rootBoundar, rootBoundary, _options7$elementCont, elementContext, _options7$altBoundary, altBoundary, _options7$padding, padding, paddingObject, altContext, element, clippingClientRect, elementClientRect;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (options === void 0) {\n              options = {};\n            }\n            x = middlewareArguments.x, y = middlewareArguments.y, platform = middlewareArguments.platform, rects = middlewareArguments.rects, elements = middlewareArguments.elements, strategy = middlewareArguments.strategy;\n            _options7 = options, _options7$boundary = _options7.boundary, boundary = _options7$boundary === void 0 ? 'clippingAncestors' : _options7$boundary, _options7$rootBoundar = _options7.rootBoundary, rootBoundary = _options7$rootBoundar === void 0 ? 'viewport' : _options7$rootBoundar, _options7$elementCont = _options7.elementContext, elementContext = _options7$elementCont === void 0 ? 'floating' : _options7$elementCont, _options7$altBoundary = _options7.altBoundary, altBoundary = _options7$altBoundary === void 0 ? false : _options7$altBoundary, _options7$padding = _options7.padding, padding = _options7$padding === void 0 ? 0 : _options7$padding;\n            paddingObject = getSideObjectFromPadding(padding);\n            altContext = elementContext === 'floating' ? 'reference' : 'floating';\n            element = elements[altBoundary ? altContext : elementContext];\n            _context10.t0 = rectToClientRect;\n            _context10.t1 = platform;\n            _context10.next = 10;\n            return platform.isElement == null ? void 0 : platform.isElement(element);\n          case 10:\n            _context10.t2 = _await$platform$isEle = _context10.sent;\n            if (!(_context10.t2 != null)) {\n              _context10.next = 15;\n              break;\n            }\n            _context10.t3 = _await$platform$isEle;\n            _context10.next = 16;\n            break;\n          case 15:\n            _context10.t3 = true;\n          case 16:\n            if (!_context10.t3) {\n              _context10.next = 20;\n              break;\n            }\n            _context10.t4 = element;\n            _context10.next = 26;\n            break;\n          case 20:\n            _context10.t5 = element.contextElement;\n            if (_context10.t5) {\n              _context10.next = 25;\n              break;\n            }\n            _context10.next = 24;\n            return platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating);\n          case 24:\n            _context10.t5 = _context10.sent;\n          case 25:\n            _context10.t4 = _context10.t5;\n          case 26:\n            _context10.t6 = _context10.t4;\n            _context10.t7 = boundary;\n            _context10.t8 = rootBoundary;\n            _context10.t9 = strategy;\n            _context10.t10 = {\n              element: _context10.t6,\n              boundary: _context10.t7,\n              rootBoundary: _context10.t8,\n              strategy: _context10.t9\n            };\n            _context10.next = 33;\n            return _context10.t1.getClippingRect.call(_context10.t1, _context10.t10);\n          case 33:\n            _context10.t11 = _context10.sent;\n            clippingClientRect = (0, _context10.t0)(_context10.t11);\n            _context10.t12 = rectToClientRect;\n            if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n              _context10.next = 49;\n              break;\n            }\n            _context10.t14 = platform;\n            _context10.t15 = elementContext === 'floating' ? _objectSpread(_objectSpread({}, rects.floating), {}, {\n              x: x,\n              y: y\n            }) : rects.reference;\n            _context10.next = 41;\n            return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n          case 41:\n            _context10.t16 = _context10.sent;\n            _context10.t17 = strategy;\n            _context10.t18 = {\n              rect: _context10.t15,\n              offsetParent: _context10.t16,\n              strategy: _context10.t17\n            };\n            _context10.next = 46;\n            return _context10.t14.convertOffsetParentRelativeRectToViewportRelativeRect.call(_context10.t14, _context10.t18);\n          case 46:\n            _context10.t13 = _context10.sent;\n            _context10.next = 50;\n            break;\n          case 49:\n            _context10.t13 = rects[elementContext];\n          case 50:\n            _context10.t19 = _context10.t13;\n            elementClientRect = (0, _context10.t12)(_context10.t19);\n            return _context10.abrupt(\"return\", {\n              top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n              bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n              left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n              right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n            });\n          case 53:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _detectOverflow.apply(this, arguments);\n}\nvar min = Math.min;\nvar max = Math.max;\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nvar arrow = function arrow(options) {\n  return {\n    name: 'arrow',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _data, _ref4;\n        var _ref3, element, _ref3$padding, padding, x, y, placement, rects, platform, paddingObject, coords, axis, alignment, length, arrowDimensions, minProp, maxProp, endDiff, startDiff, arrowOffsetParent, clientSize, centerToReference, min, max, center, offset, alignmentPadding, shouldAddOffset, alignmentOffset;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Since `element` is required, we don't Partial<> the type\n                _ref3 = options != null ? options : {}, element = _ref3.element, _ref3$padding = _ref3.padding, padding = _ref3$padding === void 0 ? 0 : _ref3$padding;\n                x = middlewareArguments.x, y = middlewareArguments.y, placement = middlewareArguments.placement, rects = middlewareArguments.rects, platform = middlewareArguments.platform;\n                if (!(element == null)) {\n                  _context2.next = 5;\n                  break;\n                }\n                if (process.env.NODE_ENV !== \"production\") {\n                  console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n                }\n                return _context2.abrupt(\"return\", {});\n              case 5:\n                paddingObject = getSideObjectFromPadding(padding);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                axis = getMainAxisFromPlacement(placement);\n                alignment = getAlignment(placement);\n                length = getLengthFromAxis(axis);\n                _context2.next = 12;\n                return platform.getDimensions(element);\n              case 12:\n                arrowDimensions = _context2.sent;\n                minProp = axis === 'y' ? 'top' : 'left';\n                maxProp = axis === 'y' ? 'bottom' : 'right';\n                endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n                startDiff = coords[axis] - rects.reference[axis];\n                _context2.next = 19;\n                return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);\n              case 19:\n                arrowOffsetParent = _context2.sent;\n                clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n                if (clientSize === 0) {\n                  clientSize = rects.floating[length];\n                }\n                centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n                // point is outside the floating element's bounds\n                min = paddingObject[minProp];\n                max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n                center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n                offset = within(min, center, max); // Make sure that arrow points at the reference\n                alignmentPadding = alignment === 'start' ? paddingObject[minProp] : paddingObject[maxProp];\n                shouldAddOffset = alignmentPadding > 0 && center !== offset && rects.reference[length] <= rects.floating[length];\n                alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n                return _context2.abrupt(\"return\", (_ref4 = {}, _defineProperty(_ref4, axis, coords[axis] - alignmentOffset), _defineProperty(_ref4, \"data\", (_data = {}, _defineProperty(_data, axis, offset), _defineProperty(_data, \"centerOffset\", center - offset), _data)), _ref4));\n              case 31:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n};\nvar hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash$1[matched];\n  });\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  var alignment = getAlignment(placement);\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\nvar hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}\nvar sides = ['top', 'right', 'bottom', 'left'];\nvar allPlacements = /*#__PURE__*/sides.reduce(function (acc, side) {\n  return acc.concat(side, side + \"-start\", side + \"-end\");\n}, []);\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  var allowedPlacementsSortedByAlignment = alignment ? [].concat(_toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) === alignment;\n  })), _toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) !== alignment;\n  }))) : allowedPlacements.filter(function (placement) {\n    return getSide(placement) === placement;\n  });\n  return allowedPlacementsSortedByAlignment.filter(function (placement) {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nvar autoPlacement = function autoPlacement(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _placementsSortedByLe, x, y, rects, middlewareData, placement, platform, elements, _options, _options$alignment, alignment, _options$allowedPlace, allowedPlacements, _options$autoAlignmen, autoAlignment, detectOverflowOptions, placements, overflow, currentIndex, currentPlacement, _getAlignmentSides, main, cross, currentOverflows, allOverflows, nextPlacement, placementsSortedByLeastOverflow, placementThatFitsOnAllSides, resetPlacement;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                x = middlewareArguments.x, y = middlewareArguments.y, rects = middlewareArguments.rects, middlewareData = middlewareArguments.middlewareData, placement = middlewareArguments.placement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n                _options = options, _options$alignment = _options.alignment, alignment = _options$alignment === void 0 ? null : _options$alignment, _options$allowedPlace = _options.allowedPlacements, allowedPlacements = _options$allowedPlace === void 0 ? allPlacements : _options$allowedPlace, _options$autoAlignmen = _options.autoAlignment, autoAlignment = _options$autoAlignmen === void 0 ? true : _options$autoAlignmen, detectOverflowOptions = _objectWithoutProperties(_options, _excluded);\n                placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n                _context3.next = 5;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n              case 5:\n                overflow = _context3.sent;\n                currentIndex = (_middlewareData$autoP = (_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.index) != null ? _middlewareData$autoP : 0;\n                currentPlacement = placements[currentIndex];\n                if (!(currentPlacement == null)) {\n                  _context3.next = 10;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {});\n              case 10:\n                _context3.t0 = getAlignmentSides;\n                _context3.t1 = currentPlacement;\n                _context3.t2 = rects;\n                _context3.next = 15;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n              case 15:\n                _context3.t3 = _context3.sent;\n                _getAlignmentSides = (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3);\n                main = _getAlignmentSides.main;\n                cross = _getAlignmentSides.cross;\n                if (!(placement !== currentPlacement)) {\n                  _context3.next = 21;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {\n                  x: x,\n                  y: y,\n                  reset: {\n                    placement: placements[0]\n                  }\n                });\n              case 21:\n                currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n                allOverflows = [].concat(_toConsumableArray((_middlewareData$autoP3 = (_middlewareData$autoP4 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP4.overflows) != null ? _middlewareData$autoP3 : []), [{\n                  placement: currentPlacement,\n                  overflows: currentOverflows\n                }]);\n                nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n                if (!nextPlacement) {\n                  _context3.next = 26;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n              case 26:\n                placementsSortedByLeastOverflow = allOverflows.slice().sort(function (a, b) {\n                  return a.overflows[0] - b.overflows[0];\n                });\n                placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(function (_ref) {\n                  var overflows = _ref.overflows;\n                  return overflows.every(function (overflow) {\n                    return overflow <= 0;\n                  });\n                })) == null ? void 0 : _placementsSortedByLe.placement;\n                resetPlacement = placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement;\n                if (!(resetPlacement !== placement)) {\n                  _context3.next = 31;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n              case 31:\n                return _context3.abrupt(\"return\", {});\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n};\nfunction getExpandedPlacements(placement) {\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\nvar flip = function flip(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _middlewareData$flip, placement, middlewareData, rects, initialPlacement, platform, elements, _options2, _options2$mainAxis, checkMainAxis, _options2$crossAxis, checkCrossAxis, specifiedFallbackPlacements, _options2$fallbackStr, fallbackStrategy, _options2$flipAlignme, flipAlignment, detectOverflowOptions, side, isBasePlacement, fallbackPlacements, placements, overflow, overflows, overflowsData, _getAlignmentSides2, main, cross, _middlewareData$flip$, _middlewareData$flip2, nextIndex, nextPlacement, resetPlacement, _overflowsData$map$so, _placement;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                placement = middlewareArguments.placement, middlewareData = middlewareArguments.middlewareData, rects = middlewareArguments.rects, initialPlacement = middlewareArguments.initialPlacement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n                _options2 = options, _options2$mainAxis = _options2.mainAxis, checkMainAxis = _options2$mainAxis === void 0 ? true : _options2$mainAxis, _options2$crossAxis = _options2.crossAxis, checkCrossAxis = _options2$crossAxis === void 0 ? true : _options2$crossAxis, specifiedFallbackPlacements = _options2.fallbackPlacements, _options2$fallbackStr = _options2.fallbackStrategy, fallbackStrategy = _options2$fallbackStr === void 0 ? 'bestFit' : _options2$fallbackStr, _options2$flipAlignme = _options2.flipAlignment, flipAlignment = _options2$flipAlignme === void 0 ? true : _options2$flipAlignme, detectOverflowOptions = _objectWithoutProperties(_options2, _excluded2);\n                side = getSide(placement);\n                isBasePlacement = side === initialPlacement;\n                fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n                placements = [initialPlacement].concat(_toConsumableArray(fallbackPlacements));\n                _context4.next = 8;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n              case 8:\n                overflow = _context4.sent;\n                overflows = [];\n                overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n                if (checkMainAxis) {\n                  overflows.push(overflow[side]);\n                }\n                if (!checkCrossAxis) {\n                  _context4.next = 23;\n                  break;\n                }\n                _context4.t0 = getAlignmentSides;\n                _context4.t1 = placement;\n                _context4.t2 = rects;\n                _context4.next = 18;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n              case 18:\n                _context4.t3 = _context4.sent;\n                _getAlignmentSides2 = (0, _context4.t0)(_context4.t1, _context4.t2, _context4.t3);\n                main = _getAlignmentSides2.main;\n                cross = _getAlignmentSides2.cross;\n                overflows.push(overflow[main], overflow[cross]);\n              case 23:\n                overflowsData = [].concat(_toConsumableArray(overflowsData), [{\n                  placement: placement,\n                  overflows: overflows\n                }]); // One or more sides is overflowing\n                if (overflows.every(function (side) {\n                  return side <= 0;\n                })) {\n                  _context4.next = 40;\n                  break;\n                }\n                nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;\n                nextPlacement = placements[nextIndex];\n                if (!nextPlacement) {\n                  _context4.next = 29;\n                  break;\n                }\n                return _context4.abrupt(\"return\", {\n                  data: {\n                    index: nextIndex,\n                    overflows: overflowsData\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n              case 29:\n                resetPlacement = 'bottom';\n                _context4.t4 = fallbackStrategy;\n                _context4.next = _context4.t4 === 'bestFit' ? 33 : _context4.t4 === 'initialPlacement' ? 36 : 38;\n                break;\n              case 33:\n                _placement = (_overflowsData$map$so = overflowsData.map(function (d) {\n                  return [d, d.overflows.filter(function (overflow) {\n                    return overflow > 0;\n                  }).reduce(function (acc, overflow) {\n                    return acc + overflow;\n                  }, 0)];\n                }).sort(function (a, b) {\n                  return a[1] - b[1];\n                })[0]) == null ? void 0 : _overflowsData$map$so[0].placement;\n                if (_placement) {\n                  resetPlacement = _placement;\n                }\n                return _context4.abrupt(\"break\", 38);\n              case 36:\n                resetPlacement = initialPlacement;\n                return _context4.abrupt(\"break\", 38);\n              case 38:\n                if (!(placement !== resetPlacement)) {\n                  _context4.next = 40;\n                  break;\n                }\n                return _context4.abrupt(\"return\", {\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n              case 40:\n                return _context4.abrupt(\"return\", {});\n              case 41:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  };\n};\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nvar hide = function hide(_temp) {\n  var _ref5 = _temp === void 0 ? {} : _temp,\n    _ref5$strategy = _ref5.strategy,\n    strategy = _ref5$strategy === void 0 ? 'referenceHidden' : _ref5$strategy,\n    detectOverflowOptions = _objectWithoutProperties(_ref5, _excluded3);\n  return {\n    name: 'hide',\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var rects, overflow, offsets, _overflow, _offsets;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                rects = middlewareArguments.rects;\n                _context5.t0 = strategy;\n                _context5.next = _context5.t0 === 'referenceHidden' ? 4 : _context5.t0 === 'escaped' ? 9 : 14;\n                break;\n              case 4:\n                _context5.next = 6;\n                return detectOverflow(middlewareArguments, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  elementContext: 'reference'\n                }));\n              case 6:\n                overflow = _context5.sent;\n                offsets = getSideOffsets(overflow, rects.reference);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    referenceHiddenOffsets: offsets,\n                    referenceHidden: isAnySideFullyClipped(offsets)\n                  }\n                });\n              case 9:\n                _context5.next = 11;\n                return detectOverflow(middlewareArguments, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  altBoundary: true\n                }));\n              case 11:\n                _overflow = _context5.sent;\n                _offsets = getSideOffsets(_overflow, rects.floating);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    escapedOffsets: _offsets,\n                    escaped: isAnySideFullyClipped(_offsets)\n                  }\n                });\n              case 14:\n                return _context5.abrupt(\"return\", {});\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  };\n};\nfunction convertValueToCoords(_x6, _x7) {\n  return _convertValueToCoords.apply(this, arguments);\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\nfunction _convertValueToCoords() {\n  _convertValueToCoords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(middlewareArguments, value) {\n    var placement, platform, elements, rtl, side, alignment, isVertical, mainAxisMulti, crossAxisMulti, rawValue, _ref7, mainAxis, crossAxis, alignmentAxis;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            placement = middlewareArguments.placement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n            _context11.next = 3;\n            return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n          case 3:\n            rtl = _context11.sent;\n            side = getSide(placement);\n            alignment = getAlignment(placement);\n            isVertical = getMainAxisFromPlacement(placement) === 'x';\n            mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n            crossAxisMulti = rtl && isVertical ? -1 : 1;\n            rawValue = typeof value === 'function' ? value(middlewareArguments) : value; // eslint-disable-next-line prefer-const\n            _ref7 = typeof rawValue === 'number' ? {\n              mainAxis: rawValue,\n              crossAxis: 0,\n              alignmentAxis: null\n            } : _objectSpread({\n              mainAxis: 0,\n              crossAxis: 0,\n              alignmentAxis: null\n            }, rawValue), mainAxis = _ref7.mainAxis, crossAxis = _ref7.crossAxis, alignmentAxis = _ref7.alignmentAxis;\n            if (alignment && typeof alignmentAxis === 'number') {\n              crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n            }\n            return _context11.abrupt(\"return\", isVertical ? {\n              x: crossAxis * crossAxisMulti,\n              y: mainAxis * mainAxisMulti\n            } : {\n              x: mainAxis * mainAxisMulti,\n              y: crossAxis * crossAxisMulti\n            });\n          case 13:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _convertValueToCoords.apply(this, arguments);\n}\nvar offset = function offset(value) {\n  if (value === void 0) {\n    value = 0;\n  }\n  return {\n    name: 'offset',\n    options: value,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var x, y, diffCoords;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                x = middlewareArguments.x, y = middlewareArguments.y;\n                _context6.next = 3;\n                return convertValueToCoords(middlewareArguments, value);\n              case 3:\n                diffCoords = _context6.sent;\n                return _context6.abrupt(\"return\", {\n                  x: x + diffCoords.x,\n                  y: y + diffCoords.y,\n                  data: diffCoords\n                });\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  };\n};\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nvar shift = function shift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var _objectSpread3;\n        var x, y, placement, _options3, _options3$mainAxis, checkMainAxis, _options3$crossAxis, checkCrossAxis, _options3$limiter, limiter, detectOverflowOptions, coords, overflow, mainAxis, crossAxis, mainAxisCoord, crossAxisCoord, minSide, maxSide, _min, _max, _minSide, _maxSide, _min2, _max2, limitedCoords;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                x = middlewareArguments.x, y = middlewareArguments.y, placement = middlewareArguments.placement;\n                _options3 = options, _options3$mainAxis = _options3.mainAxis, checkMainAxis = _options3$mainAxis === void 0 ? true : _options3$mainAxis, _options3$crossAxis = _options3.crossAxis, checkCrossAxis = _options3$crossAxis === void 0 ? false : _options3$crossAxis, _options3$limiter = _options3.limiter, limiter = _options3$limiter === void 0 ? {\n                  fn: function fn(_ref) {\n                    var x = _ref.x,\n                      y = _ref.y;\n                    return {\n                      x: x,\n                      y: y\n                    };\n                  }\n                } : _options3$limiter, detectOverflowOptions = _objectWithoutProperties(_options3, _excluded4);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                _context7.next = 5;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n              case 5:\n                overflow = _context7.sent;\n                mainAxis = getMainAxisFromPlacement(getSide(placement));\n                crossAxis = getCrossAxis(mainAxis);\n                mainAxisCoord = coords[mainAxis];\n                crossAxisCoord = coords[crossAxis];\n                if (checkMainAxis) {\n                  minSide = mainAxis === 'y' ? 'top' : 'left';\n                  maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n                  _min = mainAxisCoord + overflow[minSide];\n                  _max = mainAxisCoord - overflow[maxSide];\n                  mainAxisCoord = within(_min, mainAxisCoord, _max);\n                }\n                if (checkCrossAxis) {\n                  _minSide = crossAxis === 'y' ? 'top' : 'left';\n                  _maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n                  _min2 = crossAxisCoord + overflow[_minSide];\n                  _max2 = crossAxisCoord - overflow[_maxSide];\n                  crossAxisCoord = within(_min2, crossAxisCoord, _max2);\n                }\n                limitedCoords = limiter.fn(_objectSpread(_objectSpread({}, middlewareArguments), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, mainAxis, mainAxisCoord), _defineProperty(_objectSpread3, crossAxis, crossAxisCoord), _objectSpread3)));\n                return _context7.abrupt(\"return\", _objectSpread(_objectSpread({}, limitedCoords), {}, {\n                  data: {\n                    x: limitedCoords.x - x,\n                    y: limitedCoords.y - y\n                  }\n                }));\n              case 14:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    }\n  };\n};\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nvar limitShift = function limitShift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options: options,\n    fn: function fn(middlewareArguments) {\n      var _ref6;\n      var x = middlewareArguments.x,\n        y = middlewareArguments.y,\n        placement = middlewareArguments.placement,\n        rects = middlewareArguments.rects,\n        middlewareData = middlewareArguments.middlewareData;\n      var _options4 = options,\n        _options4$offset = _options4.offset,\n        offset = _options4$offset === void 0 ? 0 : _options4$offset,\n        _options4$mainAxis = _options4.mainAxis,\n        checkMainAxis = _options4$mainAxis === void 0 ? true : _options4$mainAxis,\n        _options4$crossAxis = _options4.crossAxis,\n        checkCrossAxis = _options4$crossAxis === void 0 ? true : _options4$crossAxis;\n      var coords = {\n        x: x,\n        y: y\n      };\n      var mainAxis = getMainAxisFromPlacement(placement);\n      var crossAxis = getCrossAxis(mainAxis);\n      var mainAxisCoord = coords[mainAxis];\n      var crossAxisCoord = coords[crossAxis];\n      var rawOffset = typeof offset === 'function' ? offset(middlewareArguments) : offset;\n      var computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : _objectSpread({\n        mainAxis: 0,\n        crossAxis: 0\n      }, rawOffset);\n      if (checkMainAxis) {\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        var limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        var limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n        var _len = mainAxis === 'y' ? 'width' : 'height';\n        var isOriginSide = ['top', 'left'].includes(getSide(placement));\n        var _limitMin = rects.reference[crossAxis] - rects.floating[_len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        var _limitMax = rects.reference[crossAxis] + rects.reference[_len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < _limitMin) {\n          crossAxisCoord = _limitMin;\n        } else if (crossAxisCoord > _limitMax) {\n          crossAxisCoord = _limitMax;\n        }\n      }\n      return _ref6 = {}, _defineProperty(_ref6, mainAxis, mainAxisCoord), _defineProperty(_ref6, crossAxis, crossAxisCoord), _ref6;\n    }\n  };\n};\n\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\nvar size = function size(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var placement, rects, platform, elements, _options5, _options5$apply, apply, detectOverflowOptions, overflow, side, alignment, heightSide, widthSide, xMin, xMax, yMin, yMax, dimensions, nextDimensions;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                placement = middlewareArguments.placement, rects = middlewareArguments.rects, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n                _options5 = options, _options5$apply = _options5.apply, apply = _options5$apply === void 0 ? function () {} : _options5$apply, detectOverflowOptions = _objectWithoutProperties(_options5, _excluded5);\n                _context8.next = 4;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n              case 4:\n                overflow = _context8.sent;\n                side = getSide(placement);\n                alignment = getAlignment(placement);\n                if (!(side === 'top' || side === 'bottom')) {\n                  _context8.next = 26;\n                  break;\n                }\n                heightSide = side;\n                _context8.t0 = alignment;\n                _context8.next = 12;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n              case 12:\n                if (!_context8.sent) {\n                  _context8.next = 16;\n                  break;\n                }\n                _context8.t1 = 'start';\n                _context8.next = 17;\n                break;\n              case 16:\n                _context8.t1 = 'end';\n              case 17:\n                _context8.t2 = _context8.t1;\n                if (!(_context8.t0 === _context8.t2)) {\n                  _context8.next = 22;\n                  break;\n                }\n                _context8.t3 = 'left';\n                _context8.next = 23;\n                break;\n              case 22:\n                _context8.t3 = 'right';\n              case 23:\n                widthSide = _context8.t3;\n                _context8.next = 28;\n                break;\n              case 26:\n                widthSide = side;\n                heightSide = alignment === 'end' ? 'top' : 'bottom';\n              case 28:\n                xMin = max(overflow.left, 0);\n                xMax = max(overflow.right, 0);\n                yMin = max(overflow.top, 0);\n                yMax = max(overflow.bottom, 0);\n                dimensions = {\n                  availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n                  availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n                };\n                _context8.next = 35;\n                return apply(_objectSpread(_objectSpread({}, middlewareArguments), dimensions));\n              case 35:\n                _context8.next = 37;\n                return platform.getDimensions(elements.floating);\n              case 37:\n                nextDimensions = _context8.sent;\n                if (!(rects.floating.width !== nextDimensions.width || rects.floating.height !== nextDimensions.height)) {\n                  _context8.next = 40;\n                  break;\n                }\n                return _context8.abrupt(\"return\", {\n                  reset: {\n                    rects: true\n                  }\n                });\n              case 40:\n                return _context8.abrupt(\"return\", {});\n              case 41:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  };\n};\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nvar inline = function inline(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _await$platform$getCl, placement, elements, rects, platform, strategy, _options6, _options6$padding, padding, x, y, fallback, clientRects, paddingObject, getBoundingClientRect, resetRects;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                getBoundingClientRect = function _getBoundingClientRec() {\n                  // There are two rects and they are disjoined\n                  if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n                    var _clientRects$find;\n\n                    // Find the first rect in which the point is fully inside\n                    return (_clientRects$find = clientRects.find(function (rect) {\n                      return x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom;\n                    })) != null ? _clientRects$find : fallback;\n                  } // There are 2 or more connected rects\n\n                  if (clientRects.length >= 2) {\n                    if (getMainAxisFromPlacement(placement) === 'x') {\n                      var firstRect = clientRects[0];\n                      var lastRect = clientRects[clientRects.length - 1];\n                      var isTop = getSide(placement) === 'top';\n                      var _top = firstRect.top;\n                      var _bottom = lastRect.bottom;\n                      var _left = isTop ? firstRect.left : lastRect.left;\n                      var _right = isTop ? firstRect.right : lastRect.right;\n                      var _width = _right - _left;\n                      var _height = _bottom - _top;\n                      return {\n                        top: _top,\n                        bottom: _bottom,\n                        left: _left,\n                        right: _right,\n                        width: _width,\n                        height: _height,\n                        x: _left,\n                        y: _top\n                      };\n                    }\n                    var isLeftSide = getSide(placement) === 'left';\n                    var maxRight = max.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.right;\n                    })));\n                    var minLeft = min.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.left;\n                    })));\n                    var measureRects = clientRects.filter(function (rect) {\n                      return isLeftSide ? rect.left === minLeft : rect.right === maxRight;\n                    });\n                    var top = measureRects[0].top;\n                    var bottom = measureRects[measureRects.length - 1].bottom;\n                    var left = minLeft;\n                    var right = maxRight;\n                    var width = right - left;\n                    var height = bottom - top;\n                    return {\n                      top: top,\n                      bottom: bottom,\n                      left: left,\n                      right: right,\n                      width: width,\n                      height: height,\n                      x: left,\n                      y: top\n                    };\n                  }\n                  return fallback;\n                };\n                placement = middlewareArguments.placement, elements = middlewareArguments.elements, rects = middlewareArguments.rects, platform = middlewareArguments.platform, strategy = middlewareArguments.strategy; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n                // ClientRect's bounds, despite the event listener being triggered. A\n                // padding of 2 seems to handle this issue.\n                _options6 = options, _options6$padding = _options6.padding, padding = _options6$padding === void 0 ? 2 : _options6$padding, x = _options6.x, y = _options6.y;\n                _context9.t0 = rectToClientRect;\n                if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n                  _context9.next = 17;\n                  break;\n                }\n                _context9.t2 = platform;\n                _context9.t3 = rects.reference;\n                _context9.next = 9;\n                return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n              case 9:\n                _context9.t4 = _context9.sent;\n                _context9.t5 = strategy;\n                _context9.t6 = {\n                  rect: _context9.t3,\n                  offsetParent: _context9.t4,\n                  strategy: _context9.t5\n                };\n                _context9.next = 14;\n                return _context9.t2.convertOffsetParentRelativeRectToViewportRelativeRect.call(_context9.t2, _context9.t6);\n              case 14:\n                _context9.t1 = _context9.sent;\n                _context9.next = 18;\n                break;\n              case 17:\n                _context9.t1 = rects.reference;\n              case 18:\n                _context9.t7 = _context9.t1;\n                fallback = (0, _context9.t0)(_context9.t7);\n                _context9.next = 22;\n                return platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference);\n              case 22:\n                _context9.t8 = _await$platform$getCl = _context9.sent;\n                if (!(_context9.t8 != null)) {\n                  _context9.next = 27;\n                  break;\n                }\n                _context9.t9 = _await$platform$getCl;\n                _context9.next = 28;\n                break;\n              case 27:\n                _context9.t9 = [];\n              case 28:\n                clientRects = _context9.t9;\n                paddingObject = getSideObjectFromPadding(padding);\n                _context9.next = 32;\n                return platform.getElementRects({\n                  reference: {\n                    getBoundingClientRect: getBoundingClientRect\n                  },\n                  floating: elements.floating,\n                  strategy: strategy\n                });\n              case 32:\n                resetRects = _context9.sent;\n                if (!(rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height)) {\n                  _context9.next = 35;\n                  break;\n                }\n                return _context9.abrupt(\"return\", {\n                  reset: {\n                    rects: resetRects\n                  }\n                });\n              case 35:\n                return _context9.abrupt(\"return\", {});\n              case 36:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    }\n  };\n};\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };","map":{"version":3,"names":["getSide","placement","split","getAlignment","getMainAxisFromPlacement","includes","getLengthFromAxis","axis","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","process","env","NODE_ENV","console","error","join","name","Error","getElementRects","rects","statefulPlacement","middlewareData","resetCount","i","fn","initialPlacement","elements","nextX","nextY","data","reset","warn","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","middlewareArguments","options","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","isElement","_await$platform$isEle","contextElement","getDocumentElement","getClippingRect","clippingClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getOffsetParent","offsetParent","elementClientRect","min","Math","max","within","min$1","value","max$1","arrow","alignment","getDimensions","arrowDimensions","minProp","maxProp","endDiff","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","center","offset","alignmentPadding","shouldAddOffset","alignmentOffset","hash$1","getOppositePlacement","replace","matched","getAlignmentSides","mainAlignmentSide","main","cross","hash","start","end","getOppositeAlignmentPlacement","sides","allPlacements","reduce","acc","concat","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","detectOverflowOptions","placements","overflow","currentIndex","_middlewareData$autoP","_middlewareData$autoP2","index","currentPlacement","currentOverflows","allOverflows","_middlewareData$autoP3","_middlewareData$autoP4","overflows","nextPlacement","placementsSortedByLeastOverflow","slice","sort","a","b","placementThatFitsOnAllSides","_placementsSortedByLe","find","every","resetPlacement","getExpandedPlacements","oppositePlacement","flip","checkMainAxis","crossAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackPlacements","fallbackStrategy","flipAlignment","isBasePlacement","overflowsData","_middlewareData$flip","push","nextIndex","_middlewareData$flip$","_middlewareData$flip2","_overflowsData$map$so","map","d","getSideOffsets","isAnySideFullyClipped","some","hide","_temp","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","alignmentAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","_middlewareData$offse3","_middlewareData$offse4","isOriginSide","size","apply","heightSide","widthSide","xMin","xMax","yMin","yMax","dimensions","availableHeight","availableWidth","nextDimensions","inline","getBoundingClientRect","clientRects","_clientRects$find","fallback","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","getClientRects","_await$platform$getCl","resetRects"],"sources":["C:/w2d/personeria/personeria-ui/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js"],"sourcesContent":["function getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (platform == null) {\n      console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n    }\n\n    if (validMiddleware.filter(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === 'autoPlacement' || name === 'flip';\n    }).length > 1) {\n      throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement` middleware', 'detected. This will lead to an infinite loop. Ensure only one of', 'either has been passed to the `middleware` array.'].join(' '));\n    }\n\n    if (!reference || !floating) {\n      console.error(['Floating UI: The reference and/or floating element was not defined', 'when `computePosition()` was called. Ensure that both elements have', 'been created and can be measured.'].join(' '));\n    }\n  }\n\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = { ...middlewareData,\n      [name]: { ...middlewareData[name],\n        ...data\n      }\n    };\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (resetCount > 50) {\n        console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n      }\n    }\n\n    if (reset && resetCount <= 50) {\n      resetCount++;\n\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n\n      i = -1;\n      continue;\n    }\n  }\n\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return { ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(middlewareArguments, options) {\n  var _await$platform$isEle;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = middlewareArguments;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect: elementContext === 'floating' ? { ...rects.floating,\n      x,\n      y\n    } : rects.reference,\n    offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n    strategy\n  }) : rects[elementContext]);\n  return {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n\n  async fn(middlewareArguments) {\n    // Since `element` is required, we don't Partial<> the type\n    const {\n      element,\n      padding = 0\n    } = options != null ? options : {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = middlewareArguments;\n\n    if (element == null) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n      }\n\n      return {};\n    }\n\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const alignment = getAlignment(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n\n    if (clientSize === 0) {\n      clientSize = rects.floating[length];\n    }\n\n    const centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds\n\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max); // Make sure that arrow points at the reference\n\n    const alignmentPadding = alignment === 'start' ? paddingObject[minProp] : paddingObject[maxProp];\n    const shouldAddOffset = alignmentPadding > 0 && center !== offset && rects.reference[length] <= rects.floating[length];\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n\n});\n\nconst hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, matched => hash$1[matched]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, matched => hash[matched]);\n}\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _placementsSortedByLe;\n\n      const {\n        x,\n        y,\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        alignment = null,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const currentIndex = (_middlewareData$autoP = (_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.index) != null ? _middlewareData$autoP : 0;\n      const currentPlacement = placements[currentIndex];\n\n      if (currentPlacement == null) {\n        return {};\n      }\n\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))); // Make `computeCoords` start from the right place\n\n      if (placement !== currentPlacement) {\n        return {\n          x,\n          y,\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...((_middlewareData$autoP3 = (_middlewareData$autoP4 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP4.overflows) != null ? _middlewareData$autoP3 : []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n\n      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n        let {\n          overflows\n        } = _ref;\n        return overflows.every(overflow => overflow <= 0);\n      })) == null ? void 0 : _placementsSortedByLe.placement;\n      const resetPlacement = placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement;\n\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$flip;\n\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = side === initialPlacement;\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n        overflows.push(overflow[main], overflow[cross]);\n      }\n\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }]; // One or more sides is overflowing\n\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip$, _middlewareData$flip2;\n\n        const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;\n        const nextPlacement = placements[nextIndex];\n\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        let resetPlacement = 'bottom';\n\n        switch (fallbackStrategy) {\n          case 'bestFit':\n            {\n              var _overflowsData$map$so;\n\n              const placement = (_overflowsData$map$so = overflowsData.map(d => [d, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0].placement;\n\n              if (placement) {\n                resetPlacement = placement;\n              }\n\n              break;\n            }\n\n          case 'initialPlacement':\n            resetPlacement = initialPlacement;\n            break;\n        }\n\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (_temp) {\n  let {\n    strategy = 'referenceHidden',\n    ...detectOverflowOptions\n  } = _temp === void 0 ? {} : _temp;\n  return {\n    name: 'hide',\n\n    async fn(middlewareArguments) {\n      const {\n        rects\n      } = middlewareArguments;\n\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        default:\n          {\n            return {};\n          }\n      }\n    }\n\n  };\n};\n\nasync function convertValueToCoords(middlewareArguments, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = middlewareArguments;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(middlewareArguments) : value; // eslint-disable-next-line prefer-const\n\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\n\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y\n      } = middlewareArguments;\n      const diffCoords = await convertValueToCoords(middlewareArguments, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n\n      const limitedCoords = limiter.fn({ ...middlewareArguments,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return { ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n\n  };\n};\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options,\n\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset(middlewareArguments) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n\n  };\n};\n\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = options;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      let heightSide;\n      let widthSide;\n\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n\n      const xMin = max(overflow.left, 0);\n      const xMax = max(overflow.right, 0);\n      const yMin = max(overflow.top, 0);\n      const yMax = max(overflow.bottom, 0);\n      const dimensions = {\n        availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n        availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n      };\n      await apply({ ...middlewareArguments,\n        ...dimensions\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n\n      if (rects.floating.width !== nextDimensions.width || rects.floating.height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options,\n\n    async fn(middlewareArguments) {\n      var _await$platform$getCl;\n\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = middlewareArguments; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n      const fallback = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect: rects.reference,\n        offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n        strategy\n      }) : rects.reference);\n      const clientRects = (_await$platform$getCl = await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) != null ? _await$platform$getCl : [];\n      const paddingObject = getSideObjectFromPadding(padding);\n\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          var _clientRects$find;\n\n          // Find the first rect in which the point is fully inside\n          return (_clientRects$find = clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom)) != null ? _clientRects$find : fallback;\n        } // There are 2 or more connected rects\n\n\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n\n        return fallback;\n      }\n\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n"],"mappings":";;;;;;;;;;;AAAA,SAASA,OAAO,CAACC,SAAS,EAAE;EAC1B,OAAOA,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChC;AAEA,SAASC,YAAY,CAACF,SAAS,EAAE;EAC/B,OAAOA,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChC;AAEA,SAASE,wBAAwB,CAACH,SAAS,EAAE;EAC3C,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAACI,QAAQ,CAACL,OAAO,CAACC,SAAS,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACnE;AAEA,SAASK,iBAAiB,CAACC,IAAI,EAAE;EAC/B,OAAOA,IAAI,KAAK,GAAG,GAAG,QAAQ,GAAG,OAAO;AAC1C;AAEA,SAASC,0BAA0B,CAACC,IAAI,EAAER,SAAS,EAAES,GAAG,EAAE;EACxD,IACEC,SAAS,GAEPF,IAAI,CAFNE,SAAS;IACTC,QAAQ,GACNH,IAAI,CADNG,QAAQ;EAEV,IAAMC,OAAO,GAAGF,SAAS,CAACG,CAAC,GAAGH,SAAS,CAACI,KAAK,GAAG,CAAC,GAAGH,QAAQ,CAACG,KAAK,GAAG,CAAC;EACtE,IAAMC,OAAO,GAAGL,SAAS,CAACM,CAAC,GAAGN,SAAS,CAACO,MAAM,GAAG,CAAC,GAAGN,QAAQ,CAACM,MAAM,GAAG,CAAC;EACxE,IAAMC,QAAQ,GAAGf,wBAAwB,CAACH,SAAS,CAAC;EACpD,IAAMmB,MAAM,GAAGd,iBAAiB,CAACa,QAAQ,CAAC;EAC1C,IAAME,WAAW,GAAGV,SAAS,CAACS,MAAM,CAAC,GAAG,CAAC,GAAGR,QAAQ,CAACQ,MAAM,CAAC,GAAG,CAAC;EAChE,IAAME,IAAI,GAAGtB,OAAO,CAACC,SAAS,CAAC;EAC/B,IAAMsB,UAAU,GAAGJ,QAAQ,KAAK,GAAG;EACnC,IAAIK,MAAM;EAEV,QAAQF,IAAI;IACV,KAAK,KAAK;MACRE,MAAM,GAAG;QACPV,CAAC,EAAED,OAAO;QACVI,CAAC,EAAEN,SAAS,CAACM,CAAC,GAAGL,QAAQ,CAACM;MAC5B,CAAC;MACD;IAEF,KAAK,QAAQ;MACXM,MAAM,GAAG;QACPV,CAAC,EAAED,OAAO;QACVI,CAAC,EAAEN,SAAS,CAACM,CAAC,GAAGN,SAAS,CAACO;MAC7B,CAAC;MACD;IAEF,KAAK,OAAO;MACVM,MAAM,GAAG;QACPV,CAAC,EAAEH,SAAS,CAACG,CAAC,GAAGH,SAAS,CAACI,KAAK;QAChCE,CAAC,EAAED;MACL,CAAC;MACD;IAEF,KAAK,MAAM;MACTQ,MAAM,GAAG;QACPV,CAAC,EAAEH,SAAS,CAACG,CAAC,GAAGF,QAAQ,CAACG,KAAK;QAC/BE,CAAC,EAAED;MACL,CAAC;MACD;IAEF;MACEQ,MAAM,GAAG;QACPV,CAAC,EAAEH,SAAS,CAACG,CAAC;QACdG,CAAC,EAAEN,SAAS,CAACM;MACf,CAAC;EAAC;EAGN,QAAQd,YAAY,CAACF,SAAS,CAAC;IAC7B,KAAK,OAAO;MACVuB,MAAM,CAACL,QAAQ,CAAC,IAAIE,WAAW,IAAIX,GAAG,IAAIa,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;MAC9D;IAEF,KAAK,KAAK;MACRC,MAAM,CAACL,QAAQ,CAAC,IAAIE,WAAW,IAAIX,GAAG,IAAIa,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;MAC9D;EAAM;EAGV,OAAOC,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,eAAe;EAAA,uEAAG,iBAAOd,SAAS,EAAEC,QAAQ,EAAEc,MAAM;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,oBAMpDA,MAAM,CAJRzB,SAAS,EAATA,SAAS,kCAAG,QAAQ,yCAIlByB,MAAM,CAHRC,QAAQ,EAARA,QAAQ,iCAAG,UAAU,0CAGnBD,MAAM,CAFRE,UAAU,EAAVA,UAAU,mCAAG,EAAE,uBACfC,QAAQ,GACNH,MAAM,CADRG,QAAQ;YAEJC,eAAe,GAAGF,UAAU,CAACG,MAAM,CAACC,OAAO,CAAC;YAAA;YAAA,OAC/BH,QAAQ,CAACI,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGJ,QAAQ,CAACI,KAAK,CAACrB,QAAQ,CAAC;UAAA;YAAvEF,GAAG;YAAA,MAELwB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;cAAA;cAAA;YAAA;YACvC,IAAIP,QAAQ,IAAI,IAAI,EAAE;cACpBQ,OAAO,CAACC,KAAK,CAAC,CAAC,mEAAmE,EAAE,8DAA8D,EAAE,kEAAkE,EAAE,mDAAmD,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;YACzR;YAAC,MAEGT,eAAe,CAACC,MAAM,CAAC,UAAAtB,IAAI,EAAI;cACjC,IACE+B,IAAI,GACF/B,IAAI,CADN+B,IAAI;cAEN,OAAOA,IAAI,KAAK,eAAe,IAAIA,IAAI,KAAK,MAAM;YACpD,CAAC,CAAC,CAACpB,MAAM,GAAG,CAAC;cAAA;cAAA;YAAA;YAAA,MACL,IAAIqB,KAAK,CAAC,CAAC,iEAAiE,EAAE,kEAAkE,EAAE,mDAAmD,CAAC,CAACF,IAAI,CAAC,GAAG,CAAC,CAAC;UAAA;YAGzN,IAAI,CAAC5B,SAAS,IAAI,CAACC,QAAQ,EAAE;cAC3ByB,OAAO,CAACC,KAAK,CAAC,CAAC,oEAAoE,EAAE,qEAAqE,EAAE,mCAAmC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC7M;UAAC;YAAA;YAAA,OAGeV,QAAQ,CAACa,eAAe,CAAC;cACzC/B,SAAS,EAATA,SAAS;cACTC,QAAQ,EAARA,QAAQ;cACRe,QAAQ,EAARA;YACF,CAAC,CAAC;UAAA;YAJEgB,KAAK;YAAA,wBAQLnC,0BAA0B,CAACmC,KAAK,EAAE1C,SAAS,EAAES,GAAG,CAAC,EAFnDI,CAAC,yBAADA,CAAC,EACDG,CAAC,yBAADA,CAAC;YAEC2B,iBAAiB,GAAG3C,SAAS;YAC7B4C,cAAc,GAAG,CAAC,CAAC;YACnBC,UAAU,GAAG,CAAC;YAETC,CAAC,GAAG,CAAC;UAAA;YAAA,MAAEA,CAAC,GAAGjB,eAAe,CAACV,MAAM;cAAA;cAAA;YAAA;YAAA,qBAIpCU,eAAe,CAACiB,CAAC,CAAC,EAFpBP,IAAI,sBAAJA,IAAI,EACJQ,EAAE,sBAAFA,EAAE;YAAA;YAAA,OAOMA,EAAE,CAAC;cACXlC,CAAC,EAADA,CAAC;cACDG,CAAC,EAADA,CAAC;cACDgC,gBAAgB,EAAEhD,SAAS;cAC3BA,SAAS,EAAE2C,iBAAiB;cAC5BjB,QAAQ,EAARA,QAAQ;cACRkB,cAAc,EAAdA,cAAc;cACdF,KAAK,EAALA,KAAK;cACLd,QAAQ,EAARA,QAAQ;cACRqB,QAAQ,EAAE;gBACRvC,SAAS,EAATA,SAAS;gBACTC,QAAQ,EAARA;cACF;YACF,CAAC,CAAC;UAAA;YAAA;YAjBGuC,KAAK,aAARrC,CAAC;YACEsC,KAAK,aAARnC,CAAC;YACDoC,IAAI,aAAJA,IAAI;YACJC,KAAK,aAALA,KAAK;YAePxC,CAAC,GAAGqC,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAGrC,CAAC;YAC7BG,CAAC,GAAGmC,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAGnC,CAAC;YAC7B4B,cAAc,mCAAQA,cAAc,2BACjCL,IAAI,kCAAQK,cAAc,CAACL,IAAI,CAAC,GAC5Ba,IAAI,GAEV;YAED,IAAInB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;cACzC,IAAIU,UAAU,GAAG,EAAE,EAAE;gBACnBT,OAAO,CAACkB,IAAI,CAAC,CAAC,mEAAmE,EAAE,gEAAgE,EAAE,2CAA2C,CAAC,CAAChB,IAAI,CAAC,GAAG,CAAC,CAAC;cAC9M;YACF;YAAC,MAEGe,KAAK,IAAIR,UAAU,IAAI,EAAE;cAAA;cAAA;YAAA;YAC3BA,UAAU,EAAE;YAAC,MAET,OAAOQ,KAAK,KAAK,QAAQ;cAAA;cAAA;YAAA;YAC3B,IAAIA,KAAK,CAACrD,SAAS,EAAE;cACnB2C,iBAAiB,GAAGU,KAAK,CAACrD,SAAS;YACrC;YAAC,KAEGqD,KAAK,CAACX,KAAK;cAAA;cAAA;YAAA;YAAA,MACLW,KAAK,CAACX,KAAK,KAAK,IAAI;cAAA;cAAA;YAAA;YAAA;YAAA,OAASd,QAAQ,CAACa,eAAe,CAAC;cAC5D/B,SAAS,EAATA,SAAS;cACTC,QAAQ,EAARA,QAAQ;cACRe,QAAQ,EAARA;YACF,CAAC,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA;YAAA,cAAG2B,KAAK,CAACX,KAAK;UAAA;YAJhBA,KAAK;UAAA;YAAA,yBAUHnC,0BAA0B,CAACmC,KAAK,EAAEC,iBAAiB,EAAElC,GAAG,CAAC;YAF3DI,CAAC,0BAADA,CAAC;YACDG,CAAC,0BAADA,CAAC;UAAA;YAIL8B,CAAC,GAAG,CAAC,CAAC;YAAC;UAAA;YA5DiCA,CAAC,EAAE;YAAA;YAAA;UAAA;YAAA,iCAiExC;cACLjC,CAAC,EAADA,CAAC;cACDG,CAAC,EAADA,CAAC;cACDhB,SAAS,EAAE2C,iBAAiB;cAC5BjB,QAAQ,EAARA,QAAQ;cACRkB,cAAc,EAAdA;YACF,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACF;EAAA,gBAlHKpB,eAAe;IAAA;EAAA;AAAA,GAkHpB;AAED,SAAS+B,mBAAmB,CAACC,OAAO,EAAE;EACpC;IACEC,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE;EAAC,GACJJ,OAAO;AAEd;AAEA,SAASK,wBAAwB,CAACL,OAAO,EAAE;EACzC,OAAO,OAAOA,OAAO,KAAK,QAAQ,GAAGD,mBAAmB,CAACC,OAAO,CAAC,GAAG;IAClEC,GAAG,EAAED,OAAO;IACZE,KAAK,EAAEF,OAAO;IACdG,MAAM,EAAEH,OAAO;IACfI,IAAI,EAAEJ;EACR,CAAC;AACH;AAEA,SAASM,gBAAgB,CAACC,IAAI,EAAE;EAC9B,uCAAYA,IAAI;IACdN,GAAG,EAAEM,IAAI,CAAC/C,CAAC;IACX4C,IAAI,EAAEG,IAAI,CAAClD,CAAC;IACZ6C,KAAK,EAAEK,IAAI,CAAClD,CAAC,GAAGkD,IAAI,CAACjD,KAAK;IAC1B6C,MAAM,EAAEI,IAAI,CAAC/C,CAAC,GAAG+C,IAAI,CAAC9C;EAAM;AAEhC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAQe+C,cAAc;EAAA;AAAA;AAAA;EAAA,6EAA7B,mBAA8BC,mBAAmB,EAAEC,OAAO;IAAA;IAAA;MAAA;QAAA;UAAA;YAGxD,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;cACtBA,OAAO,GAAG,CAAC,CAAC;YACd;YAGErD,CAAC,GAMCoD,mBAAmB,CANrBpD,CAAC,EACDG,CAAC,GAKCiD,mBAAmB,CALrBjD,CAAC,EACDY,QAAQ,GAINqC,mBAAmB,CAJrBrC,QAAQ,EACRc,KAAK,GAGHuB,mBAAmB,CAHrBvB,KAAK,EACLO,QAAQ,GAENgB,mBAAmB,CAFrBhB,QAAQ,EACRvB,QAAQ,GACNuC,mBAAmB,CADrBvC,QAAQ;YAAA,YAQNwC,OAAO,iCALTC,QAAQ,EAARA,QAAQ,mCAAG,mBAAmB,yDAC9BC,YAAY,EAAZA,YAAY,sCAAG,UAAU,4DACzBC,cAAc,EAAdA,cAAc,sCAAG,UAAU,4DAC3BC,WAAW,EAAXA,WAAW,sCAAG,KAAK,wDACnBd,OAAO,EAAPA,OAAO,kCAAG,CAAC;YAEPe,aAAa,GAAGV,wBAAwB,CAACL,OAAO,CAAC;YACjDgB,UAAU,GAAGH,cAAc,KAAK,UAAU,GAAG,WAAW,GAAG,UAAU;YACrEI,OAAO,GAAGxB,QAAQ,CAACqB,WAAW,GAAGE,UAAU,GAAGH,cAAc,CAAC;YAAA,gBACxCP,gBAAgB;YAAA,gBAAOlC,QAAQ;YAAA;YAAA,OACdA,QAAQ,CAAC8C,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG9C,QAAQ,CAAC8C,SAAS,CAACD,OAAO,CAAC;UAAA;YAAA,gBAAhGE,qBAAqB;YAAA,uBAAiF,IAAI;cAAA;cAAA;YAAA;YAAA,gBAAGA,qBAAqB;YAAA;YAAA;UAAA;YAAA,gBAAG,IAAI;UAAA;YAAA;cAAA;cAAA;YAAA;YAAA,gBAAIF,OAAO;YAAA;YAAA;UAAA;YAAA,gBAAGA,OAAO,CAACG,cAAc;YAAA;cAAA;cAAA;YAAA;YAAA;YAAA,OAAYhD,QAAQ,CAACiD,kBAAkB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGjD,QAAQ,CAACiD,kBAAkB,CAAC5B,QAAQ,CAACtC,QAAQ,CAAC;UAAA;YAAA;UAAA;YAAA;UAAA;YAAA;YAAA,gBACjSwD,QAAQ;YAAA,gBACRC,YAAY;YAAA,gBACZ1C,QAAQ;YAAA;cAHR+C,OAAO;cACPN,QAAQ;cACRC,YAAY;cACZ1C,QAAQ;YAAA;YAAA;YAAA,qBAJiDoD,eAAe;UAAA;YAAA;YAApEC,kBAAkB;YAAA,iBAMEjB,gBAAgB;YAAA,KAAClC,QAAQ,CAACoD,qDAAqD;cAAA;cAAA;YAAA;YAAA,iBAASpD,QAAQ;YAAA,iBAClHyC,cAAc,KAAK,UAAU,mCAAQ3B,KAAK,CAAC/B,QAAQ;cACvDE,CAAC,EAADA,CAAC;cACDG,CAAC,EAADA;YAAC,KACC0B,KAAK,CAAChC,SAAS;YAAA;YAAA,OACEkB,QAAQ,CAACqD,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGrD,QAAQ,CAACqD,eAAe,CAAChC,QAAQ,CAACtC,QAAQ,CAAC;UAAA;YAAA;YAAA,iBAC5Ge,QAAQ;YAAA;cALRqC,IAAI;cAIJmB,YAAY;cACZxD,QAAQ;YAAA;YAAA;YAAA,sBANiHsD,qDAAqD;UAAA;YAAA;YAAA;YAAA;UAAA;YAAA,iBAO3KtC,KAAK,CAAC2B,cAAc,CAAC;UAAA;YAAA;YAPpBc,iBAAiB;YAAA,mCAQhB;cACL1B,GAAG,EAAEsB,kBAAkB,CAACtB,GAAG,GAAG0B,iBAAiB,CAAC1B,GAAG,GAAGc,aAAa,CAACd,GAAG;cACvEE,MAAM,EAAEwB,iBAAiB,CAACxB,MAAM,GAAGoB,kBAAkB,CAACpB,MAAM,GAAGY,aAAa,CAACZ,MAAM;cACnFC,IAAI,EAAEmB,kBAAkB,CAACnB,IAAI,GAAGuB,iBAAiB,CAACvB,IAAI,GAAGW,aAAa,CAACX,IAAI;cAC3EF,KAAK,EAAEyB,iBAAiB,CAACzB,KAAK,GAAGqB,kBAAkB,CAACrB,KAAK,GAAGa,aAAa,CAACb;YAC5E,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACF;EAAA;AAAA;AAED,IAAM0B,GAAG,GAAGC,IAAI,CAACD,GAAG;AACpB,IAAME,GAAG,GAAGD,IAAI,CAACC,GAAG;AAEpB,SAASC,MAAM,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACnC,OAAOJ,GAAG,CAACE,KAAK,EAAEJ,GAAG,CAACK,KAAK,EAAEC,KAAK,CAAC,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAMC,KAAK,GAAG,SAARA,KAAK,CAAGzB,OAAO;EAAA,OAAK;IACxB3B,IAAI,EAAE,OAAO;IACb2B,OAAO,EAAPA,OAAO;IAEDnB,EAAE,cAACkB,mBAAmB,EAAE;MAAA;QAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAC5B;gBAAA,QAIIC,OAAO,IAAI,IAAI,GAAGA,OAAO,GAAG,CAAC,CAAC,EAFhCO,OAAO,SAAPA,OAAO,wBACPjB,OAAO,EAAPA,OAAO,8BAAG,CAAC;gBAGX3C,CAAC,GAKCoD,mBAAmB,CALrBpD,CAAC,EACDG,CAAC,GAICiD,mBAAmB,CAJrBjD,CAAC,EACDhB,SAAS,GAGPiE,mBAAmB,CAHrBjE,SAAS,EACT0C,KAAK,GAEHuB,mBAAmB,CAFrBvB,KAAK,EACLd,QAAQ,GACNqC,mBAAmB,CADrBrC,QAAQ;gBAAA,MAGN6C,OAAO,IAAI,IAAI;kBAAA;kBAAA;gBAAA;gBACjB,IAAIxC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;kBACzCC,OAAO,CAACkB,IAAI,CAAC,iEAAiE,CAAC;gBACjF;gBAAC,kCAEM,CAAC,CAAC;cAAA;gBAGLiB,aAAa,GAAGV,wBAAwB,CAACL,OAAO,CAAC;gBACjDjC,MAAM,GAAG;kBACbV,CAAC,EAADA,CAAC;kBACDG,CAAC,EAADA;gBACF,CAAC;gBACKV,IAAI,GAAGH,wBAAwB,CAACH,SAAS,CAAC;gBAC1C4F,SAAS,GAAG1F,YAAY,CAACF,SAAS,CAAC;gBACnCmB,MAAM,GAAGd,iBAAiB,CAACC,IAAI,CAAC;gBAAA;gBAAA,OACRsB,QAAQ,CAACiE,aAAa,CAACpB,OAAO,CAAC;cAAA;gBAAvDqB,eAAe;gBACfC,OAAO,GAAGzF,IAAI,KAAK,GAAG,GAAG,KAAK,GAAG,MAAM;gBACvC0F,OAAO,GAAG1F,IAAI,KAAK,GAAG,GAAG,QAAQ,GAAG,OAAO;gBAC3C2F,OAAO,GAAGvD,KAAK,CAAChC,SAAS,CAACS,MAAM,CAAC,GAAGuB,KAAK,CAAChC,SAAS,CAACJ,IAAI,CAAC,GAAGiB,MAAM,CAACjB,IAAI,CAAC,GAAGoC,KAAK,CAAC/B,QAAQ,CAACQ,MAAM,CAAC;gBACjG+E,SAAS,GAAG3E,MAAM,CAACjB,IAAI,CAAC,GAAGoC,KAAK,CAAChC,SAAS,CAACJ,IAAI,CAAC;gBAAA;gBAAA,OACrBsB,QAAQ,CAACqD,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGrD,QAAQ,CAACqD,eAAe,CAACR,OAAO,CAAC;cAAA;gBAAxG0B,iBAAiB;gBACnBC,UAAU,GAAGD,iBAAiB,GAAG7F,IAAI,KAAK,GAAG,GAAG6F,iBAAiB,CAACE,YAAY,IAAI,CAAC,GAAGF,iBAAiB,CAACG,WAAW,IAAI,CAAC,GAAG,CAAC;gBAEhI,IAAIF,UAAU,KAAK,CAAC,EAAE;kBACpBA,UAAU,GAAG1D,KAAK,CAAC/B,QAAQ,CAACQ,MAAM,CAAC;gBACrC;gBAEMoF,iBAAiB,GAAGN,OAAO,GAAG,CAAC,GAAGC,SAAS,GAAG,CAAC,EAAE;gBACvD;gBAEMd,GAAG,GAAGb,aAAa,CAACwB,OAAO,CAAC;gBAC5BT,GAAG,GAAGc,UAAU,GAAGN,eAAe,CAAC3E,MAAM,CAAC,GAAGoD,aAAa,CAACyB,OAAO,CAAC;gBACnEQ,MAAM,GAAGJ,UAAU,GAAG,CAAC,GAAGN,eAAe,CAAC3E,MAAM,CAAC,GAAG,CAAC,GAAGoF,iBAAiB;gBACzEE,MAAM,GAAGlB,MAAM,CAACH,GAAG,EAAEoB,MAAM,EAAElB,GAAG,CAAC,EAAE;gBAEnCoB,gBAAgB,GAAGd,SAAS,KAAK,OAAO,GAAGrB,aAAa,CAACwB,OAAO,CAAC,GAAGxB,aAAa,CAACyB,OAAO,CAAC;gBAC1FW,eAAe,GAAGD,gBAAgB,GAAG,CAAC,IAAIF,MAAM,KAAKC,MAAM,IAAI/D,KAAK,CAAChC,SAAS,CAACS,MAAM,CAAC,IAAIuB,KAAK,CAAC/B,QAAQ,CAACQ,MAAM,CAAC;gBAChHyF,eAAe,GAAGD,eAAe,GAAGH,MAAM,GAAGpB,GAAG,GAAGA,GAAG,GAAGoB,MAAM,GAAGlB,GAAG,GAAGkB,MAAM,GAAG,CAAC;gBAAA,sEAErFlG,IAAI,EAAGiB,MAAM,CAACjB,IAAI,CAAC,GAAGsG,eAAe,sEAEnCtG,IAAI,EAAGmG,MAAM,0CACAD,MAAM,GAAGC,MAAM;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGnC;EAEF,CAAC;AAAA,CAAC;AAEF,IAAMI,MAAM,GAAG;EACbjD,IAAI,EAAE,OAAO;EACbF,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,KAAK;EACbF,GAAG,EAAE;AACP,CAAC;AACD,SAASqD,oBAAoB,CAAC9G,SAAS,EAAE;EACvC,OAAOA,SAAS,CAAC+G,OAAO,CAAC,wBAAwB,EAAE,UAAAC,OAAO;IAAA,OAAIH,MAAM,CAACG,OAAO,CAAC;EAAA,EAAC;AAChF;AAEA,SAASC,iBAAiB,CAACjH,SAAS,EAAE0C,KAAK,EAAEjC,GAAG,EAAE;EAChD,IAAIA,GAAG,KAAK,KAAK,CAAC,EAAE;IAClBA,GAAG,GAAG,KAAK;EACb;EAEA,IAAMmF,SAAS,GAAG1F,YAAY,CAACF,SAAS,CAAC;EACzC,IAAMkB,QAAQ,GAAGf,wBAAwB,CAACH,SAAS,CAAC;EACpD,IAAMmB,MAAM,GAAGd,iBAAiB,CAACa,QAAQ,CAAC;EAC1C,IAAIgG,iBAAiB,GAAGhG,QAAQ,KAAK,GAAG,GAAG0E,SAAS,MAAMnF,GAAG,GAAG,KAAK,GAAG,OAAO,CAAC,GAAG,OAAO,GAAG,MAAM,GAAGmF,SAAS,KAAK,OAAO,GAAG,QAAQ,GAAG,KAAK;EAE9I,IAAIlD,KAAK,CAAChC,SAAS,CAACS,MAAM,CAAC,GAAGuB,KAAK,CAAC/B,QAAQ,CAACQ,MAAM,CAAC,EAAE;IACpD+F,iBAAiB,GAAGJ,oBAAoB,CAACI,iBAAiB,CAAC;EAC7D;EAEA,OAAO;IACLC,IAAI,EAAED,iBAAiB;IACvBE,KAAK,EAAEN,oBAAoB,CAACI,iBAAiB;EAC/C,CAAC;AACH;AAEA,IAAMG,IAAI,GAAG;EACXC,KAAK,EAAE,KAAK;EACZC,GAAG,EAAE;AACP,CAAC;AACD,SAASC,6BAA6B,CAACxH,SAAS,EAAE;EAChD,OAAOA,SAAS,CAAC+G,OAAO,CAAC,YAAY,EAAE,UAAAC,OAAO;IAAA,OAAIK,IAAI,CAACL,OAAO,CAAC;EAAA,EAAC;AAClE;AAEA,IAAMS,KAAK,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC;AAChD,IAAMC,aAAa,GAAG,aAAaD,KAAK,CAACE,MAAM,CAAC,UAACC,GAAG,EAAEvG,IAAI;EAAA,OAAKuG,GAAG,CAACC,MAAM,CAACxG,IAAI,EAAEA,IAAI,GAAG,QAAQ,EAAEA,IAAI,GAAG,MAAM,CAAC;AAAA,GAAE,EAAE,CAAC;AAEpH,SAASyG,gBAAgB,CAAClC,SAAS,EAAEmC,aAAa,EAAEC,iBAAiB,EAAE;EACrE,IAAMC,kCAAkC,GAAGrC,SAAS,gCAAOoC,iBAAiB,CAAClG,MAAM,CAAC,UAAA9B,SAAS;IAAA,OAAIE,YAAY,CAACF,SAAS,CAAC,KAAK4F,SAAS;EAAA,EAAC,sBAAKoC,iBAAiB,CAAClG,MAAM,CAAC,UAAA9B,SAAS;IAAA,OAAIE,YAAY,CAACF,SAAS,CAAC,KAAK4F,SAAS;EAAA,EAAC,KAAIoC,iBAAiB,CAAClG,MAAM,CAAC,UAAA9B,SAAS;IAAA,OAAID,OAAO,CAACC,SAAS,CAAC,KAAKA,SAAS;EAAA,EAAC;EACnS,OAAOiI,kCAAkC,CAACnG,MAAM,CAAC,UAAA9B,SAAS,EAAI;IAC5D,IAAI4F,SAAS,EAAE;MACb,OAAO1F,YAAY,CAACF,SAAS,CAAC,KAAK4F,SAAS,KAAKmC,aAAa,GAAGP,6BAA6B,CAACxH,SAAS,CAAC,KAAKA,SAAS,GAAG,KAAK,CAAC;IAClI;IAEA,OAAO,IAAI;EACb,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA,IAAMkI,aAAa,GAAG,SAAhBA,aAAa,CAAahE,OAAO,EAAE;EACvC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EAEA,OAAO;IACL3B,IAAI,EAAE,eAAe;IACrB2B,OAAO,EAAPA,OAAO;IAEDnB,EAAE,cAACkB,mBAAmB,EAAE;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAI1BpD,CAAC,GAOCoD,mBAAmB,CAPrBpD,CAAC,EACDG,CAAC,GAMCiD,mBAAmB,CANrBjD,CAAC,EACD0B,KAAK,GAKHuB,mBAAmB,CALrBvB,KAAK,EACLE,cAAc,GAIZqB,mBAAmB,CAJrBrB,cAAc,EACd5C,SAAS,GAGPiE,mBAAmB,CAHrBjE,SAAS,EACT4B,QAAQ,GAENqC,mBAAmB,CAFrBrC,QAAQ,EACRqB,QAAQ,GACNgB,mBAAmB,CADrBhB,QAAQ;gBAAA,WAONiB,OAAO,gCAJT0B,SAAS,EAATA,SAAS,mCAAG,IAAI,wDAChBoC,iBAAiB,EAAjBA,iBAAiB,sCAAGN,aAAa,2DACjCK,aAAa,EAAbA,aAAa,sCAAG,IAAI,0BACjBI,qBAAqB;gBAEpBC,UAAU,GAAGN,gBAAgB,CAAClC,SAAS,EAAEmC,aAAa,EAAEC,iBAAiB,CAAC;gBAAA;gBAAA,OACzDhE,cAAc,CAACC,mBAAmB,EAAEkE,qBAAqB,CAAC;cAAA;gBAA3EE,QAAQ;gBACRC,YAAY,GAAG,CAACC,qBAAqB,GAAG,CAACC,sBAAsB,GAAG5F,cAAc,CAACsF,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGM,sBAAsB,CAACC,KAAK,KAAK,IAAI,GAAGF,qBAAqB,GAAG,CAAC;gBACpLG,gBAAgB,GAAGN,UAAU,CAACE,YAAY,CAAC;gBAAA,MAE7CI,gBAAgB,IAAI,IAAI;kBAAA;kBAAA;gBAAA;gBAAA,kCACnB,CAAC,CAAC;cAAA;gBAAA,eAMPzB,iBAAiB;gBAAA,eAACyB,gBAAgB;gBAAA,eAAEhG,KAAK;gBAAA;gBAAA,OAASd,QAAQ,CAACI,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGJ,QAAQ,CAACI,KAAK,CAACiB,QAAQ,CAACtC,QAAQ,CAAC;cAAA;gBAAA;gBAAA;gBAFvHwG,IAAI,sBAAJA,IAAI;gBACJC,KAAK,sBAALA,KAAK;gBAAA,MAGHpH,SAAS,KAAK0I,gBAAgB;kBAAA;kBAAA;gBAAA;gBAAA,kCACzB;kBACL7H,CAAC,EAADA,CAAC;kBACDG,CAAC,EAADA,CAAC;kBACDqC,KAAK,EAAE;oBACLrD,SAAS,EAAEoI,UAAU,CAAC,CAAC;kBACzB;gBACF,CAAC;cAAA;gBAGGO,gBAAgB,GAAG,CAACN,QAAQ,CAACtI,OAAO,CAAC2I,gBAAgB,CAAC,CAAC,EAAEL,QAAQ,CAAClB,IAAI,CAAC,EAAEkB,QAAQ,CAACjB,KAAK,CAAC,CAAC;gBACzFwB,YAAY,gCAAQ,CAACC,sBAAsB,GAAG,CAACC,sBAAsB,GAAGlG,cAAc,CAACsF,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGY,sBAAsB,CAACC,SAAS,KAAK,IAAI,GAAGF,sBAAsB,GAAG,EAAE,IAAG;kBACvM7I,SAAS,EAAE0I,gBAAgB;kBAC3BK,SAAS,EAAEJ;gBACb,CAAC;gBACKK,aAAa,GAAGZ,UAAU,CAACE,YAAY,GAAG,CAAC,CAAC,EAAE;gBAAA,KAEhDU,aAAa;kBAAA;kBAAA;gBAAA;gBAAA,kCACR;kBACL5F,IAAI,EAAE;oBACJqF,KAAK,EAAEH,YAAY,GAAG,CAAC;oBACvBS,SAAS,EAAEH;kBACb,CAAC;kBACDvF,KAAK,EAAE;oBACLrD,SAAS,EAAEgJ;kBACb;gBACF,CAAC;cAAA;gBAGGC,+BAA+B,GAAGL,YAAY,CAACM,KAAK,EAAE,CAACC,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;kBAAA,OAAKD,CAAC,CAACL,SAAS,CAAC,CAAC,CAAC,GAAGM,CAAC,CAACN,SAAS,CAAC,CAAC,CAAC;gBAAA,EAAC;gBACtGO,2BAA2B,GAAG,CAACC,qBAAqB,GAAGN,+BAA+B,CAACO,IAAI,CAAC,UAAAhJ,IAAI,EAAI;kBACxG,IACEuI,SAAS,GACPvI,IAAI,CADNuI,SAAS;kBAEX,OAAOA,SAAS,CAACU,KAAK,CAAC,UAAApB,QAAQ;oBAAA,OAAIA,QAAQ,IAAI,CAAC;kBAAA,EAAC;gBACnD,CAAC,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGkB,qBAAqB,CAACvJ,SAAS;gBAChD0J,cAAc,GAAGJ,2BAA2B,IAAI,IAAI,GAAGA,2BAA2B,GAAGL,+BAA+B,CAAC,CAAC,CAAC,CAACjJ,SAAS;gBAAA,MAEnI0J,cAAc,KAAK1J,SAAS;kBAAA;kBAAA;gBAAA;gBAAA,kCACvB;kBACLoD,IAAI,EAAE;oBACJqF,KAAK,EAAEH,YAAY,GAAG,CAAC;oBACvBS,SAAS,EAAEH;kBACb,CAAC;kBACDvF,KAAK,EAAE;oBACLrD,SAAS,EAAE0J;kBACb;gBACF,CAAC;cAAA;gBAAA,kCAGI,CAAC,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACX;EAEF,CAAC;AACH,CAAC;AAED,SAASC,qBAAqB,CAAC3J,SAAS,EAAE;EACxC,IAAM4J,iBAAiB,GAAG9C,oBAAoB,CAAC9G,SAAS,CAAC;EACzD,OAAO,CAACwH,6BAA6B,CAACxH,SAAS,CAAC,EAAE4J,iBAAiB,EAAEpC,6BAA6B,CAACoC,iBAAiB,CAAC,CAAC;AACxH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAI,CAAa3F,OAAO,EAAE;EAC9B,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EAEA,OAAO;IACL3B,IAAI,EAAE,MAAM;IACZ2B,OAAO,EAAPA,OAAO;IAEDnB,EAAE,cAACkB,mBAAmB,EAAE;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAI1BjE,SAAS,GAMPiE,mBAAmB,CANrBjE,SAAS,EACT4C,cAAc,GAKZqB,mBAAmB,CALrBrB,cAAc,EACdF,KAAK,GAIHuB,mBAAmB,CAJrBvB,KAAK,EACLM,gBAAgB,GAGdiB,mBAAmB,CAHrBjB,gBAAgB,EAChBpB,QAAQ,GAENqC,mBAAmB,CAFrBrC,QAAQ,EACRqB,QAAQ,GACNgB,mBAAmB,CADrBhB,QAAQ;gBAAA,YASNiB,OAAO,iCANThD,QAAQ,EAAE4I,aAAa,mCAAG,IAAI,uDAC9BC,SAAS,EAAEC,cAAc,oCAAG,IAAI,wBACZC,2BAA2B,aAA/CC,kBAAkB,oCAClBC,gBAAgB,EAAhBA,gBAAgB,sCAAG,SAAS,4DAC5BC,aAAa,EAAbA,aAAa,sCAAG,IAAI,0BACjBjC,qBAAqB;gBAEpB9G,IAAI,GAAGtB,OAAO,CAACC,SAAS,CAAC;gBACzBqK,eAAe,GAAGhJ,IAAI,KAAK2B,gBAAgB;gBAC3CkH,kBAAkB,GAAGD,2BAA2B,KAAKI,eAAe,IAAI,CAACD,aAAa,GAAG,CAACtD,oBAAoB,CAAC9D,gBAAgB,CAAC,CAAC,GAAG2G,qBAAqB,CAAC3G,gBAAgB,CAAC,CAAC;gBAC5KoF,UAAU,IAAIpF,gBAAgB,4BAAKkH,kBAAkB;gBAAA;gBAAA,OACpClG,cAAc,CAACC,mBAAmB,EAAEkE,qBAAqB,CAAC;cAAA;gBAA3EE,QAAQ;gBACRU,SAAS,GAAG,EAAE;gBAChBuB,aAAa,GAAG,CAAC,CAACC,oBAAoB,GAAG3H,cAAc,CAACiH,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGU,oBAAoB,CAACxB,SAAS,KAAK,EAAE;gBAE1H,IAAIe,aAAa,EAAE;kBACjBf,SAAS,CAACyB,IAAI,CAACnC,QAAQ,CAAChH,IAAI,CAAC,CAAC;gBAChC;gBAAC,KAEG2I,cAAc;kBAAA;kBAAA;gBAAA;gBAAA,eAIZ/C,iBAAiB;gBAAA,eAACjH,SAAS;gBAAA,eAAE0C,KAAK;gBAAA;gBAAA,OAASd,QAAQ,CAACI,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGJ,QAAQ,CAACI,KAAK,CAACiB,QAAQ,CAACtC,QAAQ,CAAC;cAAA;gBAAA;gBAAA;gBAFhHwG,IAAI,uBAAJA,IAAI;gBACJC,KAAK,uBAALA,KAAK;gBAEP2B,SAAS,CAACyB,IAAI,CAACnC,QAAQ,CAAClB,IAAI,CAAC,EAAEkB,QAAQ,CAACjB,KAAK,CAAC,CAAC;cAAC;gBAGlDkD,aAAa,gCAAOA,aAAa,IAAE;kBACjCtK,SAAS,EAATA,SAAS;kBACT+I,SAAS,EAATA;gBACF,CAAC,EAAC,CAAC,CAAC;gBAAA,IAECA,SAAS,CAACU,KAAK,CAAC,UAAApI,IAAI;kBAAA,OAAIA,IAAI,IAAI,CAAC;gBAAA,EAAC;kBAAA;kBAAA;gBAAA;gBAG/BoJ,SAAS,GAAG,CAAC,CAACC,qBAAqB,GAAG,CAACC,qBAAqB,GAAG/H,cAAc,CAACiH,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGc,qBAAqB,CAAClC,KAAK,KAAK,IAAI,GAAGiC,qBAAqB,GAAG,CAAC,IAAI,CAAC;gBAC5K1B,aAAa,GAAGZ,UAAU,CAACqC,SAAS,CAAC;gBAAA,KAEvCzB,aAAa;kBAAA;kBAAA;gBAAA;gBAAA,kCAER;kBACL5F,IAAI,EAAE;oBACJqF,KAAK,EAAEgC,SAAS;oBAChB1B,SAAS,EAAEuB;kBACb,CAAC;kBACDjH,KAAK,EAAE;oBACLrD,SAAS,EAAEgJ;kBACb;gBACF,CAAC;cAAA;gBAGCU,cAAc,GAAG,QAAQ;gBAAA,eAErBS,gBAAgB;gBAAA,kCACjB,SAAS,yBAaT,kBAAkB;gBAAA;cAAA;gBATbnK,UAAS,GAAG,CAAC4K,qBAAqB,GAAGN,aAAa,CAACO,GAAG,CAAC,UAAAC,CAAC;kBAAA,OAAI,CAACA,CAAC,EAAEA,CAAC,CAAC/B,SAAS,CAACjH,MAAM,CAAC,UAAAuG,QAAQ;oBAAA,OAAIA,QAAQ,GAAG,CAAC;kBAAA,EAAC,CAACV,MAAM,CAAC,UAACC,GAAG,EAAES,QAAQ;oBAAA,OAAKT,GAAG,GAAGS,QAAQ;kBAAA,GAAE,CAAC,CAAC,CAAC;gBAAA,EAAC,CAACc,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;kBAAA,OAAKD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC;gBAAA,EAAC,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGuB,qBAAqB,CAAC,CAAC,CAAC,CAAC5K,SAAS;gBAEvP,IAAIA,UAAS,EAAE;kBACb0J,cAAc,GAAG1J,UAAS;gBAC5B;gBAAC;cAAA;gBAMH0J,cAAc,GAAG1G,gBAAgB;gBAAC;cAAA;gBAAA,MAIlChD,SAAS,KAAK0J,cAAc;kBAAA;kBAAA;gBAAA;gBAAA,kCACvB;kBACLrG,KAAK,EAAE;oBACLrD,SAAS,EAAE0J;kBACb;gBACF,CAAC;cAAA;gBAAA,kCAIE,CAAC,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACX;EAEF,CAAC;AACH,CAAC;AAED,SAASqB,cAAc,CAAC1C,QAAQ,EAAEtE,IAAI,EAAE;EACtC,OAAO;IACLN,GAAG,EAAE4E,QAAQ,CAAC5E,GAAG,GAAGM,IAAI,CAAC9C,MAAM;IAC/ByC,KAAK,EAAE2E,QAAQ,CAAC3E,KAAK,GAAGK,IAAI,CAACjD,KAAK;IAClC6C,MAAM,EAAE0E,QAAQ,CAAC1E,MAAM,GAAGI,IAAI,CAAC9C,MAAM;IACrC2C,IAAI,EAAEyE,QAAQ,CAACzE,IAAI,GAAGG,IAAI,CAACjD;EAC7B,CAAC;AACH;AAEA,SAASkK,qBAAqB,CAAC3C,QAAQ,EAAE;EACvC,OAAOZ,KAAK,CAACwD,IAAI,CAAC,UAAA5J,IAAI;IAAA,OAAIgH,QAAQ,CAAChH,IAAI,CAAC,IAAI,CAAC;EAAA,EAAC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAM6J,IAAI,GAAG,SAAPA,IAAI,CAAaC,KAAK,EAAE;EAC5B,YAGIA,KAAK,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,KAAK;IAAA,uBAF/BzJ,QAAQ;IAARA,QAAQ,+BAAG,iBAAiB;IACzByG,qBAAqB;EAE1B,OAAO;IACL5F,IAAI,EAAE,MAAM;IAENQ,EAAE,cAACkB,mBAAmB,EAAE;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAE1BvB,KAAK,GACHuB,mBAAmB,CADrBvB,KAAK;gBAAA,eAGChB,QAAQ;gBAAA,kCACT,iBAAiB,wBAcjB,SAAS;gBAAA;cAAA;gBAAA;gBAAA,OAZasC,cAAc,CAACC,mBAAmB,kCAAOkE,qBAAqB;kBACnF9D,cAAc,EAAE;gBAAW,GAC3B;cAAA;gBAFIgE,QAAQ;gBAGR+C,OAAO,GAAGL,cAAc,CAAC1C,QAAQ,EAAE3F,KAAK,CAAChC,SAAS,CAAC;gBAAA,kCAClD;kBACL0C,IAAI,EAAE;oBACJiI,sBAAsB,EAAED,OAAO;oBAC/BE,eAAe,EAAEN,qBAAqB,CAACI,OAAO;kBAChD;gBACF,CAAC;cAAA;gBAAA;gBAAA,OAKsBpH,cAAc,CAACC,mBAAmB,kCAAOkE,qBAAqB;kBACnF7D,WAAW,EAAE;gBAAI,GACjB;cAAA;gBAFI+D,SAAQ;gBAGR+C,QAAO,GAAGL,cAAc,CAAC1C,SAAQ,EAAE3F,KAAK,CAAC/B,QAAQ,CAAC;gBAAA,kCACjD;kBACLyC,IAAI,EAAE;oBACJmI,cAAc,EAAEH,QAAO;oBACvBI,OAAO,EAAER,qBAAqB,CAACI,QAAO;kBACxC;gBACF,CAAC;cAAA;gBAAA,kCAKM,CAAC,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGjB;EAEF,CAAC;AACH,CAAC;AAAC,SAEaK,oBAAoB;EAAA;AAAA;AAyCnC;AACA;AACA;AACA;AAHA;EAAA,mFAzCA,mBAAoCxH,mBAAmB,EAAEwB,KAAK;IAAA;IAAA;MAAA;QAAA;UAAA;YAE1DzF,SAAS,GAGPiE,mBAAmB,CAHrBjE,SAAS,EACT4B,QAAQ,GAENqC,mBAAmB,CAFrBrC,QAAQ,EACRqB,QAAQ,GACNgB,mBAAmB,CADrBhB,QAAQ;YAAA;YAAA,OAESrB,QAAQ,CAACI,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGJ,QAAQ,CAACI,KAAK,CAACiB,QAAQ,CAACtC,QAAQ,CAAC;UAAA;YAAhFF,GAAG;YACHY,IAAI,GAAGtB,OAAO,CAACC,SAAS,CAAC;YACzB4F,SAAS,GAAG1F,YAAY,CAACF,SAAS,CAAC;YACnCsB,UAAU,GAAGnB,wBAAwB,CAACH,SAAS,CAAC,KAAK,GAAG;YACxD0L,aAAa,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAACtL,QAAQ,CAACiB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;YACvDsK,cAAc,GAAGlL,GAAG,IAAIa,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC;YAC3CsK,QAAQ,GAAG,OAAOnG,KAAK,KAAK,UAAU,GAAGA,KAAK,CAACxB,mBAAmB,CAAC,GAAGwB,KAAK,EAAE;YAAA,QAM/E,OAAOmG,QAAQ,KAAK,QAAQ,GAAG;cACjC1K,QAAQ,EAAE0K,QAAQ;cAClB7B,SAAS,EAAE,CAAC;cACZ8B,aAAa,EAAE;YACjB,CAAC;cACC3K,QAAQ,EAAE,CAAC;cACX6I,SAAS,EAAE,CAAC;cACZ8B,aAAa,EAAE;YAAI,GAChBD,QAAQ,CACZ,EAZC1K,QAAQ,SAARA,QAAQ,EACR6I,SAAS,SAATA,SAAS,EACT8B,aAAa,SAAbA,aAAa;YAYf,IAAIjG,SAAS,IAAI,OAAOiG,aAAa,KAAK,QAAQ,EAAE;cAClD9B,SAAS,GAAGnE,SAAS,KAAK,KAAK,GAAGiG,aAAa,GAAG,CAAC,CAAC,GAAGA,aAAa;YACtE;YAAC,mCAEMvK,UAAU,GAAG;cAClBT,CAAC,EAAEkJ,SAAS,GAAG4B,cAAc;cAC7B3K,CAAC,EAAEE,QAAQ,GAAGwK;YAChB,CAAC,GAAG;cACF7K,CAAC,EAAEK,QAAQ,GAAGwK,aAAa;cAC3B1K,CAAC,EAAE+I,SAAS,GAAG4B;YACjB,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACF;EAAA;AAAA;AAMD,IAAMlF,MAAM,GAAG,SAATA,MAAM,CAAahB,KAAK,EAAE;EAC9B,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;IACpBA,KAAK,GAAG,CAAC;EACX;EAEA,OAAO;IACLlD,IAAI,EAAE,QAAQ;IACd2B,OAAO,EAAEuB,KAAK;IAER1C,EAAE,cAACkB,mBAAmB,EAAE;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAE1BpD,CAAC,GAECoD,mBAAmB,CAFrBpD,CAAC,EACDG,CAAC,GACCiD,mBAAmB,CADrBjD,CAAC;gBAAA;gBAAA,OAEsByK,oBAAoB,CAACxH,mBAAmB,EAAEwB,KAAK,CAAC;cAAA;gBAAnEqG,UAAU;gBAAA,kCACT;kBACLjL,CAAC,EAAEA,CAAC,GAAGiL,UAAU,CAACjL,CAAC;kBACnBG,CAAC,EAAEA,CAAC,GAAG8K,UAAU,CAAC9K,CAAC;kBACnBoC,IAAI,EAAE0I;gBACR,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACH;EAEF,CAAC;AACH,CAAC;AAED,SAASC,YAAY,CAACzL,IAAI,EAAE;EAC1B,OAAOA,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAM0L,KAAK,GAAG,SAARA,KAAK,CAAa9H,OAAO,EAAE;EAC/B,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EAEA,OAAO;IACL3B,IAAI,EAAE,OAAO;IACb2B,OAAO,EAAPA,OAAO;IAEDnB,EAAE,cAACkB,mBAAmB,EAAE;MAAA;QAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAE1BpD,CAAC,GAGCoD,mBAAmB,CAHrBpD,CAAC,EACDG,CAAC,GAECiD,mBAAmB,CAFrBjD,CAAC,EACDhB,SAAS,GACPiE,mBAAmB,CADrBjE,SAAS;gBAAA,YAkBPkE,OAAO,iCAfThD,QAAQ,EAAE4I,aAAa,mCAAG,IAAI,uDAC9BC,SAAS,EAAEC,cAAc,oCAAG,KAAK,sDACjCiC,OAAO,EAAPA,OAAO,kCAAG;kBACRlJ,EAAE,EAAE,YAAAvC,IAAI,EAAI;oBACV,IACEK,CAAC,GAECL,IAAI,CAFNK,CAAC;sBACDG,CAAC,GACCR,IAAI,CADNQ,CAAC;oBAEH,OAAO;sBACLH,CAAC,EAADA,CAAC;sBACDG,CAAC,EAADA;oBACF,CAAC;kBACH;gBACF,CAAC,sBACEmH,qBAAqB;gBAEpB5G,MAAM,GAAG;kBACbV,CAAC,EAADA,CAAC;kBACDG,CAAC,EAADA;gBACF,CAAC;gBAAA;gBAAA,OACsBgD,cAAc,CAACC,mBAAmB,EAAEkE,qBAAqB,CAAC;cAAA;gBAA3EE,QAAQ;gBACRnH,QAAQ,GAAGf,wBAAwB,CAACJ,OAAO,CAACC,SAAS,CAAC,CAAC;gBACvD+J,SAAS,GAAGgC,YAAY,CAAC7K,QAAQ,CAAC;gBACpCgL,aAAa,GAAG3K,MAAM,CAACL,QAAQ,CAAC;gBAChCiL,cAAc,GAAG5K,MAAM,CAACwI,SAAS,CAAC;gBAEtC,IAAID,aAAa,EAAE;kBACXsC,OAAO,GAAGlL,QAAQ,KAAK,GAAG,GAAG,KAAK,GAAG,MAAM;kBAC3CmL,OAAO,GAAGnL,QAAQ,KAAK,GAAG,GAAG,QAAQ,GAAG,OAAO;kBAC/CkE,IAAG,GAAG8G,aAAa,GAAG7D,QAAQ,CAAC+D,OAAO,CAAC;kBACvC9G,IAAG,GAAG4G,aAAa,GAAG7D,QAAQ,CAACgE,OAAO,CAAC;kBAC7CH,aAAa,GAAG3G,MAAM,CAACH,IAAG,EAAE8G,aAAa,EAAE5G,IAAG,CAAC;gBACjD;gBAEA,IAAI0E,cAAc,EAAE;kBACZoC,QAAO,GAAGrC,SAAS,KAAK,GAAG,GAAG,KAAK,GAAG,MAAM;kBAC5CsC,QAAO,GAAGtC,SAAS,KAAK,GAAG,GAAG,QAAQ,GAAG,OAAO;kBAChD3E,KAAG,GAAG+G,cAAc,GAAG9D,QAAQ,CAAC+D,QAAO,CAAC;kBACxC9G,KAAG,GAAG6G,cAAc,GAAG9D,QAAQ,CAACgE,QAAO,CAAC;kBAC9CF,cAAc,GAAG5G,MAAM,CAACH,KAAG,EAAE+G,cAAc,EAAE7G,KAAG,CAAC;gBACnD;gBAEMgH,aAAa,GAAGL,OAAO,CAAClJ,EAAE,iCAAMkB,mBAAmB,6DACtD/C,QAAQ,EAAGgL,aAAa,mCACxBnC,SAAS,EAAGoC,cAAc,oBAC3B;gBAAA,kEACUG,aAAa;kBACvBlJ,IAAI,EAAE;oBACJvC,CAAC,EAAEyL,aAAa,CAACzL,CAAC,GAAGA,CAAC;oBACtBG,CAAC,EAAEsL,aAAa,CAACtL,CAAC,GAAGA;kBACvB;gBAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEL;EAEF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,IAAMuL,UAAU,GAAG,SAAbA,UAAU,CAAarI,OAAO,EAAE;EACpC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EAEA,OAAO;IACLA,OAAO,EAAPA,OAAO;IAEPnB,EAAE,cAACkB,mBAAmB,EAAE;MAAA;MACtB,IACEpD,CAAC,GAKCoD,mBAAmB,CALrBpD,CAAC;QACDG,CAAC,GAICiD,mBAAmB,CAJrBjD,CAAC;QACDhB,SAAS,GAGPiE,mBAAmB,CAHrBjE,SAAS;QACT0C,KAAK,GAEHuB,mBAAmB,CAFrBvB,KAAK;QACLE,cAAc,GACZqB,mBAAmB,CADrBrB,cAAc;MAEhB,gBAIIsB,OAAO;QAAA,6BAHTuC,MAAM;QAANA,MAAM,iCAAG,CAAC;QAAA,+BACVvF,QAAQ;QAAE4I,aAAa,mCAAG,IAAI;QAAA,gCAC9BC,SAAS;QAAEC,cAAc,oCAAG,IAAI;MAElC,IAAMzI,MAAM,GAAG;QACbV,CAAC,EAADA,CAAC;QACDG,CAAC,EAADA;MACF,CAAC;MACD,IAAME,QAAQ,GAAGf,wBAAwB,CAACH,SAAS,CAAC;MACpD,IAAM+J,SAAS,GAAGgC,YAAY,CAAC7K,QAAQ,CAAC;MACxC,IAAIgL,aAAa,GAAG3K,MAAM,CAACL,QAAQ,CAAC;MACpC,IAAIiL,cAAc,GAAG5K,MAAM,CAACwI,SAAS,CAAC;MACtC,IAAMyC,SAAS,GAAG,OAAO/F,MAAM,KAAK,UAAU,GAAGA,MAAM,CAACxC,mBAAmB,CAAC,GAAGwC,MAAM;MACrF,IAAMgG,cAAc,GAAG,OAAOD,SAAS,KAAK,QAAQ,GAAG;QACrDtL,QAAQ,EAAEsL,SAAS;QACnBzC,SAAS,EAAE;MACb,CAAC;QACC7I,QAAQ,EAAE,CAAC;QACX6I,SAAS,EAAE;MAAC,GACTyC,SAAS,CACb;MAED,IAAI1C,aAAa,EAAE;QACjB,IAAM4C,GAAG,GAAGxL,QAAQ,KAAK,GAAG,GAAG,QAAQ,GAAG,OAAO;QACjD,IAAMyL,QAAQ,GAAGjK,KAAK,CAAChC,SAAS,CAACQ,QAAQ,CAAC,GAAGwB,KAAK,CAAC/B,QAAQ,CAAC+L,GAAG,CAAC,GAAGD,cAAc,CAACvL,QAAQ;QAC1F,IAAM0L,QAAQ,GAAGlK,KAAK,CAAChC,SAAS,CAACQ,QAAQ,CAAC,GAAGwB,KAAK,CAAChC,SAAS,CAACgM,GAAG,CAAC,GAAGD,cAAc,CAACvL,QAAQ;QAE3F,IAAIgL,aAAa,GAAGS,QAAQ,EAAE;UAC5BT,aAAa,GAAGS,QAAQ;QAC1B,CAAC,MAAM,IAAIT,aAAa,GAAGU,QAAQ,EAAE;UACnCV,aAAa,GAAGU,QAAQ;QAC1B;MACF;MAEA,IAAI5C,cAAc,EAAE;QAClB,IAAI6C,qBAAqB,EAAEC,sBAAsB,EAAEC,sBAAsB,EAAEC,sBAAsB;QAEjG,IAAMN,IAAG,GAAGxL,QAAQ,KAAK,GAAG,GAAG,OAAO,GAAG,QAAQ;QACjD,IAAM+L,YAAY,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC7M,QAAQ,CAACL,OAAO,CAACC,SAAS,CAAC,CAAC;QACjE,IAAM2M,SAAQ,GAAGjK,KAAK,CAAChC,SAAS,CAACqJ,SAAS,CAAC,GAAGrH,KAAK,CAAC/B,QAAQ,CAAC+L,IAAG,CAAC,IAAIO,YAAY,GAAG,CAACJ,qBAAqB,GAAG,CAACC,sBAAsB,GAAGlK,cAAc,CAAC6D,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGqG,sBAAsB,CAAC/C,SAAS,CAAC,KAAK,IAAI,GAAG8C,qBAAqB,GAAG,CAAC,GAAG,CAAC,CAAC,IAAII,YAAY,GAAG,CAAC,GAAGR,cAAc,CAAC1C,SAAS,CAAC;QAC5S,IAAM6C,SAAQ,GAAGlK,KAAK,CAAChC,SAAS,CAACqJ,SAAS,CAAC,GAAGrH,KAAK,CAAChC,SAAS,CAACgM,IAAG,CAAC,IAAIO,YAAY,GAAG,CAAC,GAAG,CAACF,sBAAsB,GAAG,CAACC,sBAAsB,GAAGpK,cAAc,CAAC6D,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGuG,sBAAsB,CAACjD,SAAS,CAAC,KAAK,IAAI,GAAGgD,sBAAsB,GAAG,CAAC,CAAC,IAAIE,YAAY,GAAGR,cAAc,CAAC1C,SAAS,GAAG,CAAC,CAAC;QAE/S,IAAIoC,cAAc,GAAGQ,SAAQ,EAAE;UAC7BR,cAAc,GAAGQ,SAAQ;QAC3B,CAAC,MAAM,IAAIR,cAAc,GAAGS,SAAQ,EAAE;UACpCT,cAAc,GAAGS,SAAQ;QAC3B;MACF;MAEA,0CACG1L,QAAQ,EAAGgL,aAAa,0BACxBnC,SAAS,EAAGoC,cAAc;IAE/B;EAEF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAMe,IAAI,GAAG,SAAPA,IAAI,CAAahJ,OAAO,EAAE;EAC9B,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EAEA,OAAO;IACL3B,IAAI,EAAE,MAAM;IACZ2B,OAAO,EAAPA,OAAO;IAEDnB,EAAE,cAACkB,mBAAmB,EAAE;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAE1BjE,SAAS,GAIPiE,mBAAmB,CAJrBjE,SAAS,EACT0C,KAAK,GAGHuB,mBAAmB,CAHrBvB,KAAK,EACLd,QAAQ,GAENqC,mBAAmB,CAFrBrC,QAAQ,EACRqB,QAAQ,GACNgB,mBAAmB,CADrBhB,QAAQ;gBAAA,YAKNiB,OAAO,8BAFTiJ,KAAK,EAALA,KAAK,gCAAG,YAAM,CAAC,CAAC,oBACbhF,qBAAqB;gBAAA;gBAAA,OAEHnE,cAAc,CAACC,mBAAmB,EAAEkE,qBAAqB,CAAC;cAAA;gBAA3EE,QAAQ;gBACRhH,IAAI,GAAGtB,OAAO,CAACC,SAAS,CAAC;gBACzB4F,SAAS,GAAG1F,YAAY,CAACF,SAAS,CAAC;gBAAA,MAIrCqB,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,QAAQ;kBAAA;kBAAA;gBAAA;gBACrC+L,UAAU,GAAG/L,IAAI;gBAAC,eACNuE,SAAS;gBAAA;gBAAA,OAAchE,QAAQ,CAACI,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGJ,QAAQ,CAACI,KAAK,CAACiB,QAAQ,CAACtC,QAAQ,CAAC;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;gBAAA,eAAK,OAAO;gBAAA;gBAAA;cAAA;gBAAA,eAAG,KAAK;cAAA;gBAAA;gBAAA;kBAAA;kBAAA;gBAAA;gBAAA,eAAI,MAAM;gBAAA;gBAAA;cAAA;gBAAA,eAAG,OAAO;cAAA;gBAA9I0M,SAAS;gBAAA;gBAAA;cAAA;gBAETA,SAAS,GAAGhM,IAAI;gBAChB+L,UAAU,GAAGxH,SAAS,KAAK,KAAK,GAAG,KAAK,GAAG,QAAQ;cAAC;gBAGhD0H,IAAI,GAAGhI,GAAG,CAAC+C,QAAQ,CAACzE,IAAI,EAAE,CAAC,CAAC;gBAC5B2J,IAAI,GAAGjI,GAAG,CAAC+C,QAAQ,CAAC3E,KAAK,EAAE,CAAC,CAAC;gBAC7B8J,IAAI,GAAGlI,GAAG,CAAC+C,QAAQ,CAAC5E,GAAG,EAAE,CAAC,CAAC;gBAC3BgK,IAAI,GAAGnI,GAAG,CAAC+C,QAAQ,CAAC1E,MAAM,EAAE,CAAC,CAAC;gBAC9B+J,UAAU,GAAG;kBACjBC,eAAe,EAAEjL,KAAK,CAAC/B,QAAQ,CAACM,MAAM,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAACb,QAAQ,CAACJ,SAAS,CAAC,GAAG,CAAC,IAAIwN,IAAI,KAAK,CAAC,IAAIC,IAAI,KAAK,CAAC,GAAGD,IAAI,GAAGC,IAAI,GAAGnI,GAAG,CAAC+C,QAAQ,CAAC5E,GAAG,EAAE4E,QAAQ,CAAC1E,MAAM,CAAC,CAAC,GAAG0E,QAAQ,CAAC+E,UAAU,CAAC,CAAC;kBAC3LQ,cAAc,EAAElL,KAAK,CAAC/B,QAAQ,CAACG,KAAK,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAACV,QAAQ,CAACJ,SAAS,CAAC,GAAG,CAAC,IAAIsN,IAAI,KAAK,CAAC,IAAIC,IAAI,KAAK,CAAC,GAAGD,IAAI,GAAGC,IAAI,GAAGjI,GAAG,CAAC+C,QAAQ,CAACzE,IAAI,EAAEyE,QAAQ,CAAC3E,KAAK,CAAC,CAAC,GAAG2E,QAAQ,CAACgF,SAAS,CAAC;gBACzL,CAAC;gBAAA;gBAAA,OACKF,KAAK,iCAAMlJ,mBAAmB,GAC/ByJ,UAAU,EACb;cAAA;gBAAA;gBAAA,OAC2B9L,QAAQ,CAACiE,aAAa,CAAC5C,QAAQ,CAACtC,QAAQ,CAAC;cAAA;gBAAhEkN,cAAc;gBAAA,MAEhBnL,KAAK,CAAC/B,QAAQ,CAACG,KAAK,KAAK+M,cAAc,CAAC/M,KAAK,IAAI4B,KAAK,CAAC/B,QAAQ,CAACM,MAAM,KAAK4M,cAAc,CAAC5M,MAAM;kBAAA;kBAAA;gBAAA;gBAAA,kCAC3F;kBACLoC,KAAK,EAAE;oBACLX,KAAK,EAAE;kBACT;gBACF,CAAC;cAAA;gBAAA,kCAGI,CAAC,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACX;EAEF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,IAAMoL,MAAM,GAAG,SAATA,MAAM,CAAa5J,OAAO,EAAE;EAChC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EAEA,OAAO;IACL3B,IAAI,EAAE,QAAQ;IACd2B,OAAO,EAAPA,OAAO;IAEDnB,EAAE,cAACkB,mBAAmB,EAAE;MAAA;QAAA,8JA0BnB8J,qBAAqB;QAAA;UAAA;YAAA;cAAA;gBAArBA,qBAAqB,oCAAG;kBAC/B;kBACA,IAAIC,WAAW,CAAC7M,MAAM,KAAK,CAAC,IAAI6M,WAAW,CAAC,CAAC,CAAC,CAACpK,IAAI,GAAGoK,WAAW,CAAC,CAAC,CAAC,CAACtK,KAAK,IAAI7C,CAAC,IAAI,IAAI,IAAIG,CAAC,IAAI,IAAI,EAAE;oBACpG,IAAIiN,iBAAiB;;oBAErB;oBACA,OAAO,CAACA,iBAAiB,GAAGD,WAAW,CAACxE,IAAI,CAAC,UAAAzF,IAAI;sBAAA,OAAIlD,CAAC,GAAGkD,IAAI,CAACH,IAAI,GAAGW,aAAa,CAACX,IAAI,IAAI/C,CAAC,GAAGkD,IAAI,CAACL,KAAK,GAAGa,aAAa,CAACb,KAAK,IAAI1C,CAAC,GAAG+C,IAAI,CAACN,GAAG,GAAGc,aAAa,CAACd,GAAG,IAAIzC,CAAC,GAAG+C,IAAI,CAACJ,MAAM,GAAGY,aAAa,CAACZ,MAAM;oBAAA,EAAC,KAAK,IAAI,GAAGsK,iBAAiB,GAAGC,QAAQ;kBACxP,CAAC,CAAC;;kBAGF,IAAIF,WAAW,CAAC7M,MAAM,IAAI,CAAC,EAAE;oBAC3B,IAAIhB,wBAAwB,CAACH,SAAS,CAAC,KAAK,GAAG,EAAE;sBAC/C,IAAMmO,SAAS,GAAGH,WAAW,CAAC,CAAC,CAAC;sBAChC,IAAMI,QAAQ,GAAGJ,WAAW,CAACA,WAAW,CAAC7M,MAAM,GAAG,CAAC,CAAC;sBACpD,IAAMkN,KAAK,GAAGtO,OAAO,CAACC,SAAS,CAAC,KAAK,KAAK;sBAC1C,IAAMyD,IAAG,GAAG0K,SAAS,CAAC1K,GAAG;sBACzB,IAAME,OAAM,GAAGyK,QAAQ,CAACzK,MAAM;sBAC9B,IAAMC,KAAI,GAAGyK,KAAK,GAAGF,SAAS,CAACvK,IAAI,GAAGwK,QAAQ,CAACxK,IAAI;sBACnD,IAAMF,MAAK,GAAG2K,KAAK,GAAGF,SAAS,CAACzK,KAAK,GAAG0K,QAAQ,CAAC1K,KAAK;sBACtD,IAAM5C,MAAK,GAAG4C,MAAK,GAAGE,KAAI;sBAC1B,IAAM3C,OAAM,GAAG0C,OAAM,GAAGF,IAAG;sBAC3B,OAAO;wBACLA,GAAG,EAAHA,IAAG;wBACHE,MAAM,EAANA,OAAM;wBACNC,IAAI,EAAJA,KAAI;wBACJF,KAAK,EAALA,MAAK;wBACL5C,KAAK,EAALA,MAAK;wBACLG,MAAM,EAANA,OAAM;wBACNJ,CAAC,EAAE+C,KAAI;wBACP5C,CAAC,EAAEyC;sBACL,CAAC;oBACH;oBAEA,IAAM6K,UAAU,GAAGvO,OAAO,CAACC,SAAS,CAAC,KAAK,MAAM;oBAChD,IAAMuO,QAAQ,GAAGjJ,GAAG,kCAAI0I,WAAW,CAACnD,GAAG,CAAC,UAAA9G,IAAI;sBAAA,OAAIA,IAAI,CAACL,KAAK;oBAAA,EAAC,EAAC;oBAC5D,IAAM8K,OAAO,GAAGpJ,GAAG,kCAAI4I,WAAW,CAACnD,GAAG,CAAC,UAAA9G,IAAI;sBAAA,OAAIA,IAAI,CAACH,IAAI;oBAAA,EAAC,EAAC;oBAC1D,IAAM6K,YAAY,GAAGT,WAAW,CAAClM,MAAM,CAAC,UAAAiC,IAAI;sBAAA,OAAIuK,UAAU,GAAGvK,IAAI,CAACH,IAAI,KAAK4K,OAAO,GAAGzK,IAAI,CAACL,KAAK,KAAK6K,QAAQ;oBAAA,EAAC;oBAC7G,IAAM9K,GAAG,GAAGgL,YAAY,CAAC,CAAC,CAAC,CAAChL,GAAG;oBAC/B,IAAME,MAAM,GAAG8K,YAAY,CAACA,YAAY,CAACtN,MAAM,GAAG,CAAC,CAAC,CAACwC,MAAM;oBAC3D,IAAMC,IAAI,GAAG4K,OAAO;oBACpB,IAAM9K,KAAK,GAAG6K,QAAQ;oBACtB,IAAMzN,KAAK,GAAG4C,KAAK,GAAGE,IAAI;oBAC1B,IAAM3C,MAAM,GAAG0C,MAAM,GAAGF,GAAG;oBAC3B,OAAO;sBACLA,GAAG,EAAHA,GAAG;sBACHE,MAAM,EAANA,MAAM;sBACNC,IAAI,EAAJA,IAAI;sBACJF,KAAK,EAALA,KAAK;sBACL5C,KAAK,EAALA,KAAK;sBACLG,MAAM,EAANA,MAAM;sBACNJ,CAAC,EAAE+C,IAAI;sBACP5C,CAAC,EAAEyC;oBACL,CAAC;kBACH;kBAEA,OAAOyK,QAAQ;gBACjB,CAAC;gBA9EClO,SAAS,GAKPiE,mBAAmB,CALrBjE,SAAS,EACTiD,QAAQ,GAINgB,mBAAmB,CAJrBhB,QAAQ,EACRP,KAAK,GAGHuB,mBAAmB,CAHrBvB,KAAK,EACLd,QAAQ,GAENqC,mBAAmB,CAFrBrC,QAAQ,EACRF,QAAQ,GACNuC,mBAAmB,CADrBvC,QAAQ,EACe;gBACzB;gBACA;gBAAA,YAMIwC,OAAO,gCAHTV,OAAO,EAAPA,OAAO,kCAAG,CAAC,sBACX3C,CAAC,aAADA,CAAC,EACDG,CAAC,aAADA,CAAC;gBAAA,eAEc8C,gBAAgB;gBAAA,KAAClC,QAAQ,CAACoD,qDAAqD;kBAAA;kBAAA;gBAAA;gBAAA,eAASpD,QAAQ;gBAAA,eACzGc,KAAK,CAAChC,SAAS;gBAAA;gBAAA,OACAkB,QAAQ,CAACqD,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGrD,QAAQ,CAACqD,eAAe,CAAChC,QAAQ,CAACtC,QAAQ,CAAC;cAAA;gBAAA;gBAAA,eAC5Ge,QAAQ;gBAAA;kBAFRqC,IAAI;kBACJmB,YAAY;kBACZxD,QAAQ;gBAAA;gBAAA;gBAAA,oBAHwGsD,qDAAqD;cAAA;gBAAA;gBAAA;gBAAA;cAAA;gBAAA,eAIlKtC,KAAK,CAAChC,SAAS;cAAA;gBAAA;gBAJdwN,QAAQ;gBAAA;gBAAA,OAKsCtM,QAAQ,CAAC8M,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG9M,QAAQ,CAAC8M,cAAc,CAACzL,QAAQ,CAACvC,SAAS,CAAC;cAAA;gBAAA,eAArHiO,qBAAqB;gBAAA,sBAAsG,IAAI;kBAAA;kBAAA;gBAAA;gBAAA,eAAGA,qBAAqB;gBAAA;gBAAA;cAAA;gBAAA,eAAG,EAAE;cAAA;gBAA3KX,WAAW;gBACXzJ,aAAa,GAAGV,wBAAwB,CAACL,OAAO,CAAC;gBAAA;gBAAA,OA4D9B5B,QAAQ,CAACa,eAAe,CAAC;kBAChD/B,SAAS,EAAE;oBACTqN,qBAAqB,EAArBA;kBACF,CAAC;kBACDpN,QAAQ,EAAEsC,QAAQ,CAACtC,QAAQ;kBAC3Be,QAAQ,EAARA;gBACF,CAAC,CAAC;cAAA;gBANIkN,UAAU;gBAAA,MAQZlM,KAAK,CAAChC,SAAS,CAACG,CAAC,KAAK+N,UAAU,CAAClO,SAAS,CAACG,CAAC,IAAI6B,KAAK,CAAChC,SAAS,CAACM,CAAC,KAAK4N,UAAU,CAAClO,SAAS,CAACM,CAAC,IAAI0B,KAAK,CAAChC,SAAS,CAACI,KAAK,KAAK8N,UAAU,CAAClO,SAAS,CAACI,KAAK,IAAI4B,KAAK,CAAChC,SAAS,CAACO,MAAM,KAAK2N,UAAU,CAAClO,SAAS,CAACO,MAAM;kBAAA;kBAAA;gBAAA;gBAAA,kCACzM;kBACLoC,KAAK,EAAE;oBACLX,KAAK,EAAEkM;kBACT;gBACF,CAAC;cAAA;gBAAA,kCAGI,CAAC,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACX;EAEF,CAAC;AACH,CAAC;AAED,SAASjJ,KAAK,EAAEuC,aAAa,EAAE1G,eAAe,EAAEwC,cAAc,EAAE6F,IAAI,EAAEqB,IAAI,EAAE4C,MAAM,EAAEvB,UAAU,EAAE9F,MAAM,EAAE3C,gBAAgB,EAAEkI,KAAK,EAAEkB,IAAI"},"metadata":{},"sourceType":"module"}