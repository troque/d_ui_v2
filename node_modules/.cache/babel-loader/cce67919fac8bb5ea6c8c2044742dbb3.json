{"ast":null,"code":"import _objectSpread from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useLocation}from'react-router-dom';import DataTable from'react-data-table-component';import GenericApi from'../../Api/Services/GenericApi';import ParametrosMasApi from\"../../Api/Services/ParametrosMasApi\";import Spinner from'../../Utils/Spinner';import ModalGen from'../../Utils/Modals/ModalGeneric';import'../../Utils/Constants';import{getUser}from'../../Utils/Common';import\"react-datepicker/dist/react-datepicker.css\";import DatePicker,{registerLocale}from\"react-datepicker\";import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ActuacionParametrosPlantillaForm(props){var location=useLocation();var from=location.state.from;var radicado=from.radicado;var procesoDisciplinarioId=from.procesoDisciplinarioId;var id_etapa=from.idEtapa;var fechaRegistro=from.fechaRegistro;var fechaIngreso=from.fechaIngreso;var dependencia=getUser().nombre_dependencia?getUser().nombre_dependencia.nombre:\"\";var registradoPor=from.registradoPor;var vigencia=from.vigencia;var generadoPor=getUser().nombre_completo?getUser().nombre_completo:\"\";var _useState=useState({title:\"\",message:\"\",show:false}),_useState2=_slicedToArray(_useState,2),modalState=_useState2[0],setModalState=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),getListaParametros=_useState4[0],setListaParametros=_useState4[1];var _useState5=useState({data:[]}),_useState6=_slicedToArray(_useState5,2),getListaCamposPorParametroTemporal=_useState6[0],setListaCamposPorParametroTemporal=_useState6[1];var _useState7=useState({data:[]}),_useState8=_slicedToArray(_useState7,2),getListaCamposPorCamposTemporal=_useState8[0],setListaCamposPorCamposTemporal=_useState8[1];//const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\nvar _useState9=useState({data:[],links:[],meta:[]}),_useState10=_slicedToArray(_useState9,2),getAntecedentesLista=_useState10[0],setAntecedentesLista=_useState10[1];var _useState11=useState({data:[],links:[],meta:[]}),_useState12=_slicedToArray(_useState11,2),getInteresadosLista=_useState12[0],setInteresadosLista=_useState12[1];var _useState13=useState({data:[],links:[],meta:[]}),_useState14=_slicedToArray(_useState13,2),getEntidadesInvestigadoLista=_useState14[0],setEntidadesInvestigadoLista=_useState14[1];var _useState15=useState({data:[],links:[],meta:[]}),_useState16=_slicedToArray(_useState15,2),getCargosInvestigadoLista=_useState16[0],setCargosInvestigadoLista=_useState16[1];var _useState17=useState({data:[],links:[],meta:[]}),_useState18=_slicedToArray(_useState17,2),getEntidadInvestigadoLista=_useState18[0],setEntidadInvestigadoLista=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),getParametrosCampos=_useState20[0],setParametrosCampos=_useState20[1];var _useState21=useState({data:[]}),_useState22=_slicedToArray(_useState21,2),getListaParametrosBaseDatos=_useState22[0],setListaParametrosBaseDatos=_useState22[1];var _useState23=useState(true),_useState24=_slicedToArray(_useState23,2),getPrueba=_useState24[0],setPrueba=_useState24[1];var _useState25=useState(true),_useState26=_slicedToArray(_useState25,2),getExistenDatosResultados=_useState26[0],setExistenDatosResultados=_useState26[1];var _useState27=useState([]),_useState28=_slicedToArray(_useState27,2),getCamposAdicionales=_useState28[0],setCamposAdicionales=_useState28[1];var _useState29=useState(),_useState30=_slicedToArray(_useState29,2),getMaxDate=_useState30[0],setMaxDate=_useState30[1];var _useState31=useState(moment().format('YYYY-MM-DD')),_useState32=_slicedToArray(_useState31,2),value=_useState32[0],setValue=_useState32[1];var _useState33=useState(true),_useState34=_slicedToArray(_useState33,2),getIsLoading=_useState34[0],setIsLoading=_useState34[1];var numeroLlamados=0;var numeroTotalLlamados=3;// Metodo encargado de cargar la informacion general del formulario\nuseEffect(function(){// Se setea el maximo de fecha\nsetMaxDate(new Date().toISOString().split(\"T\")[0]);// Se inicializa la funcion asyncrona\nfunction fetchData(){return _fetchData.apply(this,arguments);}// Se llama el metodo\nfunction _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Metodo encargado de cargar los parametros de la plantilla\ncargarTablaParametrosActuaciones();case 1:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[props.id_mas_actuacion]);// Metodo encargado de cargar los parametros generales de la plantilla de la BD\nvar cargarTablaParametrosActuaciones=function cargarTablaParametrosActuaciones(){// Se inicializa el array\nvar array=[];// Se inicializa la API\nGenericApi.getGeneric('parametro-campos').then(// Se inicializa la variable de respuesta\nfunction(datos){validacionSpinner();// Se valida que no haya error\nif(!datos.error){// Se recorre el array para insertar los valores necesarios\nfor(var index=0;index<datos.data.length;index++){// Se captura los datos por posicion\nvar element=datos.data[index].attributes;var title=element.nombre_campo;var estado=element.estado==\"1\"?true:false;var type=element.type;var _value=validarValueParametros(type,estado);// Se añade el dato al array general\narray.push({title:title,value:_value,type:type,check:estado});}// Se setea la respuesta en la constante\nsetListaParametrosBaseDatos(array);// Se generan la lista de parametros del documento\ncargarParametros(array);}});};// Metodo encargado de retorna el valor por el elemento\nvar validarValueParametros=function validarValueParametros(element,estado){// Se inicializa la variable\nvar valor;// Se valida por el elemento\nif((element==\"Sinproc\"||element==\"Número de radicado\"||element==\"Radicación\"||element==\"Radicado\")&&estado){valor=radicado;}else if(element==\"Usuario\"&&estado){valor=registradoPor;}else if((element==\"Dependencia Origen\"||element==\"Dependencia\")&&estado){valor=dependencia;}else if(element==\"Vigencia\"&&estado){valor=vigencia;}else if(element==\"Fecha de Registro\"&&estado){valor=fechaRegistro;}else if(element==\"Fecha de Ingreso\"&&estado){valor=fechaIngreso;}else if(element==\"Generado\"&&estado){valor=generadoPor;}else if((element==\"Número de auto (generado despues de aprobación)\"||element==\"Auto\")&&estado){valor=\"${numero_de_auto}\";}// Se retorna el valor\nreturn valor;};var handleChangeInteresados=function handleChangeInteresados(e,parametro,id_campo){var _e$target=e.target,value=_e$target.value,checked=_e$target.checked;var valorId=getInteresadosLista.map(function(item){if(value==item.id){item.checked=checked;}return item;});setInteresadosLista(valorId);var val=getInteresadosLista.map(function(p){if(p.checked==true){var primerApellido=p.attributes.primer_apellido!=null?p.attributes.primer_apellido:\"\";var segundoApellido=p.attributes.segundo_apellido!=null?p.attributes.segundo_apellido:\"\";var primerNombre=p.attributes.primer_nombre!=null?p.attributes.primer_nombre:\"\";var segundoNombre=p.attributes.segundo_nombre!=null?p.attributes.segundo_nombre:\"\";var sujetoProcesalNombre=p.attributes.sujeto_procesal_nombre!=\"\"?p.attributes.sujeto_procesal_nombre:\"\";var nombreCompleto=sujetoProcesalNombre+\" \"+primerApellido+\" \"+segundoApellido+\" \"+primerNombre+\" \"+segundoNombre;var nombre=nombreCompleto;return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};function checkeoAutomaticoInteresados(parametro,id_campo){setInteresadosLista(getInteresadosLista);var primerApellido=getInteresadosLista[0].attributes.primer_apellido!=null?getInteresadosLista[0].attributes.primer_apellido:\"\";var segundoApellido=getInteresadosLista[0].attributes.segundo_apellido!=null?getInteresadosLista[0].attributes.segundo_apellido:\"\";var primerNombre=getInteresadosLista[0].attributes.primer_nombre!=null?getInteresadosLista[0].attributes.primer_nombre:\"\";var segundoNombre=getInteresadosLista[0].attributes.segundo_nombre!=null?getInteresadosLista[0].attributes.segundo_nombre:\"\";var sujetoProcesalNombre=getInteresadosLista[0].attributes.sujeto_procesal_nombre!=null?getInteresadosLista[0].attributes.sujeto_procesal_nombre:\"\";var nombreCompleto=sujetoProcesalNombre+\" \"+primerApellido+\" \"+segundoApellido+\" \"+primerNombre+\" \"+segundoNombre;var nombre=nombreCompleto;// var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\nselectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoAntecedentes(parametro,id_campo){setAntecedentesLista(getAntecedentesLista);var nombre=\"\".concat(getAntecedentesLista[0].attributes.descripcion);selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoInvestigadosNombre(parametro,id_campo){setEntidadInvestigadoLista(getEntidadesInvestigadoLista);var nombre=\"\".concat(getEntidadesInvestigadoLista[0].attributes.nombre_investigado);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoInvestigadosCargo(parametro,id_campo){setCargosInvestigadoLista(getCargosInvestigadoLista);var nombre=\"\".concat(getCargosInvestigadoLista[0].attributes.cargo);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoInvestigadosEntidad(parametro,id_campo){setEntidadesInvestigadoLista(getEntidadInvestigadoLista);var nombre=\"\".concat(getEntidadInvestigadoLista[0].attributes.nombre_entidad);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoFechaAntecedentes(parametro,id_campo){setAntecedentesLista(getAntecedentesLista);var nombre=\"\".concat(getAntecedentesLista[0].attributes.fecha_creado);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}var handleChangeAntecedentes=function handleChangeAntecedentes(e,parametro,id_campo){var _e$target2=e.target,value=_e$target2.value,checked=_e$target2.checked;var valorId=getAntecedentesLista.map(function(item){if(value==item.id){item.checked=checked;}return item;});setAntecedentesLista(valorId);var val=getAntecedentesLista.map(function(p){if(p.checked==true){var nombre=\"\".concat(p.attributes.descripcion);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeFechaAntecedentes=function handleChangeFechaAntecedentes(e,parametro,id_campo){var _e$target3=e.target,value=_e$target3.value,checked=_e$target3.checked;var valorId=getAntecedentesLista.map(function(item){if(value==item.id){item.checked=checked;}return item;});setAntecedentesLista(valorId);var val=getAntecedentesLista.map(function(p){if(p.checked==true){var nombre=\"\".concat(p.attributes.fecha_creado);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeInvestigados=function handleChangeInvestigados(e,parametro,id_campo){var _e$target4=e.target,value=_e$target4.value,checked=_e$target4.checked;var valorId=getEntidadesInvestigadoLista.map(function(item){if(value==item.attributes.nombre_investigado){item.checked=checked;}return item;});setEntidadesInvestigadoLista(valorId);var val=getEntidadesInvestigadoLista.map(function(p){if(p.checked==true){var value=\"\".concat(p.attributes.nombre_investigado);var nombre=\"\".concat(p.attributes.nombre_investigado);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeCargosInvestigados=function handleChangeCargosInvestigados(e,parametro,id_campo){var _e$target5=e.target,value=_e$target5.value,checked=_e$target5.checked;var valorId=getCargosInvestigadoLista.map(function(item){if(value==item.attributes.cargo){item.checked=checked;}return item;});setCargosInvestigadoLista(valorId);var val=getCargosInvestigadoLista.map(function(p){if(p.checked==true){var value=\"\".concat(p.attributes.cargo);var nombre=\"\".concat(p.attributes.cargo);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeEntidadesInvestigados=function handleChangeEntidadesInvestigados(e,parametro,id_campo){var _e$target6=e.target,value=_e$target6.value,checked=_e$target6.checked;var valorId=getEntidadInvestigadoLista.map(function(item){if(value==item.attributes.nombre_entidad){item.checked=checked;}return item;});setCargosInvestigadoLista(valorId);var val=getEntidadInvestigadoLista.map(function(p){if(p.checked==true){var value=\"\".concat(p.attributes.nombre_entidad);var nombre=\"\".concat(p.attributes.nombre_entidad);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var selectAntecedentes=function selectAntecedentes(parametro,id_campo){if(Array.isArray(getAntecedentesLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getAntecedentesLista&&getAntecedentesLista.length==1){checkeoAutomaticoAntecedentes(parametro,id_campo);return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getAntecedentesLista[0].id,name:'check'+getAntecedentesLista[0].id,value:getAntecedentesLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",getAntecedentesLista[0].attributes.descripcion]},'keyCheck'+getAntecedentesLista[0].id);}else if(getAntecedentesLista.length>1){return getAntecedentesLista.map(function(item,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+item.id,name:'check'+item.id,value:item.id,onChange:function onChange(e){return handleChangeAntecedentes(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",item.attributes.descripcion]},'keyCheck'+item.id)// <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n;});}}};var selectFechaAntecedentes=function selectFechaAntecedentes(parametro,id_campo){if(Array.isArray(getAntecedentesLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getAntecedentesLista&&getAntecedentesLista.length==1){checkeoAutomaticoFechaAntecedentes(parametro,id_campo);return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getAntecedentesLista[0].attributes.fecha_creado,name:'check'+getAntecedentesLista[0].attributes.fecha_creado,value:getAntecedentesLista[0].attributes.fecha_creado,onChange:function onChange(e){return handleChangeFechaAntecedentes(0,parametro,id_campo);},defaultChecked:true,disabled:true}),\" \",getAntecedentesLista[0].attributes.fecha_creado]},'keyCheck'+getAntecedentesLista[0].attributes.fecha_creado);}else if(getAntecedentesLista.length>1){return getAntecedentesLista.map(function(item,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+item.fecha_creado,name:'check'+item.fecha_creado,value:item.fecha_creado//onChange={(e) => handleChangeFechaAntecedentes(e, parametro, id_campo)}\n,defaultChecked:item.checked}),\" \",item.attributes.fecha_creado]},'keyCheck'+item.fecha_creado)// <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n;});}}};var selectInteresados=function selectInteresados(parametro,id_campo){if(Array.isArray(getInteresadosLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getInteresadosLista&&getInteresadosLista.length==1){checkeoAutomaticoInteresados(parametro,id_campo);var primerApellido=getInteresadosLista[0].attributes.primer_apellido!=\"\"?getInteresadosLista[0].attributes.primer_apellido:\"\";var segundoApellido=getInteresadosLista[0].attributes.segundo_apellido!=\"\"?getInteresadosLista[0].attributes.segundo_apellido:\"\";var primerNombre=getInteresadosLista[0].attributes.primer_nombre!=\"\"?getInteresadosLista[0].attributes.primer_nombre:\"\";var segundoNombre=getInteresadosLista[0].attributes.segundo_nombre!=\"\"?getInteresadosLista[0].attributes.segundo_nombre:\"\";var sujetoProcesalNombre=getInteresadosLista[0].attributes.sujeto_procesal_nombre!=\"\"?getInteresadosLista[0].attributes.sujeto_procesal_nombre:\"\";var nombreCompleto=sujetoProcesalNombre+\" \"+primerApellido+\" \"+segundoApellido+\" \"+primerNombre+\" \"+segundoNombre;var nombre=nombreCompleto;// var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getInteresadosLista[0].id,name:'check'+getInteresadosLista[0].id,value:getInteresadosLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",nombre]},'keyCheck'+getInteresadosLista[0].id);}else if(getInteresadosLista.length>1){return getInteresadosLista.map(function(item,i){var primerApellido=item.attributes.primer_apellido!=null?item.attributes.primer_apellido:\"\";var segundoApellido=item.attributes.segundo_apellido!=null?item.attributes.segundo_apellido:\"\";var primerNombre=item.attributes.primer_nombre!=null?item.attributes.primer_nombre:\"\";var segundoNombre=item.attributes.segundo_nombre!=null?item.attributes.segundo_nombre:\"\";var sujetoProcesalNombre=item.attributes.sujeto_procesal_nombre!=\"\"?item.attributes.sujeto_procesal_nombre:\"\";var nombreCompleto=sujetoProcesalNombre+\" \"+primerApellido+\" \"+segundoApellido+\" \"+primerNombre+\" \"+segundoNombre;var nombre=nombreCompleto;// var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+nombre,name:'check'+nombre,value:item.id,onChange:function onChange(e){return handleChangeInteresados(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",nombre]},'keyCheck'+nombre)// <option key={nombre} value={nombre}>{nombre}</option>\n;});}}};var selectInvestigados=function selectInvestigados(parametro,id_campo){if(Array.isArray(getEntidadesInvestigadoLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getEntidadesInvestigadoLista&&getEntidadesInvestigadoLista.length==1){checkeoAutomaticoInvestigadosNombre(parametro,id_campo);var nombre=\"\".concat(getEntidadesInvestigadoLista[0].attributes.nombre_investigado);if(nombre==\"null\"){nombre=\"NO_APLICA\";}return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getEntidadesInvestigadoLista[0].id,name:'check'+getEntidadesInvestigadoLista[0].id,value:getEntidadesInvestigadoLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",nombre]},'keyCheck'+getEntidadesInvestigadoLista[0].id);}else if(getEntidadesInvestigadoLista.length>1){return getEntidadesInvestigadoLista.map(function(item,i){var value=\"\".concat(item.attributes.nombre_investigado);var nombre=\"\".concat(item.attributes.nombre_investigado);if(nombre!=\"null\"){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:nombre,name:nombre,value:nombre,onChange:function onChange(e){return handleChangeInvestigados(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",nombre]},nombre)//<option key={value} value={value}>{nombre}</option>\n;}});}}};var selectCargosInvestigados=function selectCargosInvestigados(parametro,id_campo){if(Array.isArray(getCargosInvestigadoLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getCargosInvestigadoLista&&getCargosInvestigadoLista.length==1){checkeoAutomaticoInvestigadosCargo(parametro,id_campo);var nombre=\"\".concat(getCargosInvestigadoLista[0].attributes.cargo);if(nombre==\"null\"){nombre=\"NO_APLICA\";}return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getCargosInvestigadoLista[0].id,name:'check'+getCargosInvestigadoLista[0].id,value:getCargosInvestigadoLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",nombre]},'keyCheck'+getCargosInvestigadoLista[0].id);}else if(getCargosInvestigadoLista.length>1){return getCargosInvestigadoLista.map(function(item,i){var value=\"\".concat(item.attributes.cargo);var nombre=\"\".concat(item.attributes.cargo);if(nombre!=\"null\"){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:nombre,name:nombre,value:nombre,onChange:function onChange(e){return handleChangeCargosInvestigados(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",nombre]},nombre)// <option key={value} value={value}>{nombre}</option>\n;}});}}};var selectEntidadesInvestigados=function selectEntidadesInvestigados(parametro,id_campo){if(Array.isArray(getEntidadInvestigadoLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getEntidadInvestigadoLista&&getEntidadInvestigadoLista.length==1){checkeoAutomaticoInvestigadosEntidad(parametro,id_campo);var nombre=\"\".concat(getEntidadInvestigadoLista[0].attributes.nombre_entidad);if(nombre==\"null\"){nombre=\"NO_APLICA\";}return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getEntidadInvestigadoLista[0].id,name:'check'+getEntidadInvestigadoLista[0].id,value:getEntidadInvestigadoLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",nombre]},'keyCheck'+getEntidadInvestigadoLista[0].id);}else if(getEntidadInvestigadoLista.length>1){return getEntidadInvestigadoLista.map(function(item,i){var value=\"\".concat(item.attributes.nombre_entidad);var nombre=\"\".concat(item.attributes.nombre_entidad);if(nombre!=\"null\"){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:nombre,name:nombre,value:nombre,onChange:function onChange(e){return handleChangeEntidadesInvestigados(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",nombre]},nombre)//<option key={value} value={value}>{nombre}</option>\n;}});}}};var onChangeValue=function onChangeValue(value,dato,parametro,grupo,principal,pos){var nuevosResultados=JSON.parse(JSON.stringify(getListaParametros));if(value){nuevosResultados.resultados[parametro][pos].seleccionar=true;}else{nuevosResultados.resultados[parametro][pos].seleccionar=false;}// console.log(\"Daticos boleanos\", nuevosResultados)\nif(principal){var inputs=document.querySelectorAll('input[name=\"'+grupo+'\"]');// Deshabilitar los inputs seleccionados\ninputs.forEach(function(input){input.disabled=!value;var datosEnvio=input.id.split('$$$');nuevosResultados.resultados[datosEnvio[1]][datosEnvio[2]].seleccionar=false;});}setListaParametros(nuevosResultados);modificarListaCampos(value,dato?dato:'SIN DATOS',parametro,pos);removerInpuntsLista();};var modificarListaCampos=function modificarListaCampos(value,dato,parametro,pos){// console.log(\"Datos, parametros\", value, dato, parametro, pos)\nvar index=getListaCamposPorParametroTemporal.data.findIndex(function(data){return data.param===parametro;});if(index>-1){if(getListaCamposPorParametroTemporal.data[index].value){var listaSplit=getListaCamposPorParametroTemporal.data[index].value.replace(/\\s/g,'').split('$$$');var listaSplitIndex=getListaCamposPorParametroTemporal.data[index].orden.toString().split('$$$');var listaSplitConEspacios=getListaCamposPorParametroTemporal.data[index].value.split('$$$');var auxDato=dato.replace(/\\s/g,'');if(value){getListaCamposPorParametroTemporal.data[index].value+=\"$$$\"+dato;getListaCamposPorParametroTemporal.data[index].orden+=\"$$$\"+pos;}else{getListaCamposPorParametroTemporal.data[index].value=null;getListaCamposPorParametroTemporal.data[index].orden=null;//listaSplit.forEach((element, indexElement) => {\nlistaSplitIndex.forEach(function(element,indexElement){//if(auxDato !== element){\nif(element!==pos+\"\"){if(getListaCamposPorParametroTemporal.data[index].value===null){getListaCamposPorParametroTemporal.data[index].value=listaSplitConEspacios[indexElement];getListaCamposPorParametroTemporal.data[index].orden=listaSplitIndex[indexElement];}else{getListaCamposPorParametroTemporal.data[index].value+=\"$$$\"+listaSplitConEspacios[indexElement];getListaCamposPorParametroTemporal.data[index].orden+=\"$$$\"+listaSplitIndex[indexElement];}}});}}else{getListaCamposPorParametroTemporal.data[index].value=dato;getListaCamposPorParametroTemporal.data[index].orden=pos;}setListaCamposPorParametroTemporal(getListaCamposPorParametroTemporal);}else{if(value){var nuevoElemento={'param':parametro,'value':dato,'orden':pos};// Crear una copia del estado actual y agregar el nuevo elemento\nvar nuevaLista=[].concat(_toConsumableArray(getListaCamposPorParametroTemporal.data),[nuevoElemento]);// Actualizar el estado con la nueva lista que contiene el nuevo elemento\nsetListaCamposPorParametroTemporal(_objectSpread(_objectSpread({},getListaCamposPorParametroTemporal),{},{data:nuevaLista}));}}// console.log(\"Daticos lista campos\", getListaCamposPorParametroTemporal)\n};var removerInpuntsLista=function removerInpuntsLista(){if(getListaParametros&&getListaParametros.params&&getListaParametros.resultados){var grupos=[];getListaParametros.params.forEach(function(parametro){if(getListaParametros.resultados[parametro]&&Array.isArray(getListaParametros.resultados[parametro])){getListaParametros.resultados[parametro].forEach(function(resultado){grupos.push(resultado.grupo);});}grupos=_toConsumableArray(new Set(grupos));});grupos.forEach(function(grupo){var inputs=document.querySelectorAll('input[name=\"'+grupo+'\"]');inputs.forEach(function(input){if(input.disabled){var datosEnvio=input.id.split('$$$');modificarListaCampos(false,datosEnvio[0],datosEnvio[1],datosEnvio[2]);}});});}};var deshabilitarInputs=function deshabilitarInputs(etiqueta,estado,index){// Seleccionar todos los inputs con name=\"nombre\"\nvar inputs=document.querySelectorAll('input[name=\"'+etiqueta+'\"]');var nuevosResultados=JSON.parse(JSON.stringify(getListaParametros));// Deshabilitar los inputs seleccionados\ninputs.forEach(function(input){input.disabled=estado;var datosEnvio=input.id.split('$$$');nuevosResultados.resultados[datosEnvio[1]][datosEnvio[2]].seleccionar=false;});setListaParametros(nuevosResultados);};var componentInputCheckBox=function componentInputCheckBox(recorrido){if(recorrido){return recorrido.map(function(dato,index){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{id:dato.dato+\"$$$\"+dato.parametro+\"$$$\"+index,name:dato.principal?dato.grupo+\"_\"+dato.principal:dato.grupo,type:\"checkbox\",checked:dato.seleccionar,onChange:function onChange(e){return onChangeValue(e.target.checked,dato.dato,dato.parametro,dato.grupo,dato.principal,index);}}),\" \",dato.dato?dato.dato:'SIN DATOS']})},index);});}};var cargarValoresDeParametro=function cargarValoresDeParametro(parametro){var _getListaParametros$r;if(getListaParametros!==null&&getListaParametros!==void 0&&(_getListaParametros$r=getListaParametros.resultados)!==null&&_getListaParametros$r!==void 0&&_getListaParametros$r[parametro]){var _getListaParametros$r2;return/*#__PURE__*/_jsx(_Fragment,{children:componentInputCheckBox(getListaParametros===null||getListaParametros===void 0?void 0:(_getListaParametros$r2=getListaParametros.resultados)===null||_getListaParametros$r2===void 0?void 0:_getListaParametros$r2[parametro])});}};var selectChangeListaCampos=function selectChangeListaCampos(parametro,id_campo,value){var newParams=getListaCamposPorParametroTemporal.data.map(function(item){if(item.parametro==parametro){item.id_campo=id_campo;var itemCampo=getListaParametrosBaseDatos[id_campo];item.valor=itemCampo.value!=null?itemCampo.value:value;item.valorTemporal=itemCampo.value!=null?itemCampo.value:value;}return item;});//setListaCamposPorParametroDefinitiva({ data: newParams });\n};// Metodo encargado de generar las columnas de los parametros de la plantilla\nvar columnsParametros=[{name:'PARAMETROS DE LA PLANTILLA',cell:function cell(parametro){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"strong\",{children:parametro.toUpperCase()})});},sortable:true,width:\"30%\"},{name:'VALOR SELECCIONADO',width:\"70%\",cell:function cell(parametro){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:cargarValoresDeParametro(parametro)})});}}];// Metodo encargado de generar las columnas de los parametros de la plantilla\nvar columnsCampos=[{name:'CAMPO',cell:function cell(campo){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"strong\",{children:campo.nombreCampo?campo.nombreCampo:\"\"})});},sortable:true,width:\"15%\"},{name:'TIPO',cell:function cell(campo){return/*#__PURE__*/_jsx(\"select\",{className:\"form-control\",id:\"idCampo\".concat(campo.nombreCampo),name:\"name\".concat(campo.nombreCampo),disabled:true,children:/*#__PURE__*/_jsxs(\"option\",{value:validarTipoCampo(campo.tipoCampo),selected:true,children:[\" \",validarTipoCampo(campo.tipoCampo),\" \"]})});},sortable:false,width:\"25%\"},{name:'ITEMS',width:\"50%\",cell:function cell(campo){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:cargarValoresCampos(campo)})});}}];// Metodo encargado de setear el valor al mismo input\nvar changeTextInput=function changeTextInput(e,arrayDatos){// Se setea temporalmente\nvar elementoHtml=document.getElementById(e.target.name);var nombreElemento=e.target.name;// Se captura el valor escrito\nvar valor=e.target.value;// El elemento existe\nif(elementoHtml){// Se setea el nuevo valor\nelementoHtml.title=valor;// Se asigna el item dentro del array para enviarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;// Se valida que la key sea igual al elemento modificado\nif(key==nombreElemento){// Se añade el item\ne.items=[valor];}});}// Se setea en el from cada que vez que finaliza la acción\nfrom.getCamposAdicionales=getCamposAdicionales;};// Metodo encargado de cambiar el valor de la fecha\nvar changeDateInput=function changeDateInput(e){// Se formatea\nvar newDate=moment(e.target.value).format('DD/MM/YYYY');// Se captura el nombre del elemento\nvar nombreElemento=e.target.name;// Se setea los valores\nsetValue(newDate);// Se asigna el item dentro del array para enviarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;// Se valida que la key sea igual al elemento modificado\nif(key==nombreElemento){// Se añade el item\ne.items=[newDate];}});// Se setea en el from cada que vez que finaliza la acción\nfrom.getCamposAdicionales=getCamposAdicionales;};// Metodo encargado de cambiar el valor del input\nvar changeCheckInput=function changeCheckInput(e,value){// Se captura el elemento html\nvar nombreElemento=value;// Se captura el elemento del check true o false\nvar checkeado=e.target.checked;// Se captura el valor chequeado html\nvar valorCheck=e.target.value;// Se valida cuando esta chequeado\nif(checkeado==true){// Se asigna el item dentro del array para enviarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;// Se valida que la key sea igual al elemento modificado\nif(key==nombreElemento){// Se valida la primera vez\nif(!e.itemsSeleccionado){// Se añade el item\ne.itemsSeleccionado=[valorCheck];}else{// Se añade el item al array\ne.itemsSeleccionado.push(valorCheck);}}});}else if(checkeado==false){// Se asigna el item dentro del array para quitarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;var items=e.itemsSeleccionado?e.itemsSeleccionado:[];// Continua el proceso para quitarlo del array\nif(items.length>0&&key==nombreElemento){// Se busca la posicion del elemento\nvar index=items.indexOf(valorCheck);// Se quita el elemento\nitems.splice(index,1);}});}// Se setea en el from cada que vez que finaliza la acción\nfrom.getCamposAdicionales=getCamposAdicionales;};// Metodo encargado de cargar los valores de los campos\nvar cargarValoresCampos=function cargarValoresCampos(campo){// Se inicializa la variable de campos\nvar campoParametro=campo;// Se capturan la informacion del campo\nvar tipoCampo=campoParametro.tipoCampo;var nombreCampo=campoParametro.nombreCampo;var itemCampo=tipoCampo==2?campoParametro.items:\"\";// Se valida cuando el tipo campo es un listado\nif(tipoCampo==2){// Se retorna el mapeo\nreturn(// Se recorre el elemento\nitemCampo.map(function(item,i){// Se retorna el HTML\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12 mt-1 ml-2 mb-1\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:item,name:item,value:item,onChange:function onChange(e){return changeCheckInput(e,nombreCampo);},defaultChecked:item.checked}),\" \",item]},item);}));}else if(tipoCampo==1){// Se retorna el html del tipo fecha \nreturn/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mt-2 mb-2\",children:/*#__PURE__*/_jsx(\"input\",{type:\"date\",className:\"form-control\",id:nombreCampo,name:nombreCampo,onChange:changeDateInput,max:getMaxDate})});}else if(tipoCampo==0){// Se retorna el html del tipo texto\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mt-2 mb-2\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:nombreCampo,name:nombreCampo,placeholder:nombreCampo,onChange:function onChange(e){return changeTextInput(e,campo);}})});}};// Metodo encargado de retorna los items separados\nvar validarItems=function validarItems(item){// Se valida que exista y tenga un elemento\nif(item&&item.length==0){// Se retorna el primer elemento\nreturn item;}else if(item&&item.length>0){// Se retorna por comas\nreturn item.join(\", \");}};// Metodo encargado de validar el tipo del campo\nvar validarTipoCampo=function validarTipoCampo(tipo){// Se inicializa la variable\nvar nombreRetornado;// Se valida el tipo\nif(tipo==0){// Se redeclara la variable\nnombreRetornado=\"Texto\";}else if(tipo==1){// Se redeclara la variable\nnombreRetornado=\"Fecha\";}else if(tipo==2){// Se redeclara la variable\nnombreRetornado=\"Lista\";}// Se retorna el valor\nreturn nombreRetornado;};// Metodo encargado de cargar los parametros de la base de datos\nvar cargarParametros=function cargarParametros(listaParametrosBaseDatos){// Se setean los valores en null y vacios para que no salga el limitante de las hooks\nsetListaParametros(null);setAntecedentesLista({data:[]});setInteresadosLista({data:[]});setEntidadesInvestigadoLista({data:[]});setCargosInvestigadoLista({data:[]});setEntidadInvestigadoLista({data:[]});setListaCamposPorParametroTemporal({data:[]});setListaParametros({data:[]});// Se inicializa el array\nvar data={\"data\":{\"type\":'mas_actuaciones',\"attributes\":{\"id\":props.id_mas_actuacion,\"id_proceso_disciplinario\":from.procesoDisciplinarioId}}};// Se inicializa la API\nGenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/'+props.id_mas_actuacion+'/'+from.procesoDisciplinarioId,data).then(// Se inicializa la variable de respuesta\nfunction(datos){validacionSpinner();// Se valida que no haya error\nif(!datos.error){// Se setean los valores a la lista general de parametros\nsetListaParametros(datos);var existenDatos=false;datos.params.forEach(function(element){if(Array.isArray(datos.resultados[element])&&datos.resultados[element].length>0){existenDatos=true;}});setExistenDatosResultados(existenDatos);if(existenDatos&&datos&&datos.params&&datos.resultados){var nuevoElemento=[];datos.params.forEach(function(parametro){if(datos.resultados[parametro]&&Array.isArray(datos.resultados[parametro])){datos.resultados[parametro].forEach(function(element,posicion){if(datos.resultados[parametro].length===1||element&&element.principal){var index=nuevoElemento.findIndex(function(data){return data.param===parametro;});if(index>-1){nuevoElemento[index].value+=\"$$$\"+(element.dato?element.dato:'SIN DATOS');nuevoElemento[index].orden+=\"$$$\"+posicion;}else{nuevoElemento.push({'param':parametro,'value':element.dato?element.dato:'SIN DATOS','orden':posicion});}}});}});setListaCamposPorParametroTemporal(_objectSpread(_objectSpread({},getListaCamposPorParametroTemporal),{},{data:nuevoElemento}));}window.showSpinner(false);}});// Se inicializa la API\nGenericApi.getGeneric('mas_actuaciones/'+props.id_mas_actuacion).then(// Se inicializa la variable de respuesta\nfunction(datos){validacionSpinner();// Se valida que no haya error\nif(!datos.error){// Se valida que hayan campos adicionales\nif(datos.data.attributes.campos.length>0){// Se setean los valores a la lista\nsetCamposAdicionales(datos.data.attributes.campos);// Se setean los campos en el from\nfrom.campos=datos.data.attributes.campos;}else if(from.campos){// Se setean los campos en el from\ndelete from.campos;}}});// Se quita el cargando\nwindow.showSpinner(false);};var descargarArchivo=function descargarArchivo(){try{window.showSpinner(true);var data={\"data\":{\"type\":\"mas_actuaciones\",\"attributes\":{\"params\":getListaCamposPorParametroTemporal.data}}};GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/'+props.id_mas_actuacion,data).then(function(datos){if(!datos.error){downloadBase64File(datos.content_type,datos.base_64,datos.file_name,global.Constants.TIPO_DOCUMENTO_PERMITIDO_ACTUACIONES.DOCX);window.showSpinner(false);}else{setModalState({title:\"SINPROC No \"+radicado+\" :: \",message:datos.error.toString(),show:true,redirect:null,from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});}catch(error){console.error(error);}};function downloadBase64File(contentType,base64Data,fileName,extension){var linkSource=\"data:\".concat(contentType,\";base64,\").concat(base64Data);var downloadLink=document.createElement(\"a\");downloadLink.href=linkSource;downloadLink.download=fileName;downloadLink.click();}var validacionSpinner=function validacionSpinner(){numeroLlamados++;if(numeroLlamados>=numeroTotalLlamados){setIsLoading(false);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(ModalGen,{data:modalState}),getIsLoading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-primary\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"CARGANDO...\"})})}):/*#__PURE__*/_jsx(_Fragment,{children:getListaParametros!=null?/*#__PURE__*/_jsxs(_Fragment,{children:[getExistenDatosResultados==false?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"block-content alert-warning text-center\",children:/*#__PURE__*/_jsx(\"label\",{children:\"LA PLANTILLA NO CUENTA CON PARAMETROS\"})})}),/*#__PURE__*/_jsx(\"br\",{})]}):null,/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(\"label\",{children:\"PAR\\xC1METROS DE LA PLANTILLA\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-2 mb-2\",children:/*#__PURE__*/_jsx(DataTable,{className:\"table table-bordered table-striped table-vcenter js-dataTable-full\",columns:columnsParametros,data:getListaParametros.params,noDataComponent:global.Constants.DATA_TABLE.SIN_DATOS_TABLE,striped:true})}),getCamposAdicionales&&getCamposAdicionales.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",style:{marginTop:'50px'},children:/*#__PURE__*/_jsx(\"label\",{children:\"CAMPOS ADICIONALES\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-2 mb-2\",children:/*#__PURE__*/_jsx(DataTable,{className:\"table table-bordered table-striped table-vcenter js-dataTable-full\",columns:columnsCampos,data:getCamposAdicionales,noDataComponent:global.Constants.DATA_TABLE.SIN_DATOS_TABLE,striped:true})})]}):null,/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12 mt-4 mb-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"mr-2\",htmlFor:\"documento_ruta\",children:\"DESCARGAR DOCUMENTO PRE-DILIGENCIADO CON LOS VALORES SELECCIONADOS\"}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",title:\"Descargar documento diligenciado\",onClick:function onClick(){return descargarArchivo();},className:\"btn btn-rounded btn-primary\",children:[\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-file-word\"})]})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-4\",children:/*#__PURE__*/_jsx(\"label\",{children:\"CARGANDO PAR\\xC1METROS DE LA PLANTILLA...\"})})})]});}export default ActuacionParametrosPlantillaForm;","map":{"version":3,"names":["React","useEffect","useState","useLocation","DataTable","GenericApi","ParametrosMasApi","Spinner","ModalGen","getUser","DatePicker","registerLocale","moment","ActuacionParametrosPlantillaForm","props","location","from","state","radicado","procesoDisciplinarioId","id_etapa","idEtapa","fechaRegistro","fechaIngreso","dependencia","nombre_dependencia","nombre","registradoPor","vigencia","generadoPor","nombre_completo","title","message","show","modalState","setModalState","getListaParametros","setListaParametros","data","getListaCamposPorParametroTemporal","setListaCamposPorParametroTemporal","getListaCamposPorCamposTemporal","setListaCamposPorCamposTemporal","links","meta","getAntecedentesLista","setAntecedentesLista","getInteresadosLista","setInteresadosLista","getEntidadesInvestigadoLista","setEntidadesInvestigadoLista","getCargosInvestigadoLista","setCargosInvestigadoLista","getEntidadInvestigadoLista","setEntidadInvestigadoLista","getParametrosCampos","setParametrosCampos","getListaParametrosBaseDatos","setListaParametrosBaseDatos","getPrueba","setPrueba","getExistenDatosResultados","setExistenDatosResultados","getCamposAdicionales","setCamposAdicionales","getMaxDate","setMaxDate","format","value","setValue","getIsLoading","setIsLoading","numeroLlamados","numeroTotalLlamados","Date","toISOString","split","fetchData","cargarTablaParametrosActuaciones","id_mas_actuacion","array","getGeneric","then","datos","validacionSpinner","error","index","length","element","attributes","nombre_campo","estado","type","validarValueParametros","push","check","cargarParametros","valor","handleChangeInteresados","e","parametro","id_campo","target","checked","valorId","map","item","id","val","p","primerApellido","primer_apellido","segundoApellido","segundo_apellido","primerNombre","primer_nombre","segundoNombre","segundo_nombre","sujetoProcesalNombre","sujeto_procesal_nombre","nombreCompleto","filter","x","undefined","selectChangeListaCampos","toString","checkeoAutomaticoInteresados","checkeoAutomaticoAntecedentes","descripcion","checkeoAutomaticoInvestigadosNombre","nombre_investigado","checkeoAutomaticoInvestigadosCargo","cargo","checkeoAutomaticoInvestigadosEntidad","nombre_entidad","checkeoAutomaticoFechaAntecedentes","fecha_creado","handleChangeAntecedentes","handleChangeFechaAntecedentes","handleChangeInvestigados","handleChangeCargosInvestigados","handleChangeEntidadesInvestigados","selectAntecedentes","Array","isArray","i","selectFechaAntecedentes","selectInteresados","selectInvestigados","selectCargosInvestigados","selectEntidadesInvestigados","onChangeValue","dato","grupo","principal","pos","nuevosResultados","JSON","parse","stringify","resultados","seleccionar","inputs","document","querySelectorAll","forEach","input","disabled","datosEnvio","modificarListaCampos","removerInpuntsLista","findIndex","param","listaSplit","replace","listaSplitIndex","orden","listaSplitConEspacios","auxDato","indexElement","nuevoElemento","nuevaLista","params","grupos","resultado","Set","deshabilitarInputs","etiqueta","componentInputCheckBox","recorrido","cargarValoresDeParametro","newParams","itemCampo","valorTemporal","columnsParametros","name","cell","toUpperCase","sortable","width","columnsCampos","campo","nombreCampo","validarTipoCampo","tipoCampo","cargarValoresCampos","changeTextInput","arrayDatos","elementoHtml","getElementById","nombreElemento","key","items","changeDateInput","newDate","changeCheckInput","checkeado","valorCheck","itemsSeleccionado","indexOf","splice","campoParametro","validarItems","join","tipo","nombreRetornado","listaParametrosBaseDatos","getByDataGeneric","existenDatos","posicion","window","showSpinner","campos","descargarArchivo","downloadBase64File","content_type","base_64","file_name","global","Constants","TIPO_DOCUMENTO_PERMITIDO_ACTUACIONES","DOCX","redirect","alert","TIPO_ALERTA","ERROR","console","contentType","base64Data","fileName","extension","linkSource","downloadLink","createElement","href","download","click","DATA_TABLE","SIN_DATOS_TABLE","marginTop"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Herramientas/ActuacionParametrosPlantillaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport ParametrosMasApi from \"../../Api/Services/ParametrosMasApi\";\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport '../../Utils/Constants';\r\nimport { getUser } from '../../Utils/Common';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport moment from 'moment';\r\n\r\nfunction ActuacionParametrosPlantillaForm(props) {\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let id_etapa = from.idEtapa;\r\n    const fechaRegistro = from.fechaRegistro;\r\n    const fechaIngreso = from.fechaIngreso;\r\n    const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\r\n    const registradoPor = from.registradoPor;\r\n    const vigencia = from.vigencia;\r\n    const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaParametros, setListaParametros] = useState();\r\n    const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({ data: [] });\r\n    const [getListaCamposPorCamposTemporal, setListaCamposPorCamposTemporal] = useState({ data: [] });\r\n    //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getInteresadosLista, setInteresadosLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getParametrosCampos, setParametrosCampos] = useState();\r\n    const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({ data: [] });\r\n    const [getPrueba, setPrueba] = useState(true);\r\n    const [getExistenDatosResultados, setExistenDatosResultados] = useState(true);\r\n\r\n    const [getCamposAdicionales, setCamposAdicionales] = useState([]);\r\n    const [getMaxDate, setMaxDate] = useState();\r\n    const [value, setValue] = useState(moment().format('YYYY-MM-DD'));\r\n    const [getIsLoading, setIsLoading] = useState(true);\r\n\r\n    let numeroLlamados = 0;\r\n    let numeroTotalLlamados = 3;\r\n\r\n    // Metodo encargado de cargar la informacion general del formulario\r\n    useEffect(() => {\r\n\r\n        // Se setea el maximo de fecha\r\n        setMaxDate(new Date().toISOString().split(\"T\")[0]);\r\n\r\n        // Se inicializa la funcion asyncrona\r\n        async function fetchData() {\r\n\r\n            // Metodo encargado de cargar los parametros de la plantilla\r\n            cargarTablaParametrosActuaciones();\r\n        }\r\n\r\n        // Se llama el metodo\r\n        fetchData();\r\n    }, [props.id_mas_actuacion]);\r\n\r\n    // Metodo encargado de cargar los parametros generales de la plantilla de la BD\r\n    const cargarTablaParametrosActuaciones = () => {\r\n\r\n        // Se inicializa el array\r\n        var array = [];\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('parametro-campos').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                validacionSpinner()\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se recorre el array para insertar los valores necesarios\r\n                    for (let index = 0; index < datos.data.length; index++) {\r\n\r\n                        // Se captura los datos por posicion\r\n                        const element = datos.data[index].attributes;\r\n                        const title = element.nombre_campo;\r\n                        const estado = element.estado == \"1\" ? true : false;\r\n                        const type = element.type;\r\n                        const value = validarValueParametros(type, estado);\r\n\r\n                        // Se añade el dato al array general\r\n                        array.push({ title: title, value: value, type: type, check: estado });\r\n                    }\r\n\r\n                    // Se setea la respuesta en la constante\r\n                    setListaParametrosBaseDatos(array);\r\n\r\n                    // Se generan la lista de parametros del documento\r\n                    cargarParametros(array);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de retorna el valor por el elemento\r\n    const validarValueParametros = (element, estado) => {\r\n\r\n        // Se inicializa la variable\r\n        let valor;\r\n\r\n        // Se valida por el elemento\r\n        if ((element == \"Sinproc\" || element == \"Número de radicado\"\r\n            || element == \"Radicación\" || element == \"Radicado\") && estado) {\r\n            valor = radicado;\r\n        } else if (element == \"Usuario\" && estado) {\r\n            valor = registradoPor;\r\n        } else if ((element == \"Dependencia Origen\" || element == \"Dependencia\") && estado) {\r\n            valor = dependencia;\r\n        } else if (element == \"Vigencia\" && estado) {\r\n            valor = vigencia;\r\n        } else if (element == \"Fecha de Registro\" && estado) {\r\n            valor = fechaRegistro;\r\n        } else if (element == \"Fecha de Ingreso\" && estado) {\r\n            valor = fechaIngreso;\r\n        } else if (element == \"Generado\" && estado) {\r\n            valor = generadoPor;\r\n        } else if ((element == \"Número de auto (generado despues de aprobación)\" || element == \"Auto\") && estado) {\r\n            valor = \"${numero_de_auto}\";\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return valor;\r\n    }\r\n\r\n    const handleChangeInteresados = (e, parametro, id_campo) => {\r\n\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getInteresadosLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setInteresadosLista(valorId);\r\n        let val = getInteresadosLista.map((p) => {\r\n            if (p.checked == true) {\r\n\r\n                var primerApellido = p.attributes.primer_apellido != null ? p.attributes.primer_apellido : \"\";\r\n                var segundoApellido = p.attributes.segundo_apellido != null ? p.attributes.segundo_apellido : \"\";\r\n                var primerNombre = p.attributes.primer_nombre != null ? p.attributes.primer_nombre : \"\";\r\n                var segundoNombre = p.attributes.segundo_nombre != null ? p.attributes.segundo_nombre : \"\";\r\n                var sujetoProcesalNombre = p.attributes.sujeto_procesal_nombre != \"\" ? p.attributes.sujeto_procesal_nombre : \"\";\r\n                var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n                var nombre = nombreCompleto;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n    }\r\n\r\n    function checkeoAutomaticoInteresados(parametro, id_campo) {\r\n        setInteresadosLista(getInteresadosLista);\r\n\r\n        var primerApellido = getInteresadosLista[0].attributes.primer_apellido != null ? getInteresadosLista[0].attributes.primer_apellido : \"\";\r\n        var segundoApellido = getInteresadosLista[0].attributes.segundo_apellido != null ? getInteresadosLista[0].attributes.segundo_apellido : \"\";\r\n        var primerNombre = getInteresadosLista[0].attributes.primer_nombre != null ? getInteresadosLista[0].attributes.primer_nombre : \"\";\r\n        var segundoNombre = getInteresadosLista[0].attributes.segundo_nombre != null ? getInteresadosLista[0].attributes.segundo_nombre : \"\";\r\n        var sujetoProcesalNombre = getInteresadosLista[0].attributes.sujeto_procesal_nombre != null ? getInteresadosLista[0].attributes.sujeto_procesal_nombre : \"\";\r\n        var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n        var nombre = nombreCompleto;\r\n\r\n        // var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\r\n        setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\r\n        var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\r\n        setCargosInvestigadoLista(getCargosInvestigadoLista);\r\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\r\n        setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\r\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoFechaAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.fecha_creado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    const handleChangeAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.descripcion}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeFechaAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.fecha_creado}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadesInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_investigado) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setEntidadesInvestigadoLista(valorId);\r\n        let val = getEntidadesInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_investigado}`;\r\n                var nombre = `${p.attributes.nombre_investigado}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getCargosInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.cargo) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getCargosInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.cargo}`;\r\n                var nombre = `${p.attributes.cargo}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_entidad) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getEntidadInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_entidad}`;\r\n                var nombre = `${p.attributes.nombre_entidad}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const selectAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].id}\r\n                            name={'check' + getAntecedentesLista[0].id}\r\n                            value={getAntecedentesLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.descripcion}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.id}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.id}\r\n                                    name={'check' + item.id}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.descripcion}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectFechaAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoFechaAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].attributes.fecha_creado} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].attributes.fecha_creado}\r\n                            name={'check' + getAntecedentesLista[0].attributes.fecha_creado}\r\n                            value={getAntecedentesLista[0].attributes.fecha_creado}\r\n                            onChange={(e) => handleChangeFechaAntecedentes(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.fecha_creado}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.fecha_creado}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.fecha_creado}\r\n                                    name={'check' + item.fecha_creado}\r\n                                    value={item.fecha_creado}\r\n                                    //onChange={(e) => handleChangeFechaAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.fecha_creado}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInteresados = (parametro, id_campo) => {\r\n        if (Array.isArray(getInteresadosLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getInteresadosLista && getInteresadosLista.length == 1) {\r\n                checkeoAutomaticoInteresados(parametro, id_campo);\r\n\r\n                var primerApellido = getInteresadosLista[0].attributes.primer_apellido != \"\" ? getInteresadosLista[0].attributes.primer_apellido : \"\";\r\n                var segundoApellido = getInteresadosLista[0].attributes.segundo_apellido != \"\" ? getInteresadosLista[0].attributes.segundo_apellido : \"\";\r\n                var primerNombre = getInteresadosLista[0].attributes.primer_nombre != \"\" ? getInteresadosLista[0].attributes.primer_nombre : \"\";\r\n                var segundoNombre = getInteresadosLista[0].attributes.segundo_nombre != \"\" ? getInteresadosLista[0].attributes.segundo_nombre : \"\";\r\n                var sujetoProcesalNombre = getInteresadosLista[0].attributes.sujeto_procesal_nombre != \"\" ? getInteresadosLista[0].attributes.sujeto_procesal_nombre : \"\";\r\n                var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n                var nombre = nombreCompleto;\r\n\r\n                // var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getInteresadosLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getInteresadosLista[0].id}\r\n                            name={'check' + getInteresadosLista[0].id}\r\n                            value={getInteresadosLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getInteresadosLista.length > 1) {\r\n                return (\r\n                    getInteresadosLista.map((item, i) => {\r\n\r\n                        var primerApellido = item.attributes.primer_apellido != null ? item.attributes.primer_apellido : \"\";\r\n                        var segundoApellido = item.attributes.segundo_apellido != null ? item.attributes.segundo_apellido : \"\";\r\n                        var primerNombre = item.attributes.primer_nombre != null ? item.attributes.primer_nombre : \"\";\r\n                        var segundoNombre = item.attributes.segundo_nombre != null ? item.attributes.segundo_nombre : \"\";\r\n                        var sujetoProcesalNombre = item.attributes.sujeto_procesal_nombre != \"\" ? item.attributes.sujeto_procesal_nombre : \"\";\r\n                        var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n                        var nombre = nombreCompleto;\r\n\r\n                        // var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + nombre}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + nombre}\r\n                                    name={'check' + nombre}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeInteresados(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {nombre}\r\n                            </div>\r\n                            // <option key={nombre} value={nombre}>{nombre}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadesInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\r\n                let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadesInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            value={getEntidadesInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadesInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadesInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_investigado}`;\r\n                        var nombre = `${item.attributes.nombre_investigado}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectCargosInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getCargosInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\r\n                var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getCargosInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getCargosInvestigadoLista[0].id}\r\n                            name={'check' + getCargosInvestigadoLista[0].id}\r\n                            value={getCargosInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getCargosInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getCargosInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.cargo}`;\r\n                        var nombre = `${item.attributes.cargo}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeCargosInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                // <option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectEntidadesInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\r\n                var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadInvestigadoLista[0].id}\r\n                            value={getEntidadInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_entidad}`;\r\n                        var nombre = `${item.attributes.nombre_entidad}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeEntidadesInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangeValue = (value, dato, parametro, grupo, principal, pos) => {\r\n\r\n        const nuevosResultados = JSON.parse(JSON.stringify(getListaParametros));\r\n\r\n        if (value) {\r\n            nuevosResultados.resultados[parametro][pos].seleccionar = true;\r\n        } \r\n        else {\r\n            nuevosResultados.resultados[parametro][pos].seleccionar = false;\r\n        }\r\n\r\n        // console.log(\"Daticos boleanos\", nuevosResultados)\r\n\r\n        if(principal){\r\n            const inputs = document.querySelectorAll('input[name=\"'+grupo+'\"]');\r\n            // Deshabilitar los inputs seleccionados\r\n            inputs.forEach(input => {\r\n                input.disabled = !value;\r\n                let datosEnvio = input.id.split('$$$');\r\n                nuevosResultados.resultados[datosEnvio[1]][datosEnvio[2]].seleccionar = false;\r\n            });\r\n        }\r\n\r\n        setListaParametros(nuevosResultados);\r\n        \r\n        modificarListaCampos(value, (dato ? dato : 'SIN DATOS'), parametro, pos)\r\n        removerInpuntsLista()\r\n    }\r\n\r\n    const modificarListaCampos = (value, dato, parametro, pos) => {\r\n        // console.log(\"Datos, parametros\", value, dato, parametro, pos)\r\n        let index = getListaCamposPorParametroTemporal.data.findIndex(data => data.param === parametro)\r\n        if(index > -1){\r\n            if(getListaCamposPorParametroTemporal.data[index].value){\r\n                let listaSplit = getListaCamposPorParametroTemporal.data[index].value.replace(/\\s/g, '').split('$$$')\r\n                let listaSplitIndex = getListaCamposPorParametroTemporal.data[index].orden.toString().split('$$$')\r\n                let listaSplitConEspacios = getListaCamposPorParametroTemporal.data[index].value.split('$$$')\r\n                let auxDato = dato.replace(/\\s/g, '')\r\n                if(value){\r\n                    getListaCamposPorParametroTemporal.data[index].value += \"$$$\" + dato\r\n                    getListaCamposPorParametroTemporal.data[index].orden += \"$$$\" + pos\r\n                }\r\n                else{\r\n                    getListaCamposPorParametroTemporal.data[index].value = null\r\n                    getListaCamposPorParametroTemporal.data[index].orden = null\r\n                    //listaSplit.forEach((element, indexElement) => {\r\n                    listaSplitIndex.forEach((element, indexElement) => {\r\n                        //if(auxDato !== element){\r\n                        if(element !== pos+\"\"){\r\n                            if(getListaCamposPorParametroTemporal.data[index].value === null){\r\n                                getListaCamposPorParametroTemporal.data[index].value = listaSplitConEspacios[indexElement]\r\n                                getListaCamposPorParametroTemporal.data[index].orden = listaSplitIndex[indexElement]\r\n                            }\r\n                            else{\r\n                                getListaCamposPorParametroTemporal.data[index].value += \"$$$\" + listaSplitConEspacios[indexElement]\r\n                                getListaCamposPorParametroTemporal.data[index].orden += \"$$$\" + listaSplitIndex[indexElement]\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else{\r\n                getListaCamposPorParametroTemporal.data[index].value = dato\r\n                getListaCamposPorParametroTemporal.data[index].orden = pos\r\n            }           \r\n            setListaCamposPorParametroTemporal(getListaCamposPorParametroTemporal)\r\n        }\r\n        else{\r\n            if(value){\r\n                const nuevoElemento = { \r\n                    'param': parametro,\r\n                    'value': dato, \r\n                    'orden': pos\r\n                }\r\n    \r\n                // Crear una copia del estado actual y agregar el nuevo elemento\r\n                const nuevaLista = [...getListaCamposPorParametroTemporal.data, nuevoElemento]\r\n    \r\n                // Actualizar el estado con la nueva lista que contiene el nuevo elemento\r\n                setListaCamposPorParametroTemporal({ ...getListaCamposPorParametroTemporal, data: nuevaLista })\r\n            }\r\n        }\r\n        // console.log(\"Daticos lista campos\", getListaCamposPorParametroTemporal)\r\n    } \r\n\r\n    const removerInpuntsLista = () => {\r\n        if (getListaParametros && getListaParametros.params && getListaParametros.resultados) {\r\n            let grupos = [];\r\n            getListaParametros.params.forEach(parametro => {\r\n                if (getListaParametros.resultados[parametro] && Array.isArray(getListaParametros.resultados[parametro])) {\r\n                    getListaParametros.resultados[parametro].forEach(resultado => {\r\n                        grupos.push(resultado.grupo);\r\n                    });\r\n                }\r\n                grupos = [...new Set(grupos)];\r\n            });\r\n    \r\n            grupos.forEach(grupo => {\r\n                let inputs = document.querySelectorAll('input[name=\"' + grupo + '\"]');\r\n                inputs.forEach(input => {\r\n                    if (input.disabled) {\r\n                        let datosEnvio = input.id.split('$$$');\r\n                        modificarListaCampos(false, datosEnvio[0], datosEnvio[1], datosEnvio[2]);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const deshabilitarInputs = (etiqueta, estado, index) => {\r\n        // Seleccionar todos los inputs con name=\"nombre\"\r\n        const inputs = document.querySelectorAll('input[name=\"'+etiqueta+'\"]');\r\n    \r\n        const nuevosResultados = JSON.parse(JSON.stringify(getListaParametros));\r\n\r\n        // Deshabilitar los inputs seleccionados\r\n        inputs.forEach(input => {\r\n            input.disabled = estado;\r\n            let datosEnvio = input.id.split('$$$');\r\n            nuevosResultados.resultados[datosEnvio[1]][datosEnvio[2]].seleccionar = false;\r\n        });\r\n\r\n        setListaParametros(nuevosResultados);\r\n\r\n    };\r\n\r\n    const componentInputCheckBox = (recorrido) => {\r\n        if(recorrido){\r\n            return (recorrido.map((dato, index) => {\r\n                return (                \r\n                    <div key={index}>\r\n                        <label><input id={dato.dato+\"$$$\"+dato.parametro+\"$$$\"+index} name={dato.principal ? dato.grupo+\"_\"+dato.principal : dato.grupo} type=\"checkbox\" checked={dato.seleccionar} onChange={e => onChangeValue(e.target.checked, dato.dato, dato.parametro, dato.grupo, dato.principal, index)}/> { dato.dato ? dato.dato : 'SIN DATOS' }</label>\r\n                    </div>\r\n                )\r\n            }))\r\n        }\r\n    }\r\n\r\n    const cargarValoresDeParametro = (parametro) => {\r\n        if(getListaParametros?.resultados?.[parametro]){\r\n            return (<>{componentInputCheckBox(getListaParametros?.resultados?.[parametro])}</>)\r\n        }\r\n    }\r\n\r\n    const selectChangeListaCampos = (parametro, id_campo, value) => {\r\n\r\n        var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n            if (item.parametro == parametro) {\r\n                item.id_campo = id_campo;\r\n                var itemCampo = getListaParametrosBaseDatos[id_campo];\r\n\r\n                item.valor = (itemCampo.value != null) ? itemCampo.value : value;\r\n                item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : value;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        //setListaCamposPorParametroDefinitiva({ data: newParams });\r\n    }\r\n\r\n    // Metodo encargado de generar las columnas de los parametros de la plantilla\r\n    const columnsParametros = [\r\n        {\r\n            name: 'PARAMETROS DE LA PLANTILLA',\r\n            cell: parametro => <div><strong>{parametro.toUpperCase()}</strong></div>,\r\n            sortable: true,\r\n            width: \"30%\"\r\n        },\r\n        {\r\n            name: 'VALOR SELECCIONADO',\r\n            width: \"70%\",\r\n            cell: parametro =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        { cargarValoresDeParametro(parametro) }\r\n                    </div>\r\n                </div>\r\n        },\r\n    ];\r\n\r\n    // Metodo encargado de generar las columnas de los parametros de la plantilla\r\n    const columnsCampos = [\r\n        {\r\n            name: 'CAMPO',\r\n            cell: campo =>\r\n                <div>\r\n                    <strong>{campo.nombreCampo ? campo.nombreCampo : \"\"}</strong>\r\n                </div>,\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            name: 'TIPO',\r\n            cell: campo =>\r\n                <select className=\"form-control\" id={`idCampo${campo.nombreCampo}`} name={`name${campo.nombreCampo}`} disabled>\r\n                    <option value={validarTipoCampo(campo.tipoCampo)} selected> {validarTipoCampo(campo.tipoCampo)} </option>\r\n                </select>\r\n            ,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'ITEMS',\r\n            width: \"50%\",\r\n            cell: campo =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresCampos(campo)}\r\n                    </div>\r\n                </div>\r\n        },\r\n    ];\r\n\r\n    // Metodo encargado de setear el valor al mismo input\r\n    const changeTextInput = (e, arrayDatos) => {\r\n\r\n        // Se setea temporalmente\r\n        let elementoHtml = document.getElementById(e.target.name);\r\n        let nombreElemento = e.target.name;\r\n\r\n        // Se captura el valor escrito\r\n        let valor = e.target.value;\r\n\r\n        // El elemento existe\r\n        if (elementoHtml) {\r\n\r\n            // Se setea el nuevo valor\r\n            elementoHtml.title = valor;\r\n\r\n            // Se asigna el item dentro del array para enviarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n\r\n                // Se valida que la key sea igual al elemento modificado\r\n                if (key == nombreElemento) {\r\n\r\n                    // Se añade el item\r\n                    e.items = [valor];\r\n                }\r\n            })\r\n        }\r\n\r\n        // Se setea en el from cada que vez que finaliza la acción\r\n        from.getCamposAdicionales = getCamposAdicionales;\r\n    }\r\n\r\n    // Metodo encargado de cambiar el valor de la fecha\r\n    const changeDateInput = (e) => {\r\n\r\n        // Se formatea\r\n        const newDate = moment(e.target.value).format('DD/MM/YYYY');\r\n\r\n        // Se captura el nombre del elemento\r\n        let nombreElemento = e.target.name;\r\n\r\n        // Se setea los valores\r\n        setValue(newDate);\r\n\r\n        // Se asigna el item dentro del array para enviarlo\r\n        getCamposAdicionales.forEach(e => {\r\n\r\n            // Se captura la key\r\n            let key = e.nombreCampo;\r\n\r\n            // Se valida que la key sea igual al elemento modificado\r\n            if (key == nombreElemento) {\r\n\r\n                // Se añade el item\r\n                e.items = [newDate];\r\n            }\r\n        })\r\n\r\n        // Se setea en el from cada que vez que finaliza la acción\r\n        from.getCamposAdicionales = getCamposAdicionales;\r\n    };\r\n\r\n    // Metodo encargado de cambiar el valor del input\r\n    const changeCheckInput = (e, value) => {\r\n\r\n        // Se captura el elemento html\r\n        let nombreElemento = value;\r\n\r\n        // Se captura el elemento del check true o false\r\n        let checkeado = e.target.checked;\r\n\r\n        // Se captura el valor chequeado html\r\n        let valorCheck = e.target.value;\r\n\r\n        // Se valida cuando esta chequeado\r\n        if (checkeado == true) {\r\n\r\n            // Se asigna el item dentro del array para enviarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n\r\n                // Se valida que la key sea igual al elemento modificado\r\n                if (key == nombreElemento) {\r\n\r\n                    // Se valida la primera vez\r\n                    if (!e.itemsSeleccionado) {\r\n\r\n                        // Se añade el item\r\n                        e.itemsSeleccionado = [valorCheck];\r\n                    } else {\r\n\r\n                        // Se añade el item al array\r\n                        e.itemsSeleccionado.push(valorCheck);\r\n                    }\r\n                }\r\n            })\r\n        } else if (checkeado == false) {\r\n\r\n            // Se asigna el item dentro del array para quitarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n                let items = e.itemsSeleccionado ? e.itemsSeleccionado : [];\r\n\r\n                // Continua el proceso para quitarlo del array\r\n                if (items.length > 0 && (key == nombreElemento)) {\r\n\r\n                    // Se busca la posicion del elemento\r\n                    var index = items.indexOf(valorCheck);\r\n\r\n                    // Se quita el elemento\r\n                    items.splice(index, 1);\r\n                }\r\n            })\r\n        }\r\n\r\n        // Se setea en el from cada que vez que finaliza la acción\r\n        from.getCamposAdicionales = getCamposAdicionales;\r\n    }\r\n\r\n    // Metodo encargado de cargar los valores de los campos\r\n    const cargarValoresCampos = (campo) => {\r\n\r\n        // Se inicializa la variable de campos\r\n        const campoParametro = campo;\r\n\r\n        // Se capturan la informacion del campo\r\n        const tipoCampo = campoParametro.tipoCampo;\r\n        const nombreCampo = campoParametro.nombreCampo;\r\n        const itemCampo = tipoCampo == 2 ? campoParametro.items : \"\";\r\n\r\n        // Se valida cuando el tipo campo es un listado\r\n        if (tipoCampo == 2) {\r\n\r\n            // Se retorna el mapeo\r\n            return (\r\n\r\n                // Se recorre el elemento\r\n                itemCampo.map((item, i) => {\r\n\r\n                    // Se retorna el HTML\r\n                    return (\r\n                        <div className=\"col-md-12 mt-1 ml-2 mb-1\" key={item}>\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id={item}\r\n                                name={item}\r\n                                value={item}\r\n                                onChange={(e) => changeCheckInput(e, nombreCampo)}\r\n                                defaultChecked={item.checked} /> {item}\r\n                        </div>\r\n                    )\r\n                })\r\n            )\r\n        } else if (tipoCampo == 1) {\r\n\r\n            // Se retorna el html del tipo fecha \r\n            return (\r\n                <div className=\"custom-control custom-switch custom-control-lg mt-2 mb-2\">\r\n                    <input type=\"date\"\r\n                        className=\"form-control\"\r\n                        id={nombreCampo}\r\n                        name={nombreCampo}\r\n                        onChange={changeDateInput}\r\n                        max={getMaxDate}\r\n                    />\r\n                </div>\r\n            )\r\n        } else if (tipoCampo == 0) {\r\n\r\n            // Se retorna el html del tipo texto\r\n            return (\r\n                <div className=\"custom-control custom-switch custom-control-lg mt-2 mb-2\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        id={nombreCampo}\r\n                        name={nombreCampo}\r\n                        placeholder={nombreCampo}\r\n                        onChange={e => changeTextInput(e, campo)} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de retorna los items separados\r\n    const validarItems = (item) => {\r\n\r\n        // Se valida que exista y tenga un elemento\r\n        if (item && item.length == 0) {\r\n\r\n            // Se retorna el primer elemento\r\n            return item;\r\n        } else if (item && item.length > 0) {\r\n\r\n            // Se retorna por comas\r\n            return item.join(\", \");\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de validar el tipo del campo\r\n    const validarTipoCampo = (tipo) => {\r\n\r\n        // Se inicializa la variable\r\n        let nombreRetornado;\r\n\r\n        // Se valida el tipo\r\n        if (tipo == 0) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Texto\";\r\n        } else if (tipo == 1) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Fecha\";\r\n        } else if (tipo == 2) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Lista\";\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return nombreRetornado;\r\n    }\r\n\r\n    // Metodo encargado de cargar los parametros de la base de datos\r\n    const cargarParametros = (listaParametrosBaseDatos) => {\r\n\r\n        // Se setean los valores en null y vacios para que no salga el limitante de las hooks\r\n        setListaParametros(null);\r\n        setAntecedentesLista({ data: [] });\r\n        setInteresadosLista({ data: [] });\r\n        setEntidadesInvestigadoLista({ data: [] });\r\n        setCargosInvestigadoLista({ data: [] });\r\n        setEntidadInvestigadoLista({ data: [] });\r\n        setListaCamposPorParametroTemporal({ data: [] });\r\n        setListaParametros({ data: [] });\r\n\r\n        // Se inicializa el array\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'mas_actuaciones',\r\n                \"attributes\": {\r\n                    \"id\": props.id_mas_actuacion,\r\n                    \"id_proceso_disciplinario\": from.procesoDisciplinarioId\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + props.id_mas_actuacion + '/' + from.procesoDisciplinarioId, data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                validacionSpinner()\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los valores a la lista general de parametros\r\n                    setListaParametros(datos);\r\n                    let existenDatos = false;\r\n                    \r\n                    datos.params.forEach(element => {\r\n                        if(Array.isArray(datos.resultados[element]) && datos.resultados[element].length > 0){\r\n                            existenDatos = true;\r\n                        }\r\n                    });\r\n                    \r\n                    setExistenDatosResultados(existenDatos)\r\n\r\n                    if (existenDatos && datos && datos.params && datos.resultados) {\r\n                        const nuevoElemento = [];\r\n                      \r\n                        datos.params.forEach(parametro => {\r\n                          if (datos.resultados[parametro] && Array.isArray(datos.resultados[parametro])) {\r\n                            datos.resultados[parametro].forEach((element, posicion) => {\r\n                              if (datos.resultados[parametro].length === 1 || (element && element.principal)) {\r\n                                let index = nuevoElemento.findIndex(data => data.param === parametro);\r\n                                if (index > -1) {\r\n                                  nuevoElemento[index].value += \"$$$\" + (element.dato ? element.dato : 'SIN DATOS');\r\n                                  nuevoElemento[index].orden += \"$$$\" + posicion;\r\n                                } else {\r\n                                  nuevoElemento.push({ \r\n                                    'param': parametro,\r\n                                    'value': element.dato ? element.dato : 'SIN DATOS', \r\n                                    'orden': posicion\r\n                                  });\r\n                                }\r\n                              }\r\n                            });\r\n                          }\r\n                        });\r\n                        setListaCamposPorParametroTemporal({ ...getListaCamposPorParametroTemporal, data: nuevoElemento });\r\n                      }\r\n\r\n\r\n                    window.showSpinner(false)\r\n                }\r\n            }\r\n        )\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('mas_actuaciones/' + props.id_mas_actuacion).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n                \r\n                validacionSpinner()\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se valida que hayan campos adicionales\r\n                    if (datos.data.attributes.campos.length > 0) {\r\n\r\n                        // Se setean los valores a la lista\r\n                        setCamposAdicionales(datos.data.attributes.campos);\r\n\r\n                        // Se setean los campos en el from\r\n                        from.campos = datos.data.attributes.campos;\r\n                    } else if (from.campos) {\r\n\r\n                        // Se setean los campos en el from\r\n                        delete from.campos;\r\n                    }\r\n                }\r\n            }\r\n        )\r\n\r\n        // Se quita el cargando\r\n        window.showSpinner(false);\r\n    }\r\n\r\n    const descargarArchivo = () => {\r\n\r\n        try {\r\n            window.showSpinner(true)\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"mas_actuaciones\",\r\n                    \"attributes\": {\r\n                        \"params\": getListaCamposPorParametroTemporal.data,\r\n                    }\r\n                }\r\n            }\r\n\r\n            GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + props.id_mas_actuacion, data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        downloadBase64File(datos.content_type, datos.base_64, datos.file_name, global.Constants.TIPO_DOCUMENTO_PERMITIDO_ACTUACIONES.DOCX);\r\n                        window.showSpinner(false);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: \", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    function downloadBase64File(contentType, base64Data, fileName, extension) {\r\n        const linkSource = `data:${contentType};base64,${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    const validacionSpinner = () => {\r\n        numeroLlamados++\r\n        if(numeroLlamados >= numeroTotalLlamados){\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <ModalGen data={modalState} />\r\n            {\r\n                getIsLoading\r\n                ?\r\n                    <div className=\"text-center\">\r\n                        <div className=\"spinner-border text-primary\" role=\"status\">\r\n                            <span className=\"sr-only\">CARGANDO...</span>\r\n                        </div>\r\n                    </div>\r\n                :\r\n                    <>\r\n                        {\r\n                            getListaParametros != null \r\n                            ?\r\n                                <>\r\n\r\n                                    {\r\n                                        getExistenDatosResultados == false\r\n                                        ?\r\n                                            <>\r\n                                                <div className='col-md-12 mt-4'>\r\n                                                    <div className=\"block-content alert-warning text-center\">\r\n                                                        <label>LA PLANTILLA NO CUENTA CON PARAMETROS</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <br></br>\r\n                                            </>\r\n                                        :\r\n                                            null\r\n                                    }\r\n                                    <div className='col-md-12'>\r\n                                        <label>PARÁMETROS DE LA PLANTILLA</label>\r\n                                    </div>\r\n                                    <div className='col-md-12 mt-2 mb-2'>\r\n                                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                            columns={columnsParametros}\r\n                                            data={getListaParametros.params}\r\n                                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                                            striped\r\n                                        />\r\n                                    </div>\r\n                                    {getCamposAdicionales && getCamposAdicionales.length > 0 ?\r\n                                        <>\r\n                                            <div className='col-md-12' style={{ marginTop: '50px' }}>\r\n                                                <label>CAMPOS ADICIONALES</label>\r\n                                            </div>\r\n                                            <div className='col-md-12 mt-2 mb-2'>\r\n                                                <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                                    columns={columnsCampos}\r\n                                                    data={getCamposAdicionales}\r\n                                                    noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                                                    striped\r\n                                                />\r\n                                            </div>\r\n                                        </>\r\n                                        : null\r\n                                    }\r\n                                    <div className='col-md-12 mt-4 mb-2'>\r\n                                        <label className='mr-2' htmlFor=\"documento_ruta\">DESCARGAR DOCUMENTO PRE-DILIGENCIADO CON LOS VALORES SELECCIONADOS</label>\r\n                                        <button type=\"button\" title='Descargar documento diligenciado' onClick={() => descargarArchivo()} className=\"btn btn-rounded btn-primary\"> <i className=\"fas fa-file-word\"></i></button>\r\n                                    </div>\r\n                                </>\r\n                            :\r\n                            <div className='col-md-12 mt-4'>\r\n                                <label>CARGANDO PARÁMETROS DE LA PLANTILLA...</label>\r\n                            </div>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ActuacionParametrosPlantillaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}