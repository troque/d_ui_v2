{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ClasificacionRadicado\\\\ClasificacionRadicadoForm.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react'; //import AntecedentesApi from '../../Api/Services/AntecedentesApi';\n\nimport { useParams } from \"react-router\";\nimport { Navigate } from \"react-router-dom\";\nimport Spinner from '../../Utils/Spinner';\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\nimport InfoExitoApi from '../../Utils/InfoExitoApi';\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ClasificacionRadicadoForm() {\n  _s();\n\n  const [listaTipoExpediente, setListaTipoExpediente] = useState({\n    data: {}\n  });\n  const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\n  const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\n  const [datosFormDerechoPeticion, setDatosFormDerechoPeticion] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      ParametrosMasApi.getAllTiposProceso().then(datos => !datos.error ? (setListaTipoExpediente(datos), setRespuestaTipoExpediente(true)) : window.showModal(1));\n    }\n\n    fetchData();\n  }, []);\n\n  let selectChangeTipoExpediente = e => {\n    selectedTipoExpediente(e);\n  };\n\n  const consultarRadicado = datos => {\n    window.showSpinner(true);\n\n    if (selectedTipoExpediente === '1') {\n      //SIRIUS\n      setDatosFormSiriusConsulta(datos);\n      const data = {\n        \"data\": {\n          \"type\": \"proceso_sirius\",\n          \"attributes\": {\n            \"radicado\": datos.codigoSirius,\n            \"id_origen_radicado\": \"1\",\n            \"id_tipo_proceso\": 1\n          }\n        }\n      };\n    }\n  }; //Componetes\n\n\n  const selectTipoExpediente = () => {\n    return listaTipoExpediente.data.map((origen, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: origen.id,\n        children: origen.attributes.nombre\n      }, origen.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-themed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: \"Paso 1: Validar forma de ingreso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"ingresoProcesoDisciplinario\",\n                      children: [\"Ingreso por \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 81,\n                        columnNumber: 102\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-control\",\n                      id: \"ingresoProcesoDisciplinario\",\n                      name: \"ingresoProcesoDisciplinario\",\n                      value: selectedTipoExpediente,\n                      onChange: e => selectChangeTipoExpediente(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Por favor seleccione\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 49\n                      }, this), respuestaTipoExpediente ? selectTipoProceso() : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), selectedTipoIngreso === '1' ? componentSirius(1) : '', selectedTipoIngreso === '2' ? componentDesglose(1) : '', selectedTipoIngreso === '3' ? componentSinproc(1) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClasificacionRadicadoForm, \"pq3XbD0FYQJKLX86K9lO7eKnryc=\");\n\n_c = ClasificacionRadicadoForm;\nexport default ClasificacionRadicadoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClasificacionRadicadoForm\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ClasificacionRadicado/ClasificacionRadicadoForm.js"],"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","useParams","Navigate","Spinner","InfoErrorApi","InfoExitoApi","ParametrosMasApi","ClasificacionRadicadoForm","listaTipoExpediente","setListaTipoExpediente","data","respuestaTipoExpediente","setRespuestaTipoExpediente","selectedTipoExpediente","setSelectedTipoExpediente","datosFormDerechoPeticion","setDatosFormDerechoPeticion","fetchData","getAllTiposProceso","then","datos","error","window","showModal","selectChangeTipoExpediente","e","consultarRadicado","showSpinner","setDatosFormSiriusConsulta","codigoSirius","selectTipoExpediente","map","origen","i","id","attributes","nombre","target","value","selectTipoProceso","selectedTipoIngreso","componentSirius","componentDesglose","componentSinproc"],"mappings":"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","sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\n//import AntecedentesApi from '../../Api/Services/AntecedentesApi';\r\nimport { useParams } from \"react-router\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Spinner from '../../Utils/Spinner';\r\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\r\nimport InfoExitoApi from '../../Utils/InfoExitoApi';\r\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\r\n\r\nfunction ClasificacionRadicadoForm() {\r\n\r\n    const [listaTipoExpediente, setListaTipoExpediente] = useState({ data:{} });\r\n    const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\r\n    const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\r\n\r\n\r\n    const [datosFormDerechoPeticion, setDatosFormDerechoPeticion] = useState({});\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            ParametrosMasApi.getAllTiposProceso().then(\r\n                datos => !datos.error ? (setListaTipoExpediente(datos), setRespuestaTipoExpediente(true) ) : window.showModal(1)\r\n            )          \r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    let selectChangeTipoExpediente = (e) => {\r\n        selectedTipoExpediente(e);\r\n    }\r\n\r\n\r\n\r\n    const consultarRadicado = (datos) => {\r\n        window.showSpinner(true);\r\n        if(selectedTipoExpediente === '1'){//SIRIUS\r\n            setDatosFormSiriusConsulta(datos);\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"proceso_sirius\",\r\n                    \"attributes\": {\r\n                        \"radicado\": datos.codigoSirius,\r\n                        \"id_origen_radicado\": \"1\",\r\n                        \"id_tipo_proceso\": 1\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //Componetes\r\n    const selectTipoExpediente = () => {\r\n        return(\r\n            listaTipoExpediente.data.map((origen, i) => {\r\n                return (\r\n                    <option key={origen.id} value={origen.id}>{origen.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n        <div className=\"content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">Paso 1: Validar forma de ingreso</h3>\r\n                            </div>\r\n                            <div className=\"block-content\">                         \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"ingresoProcesoDisciplinario\">Ingreso por <span className=\"text-danger\">*</span></label>\r\n                                            <select className=\"form-control\" id=\"ingresoProcesoDisciplinario\" name=\"ingresoProcesoDisciplinario\" \r\n                                                value={selectedTipoExpediente} onChange={e => selectChangeTipoExpediente(e.target.value)}>\r\n                                                <option value=\"\">Por favor seleccione</option>\r\n                                                { respuestaTipoExpediente ? selectTipoProceso() : null }\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>                       \r\n                                </div>\r\n                                    {/*SIRIUS*/}\r\n                                    { selectedTipoIngreso === '1' ? componentSirius(1) : '' }\r\n                                    {/*DESGLOSE*/}\r\n                                    { selectedTipoIngreso === '2' ? componentDesglose(1) : '' }\r\n                                    {/*SINPROC*/}\r\n                                    { selectedTipoIngreso === '3' ? componentSinproc(1) : '' }    \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>                 \r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n}\r\nexport default ClasificacionRadicadoForm;\r\n"]},"metadata":{},"sourceType":"module"}