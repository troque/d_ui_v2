{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _ = require(\"lodash\");\nvar RELATIONSHIP_SCHEMA_PREFIX = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/\";\n\n/**\n * A relationship collection.\n * @ignore\n */\nvar Relationships = /*#__PURE__*/function () {\n  /**\n   * Creates a new instance of _Relationships.\n   * @param {{}} node - The node.\n   */\n  function Relationships(node) {\n    _classCallCheck(this, Relationships);\n    this._init(node);\n    this._getStartingId();\n  }\n\n  /**\n   * Add a new relationship.\n   * @param {string} type - The type of relationship.\n   * @param {string} target - The target of the relationship.\n   * @param {string} [targetMode] - The target mode of the relationship.\n   * @returns {{}} The new relationship.\n   */\n  _createClass(Relationships, [{\n    key: \"add\",\n    value: function add(type, target, targetMode) {\n      var node = {\n        name: \"Relationship\",\n        attributes: {\n          Id: \"rId\".concat(this._nextId++),\n          Type: \"\".concat(RELATIONSHIP_SCHEMA_PREFIX).concat(type),\n          Target: target\n        }\n      };\n      if (targetMode) {\n        node.attributes.TargetMode = targetMode;\n      }\n      this._node.children.push(node);\n      return node;\n    }\n\n    /**\n     * Find a relationship by ID.\n     * @param {string} id - The relationship ID.\n     * @returns {{}|undefined} The matching relationship or undefined if not found.\n     */\n  }, {\n    key: \"findById\",\n    value: function findById(id) {\n      return _.find(this._node.children, function (node) {\n        return node.attributes.Id === id;\n      });\n    }\n\n    /**\n     * Find a relationship by type.\n     * @param {string} type - The type to search for.\n     * @returns {{}|undefined} The matching relationship or undefined if not found.\n     */\n  }, {\n    key: \"findByType\",\n    value: function findByType(type) {\n      return _.find(this._node.children, function (node) {\n        return node.attributes.Type === \"\".concat(RELATIONSHIP_SCHEMA_PREFIX).concat(type);\n      });\n    }\n\n    /**\n     * Convert the collection to an XML object.\n     * @returns {{}|undefined} The XML or undefined if empty.\n     */\n  }, {\n    key: \"toXml\",\n    value: function toXml() {\n      if (!this._node.children.length) return;\n      return this._node;\n    }\n\n    /**\n     * Get the starting relationship ID to use for new relationships.\n     * @private\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_getStartingId\",\n    value: function _getStartingId() {\n      var _this = this;\n      this._nextId = 1;\n      this._node.children.forEach(function (node) {\n        var id = parseInt(node.attributes.Id.substr(3));\n        if (id >= _this._nextId) _this._nextId = id + 1;\n      });\n    }\n\n    /**\n     * Initialize the node.\n     * @param {{}} [node] - The relationships node.\n     * @private\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_init\",\n    value: function _init(node) {\n      if (!node) node = {\n        name: \"Relationships\",\n        attributes: {\n          xmlns: \"http://schemas.openxmlformats.org/package/2006/relationships\"\n        },\n        children: []\n      };\n      this._node = node;\n    }\n  }]);\n  return Relationships;\n}();\nmodule.exports = Relationships;\n\n/*\nxl/_rels/workbook.xml.rels\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n    <Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\"/>\n    <Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\" Target=\"theme/theme1.xml\"/>\n    <Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet1.xml\"/>\n    <Relationship Id=\"rId5\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/calcChain\" Target=\"calcChain.xml\"/>\n    <Relationship Id=\"rId4\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\"/>\n</Relationships>\n*/","map":{"version":3,"names":["_","require","RELATIONSHIP_SCHEMA_PREFIX","Relationships","node","_init","_getStartingId","type","target","targetMode","name","attributes","Id","_nextId","Type","Target","TargetMode","_node","children","push","id","find","length","forEach","parseInt","substr","xmlns","module","exports"],"sources":["C:/w2d/personeria/personeria-ui/node_modules/xlsx-populate/lib/Relationships.js"],"sourcesContent":["\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst RELATIONSHIP_SCHEMA_PREFIX = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/\";\n\n/**\n * A relationship collection.\n * @ignore\n */\nclass Relationships {\n    /**\n     * Creates a new instance of _Relationships.\n     * @param {{}} node - The node.\n     */\n    constructor(node) {\n        this._init(node);\n        this._getStartingId();\n    }\n\n    /**\n     * Add a new relationship.\n     * @param {string} type - The type of relationship.\n     * @param {string} target - The target of the relationship.\n     * @param {string} [targetMode] - The target mode of the relationship.\n     * @returns {{}} The new relationship.\n     */\n    add(type, target, targetMode) {\n        const node = {\n            name: \"Relationship\",\n            attributes: {\n                Id: `rId${this._nextId++}`,\n                Type: `${RELATIONSHIP_SCHEMA_PREFIX}${type}`,\n                Target: target\n            }\n        };\n\n        if (targetMode) {\n            node.attributes.TargetMode = targetMode;\n        }\n\n        this._node.children.push(node);\n        return node;\n    }\n\n    /**\n     * Find a relationship by ID.\n     * @param {string} id - The relationship ID.\n     * @returns {{}|undefined} The matching relationship or undefined if not found.\n     */\n    findById(id) {\n        return _.find(this._node.children, node => node.attributes.Id === id);\n    }\n\n    /**\n     * Find a relationship by type.\n     * @param {string} type - The type to search for.\n     * @returns {{}|undefined} The matching relationship or undefined if not found.\n     */\n    findByType(type) {\n        return _.find(this._node.children, node => node.attributes.Type === `${RELATIONSHIP_SCHEMA_PREFIX}${type}`);\n    }\n\n    /**\n     * Convert the collection to an XML object.\n     * @returns {{}|undefined} The XML or undefined if empty.\n     */\n    toXml() {\n        if (!this._node.children.length) return;\n        return this._node;\n    }\n\n    /**\n     * Get the starting relationship ID to use for new relationships.\n     * @private\n     * @returns {undefined}\n     */\n    _getStartingId() {\n        this._nextId = 1;\n        this._node.children.forEach(node => {\n            const id = parseInt(node.attributes.Id.substr(3));\n            if (id >= this._nextId) this._nextId = id + 1;\n        });\n    }\n\n    /**\n     * Initialize the node.\n     * @param {{}} [node] - The relationships node.\n     * @private\n     * @returns {undefined}\n     */\n    _init(node) {\n        if (!node) node = {\n            name: \"Relationships\",\n            attributes: {\n                xmlns: \"http://schemas.openxmlformats.org/package/2006/relationships\"\n            },\n            children: []\n        };\n\n        this._node = node;\n    }\n}\n\nmodule.exports = Relationships;\n\n/*\nxl/_rels/workbook.xml.rels\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n    <Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\"/>\n    <Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\" Target=\"theme/theme1.xml\"/>\n    <Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet1.xml\"/>\n    <Relationship Id=\"rId5\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/calcChain\" Target=\"calcChain.xml\"/>\n    <Relationship Id=\"rId4\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\"/>\n</Relationships>\n*/\n\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAEb,IAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE3B,IAAMC,0BAA0B,GAAG,sEAAsE;;AAEzG;AACA;AACA;AACA;AAHA,IAIMC,aAAa;EACf;AACJ;AACA;AACA;EACI,uBAAYC,IAAI,EAAE;IAAA;IACd,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC;IAChB,IAAI,CAACE,cAAc,EAAE;EACzB;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAA;IAAA,OAOA,aAAIC,IAAI,EAAEC,MAAM,EAAEC,UAAU,EAAE;MAC1B,IAAML,IAAI,GAAG;QACTM,IAAI,EAAE,cAAc;QACpBC,UAAU,EAAE;UACRC,EAAE,eAAQ,IAAI,CAACC,OAAO,EAAE,CAAE;UAC1BC,IAAI,YAAKZ,0BAA0B,SAAGK,IAAI,CAAE;UAC5CQ,MAAM,EAAEP;QACZ;MACJ,CAAC;MAED,IAAIC,UAAU,EAAE;QACZL,IAAI,CAACO,UAAU,CAACK,UAAU,GAAGP,UAAU;MAC3C;MAEA,IAAI,CAACQ,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACf,IAAI,CAAC;MAC9B,OAAOA,IAAI;IACf;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,kBAASgB,EAAE,EAAE;MACT,OAAOpB,CAAC,CAACqB,IAAI,CAAC,IAAI,CAACJ,KAAK,CAACC,QAAQ,EAAE,UAAAd,IAAI;QAAA,OAAIA,IAAI,CAACO,UAAU,CAACC,EAAE,KAAKQ,EAAE;MAAA,EAAC;IACzE;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,oBAAWb,IAAI,EAAE;MACb,OAAOP,CAAC,CAACqB,IAAI,CAAC,IAAI,CAACJ,KAAK,CAACC,QAAQ,EAAE,UAAAd,IAAI;QAAA,OAAIA,IAAI,CAACO,UAAU,CAACG,IAAI,eAAQZ,0BAA0B,SAAGK,IAAI,CAAE;MAAA,EAAC;IAC/G;;IAEA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,iBAAQ;MACJ,IAAI,CAAC,IAAI,CAACU,KAAK,CAACC,QAAQ,CAACI,MAAM,EAAE;MACjC,OAAO,IAAI,CAACL,KAAK;IACrB;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,0BAAiB;MAAA;MACb,IAAI,CAACJ,OAAO,GAAG,CAAC;MAChB,IAAI,CAACI,KAAK,CAACC,QAAQ,CAACK,OAAO,CAAC,UAAAnB,IAAI,EAAI;QAChC,IAAMgB,EAAE,GAAGI,QAAQ,CAACpB,IAAI,CAACO,UAAU,CAACC,EAAE,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC;QACjD,IAAIL,EAAE,IAAI,KAAI,CAACP,OAAO,EAAE,KAAI,CAACA,OAAO,GAAGO,EAAE,GAAG,CAAC;MACjD,CAAC,CAAC;IACN;;IAEA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,eAAMhB,IAAI,EAAE;MACR,IAAI,CAACA,IAAI,EAAEA,IAAI,GAAG;QACdM,IAAI,EAAE,eAAe;QACrBC,UAAU,EAAE;UACRe,KAAK,EAAE;QACX,CAAC;QACDR,QAAQ,EAAE;MACd,CAAC;MAED,IAAI,CAACD,KAAK,GAAGb,IAAI;IACrB;EAAC;EAAA;AAAA;AAGLuB,MAAM,CAACC,OAAO,GAAGzB,aAAa;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script"}