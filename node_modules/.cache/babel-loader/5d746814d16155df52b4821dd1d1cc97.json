{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Utils\\\\Modals\\\\ModalItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport '../../Utils/Constants';\nimport { logDOM } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ModalItems(props) {\n  _s();\n\n  // Se inicializan las constantes\n  const navigate = useNavigate();\n  const [show, setShow] = useState(props.data.show);\n  const [getData, setData] = useState(props.data.data);\n  const [getInformacion, setInformacion] = useState([]);\n  const [getItem, setItem] = useState(\"\"); // Metodo encargado de cerrar el modal\n\n  const handleClose = () => {\n    // Se valida que sea diferente de indefinido\n    if (props.data.redirect != undefined) // Se redirecciona a la url\n      navigate(props.data.redirect, {\n        state: props.data.from\n      }); // Se setea la propiedad en false\n\n    props.data.show = false; // Se quita el modal\n\n    setShow(false);\n  }; // Metodo encargado de generar el modal\n\n\n  useEffect(() => {\n    // Se setea el valor para mostrar el modal\n    setShow(props.data.show); // Se setea la data\n\n    setData(props.data.data); // Se captura el array de los items\n\n    let array = props.data.data.items ? props.data.data.items.split(\",\") : null; // Se setea el array general\n\n    setInformacion(array);\n  }, [props.data.show]); // Metodo encargado de setear el valor del item al mismo\n\n  const changeValueItem = propsItems => {\n    // Se captura el id del elemento\n    let idElemento = propsItems.target.id; // Se setea el valor escrito al id \n\n    document.getElementById(idElemento).value = propsItems.target.value;\n  }; // Metodo encargado de listar los items en la tabla\n\n\n  const listaItems = () => {\n    // Se valida que exista informacion\n    if (getInformacion) {\n      // Se retorna\n      return (// Se mapea la informacion\n        getInformacion.map((item, i) => {\n          // Se retorna la informacion\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              style: {\n                marginTop: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                as: \"input\",\n                type: \"text\",\n                className: \"form-control\",\n                style: {\n                  border: \"none\"\n                },\n                id: \"valorItem\" + item.trim(),\n                name: \"valorItem\" + item.trim(),\n                value: item.trim(),\n                onChange: changeValueItem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, item.trim() + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this);\n        })\n      );\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block block-themed block-transparent mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          className: \"block-header bg-primary-dark\",\n          children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n            className: \"block-title\",\n            children: [\" \", props.data.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleClose,\n            className: \"btn-block-option\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-fw fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: getInformacion ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"block-content\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-bordered table-striped table-vcenter js-dataTable-full table-responsive-md\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    style: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Listado de Items\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: listaItems()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          style: {\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-rounded btn-primary\",\n            variant: \"primary\",\n            onClick: handleClose,\n            children: \"Actualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ModalItems, \"L6xsVJ+DKcsACjyBNkX8lJTMrfs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ModalItems;\nexport default ModalItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalItems\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Modal","Button","logDOM","ModalItems","props","navigate","show","setShow","data","getData","setData","getInformacion","setInformacion","getItem","setItem","handleClose","redirect","undefined","state","from","array","items","split","changeValueItem","propsItems","idElemento","target","id","document","getElementById","value","listaItems","map","item","i","marginTop","border","trim","title","textAlign","justifyContent"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Utils/Modals/ModalItems.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../Utils/Constants';\r\nimport { logDOM } from '@testing-library/react';\r\n\r\nfunction ModalItems(props) {\r\n\r\n    // Se inicializan las constantes\r\n    const navigate = useNavigate();\r\n    const [show, setShow] = useState(props.data.show);\r\n    const [getData, setData] = useState(props.data.data);\r\n    const [getInformacion, setInformacion] = useState([]);\r\n    const [getItem, setItem] = useState(\"\");\r\n\r\n    // Metodo encargado de cerrar el modal\r\n    const handleClose = () => {\r\n\r\n        // Se valida que sea diferente de indefinido\r\n        if (props.data.redirect != undefined)\r\n\r\n            // Se redirecciona a la url\r\n            navigate(props.data.redirect, { state: props.data.from });\r\n\r\n        // Se setea la propiedad en false\r\n        props.data.show = false;\r\n\r\n        // Se quita el modal\r\n        setShow(false);\r\n    };\r\n\r\n\r\n    // Metodo encargado de generar el modal\r\n    useEffect(() => {\r\n\r\n        // Se setea el valor para mostrar el modal\r\n        setShow(props.data.show);\r\n\r\n        // Se setea la data\r\n        setData(props.data.data);\r\n\r\n        // Se captura el array de los items\r\n        let array = props.data.data.items ? props.data.data.items.split(\",\") : null;\r\n\r\n        // Se setea el array general\r\n        setInformacion(array);\r\n\r\n    }, [props.data.show])\r\n\r\n    // Metodo encargado de setear el valor del item al mismo\r\n    const changeValueItem = (propsItems) => {\r\n\r\n        // Se captura el id del elemento\r\n        let idElemento = propsItems.target.id;\r\n\r\n        // Se setea el valor escrito al id \r\n        document.getElementById(idElemento).value = propsItems.target.value;\r\n    }\r\n\r\n    // Metodo encargado de listar los items en la tabla\r\n    const listaItems = () => {\r\n\r\n        // Se valida que exista informacion\r\n        if (getInformacion) {\r\n\r\n            // Se retorna\r\n            return (\r\n\r\n                // Se mapea la informacion\r\n                getInformacion.map((item, i) => {\r\n\r\n                    // Se retorna la informacion\r\n                    return (\r\n                        <tr key={item.trim() + i} >\r\n                            <div className=\"form-group\" style={{ marginTop: '10px' }}>\r\n                                <input\r\n                                    as=\"input\"\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    style={{ border: \"none\" }}\r\n                                    id={\"valorItem\" + item.trim()}\r\n                                    name={\"valorItem\" + item.trim()}\r\n                                    value={item.trim()}\r\n                                    onChange={changeValueItem}\r\n                                />\r\n                            </div>\r\n                        </tr>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <div className=\"block block-themed block-transparent mb-0\">\r\n                    <Modal.Header className=\"block-header bg-primary-dark\">\r\n                        <Modal.Title className='block-title'> {props.data.title}</Modal.Title>\r\n                        <Button variant=\"primary\" onClick={handleClose} className='btn-block-option'>\r\n                            <i className=\"fa fa-fw fa-times\"></i>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className='row'>\r\n                            {/* Se valida que exista informacion de los items */}\r\n                            {getInformacion ?\r\n                                <div class=\"block-content\">\r\n                                    <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full table-responsive-md\">\r\n                                        <thead>\r\n                                            <tr style={{ textAlign: 'center' }}>\r\n                                                <th>Listado de Items</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {listaItems()}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                : null}\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{ justifyContent: 'center' }}>\r\n                        <Button className='btn btn-rounded btn-primary' variant=\"primary\" onClick={handleClose}>\r\n                            Actualizar\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalItems;"],"mappings":"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"},"metadata":{},"sourceType":"module"}