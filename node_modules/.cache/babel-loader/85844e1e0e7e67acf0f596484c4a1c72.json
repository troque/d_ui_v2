{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Utils\\\\ListaBotones.js\";\nimport { Link } from \"react-router-dom\";\nimport React, { Component, Fragment } from \"react\";\nimport { hasAccess } from '../../components/Utils/Common';\nimport GenericApi from '../Api/Services/GenericApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ListaBotones extends Component {\n  constructor(props) {\n    super(props);\n\n    this.boton_add = (id_etapa, id_fase) => {\n      validar - tipo - expediente - queja - interna / {\n        id_proceso_disciplinario\n      };\n\n      if (hasAccess(this.state.modulo, this.state.funcionalidad_crear)) {\n        if (id_etapa != global.Constants.ETAPAS.CAPTURA_REPARTO && id_fase == global.Constants.FASES.CLASIFICACION) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    };\n\n    this.validarEstadoTipoConducta = () => {\n      GenericApi.getGeneric(\"activar-reclasificacion-tipo-conducta/\" + procesoDisciplinarioId).then(datos => {\n        if (!datos.error) {\n          setActivarTipoConducta(datos.data.attributes.activar_funcionalidad);\n        }\n      });\n    };\n\n    this.refrescar = estado => {\n      try {\n        this.props.parentCallback(estado);\n      } catch (error) {\n        console.error(\"Error \" + error);\n      }\n    };\n\n    const {\n      getRoutes\n    } = this.props;\n    const {\n      from\n    } = this.props;\n    const {\n      disable\n    } = this.props;\n    let {\n      mostrarBotonAgregar\n    } = true;\n\n    if (this.props.hasOwnProperty('mostrarBotonAgregar')) {\n      mostrarBotonAgregar = this.props.mostrarBotonAgregar;\n    } else {\n      mostrarBotonAgregar = true;\n    }\n\n    console.log(mostrarBotonAgregar);\n    this.state = {\n      id_etapa: getRoutes.id_etapa,\n      id_fase: getRoutes.id_fase,\n      crear_registro: getRoutes.crear_registro,\n      consultar_registros: getRoutes.consultar_registros,\n      adjuntar_documento: getRoutes.adjuntar_documento,\n      repositorio_documentos: getRoutes.repositorio_documentos,\n      modulo: getRoutes.modulo,\n      funcionalidad_crear: getRoutes.funcionalidad_crear,\n      funcionalidad_consultar: getRoutes.funcionalidad_consultar,\n      from: from,\n      muestra_atras: getRoutes.muestra_atras,\n      selected_id_etapa: getRoutes.selected_id_etapa,\n      mostrarBotonAgregar: mostrarBotonAgregar,\n      disable: disable,\n      muestra_inactivos: getRoutes.muestra_inactivos\n    };\n  }\n  /**\r\n   * Se valida que la única fase que no puede agregar un registro nuevo es clasificacion del rádicado una vez la etapa se haya cerrado.\r\n   */\n\n\n  render() {\n    const {\n      state: {\n        crear_registro,\n        consultar_registros,\n        adjuntar_documento,\n        from,\n        selected_id_etapa,\n        mostrarBotonAgregar\n      }\n    } = this;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md text-right ms-auto\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [this.boton_add(this.state.id_etapa, this.state.id_fase) ? this.state.mostrarBotonAgregar ? this.state.disable != true ? /*#__PURE__*/_jsxDEV(Link, {\n            to: this.state.crear_registro,\n            state: {\n              from: from,\n              selected_id_etapa: selected_id_etapa,\n              tipoActuacion: \"Actuación\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              title: \"Agregar nuevo registro\",\n              className: \"btn btn-primary\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 123\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 37\n          }, this) : null : null : null, hasAccess(this.state.modulo, this.state.funcionalidad_consultar) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            title: \"Listado de activos\",\n            onClick: () => this.refrescar('1'),\n            className: \"btn btn-primary\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 147\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this) : null, this.state.muestra_inactivos ? hasAccess(this.state.modulo, this.state.funcionalidad_consultar, this.state.muestra_inactivos) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            title: \"Listado de inactivos\",\n            onClick: () => this.refrescar('0'),\n            className: \"btn btn-danger\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 152\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 37\n          }, this) : null : null, this.state.muestra_atras ? /*#__PURE__*/_jsxDEV(Link, {\n            to: '/RamasProceso/',\n            title: \"Regresar a ramas del proceso\",\n            state: {\n              from: from,\n              disable: this.state.disable\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-backward\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 87\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListaBotones;","map":{"version":3,"names":["Link","React","Component","Fragment","hasAccess","GenericApi","ListaBotones","constructor","props","boton_add","id_etapa","id_fase","validar","tipo","expediente","queja","interna","id_proceso_disciplinario","state","modulo","funcionalidad_crear","global","Constants","ETAPAS","CAPTURA_REPARTO","FASES","CLASIFICACION","validarEstadoTipoConducta","getGeneric","procesoDisciplinarioId","then","datos","error","setActivarTipoConducta","data","attributes","activar_funcionalidad","refrescar","estado","parentCallback","console","getRoutes","from","disable","mostrarBotonAgregar","hasOwnProperty","log","crear_registro","consultar_registros","adjuntar_documento","repositorio_documentos","funcionalidad_consultar","muestra_atras","selected_id_etapa","muestra_inactivos","render","tipoActuacion"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Utils/ListaBotones.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { hasAccess } from '../../components/Utils/Common';\r\nimport GenericApi from '../Api/Services/GenericApi';\r\n\r\nclass ListaBotones extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { getRoutes } = this.props;\r\n        const { from } = this.props;\r\n        const { disable } = this.props;\r\n\r\n        let { mostrarBotonAgregar } = true;\r\n        if (this.props.hasOwnProperty('mostrarBotonAgregar')) {\r\n            mostrarBotonAgregar = this.props.mostrarBotonAgregar;\r\n        }else{\r\n            mostrarBotonAgregar = true;\r\n        }\r\n\r\n\r\n        console.log(mostrarBotonAgregar);\r\n        this.state = {\r\n            id_etapa: getRoutes.id_etapa,\r\n            id_fase:  getRoutes.id_fase,\r\n            crear_registro: getRoutes.crear_registro,\r\n            consultar_registros: getRoutes.consultar_registros,\r\n            adjuntar_documento: getRoutes.adjuntar_documento,\r\n            repositorio_documentos: getRoutes.repositorio_documentos,\r\n            modulo: getRoutes.modulo,\r\n            funcionalidad_crear: getRoutes.funcionalidad_crear,\r\n            funcionalidad_consultar: getRoutes.funcionalidad_consultar,\r\n            from: from,\r\n            muestra_atras: getRoutes.muestra_atras,\r\n            selected_id_etapa: getRoutes.selected_id_etapa,\r\n            mostrarBotonAgregar: mostrarBotonAgregar,\r\n            disable: disable,\r\n            muestra_inactivos: getRoutes.muestra_inactivos,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Se valida que la única fase que no puede agregar un registro nuevo es clasificacion del rádicado una vez la etapa se haya cerrado.\r\n     */\r\n    boton_add = (id_etapa, id_fase) => {\r\n\r\n\r\n\r\n        validar-tipo-expediente-queja-interna/{id_proceso_disciplinario}\r\n\r\n     \r\n        if(hasAccess(this.state.modulo, this.state.funcionalidad_crear)){\r\n\r\n            if(id_etapa != global.Constants.ETAPAS.CAPTURA_REPARTO && id_fase == global.Constants.FASES.CLASIFICACION){\r\n                return false;\r\n            }\r\n\r\n            else{\r\n                return true;\r\n            }\r\n        }  \r\n    }\r\n\r\n\r\n    validarEstadoTipoConducta = () => {\r\n        \r\n        GenericApi.getGeneric(\"activar-reclasificacion-tipo-conducta/\"+procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setActivarTipoConducta(datos.data.attributes.activar_funcionalidad);  \r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    refrescar = (estado) => {\r\n        try {\r\n            this.props.parentCallback(estado);\r\n        } catch (error) {\r\n            console.error(\"Error \" + error);\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const {\r\n            state: {\r\n                crear_registro,\r\n                consultar_registros,\r\n                adjuntar_documento,\r\n                from,\r\n                selected_id_etapa,\r\n                mostrarBotonAgregar\r\n            }\r\n        } = this;\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n\r\n                <div className='col-md text-right ms-auto'>\r\n\r\n                    <>\r\n                        {\r\n                            (this.boton_add(this.state.id_etapa, this.state.id_fase)) ?( \r\n                                (this.state.mostrarBotonAgregar)?(\r\n                                    (this.state.disable != true)?(\r\n                                    <Link to={this.state.crear_registro} state={{ from: from , selected_id_etapa: selected_id_etapa , tipoActuacion: \"Actuación\" }}>\r\n                                        <button type=\"button\" title='Agregar nuevo registro' className=\"btn btn-primary\"> <i className=\"fas fa-plus\"></i> </button>\r\n                                    </Link>\r\n                                    ):null\r\n                                ):null\r\n                                \r\n\r\n                            ): null\r\n                        }\r\n\r\n                        {\r\n                            (hasAccess(this.state.modulo, this.state.funcionalidad_consultar)) ? (\r\n                                <button type=\"button\" title='Listado de activos' onClick={() => this.refrescar('1')} className=\"btn btn-primary\"> <i className=\"fas fa-list\"></i> </button>\r\n                            ) : null\r\n                        }\r\n\r\n\r\n                        {\r\n                            (this.state.muestra_inactivos?(\r\n                                (hasAccess(this.state.modulo, this.state.funcionalidad_consultar, this.state.muestra_inactivos)) ? (\r\n                                    <button type=\"button\" title='Listado de inactivos' onClick={() => this.refrescar('0')} className=\"btn btn-danger\"> <i className=\"fas fa-list\"></i> </button>\r\n\r\n                                ) : null\r\n                            ):null)\r\n                        }\r\n\r\n\r\n\r\n                        {/* \r\n                    <Link to={this.state.adjuntar_documento} state={{ from: from }}>\r\n                        <button type=\"button\" title='Adjuntar documento(s)' className=\"btn btn-primary\"> <i className=\"fas fa-paperclip\"></i> </button>\r\n                    </Link>\r\n\r\n                    <Link to={`/AntencentesForm/`} state={{ from: from }}>\r\n                        <button type=\"button\" title='Repositorio de documentos' className=\"btn btn-primary\"> <i className=\"fas fa-folder\"></i> </button>\r\n                    </Link>\r\n                    */}\r\n                        {\r\n                            (this.state.muestra_atras) ? (\r\n                                <Link to={'/RamasProceso/'} title='Regresar a ramas del proceso' state={{ from: from , disable: this.state.disable}}>\r\n                                    <button type=\"button\" className=\"btn btn-primary\"><i className=\"fas fa-backward\"></i> </button>\r\n                                </Link>\r\n                            ) : null\r\n                        }\r\n\r\n                    </>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListaBotones;"],"mappings":"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"},"metadata":{},"sourceType":"module"}