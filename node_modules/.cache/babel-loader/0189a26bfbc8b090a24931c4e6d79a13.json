{"ast":null,"code":"import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{ErrorMessage,Field,Form,Formik}from'formik';import Spinner from'../Utils/Spinner';import{Link}from\"react-router-dom\";import GenericApi from'../Api/Services/GenericApi';import{useLocation}from'react-router-dom';import'../Utils/Constants';import ModalGen from'../Utils/Modals/ModalGeneric';import InfoErrorApi from'../Utils/InfoErrorApi';import Select from'react-select';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function TipoUnidadForm(){// Constantes generales\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),errorApi=_useState2[0],setErrorApi=_useState2[1];var _useState3=useState({title:\"\",message:\"\",show:false}),_useState4=_slicedToArray(_useState3,2),getModalState=_useState4[0],setModalState=_useState4[1];// Constantes para cargar los valores\nvar _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),getNombreTipoUnidad=_useState6[0],setNombreTipoUnidad=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),getCodigoUnidad=_useState8[0],setCodigoUnidad=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),getDescripcionUnidad=_useState10[0],setDescripcionUnidad=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),getValueDependencias=_useState12[0],setValueDependencias=_useState12[1];// Constante para el array de los estados y dependencias\nvar _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),getArrayEstados=_useState14[0],setArrayEstados=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),getListadoDependencias=_useState16[0],setListadoDependencias=_useState16[1];// Constantes para los errores\nvar _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),getMensajeErrorDependencias=_useState18[0],setMensajeErrorDependencias=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),getMensajeErrorEstado=_useState20[0],setMensajeErrorEstado=_useState20[1];// Se inicializa el array de estados\nvar getListaEstados=[{value:'1',label:'Activo'},{value:'0',label:'Inactivo'}];var location=useLocation();var from=location.state.from;useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Se habilita el cargando\nwindow.showSpinner(true);// Se valida que haya informacion enviada por parametros al formulario\nif(from!=null){// Se carga el nombre\nsetNombreTipoUnidad(from.attributes.nombre);// Se carga el codigo de la unidad\nsetCodigoUnidad(from.attributes.codigo_unidad);// Se carga la descripcion de la unidad\nsetDescripcionUnidad(from.attributes.descripcion_unidad);// Se cargan las dependencias\ncargarDependencias();// Se carga el estado\nif(from.attributes.estado==1){setArrayEstados({label:'Activo',value:from.attributes.estado});}else{setArrayEstados({label:'Inactivo',value:from.attributes.estado});}// Se deshabilita el cargando\nwindow.showSpinner(false);}else{// Se carga los tipos de expediente por mensajes\ncargarDependencias();// Se deshabilita el cargando\nwindow.showSpinner(false);}case 2:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[]);// Metodo encargado de cargar las dependencias\nvar cargarDependencias=function cargarDependencias(){// Se inicializa el trycatch en caso de error de la api\ntry{// Se inicializa el array general\nvar arrayGeneral=[];// Buscamos los valores del array de los tipos de expedientes\nGenericApi.getGeneric(\"mas-dependencia-origen\").then(// Variable de la api\nfunction(datos){// Se valida que no haya ningun error\nif(!datos.error){// Se valida que el array tenga mas de 0 elementos\nif(datos[\"data\"].length>0){// Se recorre el array de los tipo de expediente\nfor(var index=0;index<datos.data.length;index++){// Se captura el valor por posicion\nvar element=datos.data[index];var dependenciaId=parseInt(element.id);// Se valida que haya informacion enviada por parametros al formulario\nif(from!=null){// Se valida cuando el elemento sea igual al elemento a editar para setear el valor\nif(dependenciaId==from.attributes.dependencia.id){// Se setea el valor\nsetValueDependencias({label:element.attributes.nombre,value:element.id});}}// Se añade al array general\narrayGeneral.push({label:element.attributes.nombre,value:element.id});}// Se añade el array general al array de los tipos de antecedentes\nsetListadoDependencias(arrayGeneral);}}else{setModalState({title:\"Tipos de Unidad\",message:datos.error.toString(),show:true,redirect:'/TipoExpedientesMensajes',alert:global.Constants.TIPO_ALERTA.ERROR});}});}catch(error){console.log(error);}};// Metodo encargado de enviar los valores para crear\nvar enviarDatos=function enviarDatos(valores){// Se inicializa el array\nvar data;// Se valida que se haya seleccionado una dependencia\nif(!getValueDependencias.value){// Se redeclara el mensaje\nsetMensajeErrorDependencias(\"Debe seleccionar una dependencia\");return false;}else if(getValueDependencias.value){// Se redeclara el mensaje en null\nsetMensajeErrorDependencias(null);// Se valida que se haya seleccionado un sub tipo de expediente\nif(!getArrayEstados.value){// Se redeclara el mensaje\nsetMensajeErrorEstado(\"Debe seleccionar un estado\");return false;}else{// Se redeclara el mensaje\nsetMensajeErrorEstado(null);// Se inicializa el array a enviar por post\ndata={\"data\":{\"type\":\"mas_tipo_expediente_mensajes\",\"attributes\":{\"nombre\":getNombreTipoUnidad,\"codigo_unidad\":getCodigoUnidad,\"descripcion_unidad\":getDescripcionUnidad,\"id_dependencia\":getValueDependencias.value,\"estado\":getArrayEstados.value}}};}}// Se utiliza el cargando\nwindow.showSpinner(true);// Se inicializa la API\nGenericApi.addGeneric('mas_tipo_unidad',data).then(// Variable de API\nfunction(datos){// Se utiliza el cargando\nwindow.showSpinner(false);// Se valida que no haya error\nif(!datos.error){setModalState({title:\"Tipo Unidad :: Creación\",message:'Creado con éxito ',show:true,redirect:'/TipoUnidad',alert:global.Constants.TIPO_ALERTA.EXITO});}else{setModalState({title:\"Tipo Unidad :: Error de creación\",message:datos.error.toString(),show:true,alert:global.Constants.TIPO_ALERTA.ERROR});}});};// Metodo encargado de actualizar los valores\nvar actualizarDatos=function actualizarDatos(valores){// Se inicializa el valor del id\nvar id=from.id;// Se inicializa el array\nvar data;// Se inicializa el array a enviar por post\ndata={\"data\":{\"type\":\"mas_tipo_expediente_mensajes\",\"attributes\":{\"nombre\":getNombreTipoUnidad,\"codigo_unidad\":getCodigoUnidad,\"descripcion_unidad\":getDescripcionUnidad,\"id_dependencia\":getValueDependencias.value,\"estado\":getArrayEstados.value}}};console.log(\"data -> \",data);// Se utiliza el cargando\nwindow.showSpinner(true);// API Encargada de actualizar \nGenericApi.updateGeneric('mas_tipo_unidad',id,data).then(// Variable de respuesta de la API\nfunction(datos){// Se deshabilita el cargando\nwindow.showSpinner(false);// Se valida que no haya error\nif(!datos.error){setModalState({title:\"Tipo Unidad :: Actualización con éxito\",message:'Actualizado con éxito ',show:true,redirect:'/TipoUnidad',alert:global.Constants.TIPO_ALERTA.EXITO});}else{setModalState({title:\"Tipo Unidad :: Error de actualización\",message:datos.error.toString(),show:true,alert:global.Constants.TIPO_ALERTA.ERROR});}});};// Metodo encargado de setear el valor del estado\nvar selectChangeEstados=function selectChangeEstados(v){// Se carga el tipo de estado en el array del select\nsetArrayEstados(v);};// Metodo encargado de setear el valor de la dependencia\nvar selectChangeListadoDependencias=function selectChangeListadoDependencias(v){// Se carga el tipo de estado en el array del select\nsetValueDependencias(v);};// Metodo encargado de validar que no se ingresen caracteres invalidos\nfunction containsSpecialChars(str){var result=global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(function(specialChar){if(str.includes(specialChar)){return true;}return false;});return result;}// Metodo encargado de setear el mensaje\nvar changeMensaje=function changeMensaje(e){setNombreTipoUnidad(e.target.value);};// Metodo encargado de setear el codigo de la unidad\nvar changeCodigoUnidad=function changeCodigoUnidad(e){setCodigoUnidad(e.target.value);};// Metodo encargado de setear la descripcion de la unidad\nvar changeDescripcionUnidad=function changeDescripcionUnidad(e){setDescripcionUnidad(e.target.value);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(InfoErrorApi,{error:errorApi}),/*#__PURE__*/_jsx(ModalGen,{data:getModalState}),/*#__PURE__*/_jsx(Formik,{initialValues:{nombreTipoUnidad:'',codigoUnidad:'',descripcionUnidad:''},enableReinitialize:true,validate:function validate(valores){// Se inicializa el array\nvar errores={};// Se valida que tenga valores el nombre\nif(!getNombreTipoUnidad){errores.nombreTipoUnidad='Debe ingresar un valor';}// Se valida que exista\nif(getNombreTipoUnidad){// Se valida que contenga caracteres invalidos\nif(containsSpecialChars(getNombreTipoUnidad)){errores.nombreTipoUnidad='Tiene caracteres inválidos';}}// Se retorna los errores\nreturn errores;},onSubmit:function onSubmit(valores,_ref){var resetForm=_ref.resetForm;if(from!=null){actualizarDatos(valores);}else{enviarDatos(valores);}},children:function children(_ref2){var errors=_ref2.errors;return/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"block block-rounded block-bordered\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"block-content\",children:/*#__PURE__*/_jsx(\"nav\",{\"aria-label\":\"breadcrumb\",children:/*#__PURE__*/_jsxs(\"ol\",{className:\"breadcrumb breadcrumb-alt push\",children:[/*#__PURE__*/_jsxs(\"li\",{class:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Administraci\\xF3n\"})]}),/*#__PURE__*/_jsxs(\"li\",{class:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Maestras\"})]}),/*#__PURE__*/_jsxs(\"li\",{class:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsxs(Link,{underline:\"hover\",className:\"text-dark\",to:\"/TipoExpedienteMensajes\",children:[\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Lista mensajes por tipo de expediente\"})]})]}),/*#__PURE__*/_jsxs(\"li\",{class:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsxs(\"small\",{children:[from!=null?'Actualizar':'Crear',\" mensaje por tipo de expediente\"]})]})]})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"block-title\",children:\"Datos b\\xE1sicos\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"block-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"nombreTipoUnidad\",children:[\"Nombre \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{as:\"input\",type:\"text\",className:\"form-control\",id:\"nombreTipoUnidad\",name:\"nombreTipoUnidad\",value:from!=null?getNombreTipoUnidad:null,onChange:changeMensaje}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"nombreTipoUnidad\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.nombreTipoUnidad});}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"codigoUnidad\",children:[\"C\\xF3digo unidad \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{as:\"input\",type:\"text\",className:\"form-control\",id:\"codigoUnidad\",name:\"codigoUnidad\",value:from!=null?getCodigoUnidad:null,onChange:changeCodigoUnidad}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"codigoUnidad\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.codigoUnidad});}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"descripcionUnidad\",children:[\"Descripci\\xF3n unidad \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{as:\"input\",type:\"text\",className:\"form-control\",id:\"descripcionUnidad\",name:\"descripcionUnidad\",value:from!=null?getDescripcionUnidad:null,onChange:changeDescripcionUnidad}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"descripcionUnidad\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.descripcionUnidad});}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"dependencia\",children:[\"Dependencia: \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),getValueDependencias?/*#__PURE__*/_jsx(Select,{id:\"dependencia\",name:\"dependencia\",isMulti:false,value:getValueDependencias,placeholder:\"Selecciona\",noOptionsMessage:function noOptionsMessage(){return\"Sin datos\";},options:getListadoDependencias.map(function(e){return{label:e.label,value:e.value};}),onChange:function onChange(e){return selectChangeListadoDependencias(e);}}):null,getMensajeErrorDependencias?/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:getMensajeErrorDependencias}):null]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"estado\",children:[\"Estado \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),getArrayEstados?/*#__PURE__*/_jsx(Select,{id:\"estado\",name:\"estado\",isMulti:false,value:getArrayEstados,placeholder:\"Selecciona\",noOptionsMessage:function noOptionsMessage(){return\"Sin datos\";},options:getListaEstados.map(function(e){return{label:e.label,value:e.value};}),onChange:function onChange(e){return selectChangeEstados(e);}}):null,getMensajeErrorEstado?/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:getMensajeErrorEstado}):null]})})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right bg-light\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:from!=null?\"Actualizar\":\"Crear\"}),/*#__PURE__*/_jsx(Link,{to:'/TipoUnidad',className:\"font-size-h5 font-w600\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:\"Cancelar\"})})]})]})});}})]});};","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","Spinner","Link","GenericApi","useLocation","ModalGen","InfoErrorApi","Select","TipoUnidadForm","errorApi","setErrorApi","title","message","show","getModalState","setModalState","getNombreTipoUnidad","setNombreTipoUnidad","getCodigoUnidad","setCodigoUnidad","getDescripcionUnidad","setDescripcionUnidad","getValueDependencias","setValueDependencias","getArrayEstados","setArrayEstados","getListadoDependencias","setListadoDependencias","getMensajeErrorDependencias","setMensajeErrorDependencias","getMensajeErrorEstado","setMensajeErrorEstado","getListaEstados","value","label","location","from","state","fetchData","window","showSpinner","attributes","nombre","codigo_unidad","descripcion_unidad","cargarDependencias","estado","arrayGeneral","getGeneric","then","datos","error","length","index","data","element","dependenciaId","parseInt","id","dependencia","push","toString","redirect","alert","global","Constants","TIPO_ALERTA","ERROR","console","log","enviarDatos","valores","addGeneric","EXITO","actualizarDatos","updateGeneric","selectChangeEstados","v","selectChangeListadoDependencias","containsSpecialChars","str","result","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","changeMensaje","e","target","changeCodigoUnidad","changeDescripcionUnidad","nombreTipoUnidad","codigoUnidad","descripcionUnidad","errores","resetForm","errors","map"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/TipoUnidadForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport Spinner from '../Utils/Spinner';\r\nimport { Link } from \"react-router-dom\";\r\nimport GenericApi from '../Api/Services/GenericApi';\r\nimport { useLocation } from 'react-router-dom';\r\nimport '../Utils/Constants';\r\nimport ModalGen from '../Utils/Modals/ModalGeneric';\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport Select from 'react-select';\r\n\r\nexport default function TipoUnidadForm() {\r\n\r\n    // Constantes generales\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n\r\n    // Constantes para cargar los valores\r\n    const [getNombreTipoUnidad, setNombreTipoUnidad] = useState(\"\");\r\n    const [getCodigoUnidad, setCodigoUnidad] = useState(\"\");\r\n    const [getDescripcionUnidad, setDescripcionUnidad] = useState(\"\");\r\n    const [getValueDependencias, setValueDependencias] = useState([]);\r\n\r\n    // Constante para el array de los estados y dependencias\r\n    const [getArrayEstados, setArrayEstados] = useState([]);\r\n    const [getListadoDependencias, setListadoDependencias] = useState([]);\r\n\r\n    // Constantes para los errores\r\n    const [getMensajeErrorDependencias, setMensajeErrorDependencias] = useState(\"\");\r\n    const [getMensajeErrorEstado, setMensajeErrorEstado] = useState(\"\");\r\n\r\n    // Se inicializa el array de estados\r\n    const getListaEstados =\r\n        [\r\n            { value: '1', label: 'Activo' },\r\n            { value: '0', label: 'Inactivo' }\r\n        ];\r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            // Se habilita el cargando\r\n            window.showSpinner(true);\r\n\r\n            // Se valida que haya informacion enviada por parametros al formulario\r\n            if (from != null) {\r\n\r\n                // Se carga el nombre\r\n                setNombreTipoUnidad(from.attributes.nombre);\r\n\r\n                // Se carga el codigo de la unidad\r\n                setCodigoUnidad(from.attributes.codigo_unidad);\r\n\r\n                // Se carga la descripcion de la unidad\r\n                setDescripcionUnidad(from.attributes.descripcion_unidad);\r\n\r\n                // Se cargan las dependencias\r\n                cargarDependencias();\r\n\r\n                // Se carga el estado\r\n                if (from.attributes.estado == 1) {\r\n                    setArrayEstados({ label: 'Activo', value: from.attributes.estado });\r\n                } else {\r\n                    setArrayEstados({ label: 'Inactivo', value: from.attributes.estado });\r\n                }\r\n\r\n                // Se deshabilita el cargando\r\n                window.showSpinner(false);\r\n            } else {\r\n\r\n                // Se carga los tipos de expediente por mensajes\r\n                cargarDependencias();\r\n\r\n                // Se deshabilita el cargando\r\n                window.showSpinner(false);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Metodo encargado de cargar las dependencias\r\n    const cargarDependencias = () => {\r\n\r\n        // Se inicializa el trycatch en caso de error de la api\r\n        try {\r\n\r\n            // Se inicializa el array general\r\n            var arrayGeneral = [];\r\n\r\n            // Buscamos los valores del array de los tipos de expedientes\r\n            GenericApi.getGeneric(\"mas-dependencia-origen\").then(\r\n\r\n                // Variable de la api\r\n                datos => {\r\n\r\n                    // Se valida que no haya ningun error\r\n                    if (!datos.error) {\r\n\r\n                        // Se valida que el array tenga mas de 0 elementos\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            // Se recorre el array de los tipo de expediente\r\n                            for (let index = 0; index < datos.data.length; index++) {\r\n\r\n                                // Se captura el valor por posicion\r\n                                const element = datos.data[index];\r\n                                const dependenciaId = parseInt(element.id);\r\n\r\n                                // Se valida que haya informacion enviada por parametros al formulario\r\n                                if (from != null) {\r\n\r\n                                    // Se valida cuando el elemento sea igual al elemento a editar para setear el valor\r\n                                    if (dependenciaId == from.attributes.dependencia.id) {\r\n\r\n                                        // Se setea el valor\r\n                                        setValueDependencias({ label: element.attributes.nombre, value: element.id })\r\n                                    }\r\n                                }\r\n\r\n                                // Se añade al array general\r\n                                arrayGeneral.push({ label: element.attributes.nombre, value: element.id });\r\n                            }\r\n\r\n                            // Se añade el array general al array de los tipos de antecedentes\r\n                            setListadoDependencias(arrayGeneral);\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: \"Tipos de Unidad\", message: datos.error.toString(), show: true, redirect: '/TipoExpedientesMensajes', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de enviar los valores para crear\r\n    const enviarDatos = (valores) => {\r\n\r\n        // Se inicializa el array\r\n        let data;\r\n\r\n        // Se valida que se haya seleccionado una dependencia\r\n        if (!getValueDependencias.value) {\r\n\r\n            // Se redeclara el mensaje\r\n            setMensajeErrorDependencias(\"Debe seleccionar una dependencia\");\r\n            return false;\r\n        } else if (getValueDependencias.value) {\r\n\r\n            // Se redeclara el mensaje en null\r\n            setMensajeErrorDependencias(null);\r\n\r\n            // Se valida que se haya seleccionado un sub tipo de expediente\r\n            if (!getArrayEstados.value) {\r\n\r\n                // Se redeclara el mensaje\r\n                setMensajeErrorEstado(\"Debe seleccionar un estado\");\r\n                return false;\r\n            } else {\r\n\r\n                // Se redeclara el mensaje\r\n                setMensajeErrorEstado(null);\r\n\r\n                // Se inicializa el array a enviar por post\r\n                data = {\r\n                    \"data\": {\r\n                        \"type\": \"mas_tipo_expediente_mensajes\",\r\n                        \"attributes\": {\r\n                            \"nombre\": getNombreTipoUnidad,\r\n                            \"codigo_unidad\": getCodigoUnidad,\r\n                            \"descripcion_unidad\": getDescripcionUnidad,\r\n                            \"id_dependencia\": getValueDependencias.value,\r\n                            \"estado\": getArrayEstados.value\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n\r\n        // Se utiliza el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa la API\r\n        GenericApi.addGeneric('mas_tipo_unidad', data).then(\r\n\r\n            // Variable de API\r\n            datos => {\r\n\r\n                // Se utiliza el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"Tipo Unidad :: Creación\", message: 'Creado con éxito ', show: true, redirect: '/TipoUnidad', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n                    setModalState({ title: \"Tipo Unidad :: Error de creación\", message: datos.error.toString(), show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de actualizar los valores\r\n    const actualizarDatos = (valores) => {\r\n\r\n        // Se inicializa el valor del id\r\n        const id = from.id;\r\n\r\n        // Se inicializa el array\r\n        let data;\r\n\r\n        // Se inicializa el array a enviar por post\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"mas_tipo_expediente_mensajes\",\r\n                \"attributes\": {\r\n                    \"nombre\": getNombreTipoUnidad,\r\n                    \"codigo_unidad\": getCodigoUnidad,\r\n                    \"descripcion_unidad\": getDescripcionUnidad,\r\n                    \"id_dependencia\": getValueDependencias.value,\r\n                    \"estado\": getArrayEstados.value\r\n                }\r\n            }\r\n        };\r\n\r\n        console.log(\"data -> \", data);\r\n\r\n        // Se utiliza el cargando\r\n        window.showSpinner(true);\r\n\r\n        // API Encargada de actualizar \r\n        GenericApi.updateGeneric('mas_tipo_unidad', id, data).then(\r\n\r\n            // Variable de respuesta de la API\r\n            datos => {\r\n\r\n                // Se deshabilita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"Tipo Unidad :: Actualización con éxito\", message: 'Actualizado con éxito ', show: true, redirect: '/TipoUnidad', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Tipo Unidad :: Error de actualización\", message: datos.error.toString(), show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de setear el valor del estado\r\n    const selectChangeEstados = (v) => {\r\n\r\n        // Se carga el tipo de estado en el array del select\r\n        setArrayEstados(v);\r\n    }\r\n\r\n    // Metodo encargado de setear el valor de la dependencia\r\n    const selectChangeListadoDependencias = (v) => {\r\n\r\n        // Se carga el tipo de estado en el array del select\r\n        setValueDependencias(v);\r\n    }\r\n\r\n    // Metodo encargado de validar que no se ingresen caracteres invalidos\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    // Metodo encargado de setear el mensaje\r\n    const changeMensaje = (e) => {\r\n        setNombreTipoUnidad(e.target.value);\r\n    }\r\n\r\n    // Metodo encargado de setear el codigo de la unidad\r\n    const changeCodigoUnidad = (e) => {\r\n        setCodigoUnidad(e.target.value);\r\n    }\r\n\r\n    // Metodo encargado de setear la descripcion de la unidad\r\n    const changeDescripcionUnidad = (e) => {\r\n        setDescripcionUnidad(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<InfoErrorApi error={errorApi} />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    nombreTipoUnidad: '',\r\n                    codigoUnidad: '',\r\n                    descripcionUnidad: '',\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n\r\n                    // Se inicializa el array\r\n                    let errores = {};\r\n\r\n                    // Se valida que tenga valores el nombre\r\n                    if (!getNombreTipoUnidad) {\r\n                        errores.nombreTipoUnidad = 'Debe ingresar un valor';\r\n                    }\r\n\r\n                    // Se valida que exista\r\n                    if (getNombreTipoUnidad) {\r\n\r\n                        // Se valida que contenga caracteres invalidos\r\n                        if (containsSpecialChars(getNombreTipoUnidad)) {\r\n                            errores.nombreTipoUnidad = 'Tiene caracteres inválidos';\r\n                        }\r\n                    }\r\n\r\n                    // Se retorna los errores\r\n                    return errores;\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n\r\n                    if (from != null) {\r\n                        actualizarDatos(valores);\r\n                    } else {\r\n                        enviarDatos(valores);\r\n                    }\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"block block-rounded block-bordered\">\r\n                            <div className=\"block block-themed\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"block-content\">\r\n                                        <nav aria-label=\"breadcrumb\">\r\n                                            <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                                <li class=\"breadcrumb-item\"> <small>Administración</small></li>\r\n                                                <li class=\"breadcrumb-item\"> <small>Maestras</small></li>\r\n                                                <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/TipoExpedienteMensajes`}> <small>Lista mensajes por tipo de expediente</small></Link></li>\r\n                                                <li class=\"breadcrumb-item\"> <small>{from != null ? 'Actualizar' : 'Crear'} mensaje por tipo de expediente</small></li>\r\n                                            </ol>\r\n                                        </nav>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-header\">\r\n                                    <h3 className=\"block-title\">Datos básicos</h3>\r\n                                </div>\r\n                                <div className=\"block-content\">\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"nombreTipoUnidad\">Nombre <span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"input\" type=\"text\" className=\"form-control\" id=\"nombreTipoUnidad\" name=\"nombreTipoUnidad\" value={from != null ? getNombreTipoUnidad : null} onChange={changeMensaje}></Field>\r\n                                                <ErrorMessage name=\"nombreTipoUnidad\" component={() => (<span className=\"text-danger\">{errors.nombreTipoUnidad}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"codigoUnidad\">Código unidad <span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"input\" type=\"text\" className=\"form-control\" id=\"codigoUnidad\" name=\"codigoUnidad\" value={from != null ? getCodigoUnidad : null} onChange={changeCodigoUnidad}></Field>\r\n                                                <ErrorMessage name=\"codigoUnidad\" component={() => (<span className=\"text-danger\">{errors.codigoUnidad}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"descripcionUnidad\">Descripción unidad <span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"input\" type=\"text\" className=\"form-control\" id=\"descripcionUnidad\" name=\"descripcionUnidad\" value={from != null ? getDescripcionUnidad : null} onChange={changeDescripcionUnidad}></Field>\r\n                                                <ErrorMessage name=\"descripcionUnidad\" component={() => (<span className=\"text-danger\">{errors.descripcionUnidad}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"dependencia\">Dependencia: <span className=\"text-danger\">*</span></label>\r\n                                                {getValueDependencias ?\r\n                                                    <Select\r\n                                                        id='dependencia'\r\n                                                        name='dependencia'\r\n                                                        isMulti={false}\r\n                                                        value={getValueDependencias}\r\n                                                        placeholder=\"Selecciona\"\r\n                                                        noOptionsMessage={() => \"Sin datos\"}\r\n                                                        options={getListadoDependencias.map(e =>\r\n                                                            ({ label: e.label, value: e.value })\r\n                                                        )}\r\n                                                        onChange={(e) => selectChangeListadoDependencias(e)}\r\n                                                    />\r\n                                                    : null}\r\n                                                {getMensajeErrorDependencias ?\r\n                                                    <span className=\"text-danger\">{getMensajeErrorDependencias}</span>\r\n                                                    : null}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-3\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"estado\">Estado <span className=\"text-danger\">*</span></label>\r\n                                                {(getArrayEstados) ?\r\n                                                    <Select\r\n                                                        id='estado'\r\n                                                        name='estado'\r\n                                                        isMulti={false}\r\n                                                        value={getArrayEstados}\r\n                                                        placeholder=\"Selecciona\"\r\n                                                        noOptionsMessage={() => \"Sin datos\"}\r\n                                                        options={getListaEstados.map(e =>\r\n                                                            ({ label: e.label, value: e.value })\r\n                                                        )}\r\n                                                        onChange={(e) => selectChangeEstados(e)}\r\n                                                    />\r\n                                                    : null}\r\n                                                {getMensajeErrorEstado ?\r\n                                                    <span className=\"text-danger\">{getMensajeErrorEstado}</span>\r\n                                                    : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right bg-light\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\" >\r\n                                    {from != null ? \"Actualizar\" : \"Crear\"}\r\n                                </button>\r\n                                <Link to={'/TipoUnidad'} className=\"font-size-h5 font-w600\" >\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\" >Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}