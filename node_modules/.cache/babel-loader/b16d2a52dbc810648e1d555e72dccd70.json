{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ValidarClasificacionRadicado\\\\ValidarClasificacionRadicadoForm.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport Spinner from '../../Utils/Spinner';\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\nimport { Link } from \"react-router-dom\";\nimport 'react-datetime/css/react-datetime.css';\nimport 'moment/locale/es';\nimport { useLocation } from 'react-router-dom';\nimport { hasAccess } from '../../../components/Utils/Common';\nimport ClasificacionRadicado from '../ClasificacionRadicado/ClasificacionRadicado';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ValidarClasificacionRadicadoForm() {\n  _s();\n\n  const location = useLocation();\n  const {\n    from,\n    disable\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const [listaTipoRespuesta, setListaTipoRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\n  const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\n  const [getRespuestaValidacionJefe, setRespuestaValidacionJefe] = useState(false);\n  const [getClasificacionActiva, setClasificacionActiva] = useState([]);\n  const [getActivarFormClasificacion, setActivarFormClasificacion] = useState(false);\n  const [getRtaJefe, setRtaJefe] = useState(false);\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getValidacionPorJefe, setValidacionPorJefe] = useState({\n    data: {}\n  });\n  const [getRtaValidacion, setRtaValidacion] = useState(false);\n  const [getParametros, setParametros] = useState({\n    id_proceso_disciplinario: procesoDisciplinarioId,\n    id_etapa: 2,\n    // from.idEtapa\n    reclasificacion: true,\n    route: \"/MisPendientes/\",\n    tipo_clasificacion: global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION\n  });\n  useEffect(() => {\n    async function fetchData() {\n      // Se valida que la clasificación no haya sido validada.\n      validarClasificacion();\n      ParametrosMasApi.getAllTipoRespuesta().then(datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1));\n    }\n\n    fetchData();\n  }, []);\n  /**\r\n   * Se consulta si la clasificación ya fue aceptada en la etapa de Evaluación.\r\n   * @returns \r\n   */\n\n  const validarClasificacion = () => {\n    window.showSpinner(true);\n    const data = {\n      \"data\": {\n        \"type\": \"validacion_clasificado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId\n        }\n      }\n    };\n    return GenericApi.getByDataGeneric(\"validar-clasificacion/get-validar-clasificado/\" + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        // Si la clasificación fue validada.\n        setRtaValidacion(true);\n      }\n\n      listaReclasificacion();\n      jefeDependencia();\n      window.showSpinner(false);\n    });\n  };\n  /**\r\n   * Se trae toda la lista de las reclasificaciones realizadas por el sistema\r\n   */\n\n\n  const listaReclasificacion = () => {\n    GenericApi.getGeneric(\"clasificacion-radicado/get-reclasificacion/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setClasificacionRadicadoLista(datos);\n        setRespuestaClasificacionRadicado(true);\n        validacionPorJefe();\n      } else {\n        setModalState({\n          title: \"Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ValidarClasificadoForm',\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n  /**\r\n   * Se consulta si el usuario que se encuentra en sesión es jefe de la dependencia\r\n   */\n\n\n  const jefeDependencia = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"usuario\",\n        \"attributes\": {\n          \"\": \"\"\n        }\n      }\n    };\n    GenericApi.getByDataGeneric(\"usuario/get-jefe-dependencia\", data).then(datos => {\n      if (!datos.error) {\n        setRtaJefe(true);\n      } else {\n        setRtaJefe(false);\n      }\n    });\n  };\n\n  const validacionPorJefe = () => {\n    GenericApi.getGeneric(\"validar-clasificacion/get-validar-clasificacion-jefe/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setRespuestaValidacionJefe(true);\n        return true;\n      } else {\n        setRespuestaValidacionJefe(false);\n        return false;\n      }\n    });\n  };\n\n  const activarFormClasificacionRadicado = () => {\n    GenericApi.getGeneric(\"activar-registro-fase-validar-clasificacion/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setActivarFormClasificacion(datos.data.attributes.activar_funcionalidad);\n      }\n    });\n  };\n\n  let selectChangeTipoRespuesta = e => {\n    setSelectedTipoRespuesta(e);\n  };\n\n  const selectTipoRespuesta = () => {\n    return listaTipoRespuesta.data.map((tipo_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tipo_respuesta.id,\n          children: tipo_respuesta.attributes.nombre\n        }, tipo_respuesta.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)\n      }, void 0, false);\n    });\n  };\n\n  const aceptarClasificacion = () => {\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"validar_clasificacion\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": 2,\n          \"estado\": true\n        }\n      }\n    };\n    console.log(JSON.stringify(data));\n    GenericApi.addGeneric(\"validar-clasificacion\", data).then(datos => {\n      if (!datos.error) {\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: Validar clasificación\",\n          message: \"Registro Exitoso\",\n          show: true,\n          redirect: '/RamasProceso',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: Validar clasificación\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ValidarClasificadoForm',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n\n      window.showSpinner(false);\n    });\n  }; // COMPONENTE CONFIRMACION TIPO DE CLASIFICADO\n\n\n  const componenteTipoRespuesta = tipo_respuesta => {\n    // CONFIRMACION TIPO DE CLASIFICADO = SI\n    if (tipo_respuesta === 1) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            aceptacion_clasificacion: true\n          },\n          enableReinitialize: true,\n          onSubmit: _ref => {\n            let {\n              resetForm\n            } = _ref;\n            aceptarClasificacion();\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: \"Registrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ValidarClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } /// CONFIRMACION TIPO DE CLASIFICADO = NO\n    else if (tipo_respuesta === 2) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ClasificacionRadicado, {\n          getParametros: getParametros,\n          id: \"cr_componente\",\n          name: \"cr_componente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  const [respuestaClasificacionRadicado, setRespuestaClasificacionRadicado] = useState(false);\n  const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n\n  const listaClasificacionRadicado = () => {\n    if (clasificacionRadicadoLista.data != null && typeof clasificacionRadicadoLista.data != 'undefined') {\n      return clasificacionRadicadoLista.data.map((clasificacion_radicado, i) => {\n        return cargarTabla(clasificacion_radicado, i);\n      });\n    } else {\n      return clasificacionRadicadoLista.map((clasificacion_radicado, i) => {\n        return cargarTabla(clasificacion_radicado, i);\n      });\n    }\n  };\n\n  const cargarTabla = (clasificacion_radicado, i) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [clasificacion_radicado.attributes.estado === 1 ? setClasificacionActiva(1) : null, /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.etapa.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [clasificacion_radicado.attributes.expediente.nombre, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 74\n        }, this), clasificacion_radicado.attributes.id_tipo_expediente == global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? clasificacion_radicado.attributes.tipo_derecho_peticion.nombre : null, clasificacion_radicado.attributes.id_tipo_expediente == global.Constants.TIPOS_EXPEDIENTES.QUEJA ? clasificacion_radicado.attributes.tipo_queja.nombre : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.dependencia.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [clasificacion_radicado.attributes.usuario_registra.nombre, \" \", clasificacion_radicado.attributes.usuario_registra.apellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.estado == 1 ? 'Activo' : 'Inactivo'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.created_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this), !getRtaValidacion && getRtaJefe && disable != true ? /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            uuid: clasificacion_radicado.id,\n            id_clasificacion_radicado: clasificacion_radicado.id,\n            id_proceso_disciplinario: clasificacion_radicado.attributes.id_proceso_disciplinario\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            return errores;\n          },\n          onSubmit: (valores, _ref2) => {\n            let {\n              resetForm\n            } = _ref2;\n            console.log(valores);\n            asignarCaso(valores, false);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-check-square\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 79\n              }, this), \" Aceptar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this);\n  };\n\n  const asignarCaso = (datos, reparto) => {\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"clasificacion_radicado\",\n        \"attributes\": {\n          \"uuid\": datos.uuid,\n          \"id_proceso_disciplinario\": datos.id_proceso_disciplinario,\n          \"id_etapa\": 2,\n          \"id_tipo_expediente\": datos.id_tipo_expediente,\n          \"observaciones\": \"\",\n          \"id_tipo_queja\": null,\n          \"id_termino_respuesta\": null,\n          \"fecha_termino\": null,\n          \"hora_termino\": null,\n          \"gestion_juridica\": false,\n          \"estado\": true,\n          \"id_estado_reparto\": null,\n          \"id_tipo_derecho_peticion\": null,\n          \"oficina_control_interno\": false,\n          \"created_user\": datos.funcionario_registra_name,\n          \"reclasificacion\": null,\n          \"reparto\": reparto\n        }\n      }\n    };\n    GenericApi.addGeneric(\"clasificacion-radicado/asignar-caso-por-jefe\", data).then(datos => {\n      if (!datos.error) {\n        setModalState({\n          title: \"Asignación del proceso disciplinario\",\n          message: \"El proceso disciplinario es asignado a \" + datos.data.attributes['funcionario_actual'].nombre + \" \" + datos.data.attributes['funcionario_actual'].apellido,\n          show: true,\n          redirect: '/MisPendientes'\n        });\n      } else {\n        setModalState({\n          title: \"Asignación del proceso disciplinario\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ValidarClasificacionRadicadoForm',\n          from: {\n            from\n          }\n        }); //setErrorApi(datos.error.toString())\n        //window.showModal(1)\n      }\n\n      window.showSpinner(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w2d_block\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          \"aria-label\": \"breadcrumb\",\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"breadcrumb breadcrumb-alt push\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"breadcrumb-item\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                underline: \"hover\",\n                className: \"text-dark\",\n                to: `/MisPendientes`,\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Mis Pendientes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 134\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 66\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"breadcrumb-item\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                underline: \"hover\",\n                className: \"text-dark\",\n                to: `/RamasProceso/`,\n                state: {\n                  from: from,\n                  disable: disable\n                },\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Ramas del proceso\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 176\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 66\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"breadcrumb-item\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                underline: \"hover\",\n                className: \"text-dark\",\n                \"aria-current\": \"page\",\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from,\n                  disable: disable\n                },\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Validar Clasificaci\\xF3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 210\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 66\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block block-themed\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: disable ? \"block-header bg-dark\" : \"block-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"block-title\",\n              children: [\" SINPROC No \", radicado, \" :: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Validar Clasificaci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 83\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12 text-right my-2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: '/RamasProceso/',\n                title: \"Regresar a ramas del proceso\",\n                state: {\n                  from: from,\n                  disable: disable\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-success\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-backward\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 83\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: hasAccess('EI_ValidarClasificacion', 'Consultar') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [getRespuestaValidacionJefe ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: \"El proceso fue clasificado directamente por el jefe de la dependencia.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 49\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-vcenter\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Etapa\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 449,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Tipo de expediente\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 450,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Dependencia\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 451,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Registrado por\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 452,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Estado\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 453,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Fecha de registro\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 454,\n                        columnNumber: 53\n                      }, this), !getRtaValidacion && getRtaJefe ? /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Asignaci\\xF3n\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 57\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: respuestaClasificacionRadicado ? listaClasificacionRadicado() : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true) : null\n            }, void 0, false), (!getRtaValidacion || getRtaJefe) && disable != true ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"ingresoTipoExpediente\",\n                      children: [\"Confirma la clasificaci\\xF3n del expediente? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 477,\n                        columnNumber: 126\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-control\",\n                      id: \"ingresoTipoExpediente\",\n                      name: \"ingresoTipoExpediente\",\n                      value: selectedTipoRespuesta,\n                      onChange: e => selectChangeTipoRespuesta(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Por favor seleccione\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 480,\n                        columnNumber: 49\n                      }, this), respuestaTipoRespuesta ? selectTipoRespuesta() : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 33\n              }, this), selectedTipoRespuesta === '1' ? componenteTipoRespuesta(1) : '', selectedTipoRespuesta === '2' ? componenteTipoRespuesta(2) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 33\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ValidarClasificacionRadicadoForm, \"73Joh+Pzyv20m41NU++j2KrPERo=\", false, function () {\n  return [useLocation];\n});\n\n_c = ValidarClasificacionRadicadoForm;\nexport default ValidarClasificacionRadicadoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidarClasificacionRadicadoForm\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","Spinner","ParametrosMasApi","Link","useLocation","hasAccess","ClasificacionRadicado","GenericApi","ModalGen","ValidarClasificacionRadicadoForm","location","from","disable","state","radicado","procesoDisciplinarioId","listaTipoRespuesta","setListaTipoRespuesta","data","selectedTipoRespuesta","setSelectedTipoRespuesta","respuestaTipoRespuesta","setRespuestaTipoRespuesta","getRespuestaValidacionJefe","setRespuestaValidacionJefe","getClasificacionActiva","setClasificacionActiva","getActivarFormClasificacion","setActivarFormClasificacion","getRtaJefe","setRtaJefe","modalState","setModalState","title","message","show","getValidacionPorJefe","setValidacionPorJefe","getRtaValidacion","setRtaValidacion","getParametros","setParametros","id_proceso_disciplinario","id_etapa","reclasificacion","route","tipo_clasificacion","global","Constants","TIPO_CLASIFICACION","VALIDAR_CLASIFICACION","fetchData","validarClasificacion","getAllTipoRespuesta","then","datos","error","window","showModal","showSpinner","getByDataGeneric","listaReclasificacion","jefeDependencia","getGeneric","setClasificacionRadicadoLista","setRespuestaClasificacionRadicado","validacionPorJefe","toString","redirect","activarFormClasificacionRadicado","attributes","activar_funcionalidad","selectChangeTipoRespuesta","e","selectTipoRespuesta","map","tipo_respuesta","i","id","nombre","aceptarClasificacion","console","log","JSON","stringify","addGeneric","alert","TIPO_ALERTA","EXITO","ERROR","componenteTipoRespuesta","aceptacion_clasificacion","resetForm","respuestaClasificacionRadicado","clasificacionRadicadoLista","links","meta","listaClasificacionRadicado","clasificacion_radicado","cargarTabla","estado","etapa","expediente","id_tipo_expediente","TIPOS_EXPEDIENTES","DERECHO_PETICION","tipo_derecho_peticion","QUEJA","tipo_queja","dependencia","usuario_registra","apellido","created_at","uuid","id_clasificacion_radicado","valores","errores","asignarCaso","reparto","funcionario_registra_name","target","value"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ValidarClasificacionRadicado/ValidarClasificacionRadicadoForm.js"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport 'moment/locale/es';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { hasAccess } from '../../../components/Utils/Common';\r\nimport ClasificacionRadicado from '../ClasificacionRadicado/ClasificacionRadicado';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\n\r\nfunction ValidarClasificacionRadicadoForm() {\r\n\r\n    \r\n    const location = useLocation()\r\n    const { from , disable } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n    const [listaTipoRespuesta, setListaTipoRespuesta] = useState({ data: {} });\r\n    const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\r\n    const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\r\n    const [getRespuestaValidacionJefe, setRespuestaValidacionJefe] = useState(false);\r\n    const [getClasificacionActiva, setClasificacionActiva] = useState([]);\r\n\r\n    const [getActivarFormClasificacion, setActivarFormClasificacion] = useState(false);\r\n    \r\n\r\n    const [getRtaJefe, setRtaJefe] = useState(false);\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n\r\n\r\n    const [getValidacionPorJefe, setValidacionPorJefe] = useState({ data: {} });\r\n    const [getRtaValidacion, setRtaValidacion] = useState(false);\r\n\r\n\r\n    const [getParametros, setParametros] = useState({\r\n        id_proceso_disciplinario: procesoDisciplinarioId,\r\n        id_etapa: 2, // from.idEtapa\r\n        reclasificacion: true,\r\n        route: \"/MisPendientes/\",\r\n        tipo_clasificacion: global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION,\r\n    });\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            // Se valida que la clasificación no haya sido validada.\r\n            validarClasificacion()\r\n\r\n            ParametrosMasApi.getAllTipoRespuesta().then(\r\n                datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1)\r\n            )\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    /**\r\n     * Se consulta si la clasificación ya fue aceptada en la etapa de Evaluación.\r\n     * @returns \r\n     */\r\n    const validarClasificacion = () => {\r\n\r\n        window.showSpinner(true);\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"validacion_clasificado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            GenericApi.getByDataGeneric(\"validar-clasificacion/get-validar-clasificado/\"+procesoDisciplinarioId, data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n                        // Si la clasificación fue validada.\r\n                        setRtaValidacion(true)\r\n                    }\r\n\r\n                    listaReclasificacion();\r\n                    jefeDependencia();\r\n                    window.showSpinner(false);\r\n                   \r\n                }\r\n            )  \r\n        )\r\n    }\r\n\r\n    /**\r\n     * Se trae toda la lista de las reclasificaciones realizadas por el sistema\r\n     */\r\n    const listaReclasificacion = () => {\r\n\r\n        GenericApi.getGeneric(\"clasificacion-radicado/get-reclasificacion/\"+procesoDisciplinarioId).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setClasificacionRadicadoLista(datos)\r\n                    setRespuestaClasificacionRadicado(true)\r\n                    validacionPorJefe()\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ValidarClasificadoForm', from: {from} });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Se consulta si el usuario que se encuentra en sesión es jefe de la dependencia\r\n     */\r\n    const jefeDependencia = () => {\r\n\r\n        const data = {\r\n            \"data\":{\r\n            \"type\":\"usuario\",\r\n            \"attributes\":{\r\n                \"\":\"\"}\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"usuario/get-jefe-dependencia\", data).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setRtaJefe(true)\r\n                }\r\n                else {\r\n                    setRtaJefe(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const validacionPorJefe = () => {\r\n\r\n        GenericApi.getGeneric(\"validar-clasificacion/get-validar-clasificacion-jefe/\"+procesoDisciplinarioId).then(\r\n\r\n            datos => {\r\n                if (!datos.error) { \r\n                    setRespuestaValidacionJefe(true)\r\n                    return true;\r\n                }\r\n                else{\r\n                    setRespuestaValidacionJefe(false)\r\n                    return false;\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const activarFormClasificacionRadicado = () => {\r\n        \r\n        GenericApi.getGeneric(\"activar-registro-fase-validar-clasificacion/\"+procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setActivarFormClasificacion(datos.data.attributes.activar_funcionalidad);  \r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    let selectChangeTipoRespuesta = (e) => {\r\n        setSelectedTipoRespuesta(e);\r\n    }\r\n\r\n    const selectTipoRespuesta = () => {\r\n        return (\r\n            listaTipoRespuesta.data.map((tipo_respuesta, i) => {\r\n                return (\r\n                    <>\r\n                        <option key={tipo_respuesta.id} value={tipo_respuesta.id}>{tipo_respuesta.attributes.nombre}</option>\r\n                    </>  \r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const aceptarClasificacion = () => {\r\n        \r\n        window.showSpinner(true);\r\n\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"validar_clasificacion\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": 2,\r\n                    \"estado\": true,\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(JSON.stringify(data));\r\n\r\n        GenericApi.addGeneric(\"validar-clasificacion\",data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"SINPROC No \"+radicado+\" :: Validar clasificación\" , message: \"Registro Exitoso\", show: true, redirect: '/RamasProceso',from: {from}, alert: global.Constants.TIPO_ALERTA.EXITO});\r\n                }\r\n                else {\r\n                    setModalState({ title: \"SINPROC No \"+radicado+\" :: Validar clasificación\", message: datos.error.toString(), show: true, redirect: '/ValidarClasificadoForm', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n     // COMPONENTE CONFIRMACION TIPO DE CLASIFICADO\r\n     const componenteTipoRespuesta = (tipo_respuesta) => {\r\n\r\n        // CONFIRMACION TIPO DE CLASIFICADO = SI\r\n        if (tipo_respuesta === 1) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            aceptacion_clasificacion: true,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        onSubmit={({ resetForm }) => {\r\n                            aceptarClasificacion();\r\n                        }}\r\n                        >\r\n\r\n                        <Form>\r\n                            <div className=\"block-content block-content-full text-right\">\r\n\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n\r\n                                <Link to={`/ValidarClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n                        </Form>\r\n\r\n                    </Formik>\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n        /// CONFIRMACION TIPO DE CLASIFICADO = NO\r\n        else if (tipo_respuesta === 2) {\r\n            return (\r\n                <>\r\n                    <ClasificacionRadicado getParametros={getParametros} id=\"cr_componente\" name=\"cr_componente\" /> \r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const [respuestaClasificacionRadicado, setRespuestaClasificacionRadicado] = useState(false);\r\n    const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const listaClasificacionRadicado = () => {\r\n\r\n        if (clasificacionRadicadoLista.data != null && typeof (clasificacionRadicadoLista.data) != 'undefined') {\r\n            return (\r\n\r\n                clasificacionRadicadoLista.data.map((clasificacion_radicado, i) => {\r\n                    return (\r\n                        cargarTabla(clasificacion_radicado, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                clasificacionRadicadoLista.map((clasificacion_radicado, i) => {\r\n                    return (\r\n                        cargarTabla(clasificacion_radicado, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const cargarTabla = (clasificacion_radicado, i) => {\r\n        \r\n        return (\r\n            <tr>\r\n                {clasificacion_radicado.attributes.estado===1?(setClasificacionActiva(1)):null}\r\n\r\n                <td>{clasificacion_radicado.attributes.etapa.nombre}</td>\r\n                <td>{clasificacion_radicado.attributes.expediente.nombre}<br/>\r\n                    {clasificacion_radicado.attributes.id_tipo_expediente == global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION?clasificacion_radicado.attributes.tipo_derecho_peticion.nombre:null}\r\n                    {clasificacion_radicado.attributes.id_tipo_expediente == global.Constants.TIPOS_EXPEDIENTES.QUEJA?clasificacion_radicado.attributes.tipo_queja.nombre:null}\r\n                </td>\r\n                <td>{clasificacion_radicado.attributes.dependencia.nombre}</td>\r\n                <td>{clasificacion_radicado.attributes.usuario_registra.nombre} {clasificacion_radicado.attributes.usuario_registra.apellido}</td>\r\n                <td>{clasificacion_radicado.attributes.estado==1?'Activo':'Inactivo'}</td>\r\n                <td>{clasificacion_radicado.attributes.created_at}</td>\r\n\r\n                {(!getRtaValidacion && getRtaJefe && disable != true) ? (                                       \r\n                    <td>\r\n                    <Formik\r\n                        initialValues={{\r\n                            uuid: clasificacion_radicado.id,\r\n                            id_clasificacion_radicado: clasificacion_radicado.id,\r\n                            id_proceso_disciplinario: clasificacion_radicado.attributes.id_proceso_disciplinario\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            console.log(valores);\r\n                            asignarCaso(valores, false);\r\n                        }}>\r\n                        <Form>\r\n                            <button type=\"submit\" className=\"btn btn-primary\"><i class=\"fas fa-check-square\"></i> Aceptar</button>\r\n                        </Form>\r\n                    </Formik>\r\n                </td>):null\r\n                } \r\n            </tr>   \r\n        )\r\n    }\r\n\r\n\r\n    const asignarCaso = (datos, reparto) => {\r\n\r\n        window.showSpinner(true);\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"uuid\": datos.uuid,\r\n                    \"id_proceso_disciplinario\": datos.id_proceso_disciplinario,\r\n                    \"id_etapa\": 2,\r\n                    \"id_tipo_expediente\": datos.id_tipo_expediente,\r\n                    \"observaciones\": \"\",\r\n                    \"id_tipo_queja\": null,\r\n                    \"id_termino_respuesta\": null,\r\n                    \"fecha_termino\": null,\r\n                    \"hora_termino\": null,\r\n                    \"gestion_juridica\": false,\r\n                    \"estado\": true,\r\n                    \"id_estado_reparto\": null,\r\n                    \"id_tipo_derecho_peticion\": null,\r\n                    \"oficina_control_interno\": false,\r\n                    \"created_user\": datos.funcionario_registra_name,\r\n                    \"reclasificacion\": null,\r\n                    \"reparto\": reparto\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.addGeneric(\"clasificacion-radicado/asignar-caso-por-jefe\", data).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"Asignación del proceso disciplinario\", message: \"El proceso disciplinario es asignado a \"+datos.data.attributes['funcionario_actual'].nombre +\" \"+ datos.data.attributes['funcionario_actual'].apellido, show: true, redirect: '/MisPendientes' });\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Asignación del proceso disciplinario\", message: datos.error.toString(), show: true, redirect: '/ValidarClasificacionRadicadoForm', from: {from} });\r\n                    //setErrorApi(datos.error.toString())\r\n                    //window.showModal(1)\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <>\r\n           {<Spinner />}\r\n           <ModalGen data={modalState} />\r\n            \r\n            <div className=\"row\">\r\n\r\n            \r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from , disable: disable }}><small>Ramas del proceso</small></Link></li>\r\n                                <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" aria-current=\"page\" to={`/ClasificacionRadicadoLista/`} state={{ from: from , disable: disable }}><small>Validar Clasificación</small></Link></li>\r\n                             </ol>\r\n                        </nav>\r\n                    </div>\r\n                \r\n\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"block block-themed\">\r\n                        <div className={(disable ? (\"block-header bg-dark\") : \"block-header\")}>\r\n                            <h3 className=\"block-title\"> SINPROC No {radicado} :: <strong>Validar Clasificación</strong></h3>\r\n                        </div>\r\n\r\n                        <div className=\"block-content\">\r\n                        <div className='col-md-12 text-right my-2'>\r\n\r\n                            <Link to={'/RamasProceso/'} title='Regresar a ramas del proceso' state={{ from: from , disable: disable }}>\r\n                                <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                            </Link>\r\n\r\n                        </div>\r\n                            <>\r\n                                {\r\n                                    (hasAccess('EI_ValidarClasificacion', 'Consultar')) ? (\r\n\r\n                                        <>\r\n                                        {\r\n                                            (getRespuestaValidacionJefe)?(\r\n\r\n                                                <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                                    <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                                    <p className=\"mb-0\">El proceso fue clasificado directamente por el jefe de la dependencia.</p>\r\n                                                </div>\r\n\r\n                                            ):null\r\n                                        }\r\n\r\n                                        <table className=\"table table-vcenter\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Etapa</th>\r\n                                                    <th>Tipo de expediente</th>\r\n                                                    <th>Dependencia</th>\r\n                                                    <th>Registrado por</th>\r\n                                                    <th>Estado</th>\r\n                                                    <th>Fecha de registro</th>\r\n                                                    {(!getRtaValidacion && getRtaJefe) ? (\r\n                                                        <th>Asignación</th>\r\n                                                    ):null}\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {respuestaClasificacionRadicado ? listaClasificacionRadicado() : null}\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                        </>\r\n                                    ) : null\r\n\r\n                                }\r\n                            </>\r\n\r\n                            {((!getRtaValidacion || getRtaJefe) && disable!=true ?(\r\n\r\n                                <div className=\"block-content\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"ingresoTipoExpediente\">Confirma la clasificación del expediente? <span className=\"text-danger\">*</span></label>\r\n                                            <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                                                value={selectedTipoRespuesta} onChange={e => selectChangeTipoRespuesta(e.target.value)}>\r\n                                                <option value=\"\">Por favor seleccione</option>\r\n                                                {respuestaTipoRespuesta ? selectTipoRespuesta() : null}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/*SI APLICA RECLASIFIFCACION*/}\r\n                                {selectedTipoRespuesta === '1' ? componenteTipoRespuesta(1) : ''}\r\n                                {/*NO APLICA RECLASIFIFCACION*/}\r\n                                {selectedTipoRespuesta === '2' ? componenteTipoRespuesta(2) : ''}\r\n\r\n\r\n                                </div>\r\n\r\n                            ):null)\r\n\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\nexport default ValidarClasificacionRadicadoForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}