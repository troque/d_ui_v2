{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Actuaciones\\\\AceptaRechazaAnulacion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { Link } from \"react-router-dom\";\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { useLocation } from 'react-router-dom';\nimport { getUser } from '../../../components/Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AceptaRechazaAnulacion() {\n  _s();\n\n  const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\n  const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\n  const [getUsuarioName, setUsuarioName] = useState(\"\");\n  const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getNombreUsuario, setNombreUsuario] = useState(\"\");\n  const [getIdActuacion, setIdActuacion] = useState(\"\");\n  const [getIdDependenciaAtiendaAnulaciones, setIdDependenciaAtiendaAnulaciones] = useState(0);\n  const [getIdDependenciaSolicitante, setIdDependenciaSolicitante] = useState(\"\");\n  const location = useLocation();\n  const {\n    from,\n    selected_id_etapa,\n    id,\n    nombre,\n    estadoActualActuacion,\n    boton,\n    solicitante\n  } = location.state;\n  const [getNombreProceso, setNombreProceso] = useState('');\n  const [getRoutes, setRoutes] = useState({\n    ver_detalle: \"/ActuacionesVer/\" + from.procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/1\"\n  });\n  useEffect(() => {\n    async function fetchData() {\n      setNombreUsuario(getUser().nombre);\n      nombreProceso();\n    }\n\n    fetchData();\n  }, []);\n\n  const nombreProceso = () => {\n    GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setNombreProceso(datos.data.attributes.nombre);\n        obtenerParametros();\n        obtenerDatosUsuarioSolicitante();\n        obtenerTodosLosDatosDeLaActuacion();\n      }\n    });\n  };\n\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      }; //buscamos el parametro\n\n      GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          setModalState({\n            title: \"Antecedentes\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/AntecedentesForm',\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {// console.log(error);\n    }\n  };\n\n  const enviarDatos = valores => {\n    window.showSpinner(true);\n    let data = {\n      \"data\": {\n        \"type\": \"transacciones\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\n          \"id_dependencia_origen\": getIdDependenciaSolicitante,\n          \"usuario_a_remitir\": solicitante,\n          \"descripcion_a_remitir\": valores.informacion,\n          \"id_etapa\": 3\n        }\n      }\n    };\n    GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(datos => {\n      if (!datos.error) {\n        guardarTrazabilidadActuaciones();\n        setModalState({\n          title: \"SINPROC No \" + from.radicado + \" :: Enviar al solicitante de inactivación\",\n          message: 'El proceso con radicado: ' + from.radicado + ' fue asignado al usuario: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ')  de la dependencia: ' + getUsuarioDependenciaNombre + '',\n          show: true,\n          redirect: '/MisPendientes',\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        setModalState({\n          title: \"SINPROC No \" + from.radicado + \" :: Enviar al solicitante de inactivación\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/AntecedentesLista',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n\n      window.showSpinner(false);\n    });\n  };\n\n  const obtenerDatosUsuarioSolicitante = () => {\n    //buscamos el parametro\n    GenericApi.getGeneric(\"usuario/get-usuario-por-name/\" + solicitante).then(datos => {\n      if (!datos.error) {\n        if (datos[\"data\"].length > 0) {\n          setIdDependenciaSolicitante(datos.data[0].attributes.id_dependencia);\n          datosDelUsuarioARemitir(datos.data[0].attributes.name);\n        }\n      } else {}\n    });\n  };\n\n  const guardarTrazabilidadActuaciones = () => {\n    let data;\n\n    if (boton == \"Acepta\") {\n      cambiarEstadoDeActuacionAInactivo();\n      data = {\n        \"data\": {\n          \"type\": \"trazabilidad-actuaciones\",\n          \"attributes\": {\n            \"uuid_actuacion\": id,\n            \"id_estado_actuacion\": 7,\n            \"observacion\": \"Solicitud de anulación aprobada\",\n            \"estado\": 1\n          }\n        }\n      };\n    } else {\n      cambiarEstadoDeActuacionAInactivo();\n      data = {\n        \"data\": {\n          \"type\": \"trazabilidad-actuaciones\",\n          \"attributes\": {\n            \"uuid_actuacion\": id,\n            \"id_estado_actuacion\": 8,\n            \"observacion\": \"Solicitud de anulación rechazada\",\n            \"estado\": 1\n          }\n        }\n      };\n    }\n\n    GenericApi.addGeneric('trazabilidad-actuaciones', data);\n  };\n\n  const cambiarEstadoDeActuacionAInactivo = () => {\n    let data;\n\n    if (boton == \"Acepta\") {\n      data = {\n        \"data\": {\n          \"type\": \"actuaciones\",\n          \"attributes\": {\n            \"id_actuacion\": getIdActuacion,\n            \"usuario_accion\": getNombreUsuario,\n            \"id_estado_actuacion\": 7,\n            \"documento_ruta\": null,\n            \"estado\": 0,\n            \"fileBase64\": null,\n            \"nombre_archivo\": null,\n            \"ext\": null,\n            \"peso\": null,\n            \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\n            \"id_etapa\": selected_id_etapa\n          }\n        }\n      };\n    } else {\n      data = {\n        \"data\": {\n          \"type\": \"actuaciones\",\n          \"attributes\": {\n            \"id_actuacion\": getIdActuacion,\n            \"usuario_accion\": getNombreUsuario,\n            \"id_estado_actuacion\": 8,\n            \"documento_ruta\": null,\n            \"estado\": 1,\n            \"fileBase64\": null,\n            \"nombre_archivo\": null,\n            \"ext\": null,\n            \"peso\": null,\n            \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\n            \"id_etapa\": selected_id_etapa\n          }\n        }\n      };\n    }\n\n    GenericApi.updateGeneric(\"actuaciones\", id, data);\n  };\n\n  const obtenerTodosLosDatosDeLaActuacion = () => {\n    GenericApi.getGeneric(\"actuaciones/\" + id).then(datos => {\n      if (!datos.error) {\n        setIdActuacion(datos.data.attributes.id_actuacion);\n      } else {}\n    });\n  };\n\n  const datosDelUsuarioARemitir = name => {\n    GenericApi.getGeneric('usuario/get-usuario-por-name/' + name).then(datos => {\n      if (!datos.error) {\n        // console.log(datos);\n        setUsuarioNombre(datos.data[0].attributes.nombre);\n        setUsuarioApellido(datos.data[0].attributes.apellido);\n        setUsuarioName(datos.data[0].attributes.name);\n        setUsuarioDependenciaNombre(datos.data[0].attributes.dependencia.nombre);\n      } else {}\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        informacion: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        setCountTextArea(valores.informacion.length);\n        let errores = {};\n\n        if (!valores.informacion) {\n          errores.informacion = 'Debe ingresar un valor';\n        } else if (valores.informacion.length <= getMinimoTextArea) {\n          errores.informacion = 'La descripción debe tener almenos ' + getMinimoTextArea + ' caracteres';\n        }\n\n        if (valores.informacion) {\n          if (containsSpecialChars(valores.informacion)) errores.informacion = 'Tiene caracteres inválidos';\n        }\n\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        enviarDatos(valores);\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w2d_block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"breadcrumb\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"breadcrumb breadcrumb-alt push\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/MisPendientes`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Mis Pendientes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 138\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/RamasProceso/`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Ramas del proceso\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 138\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/ActuacionesLista/`,\n                    state: {\n                      from: from,\n                      selected_id_etapa: selected_id_etapa\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Actuaciones\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 203\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: getRoutes.ver_detalle,\n                    state: {\n                      from: from,\n                      selected_id_etapa: selected_id_etapa,\n                      id: id,\n                      nombre: nombre,\n                      estadoActualActuacion: estadoActualActuacion\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Actuaci\\xF3n \", nombre]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 274\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [boton == \"Acepta\" ? \"Aceptar\" : \"Rechazar\", \" Inactivaci\\xF3n\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-themed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: [\"Actuaci\\xF3n \", nombre, \" :: \", boton, \" Solicitud de Inactivaci\\xF3n \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"informacion\",\n                      children: [\"Comentarios de \", boton == \"Acepta\" ? \"aprobación\" : \"rechazo\", \" a la solicitud de inactivaci\\xF3n \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 325,\n                        columnNumber: 167\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      as: \"textarea\",\n                      className: \"form-control\",\n                      id: \"informacion\",\n                      name: \"informacion\",\n                      rows: \"6\",\n                      maxLength: getMaximoTextArea,\n                      minLength: getMinimoTextArea\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-right\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-primary\",\n                        children: [countTextArea, \" / \", getMaximoTextArea]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 329,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"informacion\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.informacion\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 331,\n                        columnNumber: 96\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-rounded btn-primary\",\n                  children: \"Aceptar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: getRoutes.ver_detalle,\n                  state: {\n                    from: from,\n                    selected_id_etapa: selected_id_etapa,\n                    id: id,\n                    nombre: nombre,\n                    estadoActualActuacion: estadoActualActuacion\n                  },\n                  className: \"font-size-h5 font-w600\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-rounded btn-outline-primary\",\n                    children: \"Cancelar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AceptaRechazaAnulacion, \"GQMqJQLlWLImdr95353Or0C5XTo=\", false, function () {\n  return [useLocation];\n});\n\n_c = AceptaRechazaAnulacion;\nexport default AceptaRechazaAnulacion;\n\nvar _c;\n\n$RefreshReg$(_c, \"AceptaRechazaAnulacion\");","map":{"version":3,"names":["React","useEffect","useState","Spinner","ModalGen","ErrorMessage","Field","Form","Formik","Link","GenericApi","useLocation","getUser","AceptaRechazaAnulacion","getUsuarioNombre","setUsuarioNombre","getUsuarioApellido","setUsuarioApellido","getUsuarioName","setUsuarioName","getUsuarioDependenciaNombre","setUsuarioDependenciaNombre","getModalState","setModalState","title","message","show","countTextArea","setCountTextArea","getMinimoTextArea","setMinimoTextArea","getMaximoTextArea","setMaximoTextArea","getNombreUsuario","setNombreUsuario","getIdActuacion","setIdActuacion","getIdDependenciaAtiendaAnulaciones","setIdDependenciaAtiendaAnulaciones","getIdDependenciaSolicitante","setIdDependenciaSolicitante","location","from","selected_id_etapa","id","nombre","estadoActualActuacion","boton","solicitante","state","getNombreProceso","setNombreProceso","getRoutes","setRoutes","ver_detalle","procesoDisciplinarioId","fetchData","nombreProceso","getByIdGeneric","then","datos","error","data","attributes","obtenerParametros","obtenerDatosUsuarioSolicitante","obtenerTodosLosDatosDeLaActuacion","containsSpecialChars","str","result","global","Constants","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","getByDataGeneric","length","filter","map","filteredName","toString","redirect","alert","TIPO_ALERTA","ERROR","enviarDatos","valores","window","showSpinner","informacion","addGeneric","guardarTrazabilidadActuaciones","radicado","EXITO","getGeneric","id_dependencia","datosDelUsuarioARemitir","name","cambiarEstadoDeActuacionAInactivo","updateGeneric","id_actuacion","apellido","dependencia","errores","resetForm","errors"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Actuaciones/AceptaRechazaAnulacion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Link } from \"react-router-dom\";\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getUser } from '../../../components/Utils/Common';\r\n\r\nfunction AceptaRechazaAnulacion() {\r\n\r\n    const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\r\n    const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\r\n    const [getUsuarioName, setUsuarioName] = useState(\"\");\r\n    const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\r\n\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [getIdActuacion, setIdActuacion] = useState(\"\");    \r\n    const [getIdDependenciaAtiendaAnulaciones, setIdDependenciaAtiendaAnulaciones] = useState(0);\r\n    const [getIdDependenciaSolicitante, setIdDependenciaSolicitante] = useState(\"\");\r\n    const location = useLocation()\r\n    const { from , selected_id_etapa , id , nombre , estadoActualActuacion , boton , solicitante} = location.state;\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    const [getRoutes, setRoutes] = useState({\r\n        ver_detalle: \"/ActuacionesVer/\" + from.procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/1\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setNombreUsuario(getUser().nombre);\r\n            nombreProceso();\r\n            \r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const nombreProceso = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\",from.procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                    obtenerParametros();\r\n                    obtenerDatosUsuarioSolicitante();\r\n                    obtenerTodosLosDatosDeLaActuacion();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    const obtenerParametros = () => {\r\n        try {\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: \"Antecedentes\", message: datos.error.toString(), show: true, redirect: '/AntecedentesForm', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n        }\r\n    }\r\n\r\n    const enviarDatos = (valores) => {\r\n            window.showSpinner(true);\r\n            let data = {\r\n                \"data\": {\r\n                    \"type\": \"transacciones\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                        \"id_dependencia_origen\": getIdDependenciaSolicitante,\r\n                        \"usuario_a_remitir\": solicitante,\r\n                        \"descripcion_a_remitir\": valores.informacion,\r\n                        \"id_etapa\": 3\r\n                    }\r\n                }\r\n            }\r\n\r\n            GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        guardarTrazabilidadActuaciones();\r\n                        setModalState({ title: \"SINPROC No \" + from.radicado + \" :: Enviar al solicitante de inactivación\", message: 'El proceso con radicado: ' + from.radicado + ' fue asignado al usuario: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ')  de la dependencia: ' + getUsuarioDependenciaNombre + '', show: true, redirect: '/MisPendientes', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n    \r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + from.radicado + \" :: Enviar al solicitante de inactivación\", message: datos.error.toString(), show: true, redirect: '/AntecedentesLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                    window.showSpinner(false);\r\n                }\r\n            )\r\n    }\r\n\r\n    const obtenerDatosUsuarioSolicitante = () =>{\r\n        //buscamos el parametro\r\n        GenericApi.getGeneric(\"usuario/get-usuario-por-name/\"+solicitante).then(\r\n            datos => {\r\n\r\n                if (!datos.error) {\r\n                    \r\n                    if (datos[\"data\"].length > 0) {\r\n                       setIdDependenciaSolicitante(datos.data[0].attributes.id_dependencia);\r\n                       datosDelUsuarioARemitir(datos.data[0].attributes.name);\r\n                    }\r\n                } else {\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const guardarTrazabilidadActuaciones = () => {\r\n        let data;\r\n        if(boton == \"Acepta\"){\r\n            cambiarEstadoDeActuacionAInactivo();\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"trazabilidad-actuaciones\",\r\n                    \"attributes\": {\r\n                        \"uuid_actuacion\": id,\r\n                        \"id_estado_actuacion\": 7,\r\n                        \"observacion\": \"Solicitud de anulación aprobada\",\r\n                        \"estado\": 1\r\n                    }\r\n                }\r\n            }\r\n\r\n        }else{\r\n            cambiarEstadoDeActuacionAInactivo();\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"trazabilidad-actuaciones\",\r\n                    \"attributes\": {\r\n                        \"uuid_actuacion\": id,\r\n                        \"id_estado_actuacion\": 8,\r\n                        \"observacion\": \"Solicitud de anulación rechazada\",\r\n                        \"estado\": 1\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        \r\n\r\n        GenericApi.addGeneric('trazabilidad-actuaciones', data);\r\n    }\r\n\r\n    const cambiarEstadoDeActuacionAInactivo = () => {\r\n        let data;\r\n        if(boton == \"Acepta\"){\r\n\r\n            data = {\r\n                \"data\":{\r\n                    \"type\":\"actuaciones\",\r\n                        \"attributes\":{\r\n                            \"id_actuacion\":getIdActuacion,\r\n                            \"usuario_accion\":getNombreUsuario,\r\n                            \"id_estado_actuacion\": 7,\r\n                            \"documento_ruta\": null,\r\n                            \"estado\": 0,\r\n                            \"fileBase64\": null,\r\n                            \"nombre_archivo\": null,\r\n                            \"ext\" : null,\r\n                            \"peso\": null,\r\n                            \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                            \"id_etapa\": selected_id_etapa\r\n                  }\r\n               }\r\n            }\r\n\r\n        }else{\r\n            data = {\r\n                \"data\":{\r\n                    \"type\":\"actuaciones\",\r\n                        \"attributes\":{\r\n                            \"id_actuacion\":getIdActuacion,\r\n                            \"usuario_accion\":getNombreUsuario,\r\n                            \"id_estado_actuacion\": 8,\r\n                            \"documento_ruta\": null,\r\n                            \"estado\": 1,\r\n                            \"fileBase64\": null,\r\n                            \"nombre_archivo\": null,\r\n                            \"ext\" : null,\r\n                            \"peso\": null,\r\n                            \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                            \"id_etapa\": selected_id_etapa\r\n                  }\r\n               }\r\n            }\r\n\r\n        }\r\n        GenericApi.updateGeneric(\"actuaciones\",id,data);\r\n\r\n        \r\n    }\r\n\r\n    const obtenerTodosLosDatosDeLaActuacion = () => {\r\n        GenericApi.getGeneric(\"actuaciones/\"+id).then(\r\n            datos => {\r\n\r\n                if (!datos.error) {\r\n                    setIdActuacion(datos.data.attributes.id_actuacion);\r\n                } else {\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const datosDelUsuarioARemitir = (name) => {\r\n\r\n        \r\n        GenericApi.getGeneric('usuario/get-usuario-por-name/'+name).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    // console.log(datos);\r\n                    setUsuarioNombre(datos.data[0].attributes.nombre);\r\n                    setUsuarioApellido(datos.data[0].attributes.apellido);\r\n                    setUsuarioName(datos.data[0].attributes.name);\r\n                    setUsuarioDependenciaNombre(datos.data[0].attributes.dependencia.nombre);\r\n                }\r\n                else {\r\n                \r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    informacion: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    setCountTextArea(valores.informacion.length)\r\n                    let errores = {}\r\n                    if (!valores.informacion) {\r\n                        errores.informacion = 'Debe ingresar un valor';\r\n                    }\r\n                    else if (valores.informacion.length <= getMinimoTextArea) {\r\n                        errores.informacion = 'La descripción debe tener almenos ' + getMinimoTextArea + ' caracteres';\r\n                    }\r\n                    if (valores.informacion) {\r\n                        if (containsSpecialChars(valores.informacion))\r\n                            errores.informacion = 'Tiene caracteres inválidos';\r\n                    }\r\n\r\n                    return errores;\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`}><small>Ramas del proceso</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}><small>Actuaciones</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={getRoutes.ver_detalle} state={{ from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion }}><small>Actuación {nombre}</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <small>{boton == \"Acepta\" ? \"Aceptar\" : \"Rechazar\"} Inactivación</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">Actuación {nombre} :: {boton} Solicitud de Inactivación </h3>\r\n                            </div>\r\n                            <div className=\"block-content\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"informacion\">Comentarios de {boton == \"Acepta\" ? \"aprobación\" : \"rechazo\"} a la solicitud de inactivación <span className=\"text-danger\">*</span></label>\r\n                                            <Field as=\"textarea\" className=\"form-control\" id=\"informacion\" name=\"informacion\" rows=\"6\"\r\n                                                maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                            <div className=\"text-right\">\r\n                                                <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                            </div>\r\n                                            <ErrorMessage name=\"informacion\" component={() => (<span className=\"text-danger\">{errors.informacion}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\" >Aceptar</button>\r\n                                    <Link to={getRoutes.ver_detalle} state={{ from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion }}  className=\"font-size-h5 font-w600\" >\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\" >Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default AceptaRechazaAnulacion;"],"mappings":"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"},"metadata":{},"sourceType":"module"}