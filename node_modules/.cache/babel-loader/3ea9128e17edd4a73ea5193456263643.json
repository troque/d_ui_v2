{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Transacciones\\\\EnviarAlAnteriorUsuario.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useLocation } from 'react-router-dom';\nimport Spinner from '../../Utils/Spinner';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EnviarAlAnteriorUsuario() {\n  _s();\n\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getNombreAnterior, setNombreAnterior] = useState(\"\");\n  const [getIdProcesoDisciplinario, setIdProcesoDisciplinario] = useState(from.procesoDisciplinarioId);\n  const [getDependenciaOrigen, setDependenciaOrigen] = useState(\"\");\n  const [getUsuarioSleccionado, setUsuarioSleccionado] = useState(\"\");\n  const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\n  const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\n  const [getUsuarioName, setUsuarioName] = useState(\"\");\n  const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\"); //Funcion principal\n\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      obtenerParametros();\n      obtenemosElUltimoUsuario();\n    }\n\n    fetchData();\n  }, []); // Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisión-\n\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  } // consultamos la cantidad maxima de caracteres para el textarea\n\n\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      }; //buscamos el parametro\n\n      GenericApi.getByDataGeneric('parametro/parametro-nombre', data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          window.showModal(1);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const enviarDatos = valores => {\n    console.log(getIdProcesoDisciplinario);\n    console.log(getDependenciaOrigen);\n    console.log(getUsuarioName);\n    console.log(valores.informacion);\n    window.showSpinner(true);\n    const data = {\n      \"data\": {\n        \"type\": \"transacciones\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": getIdProcesoDisciplinario,\n          \"id_dependencia_origen\": getDependenciaOrigen,\n          \"usuario_a_remitir\": getUsuarioName,\n          \"descripcion_a_remitir\": valores.informacion,\n          \"id_etapa\": 3\n        }\n      }\n    };\n    console.log(data);\n    GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(datos => {\n      if (!datos.error) {\n        setModalState({\n          title: \"SINPROC No \" + from.radicado + \" :: Enviar al anterior usuario\",\n          message: 'El proceso con radicado: ' + from.radicado + ' fue asignado al usuario: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ')  de la dependencia: ' + getUsuarioDependenciaNombre + '',\n          show: true,\n          redirect: '/MisPendientes',\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        setModalState({\n          title: \"SINPROC No \" + from.radicado + \" :: Enviar al anterior usuario\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/AntecedentesLista',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n\n      window.showSpinner(false);\n    });\n  };\n\n  const obtenemosElUltimoUsuario = () => {\n    if (getIdProcesoDisciplinario != null) {\n      const data = {\n        \"data\": {\n          \"type\": \"log_proceso_disciplinario\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": getIdProcesoDisciplinario\n          }\n        }\n      };\n      GenericApi.getByDataGeneric('log-proceso-disciplinario/get-log-etapa/' + getIdProcesoDisciplinario, data).then(datos => {\n        if (!datos.error) {\n          const found = datos.data.find(element => element.attributes.tipo_trasaccion.id == 5);\n\n          if (found == null) {\n            setModalState({\n              title: \"SINPROC No \" + from.radicado + \" :: Enviar al anterior usuario\",\n              message: 'No existe un usuario anterior para remitir el proceso',\n              show: true,\n              redirect: '/MisPendientes',\n              alert: global.Constants.TIPO_ALERTA.ERROR\n            });\n          } else {\n            setDependenciaOrigen(found.attributes.dependencia_origen.id);\n            setUsuarioNombre(found.attributes.funcionario_registra.nombre);\n            setUsuarioApellido(found.attributes.funcionario_registra.apellido);\n            setUsuarioName(found.attributes.funcionario_registra.name);\n            setUsuarioDependenciaNombre(found.attributes.funcionario_registra.dependencia.nombre);\n          }\n\n          window.showSpinner(false);\n        } else {\n          window.showModal(1);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        informacion: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        setCountTextArea(valores.informacion.length);\n        let errores = {};\n\n        if (!valores.informacion) {\n          errores.informacion = 'Debe ingresar un valor';\n        } else if (valores.informacion.length <= getMinimoTextArea) {\n          errores.informacion = 'La descripción debe tener almenos ' + getMinimoTextArea + ' caracteres';\n        }\n\n        if (valores.informacion) {\n          if (containsSpecialChars(valores.informacion)) errores.informacion = 'Tiene caracteres inválidos';\n        }\n\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        enviarDatos(valores);\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w2d_block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"breadcrumb\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"breadcrumb breadcrumb-alt push\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/MisPendientes`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Mis Pendientes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 138\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/RamasProceso/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Ramas del proceso\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 161\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"Enviar al ultimo usuario\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-themed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: [\"SINPROC No \", from.radicado, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\" VIGENCIA: \", from.vigencia, \" :: Regresar al ultimo usuario\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 88\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"informacion\",\n                      children: [\"Motivo porqu\\xE9 se regresa proceso al usuario anterior \", getUsuarioNombre + \" \" + getUsuarioApellido + \" (\" + getUsuarioDependenciaNombre + \") \", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 213,\n                        columnNumber: 213\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      as: \"textarea\",\n                      className: \"form-control\",\n                      id: \"informacion\",\n                      name: \"informacion\",\n                      rows: \"6\",\n                      placeholder: \"Informaci\\xF3n para su remisi\\xF3n....\",\n                      maxLength: getMaximoTextArea,\n                      minLength: getMinimoTextArea\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-right\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-primary\",\n                        children: [countTextArea, \" / \", getMaximoTextArea]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"informacion\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.informacion\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 96\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: \"Remitir\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: '/Transacciones',\n                  state: {\n                    from: from\n                  },\n                  className: \"font-size-h5 font-w600\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger\",\n                    children: \"Cancelar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EnviarAlAnteriorUsuario, \"rBGC0C9Q7HmVqSZPqupyHJ9GPuM=\", false, function () {\n  return [useLocation];\n});\n\n_c = EnviarAlAnteriorUsuario;\nexport default EnviarAlAnteriorUsuario;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnviarAlAnteriorUsuario\");","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","useLocation","Spinner","GenericApi","ModalGen","Link","EnviarAlAnteriorUsuario","location","from","state","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","getModalState","setModalState","title","message","show","getNombreAnterior","setNombreAnterior","getIdProcesoDisciplinario","setIdProcesoDisciplinario","procesoDisciplinarioId","getDependenciaOrigen","setDependenciaOrigen","getUsuarioSleccionado","setUsuarioSleccionado","getUsuarioNombre","setUsuarioNombre","getUsuarioApellido","setUsuarioApellido","getUsuarioName","setUsuarioName","getUsuarioDependenciaNombre","setUsuarioDependenciaNombre","fetchData","window","showSpinner","obtenerParametros","obtenemosElUltimoUsuario","containsSpecialChars","str","result","global","Constants","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","data","getByDataGeneric","then","datos","error","length","filter","map","filteredName","showModal","console","log","enviarDatos","valores","informacion","addGeneric","radicado","redirect","alert","TIPO_ALERTA","EXITO","toString","ERROR","found","find","element","attributes","tipo_trasaccion","id","dependencia_origen","funcionario_registra","nombre","apellido","name","dependencia","errores","resetForm","errors","vigencia"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Transacciones/EnviarAlAnteriorUsuario.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction EnviarAlAnteriorUsuario() {\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n\r\n\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getNombreAnterior, setNombreAnterior] = useState(\"\");\r\n    const [getIdProcesoDisciplinario, setIdProcesoDisciplinario] = useState(from.procesoDisciplinarioId);\r\n    const [getDependenciaOrigen, setDependenciaOrigen] = useState(\"\");\r\n    const [getUsuarioSleccionado, setUsuarioSleccionado] = useState(\"\");\r\n\r\n    const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\r\n    const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\r\n    const [getUsuarioName, setUsuarioName] = useState(\"\");\r\n    const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\r\n    \r\n    //Funcion principal\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            obtenerParametros();\r\n            obtenemosElUltimoUsuario();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisión-\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    // consultamos la cantidad maxima de caracteres para el textarea\r\n    const obtenerParametros = () => {\r\n        try {\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric('parametro/parametro-nombre', data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (datos[\"data\"].length > 0) {\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ));\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ));\r\n                        }\r\n                    } else {\r\n                        window.showModal(1);\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const enviarDatos = (valores) => {\r\n\r\n        console.log(getIdProcesoDisciplinario);\r\n        console.log(getDependenciaOrigen);\r\n        console.log(getUsuarioName);\r\n        console.log(valores.informacion);\r\n\r\n       window.showSpinner(true);\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"transacciones\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": getIdProcesoDisciplinario,\r\n                    \"id_dependencia_origen\": getDependenciaOrigen,\r\n                    \"usuario_a_remitir\": getUsuarioName,\r\n                    \"descripcion_a_remitir\": valores.informacion,\r\n                    \"id_etapa\": 3\r\n                }\r\n            }\r\n        }\r\n        console.log(data);\r\n        GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    setModalState({ title: \"SINPROC No \" + from.radicado + \" :: Enviar al anterior usuario\", message: 'El proceso con radicado: ' + from.radicado + ' fue asignado al usuario: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ')  de la dependencia: ' + getUsuarioDependenciaNombre + '', show: true, redirect: '/MisPendientes', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n\r\n                }\r\n                else {\r\n                    setModalState({ title: \"SINPROC No \" + from.radicado + \" :: Enviar al anterior usuario\", message: datos.error.toString(), show: true, redirect: '/AntecedentesLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    const obtenemosElUltimoUsuario = () =>{\r\n        if(getIdProcesoDisciplinario != null){\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"log_proceso_disciplinario\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": getIdProcesoDisciplinario\r\n                    }\r\n                }\r\n            }\r\n    \r\n            GenericApi.getByDataGeneric('log-proceso-disciplinario/get-log-etapa/'+ getIdProcesoDisciplinario, data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n\r\n                        const found = datos.data.find(element => element.attributes.tipo_trasaccion.id == 5);\r\n                        if(found == null){\r\n                            setModalState({ title: \"SINPROC No \" + from.radicado + \" :: Enviar al anterior usuario\", message: 'No existe un usuario anterior para remitir el proceso', show: true, redirect: '/MisPendientes', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                        }else{\r\n                            setDependenciaOrigen(found.attributes.dependencia_origen.id);\r\n                            setUsuarioNombre(found.attributes.funcionario_registra.nombre);\r\n                            setUsuarioApellido(found.attributes.funcionario_registra.apellido);\r\n                            setUsuarioName(found.attributes.funcionario_registra.name);\r\n                            setUsuarioDependenciaNombre(found.attributes.funcionario_registra.dependencia.nombre);\r\n                        }\r\n\r\n                        \r\n\r\n                        window.showSpinner(false);\r\n                    }else{\r\n                        window.showModal(1);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    informacion: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    setCountTextArea(valores.informacion.length)\r\n                    let errores = {}\r\n                    if (!valores.informacion) {\r\n                        errores.informacion = 'Debe ingresar un valor';\r\n                    }\r\n                    else if (valores.informacion.length <= getMinimoTextArea) {\r\n                        errores.informacion = 'La descripción debe tener almenos ' + getMinimoTextArea + ' caracteres';\r\n                    }\r\n                    if (valores.informacion) {\r\n                        if (containsSpecialChars(valores.informacion))\r\n                            errores.informacion = 'Tiene caracteres inválidos';\r\n                    }\r\n\r\n                    return errores;\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <small>Enviar al ultimo usuario</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">SINPROC No {from.radicado} <strong> VIGENCIA: {from.vigencia} :: Regresar al ultimo usuario</strong></h3>\r\n                            </div>\r\n                            <div className=\"block-content\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"informacion\">Motivo porqué se regresa proceso al usuario anterior {getUsuarioNombre +\" \"+ getUsuarioApellido + \" (\"+ getUsuarioDependenciaNombre +\") \"} <span className=\"text-danger\">*</span></label>\r\n                                            <Field as=\"textarea\" className=\"form-control\" id=\"informacion\" name=\"informacion\" rows=\"6\" placeholder=\"Información para su remisión....\"\r\n                                                maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                            <div className=\"text-right\">\r\n                                                <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                            </div>\r\n                                            <ErrorMessage name=\"informacion\" component={() => (<span className=\"text-danger\">{errors.informacion}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" >Remitir</button>\r\n                                    <Link to={'/Transacciones'} state={{ from: from }} className=\"font-size-h5 font-w600\" >\r\n                                        <button type=\"button\" className=\"btn btn-danger\" >Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default EnviarAlAnteriorUsuario;"],"mappings":"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"},"metadata":{},"sourceType":"module"}