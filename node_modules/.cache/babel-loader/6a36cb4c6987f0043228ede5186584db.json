{"ast":null,"code":"import axios from 'axios';\nimport { getBearerToken } from '../../../components/Utils/Common';\nconst baseUrl = process.env.REACT_APP_API_URL;\nlet headers = {\n  'Content-Type': 'application/vnd.api+json',\n  'Accept': 'application/vnd.api+json'\n};\nasync function login(user, password) {\n  const url = baseUrl + \"Auth/Login\";\n  const data = {\n    \"data\": {\n      \"type\": \"login\",\n      \"attributes\": {\n        \"user\": user,\n        \"password\": password\n      }\n    }\n  };\n  return await axios.post(url, data, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\nasync function hasAccess(modulo, funcionalidad) {\n  const url = baseUrl + \"Auth/hasAccess\";\n  const data = {\n    \"data\": {\n      \"type\": \"Auth\",\n      \"attributes\": {\n        \"modulo\": modulo,\n        \"funcionalidad\": funcionalidad\n      }\n    }\n  };\n  headers['Authorization'] = getBearerToken();\n  return await axios.post(url, data, {\n    headers: headers\n  }).then(response => {\n    //console.log(response);\n    return true;\n  }).catch(error => {\n    //console.log(error);\n    return false;\n  });\n}\nasync function findUsers(criteria) {\n  const url = baseUrl + \"Auth/users/\" + criteria;\n  headers['Authorization'] = getBearerToken();\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    return response;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\nexport default {\n  login,\n  hasAccess,\n  findUsers\n};","map":{"version":3,"names":["axios","getBearerToken","baseUrl","process","env","REACT_APP_API_URL","headers","login","user","password","url","data","post","then","response","catch","error","estado","hasAccess","modulo","funcionalidad","findUsers","criteria","get"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Api/Services/AuthApi.js"],"sourcesContent":["import axios from 'axios'\r\nimport { getBearerToken } from '../../../components/Utils/Common';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nlet headers = {\r\n    'Content-Type': 'application/vnd.api+json',\r\n    'Accept': 'application/vnd.api+json'\r\n}\r\n\r\nasync function login(user, password) {\r\n\r\n    const url = baseUrl + \"Auth/Login\";\r\n    const data = {\r\n        \"data\": {\r\n            \"type\": \"login\",\r\n            \"attributes\": {\r\n                \"user\": user,\r\n                \"password\": password\r\n            }\r\n        }\r\n    };\r\n\r\n    return await axios.post(url, data, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\n\r\nasync function hasAccess(modulo, funcionalidad) {\r\n    const url = baseUrl + \"Auth/hasAccess\";\r\n    const data = {\r\n        \"data\": {\r\n            \"type\": \"Auth\",\r\n            \"attributes\": {\r\n                \"modulo\": modulo,\r\n                \"funcionalidad\": funcionalidad\r\n            }\r\n        }\r\n    };\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    return await axios.post(url, data, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response);\r\n            return true;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return false;\r\n        });\r\n}\r\n\r\nasync function findUsers(criteria) {\r\n    const url = baseUrl + \"Auth/users/\" + criteria;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n    .then(response => {\r\n        return response;\r\n    })\r\n    .catch(error => {\r\n        //console.log(error);\r\n        return { estado: false, error: error }\r\n    });\r\n}\r\n\r\nexport default { login, hasAccess, findUsers}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,kCAAkC;AAEjE,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAG7C,IAAIC,OAAO,GAAG;EACV,cAAc,EAAE,0BAA0B;EAC1C,QAAQ,EAAE;AACd,CAAC;AAED,eAAeC,KAAK,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAEjC,MAAMC,GAAG,GAAGR,OAAO,GAAG,YAAY;EAClC,MAAMS,IAAI,GAAG;IACT,MAAM,EAAE;MACJ,MAAM,EAAE,OAAO;MACf,YAAY,EAAE;QACV,MAAM,EAAEH,IAAI;QACZ,UAAU,EAAEC;MAChB;IACJ;EACJ,CAAC;EAED,OAAO,MAAMT,KAAK,CAACY,IAAI,CAACF,GAAG,EAAEC,IAAI,EAAE;IAC/BL,OAAO,EAAEA;EACb,CAAC,CAAC,CACGO,IAAI,CAACC,QAAQ,IAAI;IACd,OAAOA,QAAQ,CAACH,IAAI;EACxB,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;IACZ;IACA,OAAO;MAAEC,MAAM,EAAE,KAAK;MAAED,KAAK,EAAEA;IAAM,CAAC;EAC1C,CAAC,CAAC;AACV;AAGA,eAAeE,SAAS,CAACC,MAAM,EAAEC,aAAa,EAAE;EAC5C,MAAMV,GAAG,GAAGR,OAAO,GAAG,gBAAgB;EACtC,MAAMS,IAAI,GAAG;IACT,MAAM,EAAE;MACJ,MAAM,EAAE,MAAM;MACd,YAAY,EAAE;QACV,QAAQ,EAAEQ,MAAM;QAChB,eAAe,EAAEC;MACrB;IACJ;EACJ,CAAC;EACDd,OAAO,CAAC,eAAe,CAAC,GAAGL,cAAc,EAAE;EAE3C,OAAO,MAAMD,KAAK,CAACY,IAAI,CAACF,GAAG,EAAEC,IAAI,EAAE;IAC/BL,OAAO,EAAEA;EACb,CAAC,CAAC,CACGO,IAAI,CAACC,QAAQ,IAAI;IACd;IACA,OAAO,IAAI;EACf,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACZ;IACA,OAAO,KAAK;EAChB,CAAC,CAAC;AACV;AAEA,eAAeK,SAAS,CAACC,QAAQ,EAAE;EAC/B,MAAMZ,GAAG,GAAGR,OAAO,GAAG,aAAa,GAAGoB,QAAQ;EAC9ChB,OAAO,CAAC,eAAe,CAAC,GAAGL,cAAc,EAAE;EAE3C,OAAO,MAAMD,KAAK,CAACuB,GAAG,CAACb,GAAG,EAAE;IACxBJ,OAAO,EAAEA;EACb,CAAC,CAAC,CACDO,IAAI,CAACC,QAAQ,IAAI;IACd,OAAOA,QAAQ;EACnB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACZ;IACA,OAAO;MAAEC,MAAM,EAAE,KAAK;MAAED,KAAK,EAAEA;IAAM,CAAC;EAC1C,CAAC,CAAC;AACN;AAEA,eAAe;EAAET,KAAK;EAAEW,SAAS;EAAEG;AAAS,CAAC"},"metadata":{},"sourceType":"module"}