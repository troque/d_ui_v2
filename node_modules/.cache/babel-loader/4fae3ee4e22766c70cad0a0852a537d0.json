{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Maestras\\\\TipoExpedienteMensajesForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport Spinner from '../Utils/Spinner';\nimport { Link } from \"react-router-dom\";\nimport GenericApi from '../Api/Services/GenericApi';\nimport { useLocation } from 'react-router-dom';\nimport '../Utils/Constants';\nimport ModalGen from '../Utils/Modals/ModalGeneric';\nimport InfoErrorApi from '../Utils/InfoErrorApi';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TipoExpedienteMensajesForm() {\n  _s();\n\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [errorApi, setErrorApi] = useState('');\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [countTextArea, setCountTextArea] = useState(0); // Constantes para cargar los valores\n\n  const [getMensajeTipoExpediente, setMensajeTipoExpediente] = useState(\"\");\n  const [getValueTipoExpediente, setArrayTipoExpediente] = useState([]);\n  const [getTipoExpediente, setTipoExpediente] = useState([]);\n  const [getTipo, setTipo] = useState(\"\");\n  const [getEstado, setEstado] = useState(\"\");\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      obtenerParametros();\n      console.log(\"from\", from);\n\n      if (from != null) {\n        setMensajeTipoExpediente(from.attributes.mensaje);\n        setArrayTipoExpediente({\n          label: from.attributes.tipo_expediente.nombre,\n          value: from.attributes.tipo_expediente.id\n        });\n        cargarTiposExpedientes();\n        setTipo(from.tipo);\n        setEstado(from.estado); // setTipoExpediente(from.id);\n        // setTipo(from.id);\n        // setEstado(from.id);\n\n        window.showSpinner(false);\n      } else {\n        cargarTipoExpedienteMensajes();\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const cargarTiposExpedientes = () => {\n    // Se inicializa el trycatch en caso de error de la api\n    try {\n      // Se inicializa el array general\n      var arrayGeneral = []; // Buscamos los valores del array de los tipos de expedientes\n\n      GenericApi.getGeneric(\"mas-tipo-expediente\").then(datos => {\n        // Se valida que no haya ningun error\n        if (!datos.error) {\n          // Se valida que el array tenga mas de 0 elementos\n          if (datos[\"data\"].length > 0) {\n            // Se recorre el array de los tipo de expediente\n            for (let index = 0; index < datos.data.length; index++) {\n              // Se captura el valor por posicion\n              const element = datos.data[index]; // Se añade al array general\n\n              arrayGeneral.push({\n                label: element.attributes.nombre,\n                value: element.id\n              });\n            } // Se añade el array general al array de los tipos de expedientes\n\n\n            setTipoExpediente(arrayGeneral);\n            console.log(\"arrayGeneral -> \", arrayGeneral);\n          }\n        } else {\n          setModalState({\n            title: \"Tipo expedientes\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/TipoExpedientesMensajes',\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    setArrayTipoExpediente([{\n      label: from.attributes.tipo_expediente.nombre,\n      value: from.attributes.tipo_expediente.id\n    }]);\n  };\n\n  const cargarTipoExpedienteMensajes = () => {};\n\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      }; // Buscamos el parametro\n\n      GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          setModalState({\n            title: \"Antecedentes\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/AntecedentesForm',\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const enviarDatos = valores => {\n    let data = {\n      \"data\": {\n        \"type\": \"mas_actuaciones\",\n        \"attributes\": {\n          \"nombre_actuacion\": 1\n        }\n      }\n    }; // Se utiliza el cargando\n\n    window.showSpinner(true);\n    GenericApi.addGeneric('mas_actuaciones', data).then(datos => {\n      // Se utiliza el cargando\n      window.showSpinner(false);\n\n      if (!datos.error) {\n        setModalState({\n          title: \"Actuación :: Creada con éxito\",\n          message: 'La actuación: ' + valores.nombreActuacion + ' fue creada con éxito ',\n          show: true,\n          redirect: '/ActuacionesAdministracion',\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        setModalState({\n          title: \"Actuación :: Error de creación\",\n          message: datos.error.toString(),\n          show: true,\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  const actualizarDatos = valores => {\n    const id = from.id;\n    let data = \"\";\n    data = {\n      \"data\": {\n        \"type\": \"mas_tipo_expediente_mensajes\",\n        \"attributes\": {\n          \"nombre_actuacion\": 1\n        }\n      }\n    }; // Se utiliza el cargando\n\n    window.showSpinner(true);\n    GenericApi.updateGeneric('mas_tipo_expediente_mensajes', id, data).then(datos => {\n      window.showSpinner(false);\n\n      if (!datos.error) {\n        setModalState({\n          title: \"Actuación :: Actualización con éxito\",\n          message: 'Actualizado con éxito ',\n          show: true,\n          redirect: '/TipoExpedienteMensajes',\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        setModalState({\n          title: \"Actuación :: Error de actualización\",\n          message: datos.error.toString(),\n          show: true,\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  const selectChangeEstado = e => {\n    setEstado(e.target.value);\n  };\n\n  const changeMensajeTipoExpediente = e => {\n    setMensajeTipoExpediente(e.target.value); // setCountTextArea4(e.target.value.length);\n  };\n\n  const selectChangeTipoExpediente = v => {\n    if (v != null) {\n      setArrayTipoExpediente(v);\n    } else {// setErrorEtapa('Campo requerido');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n      error: errorApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        mensaje: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        let errores = {};\n\n        if (valores.mensaje == \"\") {\n          errores.mensaje = 'Campo requerido';\n        } // Validacion mensaje tipo expediente\n        // if (countTextArea2 > getMaximoTextArea) {\n        //     errores.enviarAAlguienDeMiDependencia = 'La descripción debe tener como maximo ' + getMaximoTextArea + ' caracteres';\n        // }\n        // if (getTextoTransaccion2) {\n        //     if (containsSpecialChars(getTextoTransaccion2))\n        //         errores.enviarAAlguienDeMiDependencia = 'Tiene caracteres inválidos';\n        // }\n\n\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n\n        if (from != null) {\n          actualizarDatos(valores);\n        } else {\n          enviarDatos(valores);\n        }\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-rounded block-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block block-themed\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-content\",\n                  children: /*#__PURE__*/_jsxDEV(\"nav\", {\n                    \"aria-label\": \"breadcrumb\",\n                    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                      className: \"breadcrumb breadcrumb-alt push\",\n                      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                        class: \"breadcrumb-item\",\n                        children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: \"Administraci\\xF3n\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 265,\n                          columnNumber: 78\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 265,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        class: \"breadcrumb-item\",\n                        children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: \"Maestras\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 266,\n                          columnNumber: 78\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        class: \"breadcrumb-item\",\n                        children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                          underline: \"hover\",\n                          className: \"text-dark\",\n                          to: `/TipoExpedienteMensajes`,\n                          children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                            children: \"Lista mensajes por tipo de expediente\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 267,\n                            columnNumber: 156\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 267,\n                          columnNumber: 78\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        class: \"breadcrumb-item\",\n                        children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: \"Crear mensaje por tipo de expediente\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 268,\n                          columnNumber: 78\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"block-title\",\n                  children: \"Datos b\\xE1sicos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"mensaje\",\n                        children: \"Mensaje\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 282,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        as: \"textarea\",\n                        className: \"form-control\",\n                        id: \"mensaje\",\n                        rows: \"3\",\n                        name: \"mensaje\",\n                        placeholder: \"Mensaje para el tipo de expediente...\",\n                        value: from != null ? getMensajeTipoExpediente : null,\n                        onChange: changeMensajeTipoExpediente\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-right\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-primary\",\n                          children: [countTextArea, \" / \", getMaximoTextArea]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 285,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"mensaje\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: errors.mensaje\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 287,\n                          columnNumber: 96\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"tipo_expediente\",\n                        children: [\"Tipo expediente \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 293,\n                          columnNumber: 98\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 49\n                      }, this), getValueTipoExpediente ? /*#__PURE__*/_jsxDEV(Select, {\n                        id: \"tipo_expediente\",\n                        name: \"tipo_expediente\",\n                        isMulti: false,\n                        value: getValueTipoExpediente,\n                        placeholder: \"Selecciona\",\n                        noOptionsMessage: () => \"Sin datos\",\n                        options: getTipoExpediente.map(e => ({\n                          label: e.label,\n                          value: e.value\n                        })),\n                        onChange: e => selectChangeTipoExpediente(e)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 295,\n                        columnNumber: 53\n                      }, this) : null, /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"tipo_expediente\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: errors.tipo_expediente\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 308,\n                          columnNumber: 104\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"estado\",\n                        children: [\"Estado \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 314,\n                          columnNumber: 80\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        as: \"select\",\n                        className: \"form-control\",\n                        id: \"estado\",\n                        name: \"estado\",\n                        value: getEstado,\n                        onChange: selectChangeEstado,\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Selecciona\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 316,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"1\",\n                          selected: true,\n                          children: \"Activo\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 317,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"0\",\n                          children: \"Inactivo\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 318,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 315,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"estado\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: errors.estado\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 320,\n                          columnNumber: 95\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 320,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right bg-light\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: from != null ? \"Actualizar\" : \"Crear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: '/ActuacionesAdministracion',\n                className: \"font-size-h5 font-w600\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TipoExpedienteMensajesForm, \"S0TD5esprG7FQ3p9KEjUEHDncVM=\", false, function () {\n  return [useLocation];\n});\n\n_c = TipoExpedienteMensajesForm;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"TipoExpedienteMensajesForm\");","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","Spinner","Link","GenericApi","useLocation","ModalGen","InfoErrorApi","Select","TipoExpedienteMensajesForm","getMinimoTextArea","setMinimoTextArea","getMaximoTextArea","setMaximoTextArea","errorApi","setErrorApi","getModalState","setModalState","title","message","show","countTextArea","setCountTextArea","getMensajeTipoExpediente","setMensajeTipoExpediente","getValueTipoExpediente","setArrayTipoExpediente","getTipoExpediente","setTipoExpediente","getTipo","setTipo","getEstado","setEstado","location","from","state","fetchData","window","showSpinner","obtenerParametros","console","log","attributes","mensaje","label","tipo_expediente","nombre","value","id","cargarTiposExpedientes","tipo","estado","cargarTipoExpedienteMensajes","arrayGeneral","getGeneric","then","datos","error","length","index","data","element","push","toString","redirect","alert","global","Constants","TIPO_ALERTA","ERROR","getByDataGeneric","filter","includes","map","filteredName","enviarDatos","valores","addGeneric","nombreActuacion","EXITO","actualizarDatos","updateGeneric","selectChangeEstado","e","target","changeMensajeTipoExpediente","selectChangeTipoExpediente","v","errores","resetForm","errors"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/TipoExpedienteMensajesForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport Spinner from '../Utils/Spinner';\r\nimport { Link } from \"react-router-dom\";\r\nimport GenericApi from '../Api/Services/GenericApi';\r\nimport { useLocation } from 'react-router-dom';\r\nimport '../Utils/Constants';\r\nimport ModalGen from '../Utils/Modals/ModalGeneric';\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport Select from 'react-select';\r\n\r\nexport default function TipoExpedienteMensajesForm() {\r\n\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n\r\n    // Constantes para cargar los valores\r\n    const [getMensajeTipoExpediente, setMensajeTipoExpediente] = useState(\"\");\r\n    const [getValueTipoExpediente, setArrayTipoExpediente] = useState([]);\r\n    const [getTipoExpediente, setTipoExpediente] = useState([]);\r\n    const [getTipo, setTipo] = useState(\"\");\r\n    const [getEstado, setEstado] = useState(\"\");\r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            obtenerParametros();\r\n\r\n            console.log(\"from\", from);\r\n\r\n            if (from != null) {\r\n                setMensajeTipoExpediente(from.attributes.mensaje);\r\n                setArrayTipoExpediente({ label: from.attributes.tipo_expediente.nombre, value: from.attributes.tipo_expediente.id });\r\n                cargarTiposExpedientes();\r\n                setTipo(from.tipo);\r\n                setEstado(from.estado);\r\n                // setTipoExpediente(from.id);\r\n                // setTipo(from.id);\r\n                // setEstado(from.id);\r\n                window.showSpinner(false);\r\n            } else {\r\n                cargarTipoExpedienteMensajes();\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const cargarTiposExpedientes = () => {\r\n\r\n        // Se inicializa el trycatch en caso de error de la api\r\n        try {\r\n\r\n            // Se inicializa el array general\r\n            var arrayGeneral = [];\r\n\r\n            // Buscamos los valores del array de los tipos de expedientes\r\n            GenericApi.getGeneric(\"mas-tipo-expediente\").then(\r\n                datos => {\r\n\r\n                    // Se valida que no haya ningun error\r\n                    if (!datos.error) {\r\n\r\n                        // Se valida que el array tenga mas de 0 elementos\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            // Se recorre el array de los tipo de expediente\r\n                            for (let index = 0; index < datos.data.length; index++) {\r\n\r\n                                // Se captura el valor por posicion\r\n                                const element = datos.data[index];\r\n\r\n                                // Se añade al array general\r\n                                arrayGeneral.push({ label: element.attributes.nombre, value: element.id })\r\n                            }\r\n\r\n                            // Se añade el array general al array de los tipos de expedientes\r\n                            setTipoExpediente(arrayGeneral);\r\n                            console.log(\"arrayGeneral -> \", arrayGeneral);\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: \"Tipo expedientes\", message: datos.error.toString(), show: true, redirect: '/TipoExpedientesMensajes', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        setArrayTipoExpediente([{ label: from.attributes.tipo_expediente.nombre, value: from.attributes.tipo_expediente.id }]);\r\n\r\n    }\r\n\r\n    const cargarTipoExpedienteMensajes = () => {\r\n\r\n    }\r\n\r\n    const obtenerParametros = () => {\r\n        try {\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (datos[\"data\"].length > 0) {\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: \"Antecedentes\", message: datos.error.toString(), show: true, redirect: '/AntecedentesForm', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const enviarDatos = (valores) => {\r\n\r\n        let data = {\r\n            \"data\": {\r\n                \"type\": \"mas_actuaciones\",\r\n                \"attributes\": {\r\n                    \"nombre_actuacion\": 1\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se utiliza el cargando\r\n        window.showSpinner(true);\r\n\r\n        GenericApi.addGeneric('mas_actuaciones', data).then(\r\n            datos => {\r\n\r\n                // Se utiliza el cargando\r\n                window.showSpinner(false);\r\n\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"Actuación :: Creada con éxito\", message: 'La actuación: ' + valores.nombreActuacion + ' fue creada con éxito ', show: true, redirect: '/ActuacionesAdministracion', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Actuación :: Error de creación\", message: datos.error.toString(), show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const actualizarDatos = (valores) => {\r\n        const id = from.id;\r\n\r\n        let data = \"\";\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"mas_tipo_expediente_mensajes\",\r\n                \"attributes\": {\r\n                    \"nombre_actuacion\": 1\r\n                }\r\n            }\r\n        };\r\n\r\n        // Se utiliza el cargando\r\n        window.showSpinner(true);\r\n\r\n        GenericApi.updateGeneric('mas_tipo_expediente_mensajes', id, data).then(\r\n            datos => {\r\n                window.showSpinner(false);\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"Actuación :: Actualización con éxito\", message: 'Actualizado con éxito ', show: true, redirect: '/TipoExpedienteMensajes', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Actuación :: Error de actualización\", message: datos.error.toString(), show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const selectChangeEstado = (e) => {\r\n        setEstado(e.target.value);\r\n    }\r\n\r\n    const changeMensajeTipoExpediente = (e) => {\r\n        setMensajeTipoExpediente(e.target.value);\r\n        // setCountTextArea4(e.target.value.length);\r\n    }\r\n\r\n    const selectChangeTipoExpediente = (v) => {\r\n        if (v != null) {\r\n            setArrayTipoExpediente(v);\r\n        } else {\r\n            // setErrorEtapa('Campo requerido');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<InfoErrorApi error={errorApi} />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    mensaje: '',\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n\r\n                    let errores = {};\r\n\r\n                    if (valores.mensaje == \"\") {\r\n                        errores.mensaje = 'Campo requerido';\r\n                    }\r\n\r\n                    // Validacion mensaje tipo expediente\r\n                    // if (countTextArea2 > getMaximoTextArea) {\r\n                    //     errores.enviarAAlguienDeMiDependencia = 'La descripción debe tener como maximo ' + getMaximoTextArea + ' caracteres';\r\n                    // }\r\n\r\n                    // if (getTextoTransaccion2) {\r\n                    //     if (containsSpecialChars(getTextoTransaccion2))\r\n                    //         errores.enviarAAlguienDeMiDependencia = 'Tiene caracteres inválidos';\r\n                    // }\r\n\r\n                    return errores;\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n\r\n                    if (from != null) {\r\n                        actualizarDatos(valores);\r\n                    } else {\r\n                        enviarDatos(valores);\r\n                    }\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"block block-rounded block-bordered\">\r\n                            <div className=\"block block-themed\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"block-content\">\r\n                                        <nav aria-label=\"breadcrumb\">\r\n                                            <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                                <li class=\"breadcrumb-item\"> <small>Administración</small></li>\r\n                                                <li class=\"breadcrumb-item\"> <small>Maestras</small></li>\r\n                                                <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/TipoExpedienteMensajes`}> <small>Lista mensajes por tipo de expediente</small></Link></li>\r\n                                                <li class=\"breadcrumb-item\"> <small>Crear mensaje por tipo de expediente</small></li>\r\n                                            </ol>\r\n                                        </nav>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-header\">\r\n                                    <h3 className=\"block-title\">Datos básicos</h3>\r\n                                </div>\r\n                                <div className=\"block-content\">\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                {/* <i className=\"fa fa-check text-success fa-2x mr-3\"></i> */}\r\n                                                <label htmlFor=\"mensaje\">Mensaje</label>\r\n                                                <Field as=\"textarea\" className=\"form-control\" id=\"mensaje\" rows=\"3\" name=\"mensaje\" placeholder=\"Mensaje para el tipo de expediente...\" value={from != null ? getMensajeTipoExpediente : null} onChange={changeMensajeTipoExpediente}></Field>\r\n                                                <div className=\"text-right\">\r\n                                                    <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                                </div>\r\n                                                <ErrorMessage name=\"mensaje\" component={() => (<span className=\"text-danger\">{errors.mensaje}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"tipo_expediente\">Tipo expediente <span className=\"text-danger\">*</span></label>\r\n                                                {(getValueTipoExpediente) ?\r\n                                                    <Select\r\n                                                        id='tipo_expediente'\r\n                                                        name='tipo_expediente'\r\n                                                        isMulti={false}\r\n                                                        value={getValueTipoExpediente}\r\n                                                        placeholder=\"Selecciona\"\r\n                                                        noOptionsMessage={() => \"Sin datos\"}\r\n                                                        options={getTipoExpediente.map(e =>\r\n                                                            ({ label: e.label, value: e.value })\r\n                                                        )}\r\n                                                        onChange={(e) => selectChangeTipoExpediente(e)}\r\n                                                    />\r\n                                                    : null}\r\n                                                <ErrorMessage name=\"tipo_expediente\" component={() => (<span className=\"text-danger\">{errors.tipo_expediente}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-3\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"estado\">Estado <span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"select\" className=\"form-control\" id=\"estado\" name=\"estado\" value={getEstado} onChange={selectChangeEstado}>\r\n                                                    <option value=\"\">Selecciona</option>\r\n                                                    <option value=\"1\" selected>Activo</option>\r\n                                                    <option value=\"0\">Inactivo</option>\r\n                                                </Field>\r\n                                                <ErrorMessage name=\"estado\" component={() => (<span className=\"text-danger\">{errors.estado}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right bg-light\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\" >\r\n                                    {from != null ? \"Actualizar\" : \"Crear\"}\r\n                                </button>\r\n                                <Link to={'/ActuacionesAdministracion'} className=\"font-size-h5 font-w600\" >\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\" >Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}