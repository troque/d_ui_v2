{"ast":null,"code":"import axios from 'axios';\nimport { getBearerToken, handleError } from '../../../components/Utils/Common';\nconst baseUrl = process.env.REACT_APP_API_URL;\nconst headers = {\n  'Content-Type': 'application/vnd.api+json',\n  'Accept': 'application/vnd.api+json'\n};\nasync function getGeneric(relativeUrl) {\n  const url = baseUrl + relativeUrl;\n  headers['Authorization'] = getBearerToken();\n  console.log(url);\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    handleError(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\nasync function getAllGeneric(serviceName) {\n  const url = serviceName;\n  return getGeneric(url);\n}\nasync function getByIdGeneric(serviceName, id) {\n  const url = serviceName + \"/\" + id;\n  return getGeneric(url);\n}\nasync function getByDataGeneric(serviceName, data) {\n  const url = baseUrl + serviceName;\n  headers['Authorization'] = getBearerToken();\n  console.log(url);\n  console.log(JSON.stringify(data));\n  return await axios.post(url, data, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    handleError(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\nasync function addGeneric(serviceName, data) {\n  const url = baseUrl + serviceName;\n  headers['Authorization'] = getBearerToken();\n  console.log(url);\n  console.log(JSON.stringify(data));\n  return await axios.post(url, data, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    handleError(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\nasync function updateGeneric(serviceName, id, data) {\n  const url = baseUrl + serviceName + \"/\" + id;\n  headers['Authorization'] = getBearerToken();\n  console.log(url);\n  console.log(JSON.stringify(data));\n  return await axios.put(url, data, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    handleError(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\nexport default {\n  getGeneric,\n  getAllGeneric,\n  getByIdGeneric,\n  addGeneric,\n  updateGeneric,\n  getByDataGeneric\n};","map":{"version":3,"names":["axios","getBearerToken","handleError","baseUrl","process","env","REACT_APP_API_URL","headers","getGeneric","relativeUrl","url","console","log","get","then","response","data","catch","error","estado","getAllGeneric","serviceName","getByIdGeneric","id","getByDataGeneric","JSON","stringify","post","addGeneric","updateGeneric","put"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Api/Services/GenericApi.js"],"sourcesContent":["import axios from 'axios'\r\nimport { getBearerToken, handleError } from '../../../components/Utils/Common';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst headers = {\r\n    'Content-Type': 'application/vnd.api+json',\r\n    'Accept': 'application/vnd.api+json'\r\n}\r\n\r\nasync function getGeneric(relativeUrl) {\r\n    const url = baseUrl + relativeUrl;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    console.log(url);\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            handleError(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllGeneric(serviceName) {\r\n    const url = serviceName;\r\n    return getGeneric(url);\r\n}\r\n\r\nasync function getByIdGeneric(serviceName, id) {\r\n    const url = serviceName + \"/\" + id;\r\n    return getGeneric(url);\r\n}\r\n\r\nasync function getByDataGeneric(serviceName, data) {\r\n\r\n    const url = baseUrl + serviceName;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    console.log(url);\r\n    console.log(JSON.stringify(data));\r\n\r\n    return await axios.post(url, data, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            handleError(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function addGeneric(serviceName, data) {\r\n    const url = baseUrl + serviceName;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    console.log(url);\r\n    console.log(JSON.stringify(data));\r\n\r\n    return await axios.post(url, data, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            handleError(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function updateGeneric(serviceName, id, data) {\r\n\r\n    const url = baseUrl + serviceName + \"/\" + id;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    console.log(url);\r\n    console.log(JSON.stringify(data));\r\n\r\n    return await axios.put(url, data, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            handleError(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\n\r\nexport default { getGeneric, getAllGeneric, getByIdGeneric, addGeneric, updateGeneric, getByDataGeneric }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}