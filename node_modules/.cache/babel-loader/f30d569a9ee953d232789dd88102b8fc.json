{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ClasificacionRadicado\\\\ClasificacionRadicado.js\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../../Utils/Spinner';\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useParams } from \"react-router\";\nimport { Navigate } from \"react-router-dom\";\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\nimport InfoExitoApi from '../../Utils/InfoExitoApi';\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\nimport ClasificacionRadicadoApi from '../../Api/Services/ClasificacionRadicadoApi';\nimport { Link } from \"react-router-dom\";\nimport DatePicker from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport 'moment/locale/es';\nimport { getUser } from '../../../components/Utils/Common';\nimport { useLocation } from 'react-router-dom';\nimport { ParametroModel } from '../../Models/ParametroModel';\nimport DatePerson from \"../../DatePerson/DatePerson\";\nimport { hasAccess } from '../../../components/Utils/Common';\nimport '../../Utils/Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ClasificacionRadicado(props) {\n  _s();\n\n  const [errorApi, setErrorApi] = useState('');\n  const [isRedirect, setIsRedirect] = useState(false);\n  const [listaTipoExpediente, setListaTipoExpediente] = useState({\n    data: {}\n  });\n  const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\n  const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({\n    data: {}\n  });\n  const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\n  const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\n  const [listaTipoRespuesta, setListaTipoRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\n  const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\n  const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\n  const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\n  const [listaTiposQueja, setListaTiposQueja] = useState({\n    data: {}\n  });\n  const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\n  const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\n  const [fechaTermino, setFechaTermino] = useState(null);\n  const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\n  const [getNombreUsuario, setNombreUsuario] = useState(\"\");\n  const [getNombreRol, setNombreRol] = useState(\"\");\n  const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  /*Redirects*/\n\n  const redirectToRoutes = () => {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: props.getParametros.route,\n      state: {\n        from: from\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  };\n\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      //window.showSpinner(true);\n      setNombreUsuario(getUser().nombre);\n      setNombreRol(getUser().roles);\n      ParametrosMasApi.getAllTipoRespuesta().then(datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1));\n      ParametrosMasApi.getAllTiposExpediente().then(datos => {\n        if (!datos.error) {\n          setListaTipoExpediente(datos);\n          setRespuestaTipoExpediente(true);\n        } else {\n          window.showModal(1);\n        }\n      });\n      ParametrosMasApi.getAllTiposDerechoPeticion().then(datos => {\n        if (!datos.error) {\n          if (from.subTipoExpediente) {\n            if (from.subTipoExpediente.id_tipo_derecho_peticion) {\n              datos.data = datos.data.filter(x => x[\"id\"] != from.subTipoExpediente.id_tipo_derecho_peticion);\n            }\n          }\n\n          setListaDerechoPeticion(datos);\n          setRespuestaDerechoPeticion(true);\n        } else {\n          window.showModal(1);\n        }\n      });\n      ParametrosMasApi.getAllTerminosRespuesta().then(datos => {\n        if (!datos.error) {\n          if (from.subTipoExpediente) {\n            if (from.subTipoExpediente.id_termino_respuesta) {\n              datos.data = datos.data.filter(x => x[\"id\"] != from.subTipoExpediente.id_termino_respuesta);\n            }\n          }\n\n          setListaTerminosRespuesta(datos);\n          setRespuestaTerminosRespuesta(true);\n        } else {\n          window.showModal(1);\n        }\n      });\n      ParametrosMasApi.getAllTiposQueja().then(datos => {\n        if (!datos.error) {\n          setListaTiposQueja(datos);\n          setRespuestaTiposQueja(true);\n        } else {\n          window.showModal(1);\n        }\n      });\n      setResultDiasNoLaborales([]);\n      ParametrosMasApi.getAllDiasNoLaborales().then(datos => {\n        if (!datos.error) {\n          var data = [];\n\n          for (var i in datos.data) {\n            var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\n            var result = new Date(date);\n            result.setDate(result.getDate() + 1);\n            data.push(i, date);\n          }\n\n          setResultDiasNoLaborales(data); //console.log(resultDiasNoLaborales);\n        } else {\n          window.showModal(1);\n        }\n      });\n      obtenerParametros();\n    }\n\n    fetchData();\n  }, []);\n\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      }; //buscamos el parametro\n\n      ParametrosMasApi.getParametroPorNombre(data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          window.showModal(1);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const disableCustomDt = current => {\n    return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));\n  };\n\n  let selectChangeTipoExpediente = e => {\n    setCountTextArea(0);\n    setSelectedTipoExpediente(e);\n  };\n\n  let selectChangeTipoDerechoPeticion = e => {\n    setCountTextArea(0);\n    setSelectedDerechoPeticion(e);\n  };\n\n  let selectChangeTerminoRespuesta = e => {\n    setSelectedTerminosRespuesta(e);\n  };\n\n  const selectTipoExpediente = () => {\n    return listaTipoExpediente.data.map((expediente, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: expediente.id,\n        children: expediente.attributes.nombre\n      }, expediente.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTipoDerechoPeticion = () => {\n    return listaTipoDerechoPeticion.data.map((derecho_peticion, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: derecho_peticion.id,\n        children: derecho_peticion.attributes.nombre\n      }, derecho_peticion.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTerminosRespuesta = () => {\n    return listaTerminosRespuesta.data.map((termino_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: termino_respuesta.id,\n        children: termino_respuesta.attributes.nombre\n      }, termino_respuesta.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTiposQueja = () => {\n    return listaTiposQueja.data.map((tipo_queja, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: tipo_queja.id,\n        children: tipo_queja.attributes.nombre\n      }, tipo_queja.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTiposQuejaExterna = () => {\n    return listaTiposQueja.data.map((tipo_queja, i) => {\n      if (from.subTipoExpediente) {\n        if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_EXTERNA && from.subTipoExpediente.id_tipo_expediente != selectedTipoExpediente) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tipo_queja.id,\n            children: tipo_queja.attributes.nombre\n          }, tipo_queja.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 29\n          }, this);\n        }\n      } else {\n        if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_EXTERNA) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tipo_queja.id,\n            children: tipo_queja.attributes.nombre\n          }, tipo_queja.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 29\n          }, this);\n        }\n      }\n    });\n  };\n\n  const selectTiposQuejaInterna = () => {\n    return listaTiposQueja.data.map((tipo_queja, i) => {\n      if (from.subTipoExpediente) {\n        if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_INTERNA && from.subTipoExpediente.id_tipo_expediente != selectedTipoExpediente) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tipo_queja.id,\n            children: tipo_queja.attributes.nombre\n          }, tipo_queja.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this);\n        }\n      } else {\n        if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_INTERNA) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tipo_queja.id,\n            children: tipo_queja.attributes.nombre\n          }, tipo_queja.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this);\n        }\n      }\n    });\n  };\n\n  const alertaPorTipoDerechoPeticion = i => {\n    return listaTipoDerechoPeticion.data[i - 1].attributes.observacion;\n  };\n\n  const enviarDatosControlInterno = datos => {\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"clasificacion_radicado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n          \"id_etapa\": props.getParametros.id_etapa,\n          \"id_tipo_expediente\": datos.selectedTipoExpediente,\n          \"observaciones\": null,\n          \"id_tipo_queja\": datos.tipo_queja,\n          \"id_termino_respuesta\": null,\n          \"fecha_termino\": null,\n          \"hora_termino\": null,\n          \"gestion_juridica\": false,\n          \"estado\": true,\n          \"id_estado_reparto\": 2,\n          \"id_derecho_peticion\": null,\n          \"oficina_control_interno\": true,\n          \"created_user\": getNombreUsuario,\n          \"reclasificacion\": props.getParametros.reclasificacion\n        }\n      }\n    };\n    ClasificacionRadicadoApi.addClasificacionRadicado(data).then(datos => {\n      if (!datos.error) {\n        //console.log(data);\n        from.debeConsultar = true;\n        window.showModal(2);\n        setIsRedirect(true);\n      } else {\n        setErrorApi(datos.error.toString());\n        window.showModal(1);\n      }\n\n      window.showSpinner(false);\n    });\n  };\n\n  const enviarDatos = datos => {\n    window.showSpinner(true);\n    let data; //TIPO EXPEDIENTE => DERECHO DE PETICION => COPIAS \n\n    if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION && selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.COPIAS) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": datos.observaciones,\n            \"id_tipo_queja\": null,\n            \"id_termino_respuesta\": null,\n            \"fecha_termino\": null,\n            \"hora_termino\": null,\n            \"gestion_juridica\": false,\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": selectedTipoDerechoPeticion,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    } //TIPO EXPEDIENTE => DERECHO DE PETICION => GENERAL     \n    else if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION && selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.GENERAL) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": datos.observaciones,\n            \"id_tipo_queja\": null,\n            \"id_termino_respuesta\": null,\n            \"fecha_termino\": null,\n            \"hora_termino\": null,\n            \"gestion_juridica\": datos.gestion_juridica === 'true',\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": selectedTipoDerechoPeticion,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    } //TIPO EXPEDIENTE => DERECHO DE PETICION => DERECHO DE PETICION => ALERTA CONTROL POLITICO\n    else if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION && selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.ALERTA) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": datos.observaciones,\n            \"id_tipo_queja\": null,\n            \"id_termino_respuesta\": null,\n            \"fecha_termino\": null,\n            \"hora_termino\": null,\n            \"gestion_juridica\": datos.gestion_juridica === 'true',\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": selectedTipoDerechoPeticion,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    } //TIPO EXPEDIENTE => PODER REFERENTE A SOLICITUD\n\n\n    if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": null,\n            \"id_tipo_queja\": datos.tipo_queja,\n            \"id_termino_respuesta\": null,\n            \"fecha_termino\": null,\n            \"hora_termino\": null,\n            \"gestion_juridica\": false,\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": null,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    } //TIPO EXPEDIENTE => QUEJA\n\n\n    if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": null,\n            \"id_tipo_queja\": datos.tipo_queja,\n            \"id_termino_respuesta\": null,\n            \"fecha_termino\": null,\n            \"hora_termino\": null,\n            \"gestion_juridica\": false,\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": null,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    } //TIPO EXPEDIENTE => TUTELA => TERMINO RESPUESTA = DIAS\n\n\n    if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA && datos.termino_rta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": null,\n            \"id_tipo_queja\": null,\n            \"id_termino_respuesta\": selectedTerminosRespuesta,\n            \"fecha_termino\": datos.fechaTermino ? datos.fechaTermino : fechaTermino,\n            \"hora_termino\": null,\n            \"gestion_juridica\": false,\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": null,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    } //TIPO EXPEDIENTE => TUTELA => TERMINO RESPUESTA = HORAS\n    else if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA && datos.termino_rta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": null,\n            \"id_tipo_queja\": null,\n            \"id_termino_respuesta\": selectedTerminosRespuesta,\n            \"fecha_termino\": new Date(),\n            \"hora_termino\": datos.horasTermino,\n            \"gestion_juridica\": false,\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": null,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    }\n\n    ClasificacionRadicadoApi.addClasificacionRadicado(data).then(datos => {\n      if (!datos.error) {\n        //console.log(data);\n        from.cambiaColorClasificacionRadicado = \"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";\n        window.showModal(global.Constants.MODAL_CODIGO.EXITOSO);\n        setIsRedirect(true);\n      } else {\n        setErrorApi(datos.error.toString());\n        window.showModal(1);\n      }\n\n      window.showSpinner(false);\n    });\n  }; // COMPONENTE CONFIRMACION OFICINA DE CONTROL INTERNO DISCIPLINARIO\n\n\n  const componenteTipoRespuesta = tipo_respuesta => {\n    // CONFIRMACION OFICINA DE CONTRO INTERNO = SI\n    if (tipo_respuesta === global.Constants.TIPO_RESPUESTA.SI) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isRedirect ? redirectToRoutes() : null, /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n          error: errorApi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(InfoExitoApi, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            selectedTipoExpediente: 3,\n            tipo_queja: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.tipo_queja) {\n              errores.tipo_queja = 'Debe seleccionar un tipo de queja';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref) => {\n            let {\n              resetForm\n            } = _ref;\n            console.log(valores);\n            enviarDatosControlInterno(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"tipo_queja\",\n                children: [\"Ingrese Tipo de Queja \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 83\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: \"select\",\n                className: \"form-control\",\n                id: \"tipo_queja\",\n                name: \"tipo_queja\",\n                children: /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Por favor seleccione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-window-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 86\n                  }, this), \" Cancelar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } /// CONFIRMACION TIPO DE CLASIFICADO = NO\n    else if (tipo_respuesta === global.Constants.TIPO_RESPUESTA.NO) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ingresoTipoExpediente\",\n            children: [\"Tipo de expediente \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 83\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"ingresoTipoExpediente\",\n            name: \"ingresoTipoExpediente\",\n            value: selectedTipoExpediente,\n            onChange: e => selectChangeTipoExpediente(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Por favor seleccione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 29\n            }, this), respuestaTipoExpediente ? selectTipoExpediente() : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 21\n        }, this), selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : '']\n      }, void 0, true);\n    }\n  }; // COMPOENENTE TIPO EXPEDIENTE\n\n\n  const componenteTipoExpediente = tipo_expediente => {\n    // TIPO DE EXPEDIENTE = DERECHO DE PETICION\n    if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isRedirect ? redirectToRoutes() : null, /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n          error: errorApi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(InfoExitoApi, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ingresoDerechoPeticion\",\n            children: [\"Tipo de derecho de petici\\xF3n \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 93\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"ingresoDerechoPeticion\",\n            name: \"ingresoDerechoPeticion\",\n            value: selectedTipoDerechoPeticion,\n            onChange: e => selectChangeTipoDerechoPeticion(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Por favor seleccione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 29\n            }, this), respuestaTipoDerechoPeticion ? selectTipoDerechoPeticion() : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 21\n        }, this), selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.COPIAS ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.COPIAS) : '', selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.GENERAL ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.GENERAL) : '', selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.ALERTA ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.ALERTA) : '']\n      }, void 0, true);\n    } // TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isRedirect ? redirectToRoutes() : null, /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n          error: errorApi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(InfoExitoApi, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            tipo_queja: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.tipo_queja) {\n              errores.tipo_queja = 'Debe seleccionar un tipo de queja';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref2) => {\n            let {\n              resetForm\n            } = _ref2;\n            console.log(valores);\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"tipo_queja\",\n                children: [\"Ingrese Tipo de Queja \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 83\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: \"select\",\n                className: \"form-control\",\n                id: \"tipo_queja\",\n                name: \"tipo_queja\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Por favor seleccione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 37\n                }, this), respuestaTiposQueja ? selectTiposQuejaExterna() : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-window-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 761,\n                    columnNumber: 86\n                  }, this), \" Cancelar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } // TIPO DE EXPEDIENTE = QUEJA\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isRedirect ? redirectToRoutes() : null, /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n          error: errorApi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(InfoExitoApi, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            tipo_queja: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.tipo_queja) {\n              errores.tipo_queja = 'Debe seleccionar un tipo de queja';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref3) => {\n            let {\n              resetForm\n            } = _ref3;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"tipo_queja\",\n                children: [\"Ingrese Tipo de Queja \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 83\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 800,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: \"select\",\n                className: \"form-control\",\n                id: \"tipo_queja\",\n                name: \"tipo_queja\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Por favor seleccione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 37\n                }, this), respuestaTiposQueja ? selectTiposQuejaExterna() : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 811,\n                  columnNumber: 84\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-window-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 813,\n                    columnNumber: 86\n                  }, this), \" Cancelar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } // TIPO DE EXPEDIENTE = TUTELA\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isRedirect ? redirectToRoutes() : null, /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n          error: errorApi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(InfoExitoApi, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ingresoTipoRtaTutela\",\n          children: [\"Ingrese termino de respuesta \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 88\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"termino_rta\",\n          name: \"termino_rta\",\n          value: selectedTerminosRespuesta,\n          onChange: e => selectChangeTerminoRespuesta(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"{selectedTerminosRespuesta}\",\n            children: \"Por favor seleccione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 25\n          }, this), respuestaTerminosRespuesta ? selectTerminosRespuesta() : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 21\n        }, this), selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.DIAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS) : '', selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.HORAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS) : '']\n      }, void 0, true);\n    }\n  }; // COMOPNENTE TIPO DERECHO DE PETICION\n\n\n  const componenteTipoDerechoPeticion = tipo_derecho_peticion => {\n    // TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\n    if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.COPIAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isRedirect ? redirectToRoutes() : null, /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n          error: errorApi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(InfoExitoApi, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            tipo_derecho_peticion: tipo_derecho_peticion\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref4) => {\n            let {\n              resetForm\n            } = _ref4;\n            console.log(valores);\n            enviarDatos(valores);\n          },\n          children: _ref5 => {\n            let {\n              errors\n            } = _ref5;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 903,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: alertaPorTipoDerechoPeticion(tipo_derecho_peticion)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 904,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 902,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Observaciones\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 908,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    as: \"textarea\",\n                    className: \"form-control\",\n                    id: \"observaciones\",\n                    name: \"observaciones\",\n                    rows: \"4\",\n                    placeholder: \"Escriba en este espacio las observaciones\",\n                    maxLength: getMaximoTextArea,\n                    minLength: getMinimoTextArea\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 909,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-right\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-primary\",\n                      children: [countTextArea, \" / \", getMaximoTextArea]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 912,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 911,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"observaciones\",\n                    component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: errors.observaciones\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 914,\n                      columnNumber: 94\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 914,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 900,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 920,\n                    columnNumber: 87\n                  }, this), \" Registrar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 920,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/ClasificacionRadicadoLista/`,\n                  state: {\n                    from: from\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fas fa-window-close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 922,\n                      columnNumber: 90\n                    }, this), \" Cancelar\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 922,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 921,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } // TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\n    else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.GENERAL) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isRedirect ? redirectToRoutes() : null, /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n          error: errorApi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(InfoExitoApi, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            gestion_juridica: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n\n            if (!valores.gestion_juridica) {\n              errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref6) => {\n            let {\n              resetForm\n            } = _ref6;\n            enviarDatos(valores);\n          },\n          children: _ref7 => {\n            let {\n              errors\n            } = _ref7;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 978,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: alertaPorTipoDerechoPeticion(tipo_derecho_peticion)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 979,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 977,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"ingresoTipoExpediente\",\n                  children: [\"Requiere gesti\\xF3n juridica \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 982,\n                    columnNumber: 102\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 982,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"select\",\n                  className: \"form-control\",\n                  id: \"gestion_juridica\",\n                  name: \"gestion_juridica\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Por favor seleccione\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 984,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"true\",\n                    children: \"Si\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 985,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"false\",\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 986,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 983,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Observaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 989,\n                  columnNumber: 37\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 989,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"textarea\",\n                  className: \"form-control\",\n                  id: \"observaciones\",\n                  name: \"observaciones\",\n                  rows: \"4\",\n                  placeholder: \"Escriba en este espacio las observaciones\",\n                  maxLength: getMaximoTextArea,\n                  minLength: getMinimoTextArea\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-primary\",\n                    children: [countTextArea, \" / \", getMaximoTextArea]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 993,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 992,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"observaciones\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.observaciones\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 995,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 995,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 975,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1000,\n                    columnNumber: 87\n                  }, this), \" Registrar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1000,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/ClasificacionRadicadoLista/`,\n                  state: {\n                    from: from\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fas fa-window-close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1002,\n                      columnNumber: 90\n                    }, this), \" Cancelar\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1002,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1001,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } // TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\n    else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.ALERTA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isRedirect ? redirectToRoutes() : null, /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n          error: errorApi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(InfoExitoApi, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            gestion_juridica: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n\n            if (!valores.gestion_juridica) {\n              errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref8) => {\n            let {\n              resetForm\n            } = _ref8;\n            enviarDatos(valores);\n          },\n          children: _ref9 => {\n            let {\n              errors\n            } = _ref9;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1059,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: alertaPorTipoDerechoPeticion(tipo_derecho_peticion)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1060,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1058,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"ingresoTipoExpediente\",\n                  children: [\"Requiere gesti\\xF3n juridica \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1063,\n                    columnNumber: 102\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1063,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"select\",\n                  className: \"form-control\",\n                  id: \"gestion_juridica\",\n                  name: \"gestion_juridica\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Por favor seleccione\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1065,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"true\",\n                    children: \"Si\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1066,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"false\",\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1067,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1064,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Observaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1071,\n                  columnNumber: 37\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1071,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"textarea\",\n                  className: \"form-control\",\n                  id: \"observaciones\",\n                  name: \"observaciones\",\n                  rows: \"4\",\n                  placeholder: \"Escriba en este espacio las observaciones\",\n                  maxLength: getMaximoTextArea,\n                  minLength: getMinimoTextArea\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1072,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-primary\",\n                    children: [countTextArea, \" / \", getMaximoTextArea]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1075,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1074,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"observaciones\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.observaciones\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1077,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1077,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-content block-content-full text-right\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1080,\n                      columnNumber: 91\n                    }, this), \" Registrar\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1080,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/ClasificacionRadicadoLista/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn btn-danger\",\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        class: \"fas fa-window-close\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1082,\n                        columnNumber: 94\n                      }, this), \" Cancelar\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1082,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1081,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1079,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1056,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1054,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n  };\n\n  const handleCallbackFechaTermino = childData => {\n    try {\n      setFechaTermino(childData);\n    } catch (error) {}\n  }; // COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\n\n\n  const componenteTerminosRespuesta = termino_respuesta => {\n    //TERMINO TUTELA = DIAS      \n    if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isRedirect ? redirectToRoutes() : null, /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n          error: errorApi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(InfoExitoApi, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            termino_rta: termino_respuesta,\n            horasTermino: '',\n            fechaTermino: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.fechaTermino && !fechaTermino) {\n              errores.fechaTermino = 'Debe seleccionar el termino de respuesta';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref10) => {\n            let {\n              resetForm\n            } = _ref10;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Horas para termino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1142,\n                columnNumber: 33\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1142,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(DatePerson, {\n                resultDiasNoLaborales: resultDiasNoLaborales,\n                getAnosAtrasInvalidos: getAnosAtrasInvalidos,\n                parentCallback: handleCallbackFechaTermino,\n                id: \"fechaTermino\",\n                name: \"fechaTermino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1145,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1150,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-window-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1152,\n                    columnNumber: 86\n                  }, this), \" Cancelar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1152,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1148,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } //TERMINO TUTELA = HORAS     \n    else if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isRedirect ? redirectToRoutes() : null, /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n          error: errorApi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(InfoExitoApi, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            termino_rta: termino_respuesta,\n            horasTermino: '',\n            fechaTermino: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.horasTermino) {\n              errores.horasTermino = 'Debe seleccionar el termino de respuesta';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref11) => {\n            let {\n              resetForm\n            } = _ref11;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Horas para termino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1197,\n                columnNumber: 33\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1197,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"number\",\n                min: \"1\",\n                max: \"24\",\n                id: \"horasTermino\",\n                name: \"horasTermino\",\n                className: \"form-control\",\n                placeholder: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1198,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1202,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1202,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1201,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1195,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: hasAccess('TiposUsuario', 'Control interno disciplinario') ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ingresoTipoExpediente\",\n              children: [\"Tipo de expediente \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1230,\n                columnNumber: 107\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1230,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"ingresoTipoExpediente\",\n              name: \"ingresoTipoExpediente\",\n              value: selectedTipoExpediente,\n              onChange: e => selectChangeTipoExpediente(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Por favor seleccione\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1233,\n                columnNumber: 53\n              }, this), respuestaTipoExpediente ? selectTipoExpediente() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1231,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1229,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1228,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1226,\n        columnNumber: 37\n      }, this), selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 33\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(ClasificacionRadicado, \"Bfxsk2t1r7vPiZnIcAH8mgPqFt0=\", false, function () {\n  return [useLocation];\n});\n\n_c = ClasificacionRadicado;\nexport default ClasificacionRadicado;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClasificacionRadicado\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ClasificacionRadicado/ClasificacionRadicado.js"],"names":["moment","GenericApi","Spinner","React","useEffect","useState","ErrorMessage","Field","Form","Formik","useParams","Navigate","InfoErrorApi","InfoExitoApi","ParametrosMasApi","ClasificacionRadicadoApi","Link","DatePicker","getUser","useLocation","ParametroModel","DatePerson","hasAccess","ClasificacionRadicado","props","errorApi","setErrorApi","isRedirect","setIsRedirect","listaTipoExpediente","setListaTipoExpediente","data","respuestaTipoExpediente","setRespuestaTipoExpediente","selectedTipoExpediente","setSelectedTipoExpediente","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","listaTipoDerechoPeticion","setListaDerechoPeticion","selectedTipoDerechoPeticion","setSelectedDerechoPeticion","respuestaTipoDerechoPeticion","setRespuestaDerechoPeticion","listaTipoRespuesta","setListaTipoRespuesta","selectedTipoRespuesta","setSelectedTipoRespuesta","respuestaTipoRespuesta","setRespuestaTipoRespuesta","listaTerminosRespuesta","setListaTerminosRespuesta","selectedTerminosRespuesta","setSelectedTerminosRespuesta","respuestaTerminosRespuesta","setRespuestaTerminosRespuesta","listaTiposQueja","setListaTiposQueja","selectedTiposQueja","setSelectedTiposQueja","respuestaTiposQueja","setRespuestaTiposQueja","fechaTermino","setFechaTermino","resultDiasNoLaborales","setResultDiasNoLaborales","getNombreUsuario","setNombreUsuario","getNombreRol","setNombreRol","getAnosAtrasInvalidos","setAnosAtrasInvalidos","location","from","state","redirectToRoutes","getParametros","route","containsSpecialChars","str","result","global","Constants","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","fetchData","nombre","roles","getAllTipoRespuesta","then","datos","error","window","showModal","getAllTiposExpediente","getAllTiposDerechoPeticion","subTipoExpediente","id_tipo_derecho_peticion","filter","x","getAllTerminosRespuesta","id_termino_respuesta","getAllTiposQueja","getAllDiasNoLaborales","i","date","Date","setDate","getDate","push","obtenerParametros","getParametroPorNombre","length","map","filteredName","console","log","disableCustomDt","current","format","selectChangeTipoExpediente","e","selectChangeTipoDerechoPeticion","selectChangeTerminoRespuesta","selectTipoExpediente","expediente","id","attributes","selectTipoDerechoPeticion","derecho_peticion","selectTerminosRespuesta","termino_respuesta","selectTiposQueja","tipo_queja","selectTiposQuejaExterna","CLASIFICACION_RADICADO","TIPO_QUEJA_EXTERNA","id_tipo_expediente","selectTiposQuejaInterna","TIPO_QUEJA_INTERNA","alertaPorTipoDerechoPeticion","observacion","enviarDatosControlInterno","showSpinner","id_proceso_disciplinario","id_etapa","reclasificacion","addClasificacionRadicado","debeConsultar","toString","enviarDatos","TIPOS_EXPEDIENTES","DERECHO_PETICION","DERECHOS_PETICION","COPIAS","observaciones","GENERAL","gestion_juridica","ALERTA","PODER_REFERENTE","QUEJA","TUTELA","termino_rta","TERMINOS_RESPUESTA","DIAS","HORAS","horasTermino","cambiaColorClasificacionRadicado","MODAL_CODIGO","EXITOSO","componenteTipoRespuesta","tipo_respuesta","TIPO_RESPUESTA","SI","valores","errores","resetForm","NO","target","value","componenteTipoExpediente","tipo_expediente","componenteTipoDerechoPeticion","componenteTerminosRespuesta","tipo_derecho_peticion","errors","handleCallbackFechaTermino","childData"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useParams } from \"react-router\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\r\nimport InfoExitoApi from '../../Utils/InfoExitoApi';\r\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\r\nimport ClasificacionRadicadoApi from '../../Api/Services/ClasificacionRadicadoApi';\r\nimport { Link } from \"react-router-dom\";\r\nimport DatePicker from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport 'moment/locale/es';\r\nimport { getUser } from '../../../components/Utils/Common';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { ParametroModel } from '../../Models/ParametroModel';\r\nimport DatePerson from \"../../DatePerson/DatePerson\";\r\nimport { hasAccess } from '../../../components/Utils/Common';\r\nimport '../../Utils/Constants';\r\n\r\nfunction ClasificacionRadicado (props){\r\n    \r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n    const [listaTipoExpediente, setListaTipoExpediente] = useState({ data: {} });\r\n\r\n    const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\r\n    const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\r\n\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n\r\n    const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({ data: {} });\r\n    const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\r\n    const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\r\n\r\n    const [listaTipoRespuesta, setListaTipoRespuesta] = useState({ data: {} });\r\n    const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\r\n    const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\r\n\r\n    const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({ data: {} });\r\n    const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\r\n    const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\r\n\r\n    const [listaTiposQueja, setListaTiposQueja] = useState({ data: {} });\r\n    const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\r\n    const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\r\n\r\n    const [fechaTermino, setFechaTermino] = useState(null);\r\n    const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\r\n\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [getNombreRol, setNombreRol] = useState(\"\");\r\n    const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\r\n\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n\r\n    \r\n    /*Redirects*/\r\n    const redirectToRoutes = () => {\r\n        return <Navigate to={props.getParametros.route} state={{ from: from }} />;\r\n    }\r\n\r\n    function containsSpecialChars(str) {\r\n        \r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            //window.showSpinner(true);\r\n            setNombreUsuario(getUser().nombre);\r\n            setNombreRol(getUser().roles);\r\n\r\n            ParametrosMasApi.getAllTipoRespuesta().then(\r\n                datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1)\r\n            )\r\n\r\n            ParametrosMasApi.getAllTiposExpediente().then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setListaTipoExpediente(datos);\r\n                        setRespuestaTipoExpediente(true);\r\n                    }\r\n                    else {\r\n                        window.showModal(1);\r\n                    }\r\n                }\r\n            )\r\n\r\n            ParametrosMasApi.getAllTiposDerechoPeticion().then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (from.subTipoExpediente) {\r\n                            if (from.subTipoExpediente.id_tipo_derecho_peticion) {\r\n                                datos.data = (datos.data.filter(x => x[\"id\"] != from.subTipoExpediente.id_tipo_derecho_peticion))\r\n                            }\r\n                        }\r\n\r\n                        setListaDerechoPeticion(datos);\r\n                        setRespuestaDerechoPeticion(true);\r\n                    }\r\n                    else {\r\n                        window.showModal(1)\r\n                    }\r\n                }\r\n            )\r\n\r\n            ParametrosMasApi.getAllTerminosRespuesta().then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (from.subTipoExpediente) {\r\n                            if (from.subTipoExpediente.id_termino_respuesta) {\r\n                                datos.data = (datos.data.filter(x => x[\"id\"] != from.subTipoExpediente.id_termino_respuesta))\r\n                            }\r\n                        }\r\n\r\n\r\n\r\n                        setListaTerminosRespuesta(datos);\r\n                        setRespuestaTerminosRespuesta(true);\r\n                    }\r\n                    else {\r\n                        window.showModal(1)\r\n                    }\r\n                }\r\n            )\r\n\r\n            ParametrosMasApi.getAllTiposQueja().then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n\r\n                        setListaTiposQueja(datos);\r\n                        setRespuestaTiposQueja(true);\r\n                    }\r\n                    else {\r\n                        window.showModal(1)\r\n                    }\r\n                }\r\n            )\r\n\r\n            setResultDiasNoLaborales([]);\r\n            ParametrosMasApi.getAllDiasNoLaborales().then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        var data = [];\r\n                        for (var i in datos.data) {\r\n                            var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\r\n                            var result = new Date(date);\r\n                            result.setDate(result.getDate() + 1);\r\n                            data.push(i, date);\r\n                        }\r\n\r\n                        setResultDiasNoLaborales(data);\r\n                        //console.log(resultDiasNoLaborales);\r\n                    } else {\r\n                        window.showModal(1);\r\n                    }\r\n\r\n                }\r\n\r\n            )\r\n\r\n            obtenerParametros();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const obtenerParametros = () => {\r\n        try {\r\n\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            ParametrosMasApi.getParametroPorNombre(data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => (\r\n                                setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        window.showModal(1);\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const disableCustomDt = current => {\r\n        return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));\r\n    }\r\n\r\n\r\n    let selectChangeTipoExpediente = (e) => {\r\n        setCountTextArea(0)\r\n        setSelectedTipoExpediente(e);\r\n    }\r\n\r\n    let selectChangeTipoDerechoPeticion = (e) => {\r\n        setCountTextArea(0)\r\n        setSelectedDerechoPeticion(e);\r\n    }\r\n\r\n    let selectChangeTerminoRespuesta = (e) => {\r\n        setSelectedTerminosRespuesta(e);\r\n    }\r\n\r\n    const selectTipoExpediente = () => {\r\n        return (\r\n            listaTipoExpediente.data.map((expediente, i) => {\r\n                return (\r\n                    <option key={expediente.id} value={expediente.id}>{expediente.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTipoDerechoPeticion = () => {\r\n        return (\r\n            listaTipoDerechoPeticion.data.map((derecho_peticion, i) => {\r\n                return (\r\n                    <option key={derecho_peticion.id} value={derecho_peticion.id}>{derecho_peticion.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTerminosRespuesta = () => {\r\n        return (\r\n            listaTerminosRespuesta.data.map((termino_respuesta, i) => {\r\n                return (\r\n                    <option key={termino_respuesta.id} value={termino_respuesta.id}>{termino_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTiposQueja = () => {\r\n        return (\r\n            listaTiposQueja.data.map((tipo_queja, i) => {\r\n                return (\r\n                    <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTiposQuejaExterna = () => {\r\n        return (\r\n            listaTiposQueja.data.map((tipo_queja, i) => {\r\n                if (from.subTipoExpediente) {\r\n\r\n                    if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_EXTERNA && from.subTipoExpediente.id_tipo_expediente != selectedTipoExpediente) {\r\n                        return (\r\n                            <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                        )\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_EXTERNA) {\r\n                        return (\r\n                            <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                        )\r\n                    }\r\n                }\r\n\r\n\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTiposQuejaInterna = () => {\r\n        return (\r\n            listaTiposQueja.data.map((tipo_queja, i) => {\r\n                if (from.subTipoExpediente) {\r\n                    if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_INTERNA && from.subTipoExpediente.id_tipo_expediente != selectedTipoExpediente) {\r\n                        return (\r\n                            <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                        )\r\n                    }\r\n                }\r\n                else{\r\n                    if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_INTERNA) {\r\n                        return (\r\n                            <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                        )\r\n                    }\r\n                }\r\n                \r\n\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    const alertaPorTipoDerechoPeticion = (i) => {\r\n        return (\r\n            listaTipoDerechoPeticion.data[i - 1].attributes.observacion\r\n        )\r\n    }\r\n\r\n\r\n    const enviarDatosControlInterno = (datos) => {\r\n\r\n        window.showSpinner(true);\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                    \"id_etapa\": props.getParametros.id_etapa,\r\n                    \"id_tipo_expediente\": datos.selectedTipoExpediente,\r\n                    \"observaciones\": null,\r\n                    \"id_tipo_queja\": datos.tipo_queja,\r\n                    \"id_termino_respuesta\": null,\r\n                    \"fecha_termino\": null,\r\n                    \"hora_termino\": null,\r\n                    \"gestion_juridica\": false,\r\n                    \"estado\": true,\r\n                    \"id_estado_reparto\": 2,\r\n                    \"id_derecho_peticion\": null,\r\n                    \"oficina_control_interno\": true,\r\n                    \"created_user\": getNombreUsuario,\r\n                    \"reclasificacion\": props.getParametros.reclasificacion,\r\n                }\r\n            }\r\n        }\r\n\r\n        ClasificacionRadicadoApi.addClasificacionRadicado(data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    //console.log(data);\r\n                    from.debeConsultar = true;\r\n                    window.showModal(2);\r\n                    setIsRedirect(true);\r\n                }\r\n                else {\r\n                    setErrorApi(datos.error.toString())\r\n                    window.showModal(1)\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n\r\n    const enviarDatos = (datos) => {\r\n        window.showSpinner(true);\r\n        let data;\r\n\r\n\r\n        //TIPO EXPEDIENTE => DERECHO DE PETICION => COPIAS \r\n        if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION \r\n            && selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.COPIAS) {\r\n\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": datos.observaciones,\r\n                        \"id_tipo_queja\": null,\r\n                        \"id_termino_respuesta\": null,\r\n                        \"fecha_termino\": null,\r\n                        \"hora_termino\": null,\r\n                        \"gestion_juridica\": false,\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": selectedTipoDerechoPeticion,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //TIPO EXPEDIENTE => DERECHO DE PETICION => GENERAL     \r\n        else if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION  \r\n            && selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.GENERAL ) {\r\n\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": datos.observaciones,\r\n                        \"id_tipo_queja\": null,\r\n                        \"id_termino_respuesta\": null,\r\n                        \"fecha_termino\": null,\r\n                        \"hora_termino\": null,\r\n                        \"gestion_juridica\": (datos.gestion_juridica === 'true'),\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": selectedTipoDerechoPeticion,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //TIPO EXPEDIENTE => DERECHO DE PETICION => DERECHO DE PETICION => ALERTA CONTROL POLITICO\r\n        else if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION  \r\n            && selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.ALERTA) {\r\n\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\":props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": datos.observaciones,\r\n                        \"id_tipo_queja\": null,\r\n                        \"id_termino_respuesta\": null,\r\n                        \"fecha_termino\": null,\r\n                        \"hora_termino\": null,\r\n                        \"gestion_juridica\": (datos.gestion_juridica === 'true'),\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": selectedTipoDerechoPeticion,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //TIPO EXPEDIENTE => PODER REFERENTE A SOLICITUD\r\n        if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ) {\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\":props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": null,\r\n                        \"id_tipo_queja\": datos.tipo_queja,\r\n                        \"id_termino_respuesta\": null,\r\n                        \"fecha_termino\": null,\r\n                        \"hora_termino\": null,\r\n                        \"gestion_juridica\": false,\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": null,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //TIPO EXPEDIENTE => QUEJA\r\n        if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\r\n\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": null,\r\n                        \"id_tipo_queja\": datos.tipo_queja,\r\n                        \"id_termino_respuesta\": null,\r\n                        \"fecha_termino\": null,\r\n                        \"hora_termino\": null,\r\n                        \"gestion_juridica\": false,\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": null,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //TIPO EXPEDIENTE => TUTELA => TERMINO RESPUESTA = DIAS\r\n        if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA \r\n            && datos.termino_rta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": null,\r\n                        \"id_tipo_queja\": null,\r\n                        \"id_termino_respuesta\": selectedTerminosRespuesta,\r\n                        \"fecha_termino\": datos.fechaTermino ? datos.fechaTermino : fechaTermino,\r\n                        \"hora_termino\": null,\r\n                        \"gestion_juridica\": false,\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": null,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //TIPO EXPEDIENTE => TUTELA => TERMINO RESPUESTA = HORAS\r\n        else if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA \r\n            && datos.termino_rta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": null,\r\n                        \"id_tipo_queja\": null,\r\n                        \"id_termino_respuesta\": selectedTerminosRespuesta,\r\n                        \"fecha_termino\": new Date(),\r\n                        \"hora_termino\": datos.horasTermino,\r\n                        \"gestion_juridica\": false,\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": null,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        ClasificacionRadicadoApi.addClasificacionRadicado(data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    //console.log(data);\r\n                    from.cambiaColorClasificacionRadicado = \"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";\r\n                    window.showModal(global.Constants.MODAL_CODIGO.EXITOSO)\r\n                    setIsRedirect(true);\r\n                }\r\n                else {\r\n                    setErrorApi(datos.error.toString())\r\n                    window.showModal(1)\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    // COMPONENTE CONFIRMACION OFICINA DE CONTROL INTERNO DISCIPLINARIO\r\n    const componenteTipoRespuesta = (tipo_respuesta) => {\r\n\r\n        // CONFIRMACION OFICINA DE CONTRO INTERNO = SI\r\n        if (tipo_respuesta === global.Constants.TIPO_RESPUESTA.SI) {\r\n            return (\r\n                <>\r\n                    {isRedirect ? redirectToRoutes() : null}\r\n\r\n                    {<InfoErrorApi error={errorApi} />}\r\n                    {<InfoExitoApi />}\r\n                    <Formik\r\n                        initialValues={{\r\n                            selectedTipoExpediente: 3,\r\n                            tipo_queja: '',\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.tipo_queja) {\r\n                                errores.tipo_queja = 'Debe seleccionar un tipo de queja'\r\n                            }\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            console.log(valores);\r\n                            enviarDatosControlInterno(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tipo_queja\">Ingrese Tipo de Queja <span className=\"text-danger\">*</span></label>\r\n\r\n                                <Field as=\"select\" className=\"form-control\" id=\"tipo_queja\" name=\"tipo_queja\">\r\n                                    <option value=\"\">Por favor seleccione</option>\r\n                                    {/*respuestaTiposQueja ? selectTiposQueja() : null*/}\r\n\r\n                                </Field>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-danger\"><i class=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        /// CONFIRMACION TIPO DE CLASIFICADO = NO\r\n        else if (tipo_respuesta === global.Constants.TIPO_RESPUESTA.NO) {\r\n            return (\r\n                <>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ingresoTipoExpediente\">Tipo de expediente <span className=\"text-danger\">*</span></label>\r\n                        <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                            value={selectedTipoExpediente} onChange={e => selectChangeTipoExpediente(e.target.value)}>\r\n                            <option value=\"\">Por favor seleccione</option>\r\n                            {respuestaTipoExpediente ? selectTipoExpediente() : null}\r\n                        </select>\r\n                    </div>\r\n\r\n\r\n                    {/*DERECHO DE PETICION*/}\r\n                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : ''}\r\n                    {/*PODER REFERENTE A SOLIICTUD*/}\r\n                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : ''}\r\n                    {/*QUEJA*/}\r\n                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : ''}\r\n                    {/*TUTELA*/}\r\n                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : ''}\r\n\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    // COMPOENENTE TIPO EXPEDIENTE\r\n    const componenteTipoExpediente = (tipo_expediente) => {\r\n\r\n        // TIPO DE EXPEDIENTE = DERECHO DE PETICION\r\n        if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) {\r\n            return (\r\n                <>\r\n                    {isRedirect ? redirectToRoutes() : null}\r\n                    <Spinner />\r\n                    {<InfoErrorApi error={errorApi} />}\r\n                    {<InfoExitoApi />}\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ingresoDerechoPeticion\">Tipo de derecho de petición <span className=\"text-danger\">*</span></label>\r\n                        <select className=\"form-control\" id=\"ingresoDerechoPeticion\" name=\"ingresoDerechoPeticion\"\r\n                            value={selectedTipoDerechoPeticion} onChange={e => selectChangeTipoDerechoPeticion(e.target.value)}>\r\n                            <option value=\"\">Por favor seleccione</option>\r\n                            {respuestaTipoDerechoPeticion ? selectTipoDerechoPeticion() : null}\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/*COPIAS*/}\r\n                    {selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.COPIAS ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.COPIAS) : ''}\r\n                    {/*GENERAL*/}\r\n                    {selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.GENERAL ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.GENERAL) : ''}\r\n                    {/*ALERTA CONTROL POLITICO*/}\r\n                    {selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.ALERTA ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.ALERTA) : ''}\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\r\n            return (\r\n                <>\r\n                    {isRedirect ? redirectToRoutes() : null}\r\n\r\n                    {<InfoErrorApi error={errorApi} />}\r\n                    {<InfoExitoApi />}\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: '',\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.tipo_queja) {\r\n                                errores.tipo_queja = 'Debe seleccionar un tipo de queja'\r\n                            }\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            console.log(valores);\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tipo_queja\">Ingrese Tipo de Queja <span className=\"text-danger\">*</span></label>\r\n\r\n                                <Field as=\"select\" className=\"form-control\" id=\"tipo_queja\" name=\"tipo_queja\">\r\n                                    <option value=\"\">Por favor seleccione</option>\r\n                                    {respuestaTiposQueja ? selectTiposQuejaExterna() : null}\r\n                                </Field>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-danger\"><i class=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = QUEJA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\r\n            return (\r\n                <>{isRedirect ? redirectToRoutes() : null}\r\n                    <Spinner />\r\n                    {<InfoErrorApi error={errorApi} />}\r\n                    {<InfoExitoApi />}\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: '',\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.tipo_queja) {\r\n                                errores.tipo_queja = 'Debe seleccionar un tipo de queja'\r\n                            }\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tipo_queja\">Ingrese Tipo de Queja <span className=\"text-danger\">*</span></label>\r\n\r\n                                <Field as=\"select\" className=\"form-control\" id=\"tipo_queja\" name=\"tipo_queja\">\r\n                                    <option value=\"\">Por favor seleccione</option>\r\n                                    {respuestaTiposQueja ? selectTiposQuejaExterna() : null}\r\n                                </Field>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary\"> <i className=\"fas fa-save\"></i> Registrar</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-danger\"><i class=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = TUTELA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA) {\r\n            return (\r\n                <>\r\n                    {isRedirect ? redirectToRoutes() : null}\r\n                    <Spinner />\r\n                    {<InfoErrorApi error={errorApi} />}\r\n                    {<InfoExitoApi />}\r\n                    <label htmlFor=\"ingresoTipoRtaTutela\">Ingrese termino de respuesta <span className=\"text-danger\">*</span></label>\r\n\r\n                    <select className=\"form-control\" id=\"termino_rta\" name=\"termino_rta\"\r\n                        value={selectedTerminosRespuesta}\r\n                        onChange={e => selectChangeTerminoRespuesta(e.target.value)}>\r\n                        <option value=\"{selectedTerminosRespuesta}\">Por favor seleccione</option>\r\n                        {respuestaTerminosRespuesta ? selectTerminosRespuesta() : null}\r\n                    </select>\r\n\r\n                    {/*DIAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.DIAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS) : ''}\r\n                    {/*HORAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.HORAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS) : ''}\r\n\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    // COMOPNENTE TIPO DERECHO DE PETICION\r\n    const componenteTipoDerechoPeticion = (tipo_derecho_peticion) => {\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\r\n        if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.COPIAS) {\r\n            return (\r\n                <>{isRedirect ? redirectToRoutes() : null}\r\n                    <Spinner />\r\n                    {<InfoErrorApi error={errorApi} />}\r\n                    {<InfoExitoApi />}\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n\r\n\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n\r\n                            return errores\r\n                        }}\r\n\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n\r\n                            console.log(valores);\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{alertaPorTipoDerechoPeticion(tipo_derecho_peticion)}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Observaciones</label>\r\n                                        <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                            placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                        <div className=\"text-right\">\r\n                                            <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                        </div>\r\n                                        <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"block-content block-content-full text-right\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-danger\"><i class=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.GENERAL) {\r\n            return (\r\n                <>{isRedirect ? redirectToRoutes() : null}\r\n                    <Spinner />\r\n                    {<InfoErrorApi error={errorApi} />}\r\n                    {<InfoExitoApi />}\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: ''\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n\r\n                            if (!valores.gestion_juridica) {\r\n                                errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{alertaPorTipoDerechoPeticion(tipo_derecho_peticion)}</p>\r\n                                    </div>\r\n\r\n                                    <label htmlFor=\"ingresoTipoExpediente\">Requiere gestión juridica <span className=\"text-danger\">*</span></label>\r\n                                    <Field as=\"select\" className=\"form-control\" id=\"gestion_juridica\" name=\"gestion_juridica\">\r\n                                        <option value=\"\">Por favor seleccione</option>\r\n                                        <option value=\"true\">Si</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </Field>\r\n\r\n                                    <label>Observaciones</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                </div>\r\n\r\n                                <div className=\"block-content block-content-full text-right\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-danger\"><i class=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.ALERTA) {\r\n            return (\r\n                <>\r\n                    {isRedirect ? redirectToRoutes() : null}\r\n                    <Spinner />\r\n                    {<InfoErrorApi error={errorApi} />}\r\n                    {<InfoExitoApi />}\r\n                    <Formik\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: ''\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n                            if (!valores.gestion_juridica) {\r\n                                errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{alertaPorTipoDerechoPeticion(tipo_derecho_peticion)}</p>\r\n                                    </div>\r\n\r\n                                    <label htmlFor=\"ingresoTipoExpediente\">Requiere gestión juridica <span className=\"text-danger\">*</span></label>\r\n                                    <Field as=\"select\" className=\"form-control\" id=\"gestion_juridica\" name=\"gestion_juridica\">\r\n                                        <option value=\"\">Por favor seleccione</option>\r\n                                        <option value=\"true\">Si</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </Field>\r\n\r\n\r\n                                    <label>Observaciones</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n\r\n                                    <div className=\"block-content block-content-full text-right\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                        <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                            <button type=\"button\" className=\"btn btn-danger\"><i class=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    const handleCallbackFechaTermino = (childData) => {\r\n        try {\r\n            setFechaTermino(childData)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\r\n    const componenteTerminosRespuesta = (termino_respuesta) => {\r\n\r\n        //TERMINO TUTELA = DIAS      \r\n        if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\r\n            return (\r\n                <>\r\n                    {isRedirect ? redirectToRoutes() : null}\r\n\r\n                    {<InfoErrorApi error={errorApi} />}\r\n                    {<InfoExitoApi />}\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: '',\r\n                            fechaTermino: ''\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.fechaTermino && !fechaTermino) {\r\n                                errores.fechaTermino = 'Debe seleccionar el termino de respuesta'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label>Horas para termino</label>  <span className=\"text-danger\">*</span>\r\n\r\n                                {/*<DatePicker id=\"fechaTermino\" locale='es' name=\"fechaTermino\" dateFormat=\"DD/MM/YYYY\" closeOnSelect={true} placeholder=\"dd/mm/yyyy\" onChange={(date) => setFechaTermino(date)} timeFormat={false} isValidDate={disableCustomDt} />*/}\r\n                                <DatePerson resultDiasNoLaborales={resultDiasNoLaborales} getAnosAtrasInvalidos={getAnosAtrasInvalidos} parentCallback={handleCallbackFechaTermino} id=\"fechaTermino\" name=\"fechaTermino\" />\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-danger\"><i class=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n\r\n            )\r\n        }\r\n\r\n        //TERMINO TUTELA = HORAS     \r\n        else if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\r\n\r\n            return (\r\n                <>\r\n                    {isRedirect ? redirectToRoutes() : null}\r\n                    <Spinner />\r\n                    {<InfoErrorApi error={errorApi} />}\r\n                    {<InfoExitoApi />}\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: '',\r\n                            fechaTermino: ''\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.horasTermino) {\r\n                                errores.horasTermino = 'Debe seleccionar el termino de respuesta'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label>Horas para termino</label>  <span className=\"text-danger\">*</span>\r\n                                <Field type=\"number\" min=\"1\" max='24' id=\"horasTermino\" name=\"horasTermino\" className=\"form-control\" placeholder=\"\" />\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n    };\r\n\r\n        \r\n\r\n        return (\r\n                \r\n\r\n                <>\r\n                    {\r\n                        (hasAccess('TiposUsuario', 'Control interno disciplinario')) ?\r\n                            (\r\n\r\n                                <div className=\"block-content\">\r\n\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"ingresoTipoExpediente\">Tipo de expediente <span className=\"text-danger\">*</span></label>\r\n                                                <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                                                    value={selectedTipoExpediente} onChange={e => selectChangeTipoExpediente(e.target.value)}>\r\n                                                    <option value=\"\">Por favor seleccione</option>\r\n                                                    {respuestaTipoExpediente ? selectTipoExpediente() : null}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/*DERECHO DE PETICION*/}\r\n                                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : ''}\r\n                                    {/*PODER REFERENTE A SOLIICTUD*/}\r\n                                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : ''}\r\n                                    {/*QUEJA*/}\r\n                                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : ''}\r\n                                    {/*TUTELA*/}\r\n                                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : ''}\r\n\r\n                                </div>\r\n                            ) : null\r\n                    }\r\n\r\n                </>\r\n                        \r\n               \r\n        );\r\n \r\n    \r\n}\r\n\r\nexport default ClasificacionRadicado;"]},"metadata":{},"sourceType":"module"}