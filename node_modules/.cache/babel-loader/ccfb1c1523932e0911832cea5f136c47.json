{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSchema = createSchema;\n/**\n * Creates a Schema from the specification.\n *\n * @function\n * @param {string} typeName Name of the model being created.\n *    It can be chosen freely.\n * @param {object} schema Schema specification.\n */\n\nfunction createSchema(typeName, schema) {\n  return {\n    _type: 'schema',\n\n    /**\n     * Returns the schema specification.\n     *\n     * @returns {object} Schema specification.\n     */\n    getSchema: () => schema,\n\n    /**\n     * Returns the schema specification.\n     *\n     * @returns {object} Schema specification.\n     */\n    getFieldSchema: name => schema[name],\n\n    /**\n     * Returns the schema name.\n     *\n     * @returns {string} Schema name (also called ``typeName``).\n     */\n    getType: () => typeName,\n\n    /**\n     * Returns the name of the fields.\n     */\n    getFieldNames: () => Object.keys(schema)\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createSchema","typeName","schema","_type","getSchema","getFieldSchema","name","getType","getFieldNames","keys"],"sources":["C:/w2d/personeria/personeria-ui/node_modules/react-hook-form-auto/lib/createSchema.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSchema = createSchema;\n\n/**\n * Creates a Schema from the specification.\n *\n * @function\n * @param {string} typeName Name of the model being created.\n *    It can be chosen freely.\n * @param {object} schema Schema specification.\n */\nfunction createSchema(typeName, schema) {\n  return {\n    _type: 'schema',\n\n    /**\n     * Returns the schema specification.\n     *\n     * @returns {object} Schema specification.\n     */\n    getSchema: () => schema,\n\n    /**\n     * Returns the schema specification.\n     *\n     * @returns {object} Schema specification.\n     */\n    getFieldSchema: name => schema[name],\n\n    /**\n     * Returns the schema name.\n     *\n     * @returns {string} Schema name (also called ``typeName``).\n     */\n    getType: () => typeName,\n\n    /**\n     * Returns the name of the fields.\n     */\n    getFieldNames: () => Object.keys(schema)\n  };\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,YAAR,GAAuBA,YAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,YAAT,CAAsBC,QAAtB,EAAgCC,MAAhC,EAAwC;EACtC,OAAO;IACLC,KAAK,EAAE,QADF;;IAGL;AACJ;AACA;AACA;AACA;IACIC,SAAS,EAAE,MAAMF,MARZ;;IAUL;AACJ;AACA;AACA;AACA;IACIG,cAAc,EAAEC,IAAI,IAAIJ,MAAM,CAACI,IAAD,CAfzB;;IAiBL;AACJ;AACA;AACA;AACA;IACIC,OAAO,EAAE,MAAMN,QAtBV;;IAwBL;AACJ;AACA;IACIO,aAAa,EAAE,MAAMZ,MAAM,CAACa,IAAP,CAAYP,MAAZ;EA3BhB,CAAP;AA6BD"},"metadata":{},"sourceType":"script"}