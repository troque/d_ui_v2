{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCoercers = createCoercers;\n\nvar _utils = require(\"./utils\");\n\nfunction createCoercers(_ref) {\n  var initialValues = _ref.initialValues,\n      stateRef = _ref.stateRef,\n      skin = _ref.skin,\n      notify = _ref.notify,\n      schema = _ref.schema;\n  return function coercedSubmit(doc) {\n    var coerceObject = function coerceObject(_ref2) {\n      var object = _ref2.object,\n          schemaDef = _ref2.schemaDef;\n      var fields = Object.keys(schemaDef);\n      var result = (0, _utils.deepmerge)({}, object);\n      fields.forEach(function (fieldName) {\n        var fieldSchema = schemaDef[fieldName];\n        var type = fieldSchema.type;\n        var typeKey = (0, _utils.schemaTypeEx)(type);\n\n        var _ref3 = fieldSchema.coerce ? fieldSchema : skin[typeKey],\n            coerce = _ref3.coerce;\n\n        var value = object[fieldName];\n\n        if (coerce) {\n          result[fieldName] = coerce(value, {\n            coerceObject: coerceObject,\n            schemaDef: schemaDef,\n            fieldName: fieldName\n          });\n        }\n      });\n      return result;\n    };\n\n    var coerceWithSchema = function coerceWithSchema(_ref4) {\n      var doc = _ref4.doc,\n          schema = _ref4.schema;\n      var schemaDef = schema.getSchema();\n      return coerceObject({\n        object: doc,\n        schemaDef: schemaDef\n      });\n    };\n\n    var fields = Object.keys(stateRef.current.fields);\n    var values = fields.reduce(function (values, field) {\n      var state = stateRef.current.fields[field];\n\n      if (state.visible) {\n        var _ref5 = (0, _utils.objectTraverse)(values, field, {\n          createIfMissing: true\n        }),\n            _ref6 = _slicedToArray(_ref5, 2),\n            container = _ref6[0],\n            attr = _ref6[1];\n\n        var _ref7 = (0, _utils.objectTraverse)(doc, field),\n            _ref8 = _slicedToArray(_ref7, 1),\n            docContainer = _ref8[0];\n\n        if (container && attr) {\n          if (state.changed) container[attr] = state.value;else if (docContainer) container[attr] = docContainer[attr];\n        }\n      }\n\n      return values;\n    }, {});\n    var wholeObj = (0, _utils.deepmerge)({}, initialValues, values);\n    var coerced = coerceWithSchema({\n      doc: wholeObj,\n      schema: schema\n    });\n    notify(coerced, doc);\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createCoercers","_utils","require","initialValues","stateRef","skin","notify","schema","coercedSubmit","doc","coerceObject","object","schemaDef","fields","keys","result","deepmerge","forEach","fieldName","fieldSchema","type","typeKey","schemaTypeEx","coerce","coerceWithSchema","getSchema","current","values","reduce","field","state","visible","objectTraverse","createIfMissing","container","attr","docContainer","changed","wholeObj","coerced"],"sources":["C:/w2d/personeria/personeria-ui/node_modules/react-hook-form-auto/lib/coercing.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCoercers = createCoercers;\n\nvar _utils = require(\"./utils\");\n\nfunction createCoercers({\n  initialValues,\n  stateRef,\n  skin,\n  notify,\n  schema\n}) {\n  return function coercedSubmit(doc) {\n    const coerceObject = ({\n      object,\n      schemaDef\n    }) => {\n      const fields = Object.keys(schemaDef);\n      const result = (0, _utils.deepmerge)({}, object);\n      fields.forEach(fieldName => {\n        const fieldSchema = schemaDef[fieldName];\n        const {\n          type\n        } = fieldSchema;\n        const typeKey = (0, _utils.schemaTypeEx)(type);\n        const {\n          coerce\n        } = fieldSchema.coerce ? fieldSchema : skin[typeKey];\n        const value = object[fieldName];\n\n        if (coerce) {\n          result[fieldName] = coerce(value, {\n            coerceObject,\n            schemaDef,\n            fieldName\n          });\n        }\n      });\n      return result;\n    };\n\n    const coerceWithSchema = ({\n      doc,\n      schema\n    }) => {\n      const schemaDef = schema.getSchema();\n      return coerceObject({\n        object: doc,\n        schemaDef\n      });\n    };\n\n    const fields = Object.keys(stateRef.current.fields);\n    const values = fields.reduce((values, field) => {\n      const state = stateRef.current.fields[field];\n\n      if (state.visible) {\n        const [container, attr] = (0, _utils.objectTraverse)(values, field, {\n          createIfMissing: true\n        });\n        const [docContainer] = (0, _utils.objectTraverse)(doc, field);\n\n        if (container && attr) {\n          if (state.changed) container[attr] = state.value;else if (docContainer) container[attr] = docContainer[attr];\n        }\n      }\n\n      return values;\n    }, {});\n    const wholeObj = (0, _utils.deepmerge)({}, initialValues, values);\n    const coerced = coerceWithSchema({\n      doc: wholeObj,\n      schema\n    });\n    notify(coerced, doc);\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}