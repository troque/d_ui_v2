{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\LogSistema\\\\LogEtapaLista.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useLocation } from 'react-router-dom';\nimport LogApi from '../Api/Services/LogApi';\nimport moment from 'moment';\nimport { Link } from \"react-router-dom\";\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LogEtapaLista() {\n  _s();\n\n  const [errorApi, setErrorApi] = useState('');\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const [getRespuestaLog, setRespuestaLog] = useState(false);\n  const [getLogLista, setLogLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  useEffect(() => {\n    async function fetchData() {\n      const data = {\n        \"data\": {\n          \"type\": \"log_etapa\",\n          \"attributes\": {\n            \"descripcion\": \"descripcion\",\n            \"id_etapa\": \"fecha_registro\",\n            \"id_fase\": \"id_dependencia\",\n            \"id_proceso_disciplinario\": \"id_proceso_disciplinario\",\n            \"id_tipo_log\": \"id_tipo_log\",\n            \"id_estado\": \"id_estado\",\n            \"created_user\": \"created_user\",\n            \"id_dependencia_origen\": \"id_dependencia_origen\"\n          }\n        }\n      };\n      LogApi.getLogEtapaProcesoDisciplinario(data, procesoDisciplinarioId).then(datos => !datos.error ? (setLogLista(datos), setRespuestaLog(true)) : window.showModal(1));\n    }\n\n    fetchData();\n  }, []);\n\n  const listaLog = () => {\n    if (getLogLista.data != null && typeof getLogLista.data != 'undefined') {\n      return getLogLista.data.map((log, i) => {\n        return cargarLog(log, i);\n      });\n    } else {\n      return getLogLista.map((log, i) => {\n        return cargarLog(log, i);\n      });\n    }\n  };\n\n  const cargarLog = (log, i) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.etapa ? log.attributes.etapa.nombre : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [log.attributes.funcionario_registra ? log.attributes.funcionario_registra.name : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 112\n          }, this), log.attributes.dependencia_origen ? log.attributes.dependencia_origen.nombre : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [log.attributes.funcionario_actual ? log.attributes.funcionario_actual.name : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 108\n          }, this), log.attributes.dep_funcionario_actual ? log.attributes.dep_funcionario_actual.nombre : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.estado_etapa ? log.attributes.estado_etapa.nombre : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n  /* FILTRO DE BUSQUEDA */\n\n\n  const [getRespuestaAntecedentes, setRespuestaAntecedentes] = useState(false);\n  const [getAntecedentesLista, setAntecedentesLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getListaDetalleCambios, setListaDetalleCambios] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [respuestaAntecedentesTotal, setRespuestaAntecedentesTotal] = useState(false);\n  const [getAntecedentesListaTotal, setAntecedentesListaTotal] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n\n  const handleSearch = event => {\n    try {\n      if (event.target.value.trim().trim() == \"\" || event.target.value.trim().length == 0) {\n        setAntecedentesLista(getAntecedentesListaTotal);\n      } else {\n        var filteredData = {\n          data: getAntecedentesListaTotal.data.filter(suggestion => (suggestion.attributes.descripcion + suggestion.attributes.nombre_dependencia + suggestion.attributes.etapa.nombre + suggestion.attributes.estado + suggestion.attributes.fecha_registro).toLowerCase().includes(event.target.value.toLowerCase()))\n        };\n        setAntecedentesLista(filteredData);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block block-themed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"block-title\",\n          children: \"Log Proceso disciplinario :: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group \",\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                id: \"search\",\n                name: \"search\",\n                onChange: handleSearch,\n                onKeyPress: e => {\n                  e.key === 'Enter' && e.preventDefault();\n                },\n                className: \"form-control border border-success\",\n                placeholder: \"Buscar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Etapa\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Fecha\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Funcionario Registra\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Funcionario Actual\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Descripci\\xF3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Estado del tr\\xE1mite\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: getRespuestaLog ? listaLog() : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(LogEtapaLista, \"KB6waJLbj89ki5YyJ+qAxxQsOsc=\", false, function () {\n  return [useLocation];\n});\n\n_c = LogEtapaLista;\nexport default LogEtapaLista;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogEtapaLista\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/LogSistema/LogEtapaLista.js"],"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","useLocation","LogApi","moment","Link","DataTable","LogEtapaLista","errorApi","setErrorApi","location","from","state","radicado","procesoDisciplinarioId","getRespuestaLog","setRespuestaLog","getLogLista","setLogLista","data","links","meta","fetchData","getLogEtapaProcesoDisciplinario","then","datos","error","window","showModal","listaLog","map","log","i","cargarLog","attributes","etapa","nombre","created_at","funcionario_registra","name","dependencia_origen","funcionario_actual","dep_funcionario_actual","descripcion","estado_etapa","getRespuestaAntecedentes","setRespuestaAntecedentes","getAntecedentesLista","setAntecedentesLista","getListaDetalleCambios","setListaDetalleCambios","respuestaAntecedentesTotal","setRespuestaAntecedentesTotal","getAntecedentesListaTotal","setAntecedentesListaTotal","handleSearch","event","target","value","trim","length","filteredData","filter","suggestion","nombre_dependencia","estado","fecha_registro","toLowerCase","includes","console","e","key","preventDefault"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useLocation } from 'react-router-dom'\r\nimport LogApi from '../Api/Services/LogApi';\r\nimport moment from 'moment';\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from 'react-data-table-component';\r\n\r\nfunction LogEtapaLista() {\r\n\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId; \r\n\r\n    const [getRespuestaLog, setRespuestaLog] = useState(false);\r\n    const [getLogLista, setLogLista] = useState({ data: [], links: [], meta: [] });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"log_etapa\",\r\n                    \"attributes\": {\r\n                        \"descripcion\": \"descripcion\",\r\n                        \"id_etapa\": \"fecha_registro\",\r\n                        \"id_fase\": \"id_dependencia\",\r\n                        \"id_proceso_disciplinario\": \"id_proceso_disciplinario\",\r\n                        \"id_tipo_log\": \"id_tipo_log\",\r\n                        \"id_estado\": \"id_estado\",\r\n                        \"created_user\": \"created_user\",\r\n                        \"id_dependencia_origen\": \"id_dependencia_origen\"\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            LogApi.getLogEtapaProcesoDisciplinario(data, procesoDisciplinarioId).then(\r\n                datos => !datos.error ? (setLogLista(datos), setRespuestaLog(true)) : window.showModal(1)\r\n            )\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const listaLog = () => {\r\n\r\n        if (getLogLista.data != null && typeof (getLogLista.data) != 'undefined') {\r\n            return (\r\n\r\n                getLogLista.data.map((log, i) => {\r\n                    return (\r\n                        cargarLog(log, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                getLogLista.map((log, i) => {\r\n                    return (\r\n                        cargarLog(log, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const cargarLog = (log, i) => {\r\n\r\n        return (\r\n            <>\r\n\r\n                <tr>\r\n                    <td>\r\n                        {(log.attributes.etapa ? log.attributes.etapa.nombre : \"\")}\r\n                    </td>\r\n                    <td>\r\n                        {log.attributes.created_at}\r\n                    </td>\r\n                    <td>\r\n                        {(log.attributes.funcionario_registra ? log.attributes.funcionario_registra.name : \"\")}<br/>\r\n                        {(log.attributes.dependencia_origen ? log.attributes.dependencia_origen.nombre : \"\")}\r\n                    </td>\r\n\r\n                    <td>\r\n                        {(log.attributes.funcionario_actual ? log.attributes.funcionario_actual.name : \"\")}<br/>\r\n                        {(log.attributes.dep_funcionario_actual ? log.attributes.dep_funcionario_actual.nombre : \"\")}\r\n                    </td>\r\n\r\n                    <td>\r\n                        {log.attributes.descripcion}\r\n                    </td>\r\n\r\n                    <td>\r\n                        {(log.attributes.estado_etapa ? log.attributes.estado_etapa.nombre : \"\")}\r\n                    </td>\r\n                </tr>\r\n\r\n                \r\n                               \r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    /* FILTRO DE BUSQUEDA */\r\n\r\n    const [getRespuestaAntecedentes, setRespuestaAntecedentes] = useState(false);\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const [getListaDetalleCambios, setListaDetalleCambios] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const [respuestaAntecedentesTotal, setRespuestaAntecedentesTotal] = useState(false);\r\n    const [getAntecedentesListaTotal, setAntecedentesListaTotal] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const handleSearch = (event) => {\r\n        try {\r\n            if ((event.target.value.trim().trim() == \"\") || (event.target.value.trim().length == 0)) {\r\n\r\n                setAntecedentesLista(getAntecedentesListaTotal);\r\n            }\r\n            else {\r\n\r\n\r\n                var filteredData = {\r\n                    data: getAntecedentesListaTotal.data.filter(\r\n                        suggestion => ((suggestion.attributes.descripcion\r\n                            + suggestion.attributes.nombre_dependencia + suggestion.attributes.etapa.nombre +\r\n                            suggestion.attributes.estado + suggestion.attributes.fecha_registro).toLowerCase().includes(event.target.value.toLowerCase()))\r\n                    )\r\n                };\r\n                setAntecedentesLista(filteredData)\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"block block-themed\">\r\n                    <div className=\"block-header\">\r\n                        <h3 className=\"block-title\">Log Proceso disciplinario :: </h3>\r\n                    </div>\r\n                    <div className=\"block-content\">\r\n\r\n                    <div className='row'>\r\n\r\n                        <div className='col-md-3'>\r\n                            <div className=\"form-group \">\r\n                                <Field type=\"text\" id=\"search\" name=\"search\" onChange={handleSearch} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} className=\"form-control border border-success\" placeholder=\"Buscar\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                        <div className='col-md-12'>\r\n                            <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                <thead>\r\n                                    <tr>\r\n\r\n                                        <th>Etapa</th>\r\n                                        <th>Fecha</th>\r\n                                        <th>Funcionario Registra</th>\r\n                                        <th>Funcionario Actual</th>\r\n                                        <th>Descripción</th>\r\n                                        <th>Estado del trámite</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {getRespuestaLog ? listaLog() : null}\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LogEtapaLista;"]},"metadata":{},"sourceType":"module"}