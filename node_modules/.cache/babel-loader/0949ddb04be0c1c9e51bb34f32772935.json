{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\LogSistema\\\\LogEtapaLista.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useLocation } from 'react-router-dom';\nimport LogApi from '../Api/Services/LogApi';\nimport moment from 'moment';\nimport { Link } from \"react-router-dom\";\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LogEtapaLista() {\n  _s();\n\n  const [errorApi, setErrorApi] = useState('');\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const [getRespuestaLog, setRespuestaLog] = useState(false);\n  const [getLogLista, setLogLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const columns = [{\n    name: 'Etapa',\n    cell: log => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [log.attributes.etapa ? log.attributes.etapa.nombre : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 90\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Etapa: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), log.attributes.etapa ? log.attributes.etapa.nombre : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 26\n    }, this),\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Fecha',\n    selector: log => log.attributes.created_at,\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Funcionario Registra',\n    selector: antecedente => antecedente.attributes.nombre_dependencia,\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Funcionario Actual',\n    cell: antecedente => /*#__PURE__*/_jsxDEV(\"div\", {\n      title: antecedente.attributes.descripcion,\n      children: antecedente.attributes.descripcion_corta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 34\n    }, this),\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Descripción',\n    selector: antecedente => antecedente.attributes.estado == \"1\" ? 'Activo' : 'Inactivo',\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Estado del trámite',\n    selector: antecedente => antecedente.attributes.estado == \"1\" ? 'Activo' : 'Inactivo',\n    sortable: true,\n    width: \"15%\"\n  }];\n  useEffect(() => {\n    async function fetchData() {\n      const data = {\n        \"data\": {\n          \"type\": \"log_etapa\",\n          \"attributes\": {\n            \"descripcion\": \"descripcion\",\n            \"id_etapa\": \"fecha_registro\",\n            \"id_fase\": \"id_dependencia\",\n            \"id_proceso_disciplinario\": \"id_proceso_disciplinario\",\n            \"id_tipo_log\": \"id_tipo_log\",\n            \"id_estado\": \"id_estado\",\n            \"created_user\": \"created_user\",\n            \"id_dependencia_origen\": \"id_dependencia_origen\"\n          }\n        }\n      };\n      LogApi.getLogEtapaProcesoDisciplinario(data, procesoDisciplinarioId).then(datos => !datos.error ? (setLogLista(datos), setRespuestaLog(true)) : window.showModal(1));\n    }\n\n    fetchData();\n  }, []);\n\n  const listaLog = () => {\n    if (getLogLista.data != null && typeof getLogLista.data != 'undefined') {\n      return getLogLista.data.map((log, i) => {\n        return cargarLog(log, i);\n      });\n    } else {\n      return getLogLista.map((log, i) => {\n        return cargarLog(log, i);\n      });\n    }\n  };\n\n  const cargarLog = (log, i) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.etapa ? log.attributes.etapa.nombre : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [log.attributes.funcionario_registra ? log.attributes.funcionario_registra.name : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 112\n          }, this), log.attributes.dependencia_origen ? log.attributes.dependencia_origen.nombre : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [log.attributes.funcionario_actual ? log.attributes.funcionario_actual.name : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 108\n          }, this), log.attributes.dep_funcionario_actual ? log.attributes.dep_funcionario_actual.nombre : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.estado_etapa ? log.attributes.estado_etapa.nombre : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block block-themed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"block-title\",\n          children: \"Log Proceso disciplinario :: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Etapa\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Fecha\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Funcionario Registra\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Funcionario Actual\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Descripci\\xF3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Estado del tr\\xE1mite\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: getRespuestaLog ? listaLog() : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(LogEtapaLista, \"0NnCQkeCjetghv0R0HLQ48/2zOA=\", false, function () {\n  return [useLocation];\n});\n\n_c = LogEtapaLista;\nexport default LogEtapaLista;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogEtapaLista\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/LogSistema/LogEtapaLista.js"],"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","useLocation","LogApi","moment","Link","DataTable","LogEtapaLista","errorApi","setErrorApi","location","from","state","radicado","procesoDisciplinarioId","getRespuestaLog","setRespuestaLog","getLogLista","setLogLista","data","links","meta","columns","name","cell","log","attributes","etapa","nombre","sortable","width","selector","created_at","antecedente","nombre_dependencia","descripcion","descripcion_corta","estado","fetchData","getLogEtapaProcesoDisciplinario","then","datos","error","window","showModal","listaLog","map","i","cargarLog","funcionario_registra","dependencia_origen","funcionario_actual","dep_funcionario_actual","estado_etapa"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useLocation } from 'react-router-dom'\r\nimport LogApi from '../Api/Services/LogApi';\r\nimport moment from 'moment';\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from 'react-data-table-component';\r\n\r\nfunction LogEtapaLista() {\r\n\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId; \r\n\r\n    const [getRespuestaLog, setRespuestaLog] = useState(false);\r\n    const [getLogLista, setLogLista] = useState({ data: [], links: [], meta: [] });\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Etapa',\r\n\r\n            cell: log => <div>{(log.attributes.etapa ? log.attributes.etapa.nombre : \"\")}<br />\r\n                <strong>Etapa: </strong>{(log.attributes.etapa ? log.attributes.etapa.nombre : \"\")}</div>,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            name: 'Fecha',\r\n            selector: log => log.attributes.created_at,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            name: 'Funcionario Registra',\r\n            selector: antecedente => antecedente.attributes.nombre_dependencia,\r\n            sortable: true,\r\n            width: \"15%\",\r\n        },\r\n        {\r\n            name: 'Funcionario Actual',\r\n            cell: antecedente => <div title={antecedente.attributes.descripcion}>{antecedente.attributes.descripcion_corta}</div>,\r\n            sortable: true,\r\n            width: \"15%\",\r\n        },\r\n        {\r\n            name: 'Descripción',\r\n            selector: antecedente => (antecedente.attributes.estado == \"1\" ? 'Activo' : 'Inactivo'),\r\n            sortable: true,\r\n            width: \"15%\",\r\n        },\r\n\r\n        {\r\n            name: 'Estado del trámite',\r\n            selector: antecedente => (antecedente.attributes.estado == \"1\" ? 'Activo' : 'Inactivo'),\r\n            sortable: true,\r\n            width: \"15%\",\r\n        },  \r\n    ];\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"log_etapa\",\r\n                    \"attributes\": {\r\n                        \"descripcion\": \"descripcion\",\r\n                        \"id_etapa\": \"fecha_registro\",\r\n                        \"id_fase\": \"id_dependencia\",\r\n                        \"id_proceso_disciplinario\": \"id_proceso_disciplinario\",\r\n                        \"id_tipo_log\": \"id_tipo_log\",\r\n                        \"id_estado\": \"id_estado\",\r\n                        \"created_user\": \"created_user\",\r\n                        \"id_dependencia_origen\": \"id_dependencia_origen\"\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            LogApi.getLogEtapaProcesoDisciplinario(data, procesoDisciplinarioId).then(\r\n                datos => !datos.error ? (setLogLista(datos), setRespuestaLog(true)) : window.showModal(1)\r\n            )\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const listaLog = () => {\r\n\r\n        if (getLogLista.data != null && typeof (getLogLista.data) != 'undefined') {\r\n            return (\r\n\r\n                getLogLista.data.map((log, i) => {\r\n                    return (\r\n                        cargarLog(log, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                getLogLista.map((log, i) => {\r\n                    return (\r\n                        cargarLog(log, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const cargarLog = (log, i) => {\r\n\r\n        return (\r\n            <>\r\n\r\n                <tr>\r\n                    <td>\r\n                        {(log.attributes.etapa ? log.attributes.etapa.nombre : \"\")}\r\n                    </td>\r\n                    <td>\r\n                        {log.attributes.created_at}\r\n                    </td>\r\n                    <td>\r\n                        {(log.attributes.funcionario_registra ? log.attributes.funcionario_registra.name : \"\")}<br/>\r\n                        {(log.attributes.dependencia_origen ? log.attributes.dependencia_origen.nombre : \"\")}\r\n                    </td>\r\n\r\n                    <td>\r\n                        {(log.attributes.funcionario_actual ? log.attributes.funcionario_actual.name : \"\")}<br/>\r\n                        {(log.attributes.dep_funcionario_actual ? log.attributes.dep_funcionario_actual.nombre : \"\")}\r\n                    </td>\r\n\r\n                    <td>\r\n                        {log.attributes.descripcion}\r\n                    </td>\r\n\r\n                    <td>\r\n                        {(log.attributes.estado_etapa ? log.attributes.estado_etapa.nombre : \"\")}\r\n                    </td>\r\n                </tr>\r\n\r\n                \r\n                               \r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"block block-themed\">\r\n                    <div className=\"block-header\">\r\n                        <h3 className=\"block-title\">Log Proceso disciplinario :: </h3>\r\n                    </div>\r\n                    <div className=\"block-content\">\r\n                        <div className='col-md-12'>\r\n                            <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                <thead>\r\n                                    <tr>\r\n\r\n                                        <th>Etapa</th>\r\n                                        <th>Fecha</th>\r\n                                        <th>Funcionario Registra</th>\r\n                                        <th>Funcionario Actual</th>\r\n                                        <th>Descripción</th>\r\n                                        <th>Estado del trámite</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {getRespuestaLog ? listaLog() : null}\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LogEtapaLista;"]},"metadata":{},"sourceType":"module"}