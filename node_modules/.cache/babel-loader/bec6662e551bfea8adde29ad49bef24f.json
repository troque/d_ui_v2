{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Utils\\\\ListaBotones.js\";\nimport { Link } from \"react-router-dom\";\nimport React, { Component, Fragment } from \"react\";\nimport { hasAccess } from '../../components/Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ListaBotones extends Component {\n  constructor(props) {\n    super(props);\n\n    this.boton_add = (id_etapa, id_fase) => {\n      if (hasAccess(this.state.modulo, this.state.funcionalidad_crear)) {\n        if (id_etapa != global.Constants.ETAPAS.CAPTURA_REPARTO && id_fase == global.Constants.FASES.CLASIFICACION) {\n          //console.log(\"FALSE\");\n          return false;\n        } else {\n          //console.log(\"TRUE\");\n          return true;\n        }\n      }\n    };\n\n    this.refrescar = estado => {\n      try {\n        this.props.parentCallback(estado);\n      } catch (error) {\n        console.error(\"Error \" + error);\n      }\n    };\n\n    const {\n      getRoutes\n    } = this.props;\n    const {\n      from\n    } = this.props;\n    let {\n      mostrarBotonAgregar\n    } = true;\n\n    if (this.props.hasOwnProperty('mostrarBotonAgregar')) {\n      mostrarBotonAgregar = this.props.mostrarBotonAgregar;\n    } else {\n      mostrarBotonAgregar = true;\n    }\n\n    console.log(getRoutes.crear_registro);\n    this.state = {\n      id_etapa: getRoutes.id_etapa,\n      id_fase: getRoutes.id_fase,\n      crear_registro: getRoutes.crear_registro,\n      consultar_registros: getRoutes.consultar_registros,\n      adjuntar_documento: getRoutes.adjuntar_documento,\n      repositorio_documentos: getRoutes.repositorio_documentos,\n      modulo: getRoutes.modulo,\n      funcionalidad_crear: getRoutes.funcionalidad_crear,\n      funcionalidad_consultar: getRoutes.funcionalidad_consultar,\n      from: from,\n      muestra_atras: getRoutes.muestra_atras,\n      selected_id_etapa: getRoutes.selected_id_etapa,\n      mostrarBotonAgregar: mostrarBotonAgregar\n    };\n  }\n  /**\r\n   * Se valida que la única fase que no puede agregar un registro nuevo es clasificacion del rádicado una vez la etapa se haya cerrado.\r\n   */\n\n\n  render() {\n    const {\n      state: {\n        crear_registro,\n        consultar_registros,\n        adjuntar_documento,\n        from,\n        selected_id_etapa,\n        mostrarBotonAgregar\n      }\n    } = this;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md text-right ms-auto\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [this.boton_add(this.state.id_etapa, this.state.id_fase) ? this.state.mostrarBotonAgregar ? /*#__PURE__*/_jsxDEV(Link, {\n            to: this.state.crear_registro,\n            state: {\n              from: from,\n              selected_id_etapa: selected_id_etapa\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              title: \"Agregar nuevo registro\",\n              className: \"btn btn-primary\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 123\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }, this) : null : null, hasAccess(this.state.modulo, this.state.funcionalidad_consultar) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            title: \"Listado de activos\",\n            onClick: () => this.refrescar('1'),\n            className: \"btn btn-primary\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 147\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this) : null, hasAccess(this.state.modulo, this.state.funcionalidad_consultar) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            title: \"Listado de inactivos\",\n            onClick: () => this.refrescar('0'),\n            className: \"btn btn-danger\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 148\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this) : null, this.state.muestra_atras ? /*#__PURE__*/_jsxDEV(Link, {\n            to: '/RamasProceso/',\n            title: \"Regresar a ramas del proceso\",\n            state: {\n              from: from\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-backward\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 87\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListaBotones;","map":{"version":3,"names":["Link","React","Component","Fragment","hasAccess","ListaBotones","constructor","props","boton_add","id_etapa","id_fase","state","modulo","funcionalidad_crear","global","Constants","ETAPAS","CAPTURA_REPARTO","FASES","CLASIFICACION","refrescar","estado","parentCallback","error","console","getRoutes","from","mostrarBotonAgregar","hasOwnProperty","log","crear_registro","consultar_registros","adjuntar_documento","repositorio_documentos","funcionalidad_consultar","muestra_atras","selected_id_etapa","render"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Utils/ListaBotones.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { hasAccess } from '../../components/Utils/Common';\r\nclass ListaBotones extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { getRoutes } = this.props;\r\n        const { from } = this.props;\r\n        \r\n\r\n        let { mostrarBotonAgregar } = true;\r\n        if (this.props.hasOwnProperty('mostrarBotonAgregar')) {\r\n            mostrarBotonAgregar = this.props.mostrarBotonAgregar;\r\n        }else{\r\n            mostrarBotonAgregar = true;\r\n        }\r\n\r\n\r\n        console.log(getRoutes.crear_registro)\r\n        this.state = {\r\n            id_etapa: getRoutes.id_etapa,\r\n            id_fase:  getRoutes.id_fase,\r\n            crear_registro: getRoutes.crear_registro,\r\n            consultar_registros: getRoutes.consultar_registros,\r\n            adjuntar_documento: getRoutes.adjuntar_documento,\r\n            repositorio_documentos: getRoutes.repositorio_documentos,\r\n            modulo: getRoutes.modulo,\r\n            funcionalidad_crear: getRoutes.funcionalidad_crear,\r\n            funcionalidad_consultar: getRoutes.funcionalidad_consultar,\r\n            from: from,\r\n            muestra_atras: getRoutes.muestra_atras,\r\n            selected_id_etapa: getRoutes.selected_id_etapa,\r\n            mostrarBotonAgregar: mostrarBotonAgregar\r\n            \r\n        };\r\n    }\r\n\r\n    /**\r\n     * Se valida que la única fase que no puede agregar un registro nuevo es clasificacion del rádicado una vez la etapa se haya cerrado.\r\n     */\r\n    boton_add = (id_etapa, id_fase) => {\r\n\r\n        if(hasAccess(this.state.modulo, this.state.funcionalidad_crear)){\r\n\r\n            if(id_etapa != global.Constants.ETAPAS.CAPTURA_REPARTO && id_fase == global.Constants.FASES.CLASIFICACION){\r\n                //console.log(\"FALSE\");\r\n                return false;\r\n            }\r\n\r\n            else{\r\n                //console.log(\"TRUE\");\r\n                return true;\r\n            }\r\n        }  \r\n    }\r\n\r\n\r\n    refrescar = (estado) => {\r\n        try {\r\n            this.props.parentCallback(estado);\r\n        } catch (error) {\r\n            console.error(\"Error \" + error);\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const {\r\n            state: {\r\n                crear_registro,\r\n                consultar_registros,\r\n                adjuntar_documento,\r\n                from,\r\n                selected_id_etapa,\r\n                mostrarBotonAgregar\r\n            }\r\n        } = this;\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n\r\n                <div className='col-md text-right ms-auto'>\r\n\r\n                    <>\r\n                        {\r\n                            (this.boton_add(this.state.id_etapa, this.state.id_fase)) ?( \r\n                                (this.state.mostrarBotonAgregar)?(\r\n                                    \r\n                                    <Link to={this.state.crear_registro} state={{ from: from, selected_id_etapa: selected_id_etapa }}>\r\n                                        <button type=\"button\" title='Agregar nuevo registro' className=\"btn btn-primary\"> <i className=\"fas fa-plus\"></i> </button>\r\n                                    </Link>\r\n                                    \r\n                                ):null\r\n                                \r\n\r\n                            ): null\r\n                        }\r\n\r\n                        {\r\n                            (hasAccess(this.state.modulo, this.state.funcionalidad_consultar)) ? (\r\n                                <button type=\"button\" title='Listado de activos' onClick={() => this.refrescar('1')} className=\"btn btn-primary\"> <i className=\"fas fa-list\"></i> </button>\r\n                            ) : null\r\n                        }\r\n\r\n\r\n                        {\r\n                            (hasAccess(this.state.modulo, this.state.funcionalidad_consultar)) ? (\r\n                                <button type=\"button\" title='Listado de inactivos' onClick={() => this.refrescar('0')} className=\"btn btn-danger\"> <i className=\"fas fa-list\"></i> </button>\r\n\r\n                            ) : null\r\n                        }\r\n\r\n\r\n\r\n                        {/* \r\n                    <Link to={this.state.adjuntar_documento} state={{ from: from }}>\r\n                        <button type=\"button\" title='Adjuntar documento(s)' className=\"btn btn-primary\"> <i className=\"fas fa-paperclip\"></i> </button>\r\n                    </Link>\r\n\r\n                    <Link to={`/AntencentesForm/`} state={{ from: from }}>\r\n                        <button type=\"button\" title='Repositorio de documentos' className=\"btn btn-primary\"> <i className=\"fas fa-folder\"></i> </button>\r\n                    </Link>\r\n                    */}\r\n                        {\r\n                            (this.state.muestra_atras) ? (\r\n                                <Link to={'/RamasProceso/'} title='Regresar a ramas del proceso' state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                                </Link>\r\n                            ) : null\r\n                        }\r\n\r\n                    </>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListaBotones;"],"mappings":"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"},"metadata":{},"sourceType":"module"}