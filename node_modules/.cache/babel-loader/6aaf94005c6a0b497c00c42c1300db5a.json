{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Herramientas\\\\ActuacionParametrosPlantillaForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport DataTable from 'react-data-table-component';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport '../../Utils/Constants';\nimport { getUser } from '../../Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ActuacionParametrosPlantillaForm(props) {\n  _s();\n\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let id_etapa = from.idEtapa;\n  let fechaRegistro = from.fechaRegistro;\n  let fechaIngreso = from.fechaIngreso;\n  let dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getListaParametros, setListaParametros] = useState({\n    params: []\n  });\n  const [getListaCamposPorParametro, setListaCamposPorParametro] = useState({\n    data: []\n  });\n  const [getAntecedentesLista, setAntecedentesLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getInteresadosLista, setInteresadosLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [isCheckAll, setIsCheckAll] = useState(false);\n  const [isCheck, setIsCheck] = useState([]);\n  const [lang, setLang] = useState([]);\n  const campos = [{\n    title: 'Antecendentes',\n    value: null,\n    type: \"Antecedentes\"\n  }, {\n    title: 'Dependencia',\n    value: dependencia\n  }, {\n    title: 'Investigados (Nombre)',\n    value: null,\n    type: \"Investigados\"\n  }, {\n    title: 'Investigados (Cargo)',\n    value: null,\n    type: \"CargosInvestigados\"\n  }, {\n    title: 'Investigados (Entidad)',\n    value: null,\n    type: \"EntidadesInvestigados\"\n  }, {\n    title: 'Interesados',\n    value: null,\n    type: \"Interesados\"\n  }, {\n    title: 'Fecha de ingreso',\n    value: fechaIngreso\n  }, {\n    title: 'Fecha de registro',\n    value: fechaRegistro\n  }, {\n    title: 'Número de auto (generado despues de aprobación)',\n    value: '${numero_de_auto}'\n  }, {\n    title: 'Número de radicado',\n    value: radicado\n  } //{ id: 8, title: 'Campo de entrada por usuario', value: null },\n  ];\n  useEffect(() => {\n    async function fetchData() {\n      cargarParametros();\n      cargarAntecedentes();\n      cargarInteresados();\n      cargarEntidadesInvestigado();\n    }\n\n    fetchData();\n  }, [props.id_mas_actuacion]);\n\n  const handleSelectAll = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getInteresadosLista.map(item => {\n      item.checked = checked;\n      return item;\n    });\n    setInteresadosLista(valorId);\n  };\n\n  const selectCampos = () => {\n    return campos.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i,\n        children: item.title\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const handleChangeInteresados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getInteresadosLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setInteresadosLista(valorId);\n    let val = getInteresadosLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.sujeto_procesal_nombre} ${p.attributes.primer_apellido} ${p.attributes.segundo_apellido} ${p.attributes.primer_nombre} ${p.attributes.segundo_nombre}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n\n    if (checked) {\n      // push selected value in list\n      setLang(prev => [...prev, value]);\n    } else {\n      // remove unchecked value from the list\n      setLang(prev => prev.filter(x => x !== value));\n    }\n  };\n\n  const handleChangeAntecedentes = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getAntecedentesLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setAntecedentesLista(valorId);\n    let val = getAntecedentesLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.descripcion}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n\n    if (checked) {\n      // Se añade el valor en la lista\n      setLang(prev => [...prev, value]);\n    } else {\n      // Se quita el valor de la lista\n      setLang(prev => prev.filter(x => x !== value));\n    }\n  };\n\n  const handleChangeInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadesInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_investigado) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setEntidadesInvestigadoLista(valorId);\n    let val = getEntidadesInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_investigado}`;\n        var nombre = `${p.attributes.nombre_investigado}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n\n    if (checked) {\n      // Se añade el valor en la lista\n      setLang(prev => [...prev, value]);\n    } else {\n      // Se quita el valor de la lista\n      setLang(prev => prev.filter(x => x !== value));\n    }\n  };\n\n  const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getCargosInvestigadoLista.map(item => {\n      if (value == item.attributes.cargo) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getCargosInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.cargo}`;\n        var nombre = `${p.attributes.cargo}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n\n    if (checked) {\n      // Se añade el valor en la lista\n      setLang(prev => [...prev, value]);\n    } else {\n      // Se quita el valor de la lista\n      setLang(prev => prev.filter(x => x !== value));\n    }\n  };\n\n  const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_entidad) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getEntidadInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_entidad}`;\n        var nombre = `${p.attributes.nombre_entidad}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n\n    if (checked) {\n      // Se añade el valor en la lista\n      setLang(prev => [...prev, value]);\n    } else {\n      // Se quita el valor de la lista\n      setLang(prev => prev.filter(x => x !== value));\n    }\n  };\n\n  const selectAntecedentes = (parametro, id_campo) => {\n    if (Array.isArray(getAntecedentesLista)) {\n      return getAntecedentesLista.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + item.id,\n            name: 'check' + item.id,\n            value: item.id,\n            onChange: e => handleChangeAntecedentes(e, parametro, id_campo),\n            defaultChecked: item.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this), \" \", item.attributes.descripcion]\n        }, 'keyCheck' + item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this) // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n        ;\n      });\n    }\n  };\n\n  const selectInteresados = (parametro, id_campo) => {\n    if (Array.isArray(getInteresadosLista)) {\n      return getInteresadosLista.map((item, i) => {\n        var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + nombre,\n            name: 'check' + nombre,\n            value: item.id,\n            onChange: e => handleChangeInteresados(e, parametro, id_campo),\n            defaultChecked: item.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), \" \", nombre]\n        }, 'keyCheck' + nombre, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this) // <option key={nombre} value={nombre}>{nombre}</option>\n        ;\n      });\n    }\n  };\n\n  const selectInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadesInvestigadoLista)) {\n      return getEntidadesInvestigadoLista.map((item, i) => {\n        var value = `${item.attributes.nombre_investigado}`;\n        var nombre = `${item.attributes.nombre_investigado}`;\n        console.log(\"nombre -> \", nombre);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: nombre,\n            name: nombre,\n            value: nombre,\n            onChange: e => handleChangeInvestigados(e, parametro, id_campo),\n            defaultChecked: item.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), \" \", nombre]\n        }, nombre, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this) //<option key={value} value={value}>{nombre}</option>\n        ;\n      });\n    }\n  };\n\n  const selectCargosInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getCargosInvestigadoLista)) {\n      return getCargosInvestigadoLista.map((item, i) => {\n        var value = `${item.attributes.cargo}`;\n        var nombre = `${item.attributes.cargo}`;\n        console.log(\"nombre cargo -> \", nombre);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: nombre,\n            name: nombre,\n            value: nombre,\n            onChange: e => handleChangeCargosInvestigados(e, parametro, id_campo),\n            defaultChecked: item.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }, this), \" \", nombre]\n        }, nombre, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this) // <option key={value} value={value}>{nombre}</option>\n        ;\n      });\n    }\n  };\n\n  const selectEntidadesInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadInvestigadoLista)) {\n      return getEntidadInvestigadoLista.map((item, i) => {\n        var value = `${item.attributes.nombre_entidad}`;\n        var nombre = `(${item.attributes.nombre_entidad})`;\n        console.log(\"nombre entidad -> \", nombre);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: nombre,\n            name: nombre,\n            value: nombre,\n            onChange: e => handleChangeEntidadesInvestigados(e, parametro, id_campo),\n            defaultChecked: item.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this), \" \", nombre]\n        }, nombre, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }, this) //<option key={value} value={value}>{nombre}</option>\n        ;\n      });\n    }\n  }; // const selectAllCamposPrueba = (parametro, id_campo) => {\n  //     if (Array.isArray(getInteresadosLista)) {\n  //         return (\n  //             getInteresadosLista.map((item, i) => {\n  //                 var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\n  //                 return (\n  //                     <div className=\"col-md-12\" key={'keyCheck' + nombre}>\n  //                         <input type=\"checkbox\"\n  //                             className=\"form-check-input\"\n  //                             id={'check' + nombre}\n  //                             name={'check' + nombre}\n  //                             value={item.id}\n  //                             onChange={(e) => handleChange(e, parametro, id_campo)}\n  //                             defaultChecked={item.checked} /> {nombre}\n  //                     </div>\n  //                 )\n  //             })\n  //         )\n  //     }\n  // }\n\n\n  const cargarValoresDeParametro = parametro => {\n    var campoParametro = getListaCamposPorParametro.data.filter(item => {\n      return item.parametro == parametro;\n    });\n    var tempCampo = campoParametro[0];\n\n    if (tempCampo != undefined && campos[tempCampo.id_campo] != undefined) {\n      var itemCampo = campos[tempCampo.id_campo]; //tiene un valor por defecto\n\n      if (itemCampo.value != null) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: itemCampo.value\n        }, void 0, false);\n      } else if (itemCampo.type == \"Antecedentes\") {\n        return (\n          /*#__PURE__*/\n          // <select className=\"form-control\" id={`antece-${parametro}`} name={`antece-${parametro}`}\n          //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\n          //     <option value=\"\">Por favor seleccione</option>\n          //     {selectAntecedentes()}\n          // </select>\n          _jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: selectAntecedentes(parametro, tempCampo.id_campo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 21\n          }, this)\n        );\n      } else if (itemCampo.type == \"Interesados\") {\n        return (\n          /*#__PURE__*/\n          // <select className=\"form-control\" id={`inter-${parametro}`} name={`inter-${parametro}`}\n          //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\n          //     <option value=\"\">Por favor seleccione</option>\n          //     {selectInteresados()}\n          // </select>\n          _jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: selectInteresados(parametro, tempCampo.id_campo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 21\n          }, this)\n        );\n      } else if (itemCampo.type == \"Investigados\") {\n        return (\n          /*#__PURE__*/\n          // <select className=\"form-control\" id={`ei-${parametro}`} name={`ei-${parametro}`}\n          //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\n          //     <option value=\"\">Por favor seleccione</option>\n          //     {selectInvestigados()}\n          // </select>\n          _jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: selectInvestigados(parametro, tempCampo.id_campo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 21\n          }, this)\n        );\n      } else if (itemCampo.type == \"CargosInvestigados\") {\n        return (\n          /*#__PURE__*/\n          // <select className=\"form-control\" id={`ei-${parametro}`} name={`ei-${parametro}`}\n          //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\n          //     <option value=\"\">Por favor seleccione</option>\n          //     {selectCargosInvestigados()}\n          // </select>\n          _jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: selectCargosInvestigados(parametro, tempCampo.id_campo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 21\n          }, this)\n        );\n      } else if (itemCampo.type == \"EntidadesInvestigados\") {\n        return (\n          /*#__PURE__*/\n          // <select className=\"form-control\" id={`ei-${parametro}`} name={`ei-${parametro}`}\n          //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\n          //     <option value=\"\">Por favor seleccione</option>\n          //     {selectEntidadesInvestigados()}\n          // </select>\n          _jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: selectEntidadesInvestigados(parametro, tempCampo.id_campo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 21\n          }, this)\n        );\n      } // else if (itemCampo.type == \"Checkbox de prueba\") {\n      //     return (\n      //         <div className=\"custom-control custom-switch custom-control-lg mb-2\">\n      //             <div className=\"col-md-12\" key=\"checkPrincipal\">\n      //                 <input type=\"checkbox\"\n      //                     className=\"form-check-input\"\n      //                     id=\"checkAll\"\n      //                     name=\"checkAll\"\n      //                     onChange={(e) => handleSelectAll(e)}\n      //                 />\n      //                 <label className=\"form-check-label\" htmlFor=\"example-checkbox-inline1\">Seleccionar todos</label>\n      //             </div>\n      //             {selectAllCamposPrueba(parametro, tempCampo.id_campo)}\n      //         </div>\n      //     )\n      else {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Seleccione un campo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 21\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const selectChangeListaCampos = (parametro, id_campo, value) => {\n    console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\n    var newParams = getListaCamposPorParametro.data.map(item => {\n      if (item.parametro == parametro) {\n        item.id_campo = id_campo;\n        var itemCampo = campos[id_campo];\n        item.valor = itemCampo.value != null ? itemCampo.value : value;\n      }\n\n      return item;\n    });\n    setListaCamposPorParametro({\n      data: newParams\n    }); //console.log(newParams);\n  };\n\n  const columns = [{\n    name: 'Parametros de la plantilla',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: parametro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 32\n    }, this),\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Campo',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      id: `id${parametro}`,\n      name: `name${parametro}`,\n      onChange: e => selectChangeListaCampos(parametro, e.target.value, \"\"),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Por favor seleccione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 21\n      }, this), selectCampos()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 17\n    }, this),\n    sortable: false,\n    width: \"25%\"\n  }, {\n    name: 'Valor seleccionado',\n    width: \"60%\",\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: cargarValoresDeParametro(parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 17\n    }, this)\n  }];\n\n  const cargarParametros = () => {\n    setListaParametros(null);\n    const data = {\n      \"data\": {\n        \"type\": 'mas_actuaciones',\n        \"attributes\": {\n          \"id\": props.id_mas_actuacion\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + props.id_mas_actuacion, data).then(datos => {\n      if (!datos.error) {\n        setListaParametros(datos);\n        var parametrosCampos = datos.params.map((item, i) => {\n          return {\n            parametro: item,\n            id_campo: \"\",\n            valor: \"\"\n          };\n        }); //console.log(parametrosCampos);\n\n        setListaCamposPorParametro({\n          data: parametrosCampos\n        });\n      }\n    });\n  };\n\n  const cargarAntecedentes = () => {\n    const data = {\n      \"data\": {\n        \"type\": 'antecedente',\n        \"attributes\": {\n          \"antecedentes\": \"antecedentes\",\n          \"descripcion\": \"descripcion\",\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"fecha_registro\": Date.now(),\n          \"id_dependencia\": -1,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setAntecedentesLista(parametrosCampos);\n      }\n    });\n  };\n\n  const cargarInteresados = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"interesado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"tipo_documento\": \"1\",\n          \"numero_documento\": \"1\",\n          \"primer_nombre\": \"1\",\n          \"segundo_nombre\": \"1\",\n          \"primer_apellido\": \"1\",\n          \"segundo_apellido\": \"1\",\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setInteresadosLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Datos del interesado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const cargarEntidadesInvestigado = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"entidad_investigado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": \"1\",\n          \"requiere_registro\": true,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setEntidadesInvestigadoLista(parametrosCampos);\n        setCargosInvestigadoLista(parametrosCampos);\n        setEntidadInvestigadoLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Entidades del investigado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const descargarArchivo = () => {\n    try {\n      window.showSpinner(true);\n      var params = getListaCamposPorParametro.data.map(item => {\n        return {\n          \"param\": item.parametro,\n          \"value\": item.valor\n        };\n      });\n      console.log(\"######params#####\");\n      console.log(params);\n      const data = {\n        \"data\": {\n          \"type\": \"mas_actuaciones\",\n          \"attributes\": {\n            \"params\": params\n          }\n        }\n      };\n      GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + props.id_mas_actuacion, data).then(datos => {\n        if (!datos.error) {\n          downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"docx\");\n          window.showSpinner(false);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: \",\n            message: datos.error.toString(),\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function downloadBase64File(contentType, base64Data, fileName, extension) {\n    //console.log(\"Datos que recibo\", contentType, base64Data, fileName, extension);\n    const linkSource = `data:${contentType};base64,${base64Data}`;\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = linkSource;\n    downloadLink.download = fileName;\n    downloadLink.click();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 13\n    }, this), getListaParametros != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Parametros de la plantilla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-2 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n          columns: columns,\n          data: getListaParametros.params,\n          noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n          striped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-2 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"documento_ruta\",\n          children: \"Descargar documento pre-diligenciado con los valores seleccionados \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          title: \"Descargar documento diligenciado\",\n          onClick: () => descargarArchivo(),\n          className: \"btn btn-primary ml-2\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-file-word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 157\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Cargando parametros de la plantilla...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ActuacionParametrosPlantillaForm, \"l50DXd4p13O0xONWZ7KJSfjdiQY=\", false, function () {\n  return [useLocation];\n});\n\n_c = ActuacionParametrosPlantillaForm;\nexport default ActuacionParametrosPlantillaForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActuacionParametrosPlantillaForm\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","DataTable","GenericApi","Spinner","ModalGen","getUser","ActuacionParametrosPlantillaForm","props","location","from","state","radicado","procesoDisciplinarioId","id_etapa","idEtapa","fechaRegistro","fechaIngreso","dependencia","nombre_dependencia","nombre","modalState","setModalState","title","message","show","getListaParametros","setListaParametros","params","getListaCamposPorParametro","setListaCamposPorParametro","data","getAntecedentesLista","setAntecedentesLista","links","meta","getInteresadosLista","setInteresadosLista","getEntidadesInvestigadoLista","setEntidadesInvestigadoLista","getCargosInvestigadoLista","setCargosInvestigadoLista","getEntidadInvestigadoLista","setEntidadInvestigadoLista","isCheckAll","setIsCheckAll","isCheck","setIsCheck","lang","setLang","campos","value","type","fetchData","cargarParametros","cargarAntecedentes","cargarInteresados","cargarEntidadesInvestigado","id_mas_actuacion","handleSelectAll","e","checked","target","valorId","map","item","selectCampos","i","handleChangeInteresados","parametro","id_campo","id","val","p","attributes","sujeto_procesal_nombre","primer_apellido","segundo_apellido","primer_nombre","segundo_nombre","filter","x","undefined","selectChangeListaCampos","toString","prev","handleChangeAntecedentes","descripcion","handleChangeInvestigados","nombre_investigado","handleChangeCargosInvestigados","cargo","handleChangeEntidadesInvestigados","nombre_entidad","selectAntecedentes","Array","isArray","selectInteresados","selectInvestigados","console","log","selectCargosInvestigados","selectEntidadesInvestigados","cargarValoresDeParametro","campoParametro","tempCampo","itemCampo","newParams","valor","columns","name","cell","sortable","width","getByDataGeneric","then","datos","error","parametrosCampos","Date","now","redirect","descargarArchivo","window","showSpinner","downloadBase64File","content_type","base_64","file_name","alert","global","Constants","TIPO_ALERTA","ERROR","contentType","base64Data","fileName","extension","linkSource","downloadLink","document","createElement","href","download","click","DATA_TABLE","SIN_DATOS_TABLE"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Herramientas/ActuacionParametrosPlantillaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport '../../Utils/Constants';\r\nimport { getUser } from '../../Utils/Common';\r\n\r\nfunction ActuacionParametrosPlantillaForm(props) {\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let id_etapa = from.idEtapa;\r\n    let fechaRegistro = from.fechaRegistro;\r\n    let fechaIngreso = from.fechaIngreso;\r\n    let dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaParametros, setListaParametros] = useState({ params: [] });\r\n    const [getListaCamposPorParametro, setListaCamposPorParametro] = useState({ data: [] });\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getInteresadosLista, setInteresadosLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [isCheckAll, setIsCheckAll] = useState(false);\r\n    const [isCheck, setIsCheck] = useState([]);\r\n    const [lang, setLang] = useState([]);\r\n\r\n    const campos = [\r\n        { title: 'Antecendentes', value: null, type: \"Antecedentes\" },\r\n        { title: 'Dependencia', value: dependencia },\r\n        { title: 'Investigados (Nombre)', value: null, type: \"Investigados\" },\r\n        { title: 'Investigados (Cargo)', value: null, type: \"CargosInvestigados\" },\r\n        { title: 'Investigados (Entidad)', value: null, type: \"EntidadesInvestigados\" },\r\n        { title: 'Interesados', value: null, type: \"Interesados\" },\r\n        { title: 'Fecha de ingreso', value: fechaIngreso },\r\n        { title: 'Fecha de registro', value: fechaRegistro },\r\n        { title: 'Número de auto (generado despues de aprobación)', value: '${numero_de_auto}' },\r\n        { title: 'Número de radicado', value: radicado },\r\n        //{ id: 8, title: 'Campo de entrada por usuario', value: null },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            cargarParametros();\r\n            cargarAntecedentes();\r\n            cargarInteresados();\r\n            cargarEntidadesInvestigado();\r\n        }\r\n        fetchData();\r\n    }, [props.id_mas_actuacion]);\r\n\r\n    const handleSelectAll = (e) => {\r\n\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getInteresadosLista.map((item) => {\r\n            item.checked = checked;\r\n            return item;\r\n        });\r\n\r\n        setInteresadosLista(valorId);\r\n    };\r\n\r\n    const selectCampos = () => {\r\n        return (\r\n            campos.map((item, i) => {\r\n                return (\r\n                    <option key={i} value={i}>{item.title}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleChangeInteresados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getInteresadosLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setInteresadosLista(valorId);\r\n        let val = getInteresadosLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.sujeto_procesal_nombre} ${p.attributes.primer_apellido} ${p.attributes.segundo_apellido} ${p.attributes.primer_nombre} ${p.attributes.segundo_nombre}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n        if (checked) {\r\n            // push selected value in list\r\n            setLang(prev => [...prev, value]);\r\n        } else {\r\n            // remove unchecked value from the list\r\n            setLang(prev => prev.filter(x => x !== value));\r\n        }\r\n    }\r\n\r\n    const handleChangeAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.descripcion}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n        if (checked) {\r\n            // Se añade el valor en la lista\r\n            setLang(prev => [...prev, value]);\r\n        } else {\r\n            // Se quita el valor de la lista\r\n            setLang(prev => prev.filter(x => x !== value));\r\n        }\r\n    }\r\n\r\n    const handleChangeInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadesInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_investigado) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setEntidadesInvestigadoLista(valorId);\r\n        let val = getEntidadesInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_investigado}`;\r\n                var nombre = `${p.attributes.nombre_investigado}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n        if (checked) {\r\n            // Se añade el valor en la lista\r\n            setLang(prev => [...prev, value]);\r\n        } else {\r\n            // Se quita el valor de la lista\r\n            setLang(prev => prev.filter(x => x !== value));\r\n        }\r\n    }\r\n\r\n    const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getCargosInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.cargo) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getCargosInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.cargo}`;\r\n                var nombre = `${p.attributes.cargo}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n        if (checked) {\r\n            // Se añade el valor en la lista\r\n            setLang(prev => [...prev, value]);\r\n        } else {\r\n            // Se quita el valor de la lista\r\n            setLang(prev => prev.filter(x => x !== value));\r\n        }\r\n    }\r\n\r\n    const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_entidad) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getEntidadInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_entidad}`;\r\n                var nombre = `${p.attributes.nombre_entidad}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n        if (checked) {\r\n            // Se añade el valor en la lista\r\n            setLang(prev => [...prev, value]);\r\n        } else {\r\n            // Se quita el valor de la lista\r\n            setLang(prev => prev.filter(x => x !== value));\r\n        }\r\n    }\r\n\r\n    const selectAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n            return (\r\n                getAntecedentesLista.map((item, i) => {\r\n                    return (\r\n                        <div className=\"col-md-12\" key={'keyCheck' + item.id}>\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id={'check' + item.id}\r\n                                name={'check' + item.id}\r\n                                value={item.id}\r\n                                onChange={(e) => handleChangeAntecedentes(e, parametro, id_campo)}\r\n                                defaultChecked={item.checked} /> {item.attributes.descripcion}\r\n                        </div>\r\n                        // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const selectInteresados = (parametro, id_campo) => {\r\n        if (Array.isArray(getInteresadosLista)) {\r\n            return (\r\n                getInteresadosLista.map((item, i) => {\r\n                    var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\r\n                    return (\r\n                        <div className=\"col-md-12\" key={'keyCheck' + nombre}>\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id={'check' + nombre}\r\n                                name={'check' + nombre}\r\n                                value={item.id}\r\n                                onChange={(e) => handleChangeInteresados(e, parametro, id_campo)}\r\n                                defaultChecked={item.checked} /> {nombre}\r\n                        </div>\r\n                        // <option key={nombre} value={nombre}>{nombre}</option>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const selectInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadesInvestigadoLista)) {\r\n            return (\r\n                getEntidadesInvestigadoLista.map((item, i) => {\r\n                    var value = `${item.attributes.nombre_investigado}`;\r\n                    var nombre = `${item.attributes.nombre_investigado}`;\r\n\r\n                    console.log(\"nombre -> \", nombre);\r\n\r\n                    return (\r\n                        <div className=\"col-md-12\" key={nombre}>\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id={nombre}\r\n                                name={nombre}\r\n                                value={nombre}\r\n                                onChange={(e) => handleChangeInvestigados(e, parametro, id_campo)}\r\n                                defaultChecked={item.checked} /> {nombre}\r\n                        </div>\r\n                        //<option key={value} value={value}>{nombre}</option>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const selectCargosInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getCargosInvestigadoLista)) {\r\n            return (\r\n                getCargosInvestigadoLista.map((item, i) => {\r\n                    var value = `${item.attributes.cargo}`;\r\n                    var nombre = `${item.attributes.cargo}`;\r\n\r\n                    console.log(\"nombre cargo -> \", nombre);\r\n\r\n                    return (\r\n                        <div className=\"col-md-12\" key={nombre}>\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id={nombre}\r\n                                name={nombre}\r\n                                value={nombre}\r\n                                onChange={(e) => handleChangeCargosInvestigados(e, parametro, id_campo)}\r\n                                defaultChecked={item.checked} /> {nombre}\r\n                        </div>\r\n                        // <option key={value} value={value}>{nombre}</option>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const selectEntidadesInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadInvestigadoLista)) {\r\n            return (\r\n                getEntidadInvestigadoLista.map((item, i) => {\r\n                    var value = `${item.attributes.nombre_entidad}`;\r\n                    var nombre = `(${item.attributes.nombre_entidad})`;\r\n\r\n                    console.log(\"nombre entidad -> \", nombre);\r\n\r\n                    return (\r\n                        <div className=\"col-md-12\" key={nombre}>\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id={nombre}\r\n                                name={nombre}\r\n                                value={nombre}\r\n                                onChange={(e) => handleChangeEntidadesInvestigados(e, parametro, id_campo)}\r\n                                defaultChecked={item.checked} /> {nombre}\r\n                        </div>\r\n                        //<option key={value} value={value}>{nombre}</option>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    // const selectAllCamposPrueba = (parametro, id_campo) => {\r\n    //     if (Array.isArray(getInteresadosLista)) {\r\n    //         return (\r\n    //             getInteresadosLista.map((item, i) => {\r\n    //                 var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\r\n    //                 return (\r\n    //                     <div className=\"col-md-12\" key={'keyCheck' + nombre}>\r\n    //                         <input type=\"checkbox\"\r\n    //                             className=\"form-check-input\"\r\n    //                             id={'check' + nombre}\r\n    //                             name={'check' + nombre}\r\n    //                             value={item.id}\r\n    //                             onChange={(e) => handleChange(e, parametro, id_campo)}\r\n    //                             defaultChecked={item.checked} /> {nombre}\r\n    //                     </div>\r\n    //                 )\r\n    //             })\r\n    //         )\r\n    //     }\r\n    // }\r\n\r\n    const cargarValoresDeParametro = (parametro) => {\r\n\r\n        var campoParametro = getListaCamposPorParametro.data.filter(item => {\r\n            return item.parametro == parametro;\r\n        });\r\n\r\n        var tempCampo = campoParametro[0];\r\n\r\n        if (tempCampo != undefined && campos[tempCampo.id_campo] != undefined) {\r\n            var itemCampo = campos[tempCampo.id_campo];\r\n            //tiene un valor por defecto\r\n\r\n            if (itemCampo.value != null) {\r\n                return (\r\n                    <>{itemCampo.value}</>\r\n                )\r\n            }\r\n            else if (itemCampo.type == \"Antecedentes\") {\r\n                return (\r\n                    // <select className=\"form-control\" id={`antece-${parametro}`} name={`antece-${parametro}`}\r\n                    //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\r\n                    //     <option value=\"\">Por favor seleccione</option>\r\n                    //     {selectAntecedentes()}\r\n                    // </select>\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {/* <div className=\"col-md-12\" key=\"checkPrincipal\">\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id=\"checkAll\"\r\n                                name=\"checkAll\"\r\n                                onChange={(e) => handleSelectAll(e)}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"example-checkbox-inline1\">Seleccionar todos</label>\r\n                        </div> */}\r\n                        {selectAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            }\r\n            else if (itemCampo.type == \"Interesados\") {\r\n                return (\r\n                    // <select className=\"form-control\" id={`inter-${parametro}`} name={`inter-${parametro}`}\r\n                    //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\r\n                    //     <option value=\"\">Por favor seleccione</option>\r\n                    //     {selectInteresados()}\r\n                    // </select>\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {/* <div className=\"col-md-12\" key=\"checkPrincipal\">\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id=\"checkAll\"\r\n                                name=\"checkAll\"\r\n                                onChange={(e) => handleSelectAll(e)}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"example-checkbox-inline1\">Seleccionar todos</label>\r\n                        </div> */}\r\n                        {selectInteresados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            }\r\n            else if (itemCampo.type == \"Investigados\") {\r\n                return (\r\n                    // <select className=\"form-control\" id={`ei-${parametro}`} name={`ei-${parametro}`}\r\n                    //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\r\n                    //     <option value=\"\">Por favor seleccione</option>\r\n                    //     {selectInvestigados()}\r\n                    // </select>\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {/* <div className=\"col-md-12\" key=\"checkPrincipal\">\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id=\"checkAll\"\r\n                                name=\"checkAll\"\r\n                                onChange={(e) => handleSelectAll(e)}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"example-checkbox-inline1\">Seleccionar todos</label>\r\n                        </div> */}\r\n                        {selectInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            }\r\n            else if (itemCampo.type == \"CargosInvestigados\") {\r\n                return (\r\n                    // <select className=\"form-control\" id={`ei-${parametro}`} name={`ei-${parametro}`}\r\n                    //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\r\n                    //     <option value=\"\">Por favor seleccione</option>\r\n                    //     {selectCargosInvestigados()}\r\n                    // </select>\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {/* <div className=\"col-md-12\" key=\"checkPrincipal\">\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id=\"checkAll\"\r\n                            name=\"checkAll\"\r\n                            onChange={(e) => handleSelectAll(e)}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"example-checkbox-inline1\">Seleccionar todos</label>\r\n                    </div> */}\r\n                        {selectCargosInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            }\r\n            else if (itemCampo.type == \"EntidadesInvestigados\") {\r\n                return (\r\n                    // <select className=\"form-control\" id={`ei-${parametro}`} name={`ei-${parametro}`}\r\n                    //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\r\n                    //     <option value=\"\">Por favor seleccione</option>\r\n                    //     {selectEntidadesInvestigados()}\r\n                    // </select>\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {/* <div className=\"col-md-12\" key=\"checkPrincipal\">\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id=\"checkAll\"\r\n                            name=\"checkAll\"\r\n                            onChange={(e) => handleSelectAll(e)}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"example-checkbox-inline1\">Seleccionar todos</label>\r\n                    </div> */}\r\n                        {selectEntidadesInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            }\r\n            // else if (itemCampo.type == \"Checkbox de prueba\") {\r\n            //     return (\r\n            //         <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n            //             <div className=\"col-md-12\" key=\"checkPrincipal\">\r\n            //                 <input type=\"checkbox\"\r\n            //                     className=\"form-check-input\"\r\n            //                     id=\"checkAll\"\r\n            //                     name=\"checkAll\"\r\n            //                     onChange={(e) => handleSelectAll(e)}\r\n            //                 />\r\n            //                 <label className=\"form-check-label\" htmlFor=\"example-checkbox-inline1\">Seleccionar todos</label>\r\n            //             </div>\r\n            //             {selectAllCamposPrueba(parametro, tempCampo.id_campo)}\r\n            //         </div>\r\n            //     )\r\n            else {\r\n                return (\r\n                    <label>Seleccione un campo</label>\r\n                )\r\n            }\r\n        }\r\n        return (<></>)\r\n    }\r\n\r\n    const selectChangeListaCampos = (parametro, id_campo, value) => {\r\n\r\n        console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\r\n\r\n        var newParams = getListaCamposPorParametro.data.map(item => {\r\n            if (item.parametro == parametro) {\r\n                item.id_campo = id_campo;\r\n                var itemCampo = campos[id_campo];\r\n                item.valor = (itemCampo.value != null) ? itemCampo.value : value;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setListaCamposPorParametro({ data: newParams });\r\n        //console.log(newParams);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Parametros de la plantilla',\r\n            cell: parametro => <div><strong>{parametro}</strong></div>,\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            name: 'Campo',\r\n            cell: parametro =>\r\n                <select className=\"form-control\" id={`id${parametro}`} name={`name${parametro}`}\r\n                    onChange={e => selectChangeListaCampos(parametro, e.target.value, \"\")}>\r\n                    <option value=\"\">Por favor seleccione</option>\r\n                    {selectCampos()}\r\n                </select>,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'Valor seleccionado',\r\n            width: \"60%\",\r\n            cell: parametro =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresDeParametro(parametro)}\r\n                    </div>\r\n                </div>\r\n        }\r\n    ];\r\n\r\n\r\n    const cargarParametros = () => {\r\n        setListaParametros(null);\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'mas_actuaciones',\r\n                \"attributes\": {\r\n                    \"id\": props.id_mas_actuacion\r\n                }\r\n            }\r\n        }\r\n        GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + props.id_mas_actuacion, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaParametros(datos);\r\n                    var parametrosCampos = datos.params.map((item, i) => {\r\n                        return { parametro: item, id_campo: \"\", valor: \"\" };\r\n                    });\r\n\r\n                    //console.log(parametrosCampos);\r\n                    setListaCamposPorParametro({ data: parametrosCampos });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarAntecedentes = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'antecedente',\r\n                \"attributes\": {\r\n                    \"antecedentes\": \"antecedentes\",\r\n                    \"descripcion\": \"descripcion\",\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"fecha_registro\": Date.now(),\r\n                    \"id_dependencia\": -1,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n        GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n\r\n                    setAntecedentesLista(parametrosCampos);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarInteresados = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"interesado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"tipo_documento\": \"1\",\r\n                    \"numero_documento\": \"1\",\r\n                    \"primer_nombre\": \"1\",\r\n                    \"segundo_nombre\": \"1\",\r\n                    \"primer_apellido\": \"1\",\r\n                    \"segundo_apellido\": \"1\",\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setInteresadosLista(parametrosCampos);\r\n                } else {\r\n                    setModalState({ title: \"Datos del interesado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarEntidadesInvestigado = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"entidad_investigado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": \"1\",\r\n                    \"requiere_registro\": true,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setEntidadesInvestigadoLista(parametrosCampos);\r\n                    setCargosInvestigadoLista(parametrosCampos);\r\n                    setEntidadInvestigadoLista(parametrosCampos);\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Entidades del investigado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const descargarArchivo = () => {\r\n        try {\r\n            window.showSpinner(true);\r\n\r\n            var params = getListaCamposPorParametro.data.map(item => {\r\n                return {\r\n                    \"param\": item.parametro,\r\n                    \"value\": item.valor\r\n                };\r\n            });\r\n            console.log(\"######params#####\");\r\n            console.log(params);\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"mas_actuaciones\",\r\n                    \"attributes\": {\r\n                        \"params\": params,\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + props.id_mas_actuacion, data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"docx\");\r\n                        window.showSpinner(false);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: \", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    function downloadBase64File(contentType, base64Data, fileName, extension) {\r\n        //console.log(\"Datos que recibo\", contentType, base64Data, fileName, extension);\r\n        const linkSource = `data:${contentType};base64,${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <ModalGen data={modalState} />\r\n            {getListaParametros != null ?\r\n                <>\r\n                    <div className='col-md-12'>\r\n                        <label>Parametros de la plantilla</label>\r\n                    </div>\r\n                    <div className='col-md-12 mt-2 mb-2'>\r\n                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                            columns={columns}\r\n                            data={getListaParametros.params}\r\n                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                            striped\r\n                        />\r\n                    </div>\r\n                    <div className='col-md-12 mt-2 mb-2'>\r\n                        <label htmlFor=\"documento_ruta\">Descargar documento pre-diligenciado con los valores seleccionados </label>\r\n                        <button type=\"button\" title='Descargar documento diligenciado' onClick={() => descargarArchivo()} className=\"btn btn-primary ml-2\"> <i className=\"fas fa-file-word\"></i></button>\r\n                    </div>\r\n                </>\r\n                :\r\n                <div className='col-md-12'>\r\n                    <label>Cargando parametros de la plantilla...</label>\r\n                </div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ActuacionParametrosPlantillaForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAO,uBAAP;AACA,SAASC,OAAT,QAAwB,oBAAxB;;;;AAEA,SAASC,gCAAT,CAA0CC,KAA1C,EAAiD;EAAA;;EAC7C,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAM;IAAES;EAAF,IAAWD,QAAQ,CAACE,KAA1B;EACA,IAAIC,QAAQ,GAAGF,IAAI,CAACE,QAApB;EACA,IAAIC,sBAAsB,GAAGH,IAAI,CAACG,sBAAlC;EACA,IAAIC,QAAQ,GAAGJ,IAAI,CAACK,OAApB;EACA,IAAIC,aAAa,GAAGN,IAAI,CAACM,aAAzB;EACA,IAAIC,YAAY,GAAGP,IAAI,CAACO,YAAxB;EACA,IAAIC,WAAW,GAAGZ,OAAO,GAAGa,kBAAV,GAA+Bb,OAAO,GAAGa,kBAAV,CAA6BC,MAA5D,GAAqE,EAAvF;EAEA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC;IAAEuB,KAAK,EAAE,EAAT;IAAaC,OAAO,EAAE,EAAtB;IAA0BC,IAAI,EAAE;EAAhC,CAAD,CAA5C;EACA,MAAM,CAACC,kBAAD,EAAqBC,kBAArB,IAA2C3B,QAAQ,CAAC;IAAE4B,MAAM,EAAE;EAAV,CAAD,CAAzD;EACA,MAAM,CAACC,0BAAD,EAA6BC,0BAA7B,IAA2D9B,QAAQ,CAAC;IAAE+B,IAAI,EAAE;EAAR,CAAD,CAAzE;EACA,MAAM,CAACC,oBAAD,EAAuBC,oBAAvB,IAA+CjC,QAAQ,CAAC;IAAE+B,IAAI,EAAE,EAAR;IAAYG,KAAK,EAAE,EAAnB;IAAuBC,IAAI,EAAE;EAA7B,CAAD,CAA7D;EACA,MAAM,CAACC,mBAAD,EAAsBC,mBAAtB,IAA6CrC,QAAQ,CAAC;IAAE+B,IAAI,EAAE,EAAR;IAAYG,KAAK,EAAE,EAAnB;IAAuBC,IAAI,EAAE;EAA7B,CAAD,CAA3D;EACA,MAAM,CAACG,4BAAD,EAA+BC,4BAA/B,IAA+DvC,QAAQ,CAAC;IAAE+B,IAAI,EAAE,EAAR;IAAYG,KAAK,EAAE,EAAnB;IAAuBC,IAAI,EAAE;EAA7B,CAAD,CAA7E;EACA,MAAM,CAACK,yBAAD,EAA4BC,yBAA5B,IAAyDzC,QAAQ,CAAC;IAAE+B,IAAI,EAAE,EAAR;IAAYG,KAAK,EAAE,EAAnB;IAAuBC,IAAI,EAAE;EAA7B,CAAD,CAAvE;EACA,MAAM,CAACO,0BAAD,EAA6BC,0BAA7B,IAA2D3C,QAAQ,CAAC;IAAE+B,IAAI,EAAE,EAAR;IAAYG,KAAK,EAAE,EAAnB;IAAuBC,IAAI,EAAE;EAA7B,CAAD,CAAzE;EACA,MAAM,CAACS,UAAD,EAAaC,aAAb,IAA8B7C,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAAC8C,OAAD,EAAUC,UAAV,IAAwB/C,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACgD,IAAD,EAAOC,OAAP,IAAkBjD,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAMkD,MAAM,GAAG,CACX;IAAE3B,KAAK,EAAE,eAAT;IAA0B4B,KAAK,EAAE,IAAjC;IAAuCC,IAAI,EAAE;EAA7C,CADW,EAEX;IAAE7B,KAAK,EAAE,aAAT;IAAwB4B,KAAK,EAAEjC;EAA/B,CAFW,EAGX;IAAEK,KAAK,EAAE,uBAAT;IAAkC4B,KAAK,EAAE,IAAzC;IAA+CC,IAAI,EAAE;EAArD,CAHW,EAIX;IAAE7B,KAAK,EAAE,sBAAT;IAAiC4B,KAAK,EAAE,IAAxC;IAA8CC,IAAI,EAAE;EAApD,CAJW,EAKX;IAAE7B,KAAK,EAAE,wBAAT;IAAmC4B,KAAK,EAAE,IAA1C;IAAgDC,IAAI,EAAE;EAAtD,CALW,EAMX;IAAE7B,KAAK,EAAE,aAAT;IAAwB4B,KAAK,EAAE,IAA/B;IAAqCC,IAAI,EAAE;EAA3C,CANW,EAOX;IAAE7B,KAAK,EAAE,kBAAT;IAA6B4B,KAAK,EAAElC;EAApC,CAPW,EAQX;IAAEM,KAAK,EAAE,mBAAT;IAA8B4B,KAAK,EAAEnC;EAArC,CARW,EASX;IAAEO,KAAK,EAAE,iDAAT;IAA4D4B,KAAK,EAAE;EAAnE,CATW,EAUX;IAAE5B,KAAK,EAAE,oBAAT;IAA+B4B,KAAK,EAAEvC;EAAtC,CAVW,CAWX;EAXW,CAAf;EAcAb,SAAS,CAAC,MAAM;IACZ,eAAesD,SAAf,GAA2B;MACvBC,gBAAgB;MAChBC,kBAAkB;MAClBC,iBAAiB;MACjBC,0BAA0B;IAC7B;;IACDJ,SAAS;EACZ,CARQ,EAQN,CAAC7C,KAAK,CAACkD,gBAAP,CARM,CAAT;;EAUA,MAAMC,eAAe,GAAIC,CAAD,IAAO;IAE3B,MAAM;MAAET,KAAF;MAASU;IAAT,IAAqBD,CAAC,CAACE,MAA7B;IAEA,IAAIC,OAAO,GAAG3B,mBAAmB,CAAC4B,GAApB,CAAyBC,IAAD,IAAU;MAC5CA,IAAI,CAACJ,OAAL,GAAeA,OAAf;MACA,OAAOI,IAAP;IACH,CAHa,CAAd;IAKA5B,mBAAmB,CAAC0B,OAAD,CAAnB;EACH,CAVD;;EAYA,MAAMG,YAAY,GAAG,MAAM;IACvB,OACIhB,MAAM,CAACc,GAAP,CAAW,CAACC,IAAD,EAAOE,CAAP,KAAa;MACpB,oBACI;QAAgB,KAAK,EAAEA,CAAvB;QAAA,UAA2BF,IAAI,CAAC1C;MAAhC,GAAa4C,CAAb;QAAA;QAAA;QAAA;MAAA,QADJ;IAGH,CAJD,CADJ;EAOH,CARD;;EAUA,MAAMC,uBAAuB,GAAG,CAACR,CAAD,EAAIS,SAAJ,EAAeC,QAAf,KAA4B;IACxD,MAAM;MAAEnB,KAAF;MAASU;IAAT,IAAqBD,CAAC,CAACE,MAA7B;IAEA,IAAIC,OAAO,GAAG3B,mBAAmB,CAAC4B,GAApB,CAAyBC,IAAD,IAAU;MAC5C,IAAId,KAAK,IAAIc,IAAI,CAACM,EAAlB,EAAsB;QAClBN,IAAI,CAACJ,OAAL,GAAeA,OAAf;MACH;;MACD,OAAOI,IAAP;IACH,CALa,CAAd;IAOA5B,mBAAmB,CAAC0B,OAAD,CAAnB;IACA,IAAIS,GAAG,GAAGpC,mBAAmB,CAAC4B,GAApB,CAAyBS,CAAD,IAAO;MACrC,IAAIA,CAAC,CAACZ,OAAF,IAAa,IAAjB,EAAuB;QACnB,IAAIzC,MAAM,GAAI,GAAEqD,CAAC,CAACC,UAAF,CAAaC,sBAAuB,IAAGF,CAAC,CAACC,UAAF,CAAaE,eAAgB,IAAGH,CAAC,CAACC,UAAF,CAAaG,gBAAiB,IAAGJ,CAAC,CAACC,UAAF,CAAaI,aAAc,IAAGL,CAAC,CAACC,UAAF,CAAaK,cAAe,EAAlL;QACA,OAAO3D,MAAP;MACH;IACJ,CALS,EAKP4D,MALO,CAKAC,CAAC,IAAIA,CAAC,IAAIC,SALV,CAAV;IAMAC,uBAAuB,CAACd,SAAD,EAAYC,QAAZ,EAAsBE,GAAG,CAACY,QAAJ,EAAtB,CAAvB;;IAEA,IAAIvB,OAAJ,EAAa;MACT;MACAZ,OAAO,CAACoC,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUlC,KAAV,CAAT,CAAP;IACH,CAHD,MAGO;MACH;MACAF,OAAO,CAACoC,IAAI,IAAIA,IAAI,CAACL,MAAL,CAAYC,CAAC,IAAIA,CAAC,KAAK9B,KAAvB,CAAT,CAAP;IACH;EACJ,CA1BD;;EA4BA,MAAMmC,wBAAwB,GAAG,CAAC1B,CAAD,EAAIS,SAAJ,EAAeC,QAAf,KAA4B;IACzD,MAAM;MAAEnB,KAAF;MAASU;IAAT,IAAqBD,CAAC,CAACE,MAA7B;IAEA,IAAIC,OAAO,GAAG/B,oBAAoB,CAACgC,GAArB,CAA0BC,IAAD,IAAU;MAC7C,IAAId,KAAK,IAAIc,IAAI,CAACM,EAAlB,EAAsB;QAClBN,IAAI,CAACJ,OAAL,GAAeA,OAAf;MACH;;MACD,OAAOI,IAAP;IACH,CALa,CAAd;IAOAhC,oBAAoB,CAAC8B,OAAD,CAApB;IACA,IAAIS,GAAG,GAAGxC,oBAAoB,CAACgC,GAArB,CAA0BS,CAAD,IAAO;MACtC,IAAIA,CAAC,CAACZ,OAAF,IAAa,IAAjB,EAAuB;QACnB,IAAIzC,MAAM,GAAI,GAAEqD,CAAC,CAACC,UAAF,CAAaa,WAAY,EAAzC;QACA,OAAOnE,MAAP;MACH;IACJ,CALS,EAKP4D,MALO,CAKAC,CAAC,IAAIA,CAAC,IAAIC,SALV,CAAV;IAMAC,uBAAuB,CAACd,SAAD,EAAYC,QAAZ,EAAsBE,GAAG,CAACY,QAAJ,EAAtB,CAAvB;;IAEA,IAAIvB,OAAJ,EAAa;MACT;MACAZ,OAAO,CAACoC,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUlC,KAAV,CAAT,CAAP;IACH,CAHD,MAGO;MACH;MACAF,OAAO,CAACoC,IAAI,IAAIA,IAAI,CAACL,MAAL,CAAYC,CAAC,IAAIA,CAAC,KAAK9B,KAAvB,CAAT,CAAP;IACH;EACJ,CA1BD;;EA4BA,MAAMqC,wBAAwB,GAAG,CAAC5B,CAAD,EAAIS,SAAJ,EAAeC,QAAf,KAA4B;IACzD,MAAM;MAAEnB,KAAF;MAASU;IAAT,IAAqBD,CAAC,CAACE,MAA7B;IAEA,IAAIC,OAAO,GAAGzB,4BAA4B,CAAC0B,GAA7B,CAAkCC,IAAD,IAAU;MACrD,IAAId,KAAK,IAAIc,IAAI,CAACS,UAAL,CAAgBe,kBAA7B,EAAiD;QAC7CxB,IAAI,CAACJ,OAAL,GAAeA,OAAf;MACH;;MACD,OAAOI,IAAP;IACH,CALa,CAAd;IAOA1B,4BAA4B,CAACwB,OAAD,CAA5B;IACA,IAAIS,GAAG,GAAGlC,4BAA4B,CAAC0B,GAA7B,CAAkCS,CAAD,IAAO;MAC9C,IAAIA,CAAC,CAACZ,OAAF,IAAa,IAAjB,EAAuB;QACnB,IAAIV,KAAK,GAAI,GAAEsB,CAAC,CAACC,UAAF,CAAae,kBAAmB,EAA/C;QACA,IAAIrE,MAAM,GAAI,GAAEqD,CAAC,CAACC,UAAF,CAAae,kBAAmB,EAAhD;QAEA,OAAOrE,MAAP;MACH;IACJ,CAPS,EAOP4D,MAPO,CAOAC,CAAC,IAAIA,CAAC,IAAIC,SAPV,CAAV;IAQAC,uBAAuB,CAACd,SAAD,EAAYC,QAAZ,EAAsBE,GAAG,CAACY,QAAJ,EAAtB,CAAvB;;IAEA,IAAIvB,OAAJ,EAAa;MACT;MACAZ,OAAO,CAACoC,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUlC,KAAV,CAAT,CAAP;IACH,CAHD,MAGO;MACH;MACAF,OAAO,CAACoC,IAAI,IAAIA,IAAI,CAACL,MAAL,CAAYC,CAAC,IAAIA,CAAC,KAAK9B,KAAvB,CAAT,CAAP;IACH;EACJ,CA5BD;;EA8BA,MAAMuC,8BAA8B,GAAG,CAAC9B,CAAD,EAAIS,SAAJ,EAAeC,QAAf,KAA4B;IAC/D,MAAM;MAAEnB,KAAF;MAASU;IAAT,IAAqBD,CAAC,CAACE,MAA7B;IAEA,IAAIC,OAAO,GAAGvB,yBAAyB,CAACwB,GAA1B,CAA+BC,IAAD,IAAU;MAClD,IAAId,KAAK,IAAIc,IAAI,CAACS,UAAL,CAAgBiB,KAA7B,EAAoC;QAChC1B,IAAI,CAACJ,OAAL,GAAeA,OAAf;MACH;;MACD,OAAOI,IAAP;IACH,CALa,CAAd;IAOAxB,yBAAyB,CAACsB,OAAD,CAAzB;IACA,IAAIS,GAAG,GAAGhC,yBAAyB,CAACwB,GAA1B,CAA+BS,CAAD,IAAO;MAC3C,IAAIA,CAAC,CAACZ,OAAF,IAAa,IAAjB,EAAuB;QACnB,IAAIV,KAAK,GAAI,GAAEsB,CAAC,CAACC,UAAF,CAAaiB,KAAM,EAAlC;QACA,IAAIvE,MAAM,GAAI,GAAEqD,CAAC,CAACC,UAAF,CAAaiB,KAAM,EAAnC;QAEA,OAAOvE,MAAP;MACH;IACJ,CAPS,EAOP4D,MAPO,CAOAC,CAAC,IAAIA,CAAC,IAAIC,SAPV,CAAV;IAQAC,uBAAuB,CAACd,SAAD,EAAYC,QAAZ,EAAsBE,GAAG,CAACY,QAAJ,EAAtB,CAAvB;;IAEA,IAAIvB,OAAJ,EAAa;MACT;MACAZ,OAAO,CAACoC,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUlC,KAAV,CAAT,CAAP;IACH,CAHD,MAGO;MACH;MACAF,OAAO,CAACoC,IAAI,IAAIA,IAAI,CAACL,MAAL,CAAYC,CAAC,IAAIA,CAAC,KAAK9B,KAAvB,CAAT,CAAP;IACH;EACJ,CA5BD;;EA8BA,MAAMyC,iCAAiC,GAAG,CAAChC,CAAD,EAAIS,SAAJ,EAAeC,QAAf,KAA4B;IAClE,MAAM;MAAEnB,KAAF;MAASU;IAAT,IAAqBD,CAAC,CAACE,MAA7B;IAEA,IAAIC,OAAO,GAAGrB,0BAA0B,CAACsB,GAA3B,CAAgCC,IAAD,IAAU;MACnD,IAAId,KAAK,IAAIc,IAAI,CAACS,UAAL,CAAgBmB,cAA7B,EAA6C;QACzC5B,IAAI,CAACJ,OAAL,GAAeA,OAAf;MACH;;MACD,OAAOI,IAAP;IACH,CALa,CAAd;IAOAxB,yBAAyB,CAACsB,OAAD,CAAzB;IACA,IAAIS,GAAG,GAAG9B,0BAA0B,CAACsB,GAA3B,CAAgCS,CAAD,IAAO;MAC5C,IAAIA,CAAC,CAACZ,OAAF,IAAa,IAAjB,EAAuB;QACnB,IAAIV,KAAK,GAAI,GAAEsB,CAAC,CAACC,UAAF,CAAamB,cAAe,EAA3C;QACA,IAAIzE,MAAM,GAAI,GAAEqD,CAAC,CAACC,UAAF,CAAamB,cAAe,EAA5C;QAEA,OAAOzE,MAAP;MACH;IACJ,CAPS,EAOP4D,MAPO,CAOAC,CAAC,IAAIA,CAAC,IAAIC,SAPV,CAAV;IAQAC,uBAAuB,CAACd,SAAD,EAAYC,QAAZ,EAAsBE,GAAG,CAACY,QAAJ,EAAtB,CAAvB;;IAEA,IAAIvB,OAAJ,EAAa;MACT;MACAZ,OAAO,CAACoC,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUlC,KAAV,CAAT,CAAP;IACH,CAHD,MAGO;MACH;MACAF,OAAO,CAACoC,IAAI,IAAIA,IAAI,CAACL,MAAL,CAAYC,CAAC,IAAIA,CAAC,KAAK9B,KAAvB,CAAT,CAAP;IACH;EACJ,CA5BD;;EA8BA,MAAM2C,kBAAkB,GAAG,CAACzB,SAAD,EAAYC,QAAZ,KAAyB;IAChD,IAAIyB,KAAK,CAACC,OAAN,CAAchE,oBAAd,CAAJ,EAAyC;MACrC,OACIA,oBAAoB,CAACgC,GAArB,CAAyB,CAACC,IAAD,EAAOE,CAAP,KAAa;QAClC,oBACI;UAAK,SAAS,EAAC,WAAf;UAAA,wBACI;YAAO,IAAI,EAAC,UAAZ;YACI,SAAS,EAAC,kBADd;YAEI,EAAE,EAAE,UAAUF,IAAI,CAACM,EAFvB;YAGI,IAAI,EAAE,UAAUN,IAAI,CAACM,EAHzB;YAII,KAAK,EAAEN,IAAI,CAACM,EAJhB;YAKI,QAAQ,EAAGX,CAAD,IAAO0B,wBAAwB,CAAC1B,CAAD,EAAIS,SAAJ,EAAeC,QAAf,CAL7C;YAMI,cAAc,EAAEL,IAAI,CAACJ;UANzB;YAAA;YAAA;YAAA;UAAA,QADJ,OAO0CI,IAAI,CAACS,UAAL,CAAgBa,WAP1D;QAAA,GAAgC,aAAatB,IAAI,CAACM,EAAlD;UAAA;UAAA;UAAA;QAAA,QADJ,CAUI;QAVJ;MAYH,CAbD,CADJ;IAgBH;EACJ,CAnBD;;EAqBA,MAAM0B,iBAAiB,GAAG,CAAC5B,SAAD,EAAYC,QAAZ,KAAyB;IAC/C,IAAIyB,KAAK,CAACC,OAAN,CAAc5D,mBAAd,CAAJ,EAAwC;MACpC,OACIA,mBAAmB,CAAC4B,GAApB,CAAwB,CAACC,IAAD,EAAOE,CAAP,KAAa;QACjC,IAAI/C,MAAM,GAAI,GAAE6C,IAAI,CAACS,UAAL,CAAgBC,sBAAuB,IAAGV,IAAI,CAACS,UAAL,CAAgBE,eAAgB,IAAGX,IAAI,CAACS,UAAL,CAAgBG,gBAAiB,IAAGZ,IAAI,CAACS,UAAL,CAAgBI,aAAc,IAAGb,IAAI,CAACS,UAAL,CAAgBK,cAAe,EAAjM;QACA,oBACI;UAAK,SAAS,EAAC,WAAf;UAAA,wBACI;YAAO,IAAI,EAAC,UAAZ;YACI,SAAS,EAAC,kBADd;YAEI,EAAE,EAAE,UAAU3D,MAFlB;YAGI,IAAI,EAAE,UAAUA,MAHpB;YAII,KAAK,EAAE6C,IAAI,CAACM,EAJhB;YAKI,QAAQ,EAAGX,CAAD,IAAOQ,uBAAuB,CAACR,CAAD,EAAIS,SAAJ,EAAeC,QAAf,CAL5C;YAMI,cAAc,EAAEL,IAAI,CAACJ;UANzB;YAAA;YAAA;YAAA;UAAA,QADJ,OAO0CzC,MAP1C;QAAA,GAAgC,aAAaA,MAA7C;UAAA;UAAA;UAAA;QAAA,QADJ,CAUI;QAVJ;MAYH,CAdD,CADJ;IAiBH;EACJ,CApBD;;EAsBA,MAAM8E,kBAAkB,GAAG,CAAC7B,SAAD,EAAYC,QAAZ,KAAyB;IAChD,IAAIyB,KAAK,CAACC,OAAN,CAAc1D,4BAAd,CAAJ,EAAiD;MAC7C,OACIA,4BAA4B,CAAC0B,GAA7B,CAAiC,CAACC,IAAD,EAAOE,CAAP,KAAa;QAC1C,IAAIhB,KAAK,GAAI,GAAEc,IAAI,CAACS,UAAL,CAAgBe,kBAAmB,EAAlD;QACA,IAAIrE,MAAM,GAAI,GAAE6C,IAAI,CAACS,UAAL,CAAgBe,kBAAmB,EAAnD;QAEAU,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BhF,MAA1B;QAEA,oBACI;UAAK,SAAS,EAAC,WAAf;UAAA,wBACI;YAAO,IAAI,EAAC,UAAZ;YACI,SAAS,EAAC,kBADd;YAEI,EAAE,EAAEA,MAFR;YAGI,IAAI,EAAEA,MAHV;YAII,KAAK,EAAEA,MAJX;YAKI,QAAQ,EAAGwC,CAAD,IAAO4B,wBAAwB,CAAC5B,CAAD,EAAIS,SAAJ,EAAeC,QAAf,CAL7C;YAMI,cAAc,EAAEL,IAAI,CAACJ;UANzB;YAAA;YAAA;YAAA;UAAA,QADJ,OAO0CzC,MAP1C;QAAA,GAAgCA,MAAhC;UAAA;UAAA;UAAA;QAAA,QADJ,CAUI;QAVJ;MAYH,CAlBD,CADJ;IAqBH;EACJ,CAxBD;;EA0BA,MAAMiF,wBAAwB,GAAG,CAAChC,SAAD,EAAYC,QAAZ,KAAyB;IACtD,IAAIyB,KAAK,CAACC,OAAN,CAAcxD,yBAAd,CAAJ,EAA8C;MAC1C,OACIA,yBAAyB,CAACwB,GAA1B,CAA8B,CAACC,IAAD,EAAOE,CAAP,KAAa;QACvC,IAAIhB,KAAK,GAAI,GAAEc,IAAI,CAACS,UAAL,CAAgBiB,KAAM,EAArC;QACA,IAAIvE,MAAM,GAAI,GAAE6C,IAAI,CAACS,UAAL,CAAgBiB,KAAM,EAAtC;QAEAQ,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgChF,MAAhC;QAEA,oBACI;UAAK,SAAS,EAAC,WAAf;UAAA,wBACI;YAAO,IAAI,EAAC,UAAZ;YACI,SAAS,EAAC,kBADd;YAEI,EAAE,EAAEA,MAFR;YAGI,IAAI,EAAEA,MAHV;YAII,KAAK,EAAEA,MAJX;YAKI,QAAQ,EAAGwC,CAAD,IAAO8B,8BAA8B,CAAC9B,CAAD,EAAIS,SAAJ,EAAeC,QAAf,CALnD;YAMI,cAAc,EAAEL,IAAI,CAACJ;UANzB;YAAA;YAAA;YAAA;UAAA,QADJ,OAO0CzC,MAP1C;QAAA,GAAgCA,MAAhC;UAAA;UAAA;UAAA;QAAA,QADJ,CAUI;QAVJ;MAYH,CAlBD,CADJ;IAqBH;EACJ,CAxBD;;EA0BA,MAAMkF,2BAA2B,GAAG,CAACjC,SAAD,EAAYC,QAAZ,KAAyB;IACzD,IAAIyB,KAAK,CAACC,OAAN,CAActD,0BAAd,CAAJ,EAA+C;MAC3C,OACIA,0BAA0B,CAACsB,GAA3B,CAA+B,CAACC,IAAD,EAAOE,CAAP,KAAa;QACxC,IAAIhB,KAAK,GAAI,GAAEc,IAAI,CAACS,UAAL,CAAgBmB,cAAe,EAA9C;QACA,IAAIzE,MAAM,GAAI,IAAG6C,IAAI,CAACS,UAAL,CAAgBmB,cAAe,GAAhD;QAEAM,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkChF,MAAlC;QAEA,oBACI;UAAK,SAAS,EAAC,WAAf;UAAA,wBACI;YAAO,IAAI,EAAC,UAAZ;YACI,SAAS,EAAC,kBADd;YAEI,EAAE,EAAEA,MAFR;YAGI,IAAI,EAAEA,MAHV;YAII,KAAK,EAAEA,MAJX;YAKI,QAAQ,EAAGwC,CAAD,IAAOgC,iCAAiC,CAAChC,CAAD,EAAIS,SAAJ,EAAeC,QAAf,CALtD;YAMI,cAAc,EAAEL,IAAI,CAACJ;UANzB;YAAA;YAAA;YAAA;UAAA,QADJ,OAO0CzC,MAP1C;QAAA,GAAgCA,MAAhC;UAAA;UAAA;UAAA;QAAA,QADJ,CAUI;QAVJ;MAYH,CAlBD,CADJ;IAqBH;EACJ,CAxBD,CArT6C,CA+U7C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,MAAMmF,wBAAwB,GAAIlC,SAAD,IAAe;IAE5C,IAAImC,cAAc,GAAG3E,0BAA0B,CAACE,IAA3B,CAAgCiD,MAAhC,CAAuCf,IAAI,IAAI;MAChE,OAAOA,IAAI,CAACI,SAAL,IAAkBA,SAAzB;IACH,CAFoB,CAArB;IAIA,IAAIoC,SAAS,GAAGD,cAAc,CAAC,CAAD,CAA9B;;IAEA,IAAIC,SAAS,IAAIvB,SAAb,IAA0BhC,MAAM,CAACuD,SAAS,CAACnC,QAAX,CAAN,IAA8BY,SAA5D,EAAuE;MACnE,IAAIwB,SAAS,GAAGxD,MAAM,CAACuD,SAAS,CAACnC,QAAX,CAAtB,CADmE,CAEnE;;MAEA,IAAIoC,SAAS,CAACvD,KAAV,IAAmB,IAAvB,EAA6B;QACzB,oBACI;UAAA,UAAGuD,SAAS,CAACvD;QAAb,iBADJ;MAGH,CAJD,MAKK,IAAIuD,SAAS,CAACtD,IAAV,IAAkB,cAAtB,EAAsC;QACvC;UAAA;UACI;UACA;UACA;UACA;UACA;UACA;YAAK,SAAS,EAAC,qDAAf;YAAA,UAUK0C,kBAAkB,CAACzB,SAAD,EAAYoC,SAAS,CAACnC,QAAtB;UAVvB;YAAA;YAAA;YAAA;UAAA;QANJ;MAmBH,CApBI,MAqBA,IAAIoC,SAAS,CAACtD,IAAV,IAAkB,aAAtB,EAAqC;QACtC;UAAA;UACI;UACA;UACA;UACA;UACA;UACA;YAAK,SAAS,EAAC,qDAAf;YAAA,UAUK6C,iBAAiB,CAAC5B,SAAD,EAAYoC,SAAS,CAACnC,QAAtB;UAVtB;YAAA;YAAA;YAAA;UAAA;QANJ;MAmBH,CApBI,MAqBA,IAAIoC,SAAS,CAACtD,IAAV,IAAkB,cAAtB,EAAsC;QACvC;UAAA;UACI;UACA;UACA;UACA;UACA;UACA;YAAK,SAAS,EAAC,qDAAf;YAAA,UAUK8C,kBAAkB,CAAC7B,SAAD,EAAYoC,SAAS,CAACnC,QAAtB;UAVvB;YAAA;YAAA;YAAA;UAAA;QANJ;MAmBH,CApBI,MAqBA,IAAIoC,SAAS,CAACtD,IAAV,IAAkB,oBAAtB,EAA4C;QAC7C;UAAA;UACI;UACA;UACA;UACA;UACA;UACA;YAAK,SAAS,EAAC,qDAAf;YAAA,UAUKiD,wBAAwB,CAAChC,SAAD,EAAYoC,SAAS,CAACnC,QAAtB;UAV7B;YAAA;YAAA;YAAA;UAAA;QANJ;MAmBH,CApBI,MAqBA,IAAIoC,SAAS,CAACtD,IAAV,IAAkB,uBAAtB,EAA+C;QAChD;UAAA;UACI;UACA;UACA;UACA;UACA;UACA;YAAK,SAAS,EAAC,qDAAf;YAAA,UAUKkD,2BAA2B,CAACjC,SAAD,EAAYoC,SAAS,CAACnC,QAAtB;UAVhC;YAAA;YAAA;YAAA;UAAA;QANJ;MAmBH,CApBI,CAqBL;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAnCK,KAoCA;QACD,oBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ;MAGH;IACJ;;IACD,oBAAQ,qCAAR;EACH,CAhJD;;EAkJA,MAAMa,uBAAuB,GAAG,CAACd,SAAD,EAAYC,QAAZ,EAAsBnB,KAAtB,KAAgC;IAE5DgD,OAAO,CAACC,GAAR,CAAY,gCAAgC/B,SAAhC,GAA4C,GAA5C,GAAkDC,QAAlD,GAA6D,GAA7D,GAAmEnB,KAA/E;IAEA,IAAIwD,SAAS,GAAG9E,0BAA0B,CAACE,IAA3B,CAAgCiC,GAAhC,CAAoCC,IAAI,IAAI;MACxD,IAAIA,IAAI,CAACI,SAAL,IAAkBA,SAAtB,EAAiC;QAC7BJ,IAAI,CAACK,QAAL,GAAgBA,QAAhB;QACA,IAAIoC,SAAS,GAAGxD,MAAM,CAACoB,QAAD,CAAtB;QACAL,IAAI,CAAC2C,KAAL,GAAcF,SAAS,CAACvD,KAAV,IAAmB,IAApB,GAA4BuD,SAAS,CAACvD,KAAtC,GAA8CA,KAA3D;MACH;;MACD,OAAOc,IAAP;IACH,CAPe,CAAhB;IASAnC,0BAA0B,CAAC;MAAEC,IAAI,EAAE4E;IAAR,CAAD,CAA1B,CAb4D,CAc5D;EACH,CAfD;;EAiBA,MAAME,OAAO,GAAG,CACZ;IACIC,IAAI,EAAE,4BADV;IAEIC,IAAI,EAAE1C,SAAS,iBAAI;MAAA,uBAAK;QAAA,UAASA;MAAT;QAAA;QAAA;QAAA;MAAA;IAAL;MAAA;MAAA;MAAA;IAAA,QAFvB;IAGI2C,QAAQ,EAAE,IAHd;IAIIC,KAAK,EAAE;EAJX,CADY,EAOZ;IACIH,IAAI,EAAE,OADV;IAEIC,IAAI,EAAE1C,SAAS,iBACX;MAAQ,SAAS,EAAC,cAAlB;MAAiC,EAAE,EAAG,KAAIA,SAAU,EAApD;MAAuD,IAAI,EAAG,OAAMA,SAAU,EAA9E;MACI,QAAQ,EAAET,CAAC,IAAIuB,uBAAuB,CAACd,SAAD,EAAYT,CAAC,CAACE,MAAF,CAASX,KAArB,EAA4B,EAA5B,CAD1C;MAAA,wBAEI;QAAQ,KAAK,EAAC,EAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,EAGKe,YAAY,EAHjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAHR;IAQI8C,QAAQ,EAAE,KARd;IASIC,KAAK,EAAE;EATX,CAPY,EAkBZ;IACIH,IAAI,EAAE,oBADV;IAEIG,KAAK,EAAE,KAFX;IAGIF,IAAI,EAAE1C,SAAS,iBACX;MAAK,SAAS,EAAC,KAAf;MAAA,uBACI;QAAK,SAAS,EAAC,KAAf;QAAA,UACKkC,wBAAwB,CAAClC,SAAD;MAD7B;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EAJR,CAlBY,CAAhB;;EA+BA,MAAMf,gBAAgB,GAAG,MAAM;IAC3B3B,kBAAkB,CAAC,IAAD,CAAlB;IACA,MAAMI,IAAI,GAAG;MACT,QAAQ;QACJ,QAAQ,iBADJ;QAEJ,cAAc;UACV,MAAMvB,KAAK,CAACkD;QADF;MAFV;IADC,CAAb;IAQAvD,UAAU,CAAC+G,gBAAX,CAA4B,0CAA0C1G,KAAK,CAACkD,gBAA5E,EAA8F3B,IAA9F,EAAoGoF,IAApG,CACIC,KAAK,IAAI;MACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;QACd1F,kBAAkB,CAACyF,KAAD,CAAlB;QACA,IAAIE,gBAAgB,GAAGF,KAAK,CAACxF,MAAN,CAAaoC,GAAb,CAAiB,CAACC,IAAD,EAAOE,CAAP,KAAa;UACjD,OAAO;YAAEE,SAAS,EAAEJ,IAAb;YAAmBK,QAAQ,EAAE,EAA7B;YAAiCsC,KAAK,EAAE;UAAxC,CAAP;QACH,CAFsB,CAAvB,CAFc,CAMd;;QACA9E,0BAA0B,CAAC;UAAEC,IAAI,EAAEuF;QAAR,CAAD,CAA1B;MACH;IACJ,CAXL;EAaH,CAvBD;;EAyBA,MAAM/D,kBAAkB,GAAG,MAAM;IAC7B,MAAMxB,IAAI,GAAG;MACT,QAAQ;QACJ,QAAQ,aADJ;QAEJ,cAAc;UACV,gBAAgB,cADN;UAEV,eAAe,aAFL;UAGV,4BAA4BlB,sBAHlB;UAIV,kBAAkB0G,IAAI,CAACC,GAAL,EAJR;UAKV,kBAAkB,CAAC,CALT;UAMV,UAAU,GANA;UAOV,YAAY,GAPF;UAQV,gBAAgB;QARN;MAFV;IADC,CAAb;IAeArH,UAAU,CAAC+G,gBAAX,CAA4B,mCAAmCrG,sBAA/D,EAAuFkB,IAAvF,EAA6FoF,IAA7F,CACIC,KAAK,IAAI;MACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;QAEd,IAAIC,gBAAgB,GAAGF,KAAK,CAACrF,IAAN,CAAWiC,GAAX,CAAgBC,IAAD,IAAU;UAC5CA,IAAI,CAACJ,OAAL,GAAe,KAAf;UACA,OAAOI,IAAP;QACH,CAHsB,CAAvB;QAKAhC,oBAAoB,CAACqF,gBAAD,CAApB;MACH;IACJ,CAXL;EAaH,CA7BD;;EA+BA,MAAM9D,iBAAiB,GAAG,MAAM;IAC5B,MAAMzB,IAAI,GAAG;MACT,QAAQ;QACJ,QAAQ,YADJ;QAEJ,cAAc;UACV,4BAA4BlB,sBADlB;UAEV,kBAAkB,GAFR;UAGV,oBAAoB,GAHV;UAIV,iBAAiB,GAJP;UAKV,kBAAkB,GALR;UAMV,mBAAmB,GANT;UAOV,oBAAoB,GAPV;UAQV,UAAU,GARA;UASV,YAAY,GATF;UAUV,gBAAgB;QAVN;MAFV;IADC,CAAb;IAkBAV,UAAU,CAAC+G,gBAAX,CAA4B,uCAAuCrG,sBAAnE,EAA2FkB,IAA3F,EAAiGoF,IAAjG,CACIC,KAAK,IAAI;MACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;QACd,IAAIC,gBAAgB,GAAGF,KAAK,CAACrF,IAAN,CAAWiC,GAAX,CAAgBC,IAAD,IAAU;UAC5CA,IAAI,CAACJ,OAAL,GAAe,KAAf;UACA,OAAOI,IAAP;QACH,CAHsB,CAAvB;QAIA5B,mBAAmB,CAACiF,gBAAD,CAAnB;MACH,CAND,MAMO;QACHhG,aAAa,CAAC;UAAEC,KAAK,EAAE,sBAAT;UAAiCC,OAAO,EAAE4F,KAAK,CAACC,KAAN,CAAYjC,QAAZ,EAA1C;UAAkE3D,IAAI,EAAE,IAAxE;UAA8EgG,QAAQ,EAAE,IAAxF;UAA8F/G,IAAI,EAAE;YAAEA;UAAF;QAApG,CAAD,CAAb;MACH;IACJ,CAXL;EAaH,CAhCD;;EAkCA,MAAM+C,0BAA0B,GAAG,MAAM;IACrC,MAAM1B,IAAI,GAAG;MACT,QAAQ;QACJ,QAAQ,qBADJ;QAEJ,cAAc;UACV,4BAA4BlB,sBADlB;UAEV,YAAY,GAFF;UAGV,qBAAqB,IAHX;UAIV,UAAU,GAJA;UAKV,YAAY,GALF;UAMV,gBAAgB;QANN;MAFV;IADC,CAAb;IAcAV,UAAU,CAAC+G,gBAAX,CAA4B,iDAAiDrG,sBAA7E,EAAqGkB,IAArG,EAA2GoF,IAA3G,CACIC,KAAK,IAAI;MACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;QACd,IAAIC,gBAAgB,GAAGF,KAAK,CAACrF,IAAN,CAAWiC,GAAX,CAAgBC,IAAD,IAAU;UAC5CA,IAAI,CAACJ,OAAL,GAAe,KAAf;UACA,OAAOI,IAAP;QACH,CAHsB,CAAvB;QAIA1B,4BAA4B,CAAC+E,gBAAD,CAA5B;QACA7E,yBAAyB,CAAC6E,gBAAD,CAAzB;QACA3E,0BAA0B,CAAC2E,gBAAD,CAA1B;MACH,CARD,MASK;QACDhG,aAAa,CAAC;UAAEC,KAAK,EAAE,2BAAT;UAAsCC,OAAO,EAAE4F,KAAK,CAACC,KAAN,CAAYjC,QAAZ,EAA/C;UAAuE3D,IAAI,EAAE,IAA7E;UAAmFgG,QAAQ,EAAE,IAA7F;UAAmG/G,IAAI,EAAE;YAAEA;UAAF;QAAzG,CAAD,CAAb;MACH;IAEJ,CAfL;EAiBH,CAhCD;;EAkCA,MAAMgH,gBAAgB,GAAG,MAAM;IAC3B,IAAI;MACAC,MAAM,CAACC,WAAP,CAAmB,IAAnB;MAEA,IAAIhG,MAAM,GAAGC,0BAA0B,CAACE,IAA3B,CAAgCiC,GAAhC,CAAoCC,IAAI,IAAI;QACrD,OAAO;UACH,SAASA,IAAI,CAACI,SADX;UAEH,SAASJ,IAAI,CAAC2C;QAFX,CAAP;MAIH,CALY,CAAb;MAMAT,OAAO,CAACC,GAAR,CAAY,mBAAZ;MACAD,OAAO,CAACC,GAAR,CAAYxE,MAAZ;MAEA,MAAMG,IAAI,GAAG;QACT,QAAQ;UACJ,QAAQ,iBADJ;UAEJ,cAAc;YACV,UAAUH;UADA;QAFV;MADC,CAAb;MAQAzB,UAAU,CAAC+G,gBAAX,CAA4B,4CAA4C1G,KAAK,CAACkD,gBAA9E,EAAgG3B,IAAhG,EAAsGoF,IAAtG,CACIC,KAAK,IAAI;QACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;UACdQ,kBAAkB,CAACT,KAAK,CAACU,YAAP,EAAqBV,KAAK,CAACW,OAA3B,EAAoCX,KAAK,CAACY,SAA1C,EAAqD,MAArD,CAAlB;UACAL,MAAM,CAACC,WAAP,CAAmB,KAAnB;QACH,CAHD,MAIK;UACDtG,aAAa,CAAC;YAAEC,KAAK,EAAE,gBAAgBX,QAAhB,GAA2B,MAApC;YAA4CY,OAAO,EAAE4F,KAAK,CAACC,KAAN,CAAYjC,QAAZ,EAArD;YAA6E3D,IAAI,EAAE,IAAnF;YAAyFgG,QAAQ,EAAE,IAAnG;YAAyG/G,IAAI,EAAE;cAAEA;YAAF,CAA/G;YAAyHuH,KAAK,EAAEC,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC;UAA7J,CAAD,CAAb;QACH;MACJ,CATL;IAWH,CA/BD,CA+BE,OAAOhB,KAAP,EAAc;MACZlB,OAAO,CAACkB,KAAR,CAAcA,KAAd;IACH;EACJ,CAnCD;;EAqCA,SAASQ,kBAAT,CAA4BS,WAA5B,EAAyCC,UAAzC,EAAqDC,QAArD,EAA+DC,SAA/D,EAA0E;IACtE;IACA,MAAMC,UAAU,GAAI,QAAOJ,WAAY,WAAUC,UAAW,EAA5D;IACA,MAAMI,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAArB;IACAF,YAAY,CAACG,IAAb,GAAoBJ,UAApB;IACAC,YAAY,CAACI,QAAb,GAAwBP,QAAxB;IACAG,YAAY,CAACK,KAAb;EACH;;EAED,oBACI;IAAA,wBACI,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,QAAD;MAAU,IAAI,EAAE3H;IAAhB;MAAA;MAAA;MAAA;IAAA,QAFJ,EAGKK,kBAAkB,IAAI,IAAtB,gBACG;MAAA,wBACI;QAAK,SAAS,EAAC,WAAf;QAAA,uBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAK,SAAS,EAAC,qBAAf;QAAA,uBACI,QAAC,SAAD;UAAW,SAAS,EAAC,oEAArB;UACI,OAAO,EAAEmF,OADb;UAEI,IAAI,EAAEnF,kBAAkB,CAACE,MAF7B;UAGI,eAAe,EAAEsG,MAAM,CAACC,SAAP,CAAiBc,UAAjB,CAA4BC,eAHjD;UAII,OAAO;QAJX;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAJJ,eAYI;QAAK,SAAS,EAAC,qBAAf;QAAA,wBACI;UAAO,OAAO,EAAC,gBAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,IAAI,EAAC,QAAb;UAAsB,KAAK,EAAC,kCAA5B;UAA+D,OAAO,EAAE,MAAMxB,gBAAgB,EAA9F;UAAkG,SAAS,EAAC,sBAA5G;UAAA,6BAAoI;YAAG,SAAS,EAAC;UAAb;YAAA;YAAA;YAAA;UAAA,QAApI;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAZJ;IAAA,gBADH,gBAmBG;MAAK,SAAS,EAAC,WAAf;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAtBR;EAAA,gBADJ;AA4BH;;GA5uBQnH,gC;UACYN,W;;;KADZM,gC;AA8uBT,eAAeA,gCAAf"},"metadata":{},"sourceType":"module"}