{"ast":null,"code":"import axios from 'axios';\nimport { getBearerToken, handleError } from '../../../components/Utils/Common';\nconst baseUrl = process.env.REACT_APP_API_URL;\nconst headers = {\n  'Content-Type': 'application/vnd.api+json',\n  'Accept': 'application/vnd.api+json'\n};\n\nasync function getGeneric(relativeUrl) {\n  const url = baseUrl + relativeUrl;\n  headers['Authorization'] = getBearerToken();\n  console.log(url);\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    handleError(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllGeneric(serviceName) {\n  const url = serviceName;\n  return getGeneric(url);\n}\n\nasync function getByIdGeneric(serviceName, id) {\n  const url = serviceName + \"/\" + id;\n  return getGeneric(url);\n}\n\nasync function getByDataGeneric(serviceName, data) {\n  const url = baseUrl + serviceName;\n  headers['Authorization'] = getBearerToken();\n  console.log(url);\n  console.log(JSON.stringify(data));\n  return await axios.post(url, data, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    handleError(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function addGeneric(serviceName, data) {\n  const url = baseUrl + serviceName;\n  headers['Authorization'] = getBearerToken();\n  console.log(url);\n  console.log(JSON.stringify(data));\n  return await axios.post(url, data, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    handleError(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function updateGeneric(serviceName, id, data) {\n  const url = baseUrl + serviceName + \"/\" + id;\n  headers['Authorization'] = getBearerToken();\n  console.log(url);\n  console.log(JSON.stringify(data));\n  return await axios.put(url, data, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    handleError(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nexport default {\n  getGeneric,\n  getAllGeneric,\n  getByIdGeneric,\n  addGeneric,\n  updateGeneric,\n  getByDataGeneric\n};","map":{"version":3,"names":["axios","getBearerToken","handleError","baseUrl","process","env","REACT_APP_API_URL","headers","getGeneric","relativeUrl","url","console","log","get","then","response","data","catch","error","estado","getAllGeneric","serviceName","getByIdGeneric","id","getByDataGeneric","JSON","stringify","post","addGeneric","updateGeneric","put"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Api/Services/GenericApi.js"],"sourcesContent":["import axios from 'axios'\r\nimport { getBearerToken, handleError } from '../../../components/Utils/Common';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst headers = {\r\n    'Content-Type': 'application/vnd.api+json',\r\n    'Accept': 'application/vnd.api+json'\r\n}\r\n\r\nasync function getGeneric(relativeUrl) {\r\n    const url = baseUrl + relativeUrl;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    console.log(url);\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            handleError(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllGeneric(serviceName) {\r\n    const url = serviceName;\r\n    return getGeneric(url);\r\n}\r\n\r\nasync function getByIdGeneric(serviceName, id) {\r\n    const url = serviceName + \"/\" + id;\r\n    return getGeneric(url);\r\n}\r\n\r\nasync function getByDataGeneric(serviceName, data) {\r\n\r\n    const url = baseUrl + serviceName;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    console.log(url);\r\n    console.log(JSON.stringify(data));\r\n\r\n    return await axios.post(url, data, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            handleError(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function addGeneric(serviceName, data) {\r\n    const url = baseUrl + serviceName;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    console.log(url);\r\n    console.log(JSON.stringify(data));\r\n\r\n    return await axios.post(url, data, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            handleError(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function updateGeneric(serviceName, id, data) {\r\n\r\n    const url = baseUrl + serviceName + \"/\" + id;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    console.log(url);\r\n    console.log(JSON.stringify(data));\r\n\r\n    return await axios.put(url, data, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            handleError(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\n\r\nexport default { getGeneric, getAllGeneric, getByIdGeneric, addGeneric, updateGeneric, getByDataGeneric }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}