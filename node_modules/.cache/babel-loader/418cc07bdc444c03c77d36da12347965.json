{"ast":null,"code":"import _defineProperty from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import Spinner from'../../Utils/Spinner';import ModalGen from'../../Utils/Modals/ModalGeneric';import{ErrorMessage,Field,Form,Formik}from'formik';import{Link}from\"react-router-dom\";import GenericApi from'../../Api/Services/GenericApi';import{useLocation}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ActuacionesAprobacionRechazar(){var _useState=useState({title:\"\",message:\"\",show:false}),_useState2=_slicedToArray(_useState,2),getModalState=_useState2[0],setModalState=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),countTextArea=_useState4[0],setCountTextArea=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),getMinimoTextArea=_useState6[0],setMinimoTextArea=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),getMaximoTextArea=_useState8[0],setMaximoTextArea=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),getIdDependenciaSolicitante=_useState10[0],setIdDependenciaSolicitante=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),getUsuarioNombre=_useState12[0],setUsuarioNombre=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),getUsuarioApellido=_useState14[0],setUsuarioApellido=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),getUsuarioName=_useState16[0],setUsuarioName=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),getUsuarioDependenciaNombre=_useState18[0],setUsuarioDependenciaNombre=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),getActuacionCierraProceso=_useState20[0],setActuacionCierraProceso=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),getDespuesAprobacionListarActuacion=_useState22[0],setDespuesAprobacionListarActuacion=_useState22[1];var _useState23=useState(),_useState24=_slicedToArray(_useState23,2),getidMasActuacion=_useState24[0],setidMasActuacion=_useState24[1];var location=useLocation();var _location$state=location.state,getActuacionConFirmas=_location$state.getActuacionConFirmas,from=_location$state.from,selected_id_etapa=_location$state.selected_id_etapa,id=_location$state.id,nombre=_location$state.nombre,estadoActualActuacion=_location$state.estadoActualActuacion,titulo=_location$state.titulo,valor=_location$state.valor,solicitante=_location$state.solicitante,tipoActuacion=_location$state.tipoActuacion,actuacionIdMaestra=_location$state.actuacionIdMaestra;var _useState25=useState(''),_useState26=_slicedToArray(_useState25,2),getNombreProceso=_useState26[0],setNombreProceso=_useState26[1];var procesoDisciplinarioId=from.procesoDisciplinarioId;var _useState27=useState({ver_detalle:\"/ActuacionesVer/\"+from.procesoDisciplinarioId+\"/\"+selected_id_etapa+\"/1\"}),_useState28=_slicedToArray(_useState27,2),getRoutes=_useState28[0],setRoutes=_useState28[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:nombreProceso();case 1:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[]);console.log(\"actuacionIdMaestra ActuacionesAprobacionRechazar -> \",actuacionIdMaestra);var nombreProceso=function nombreProceso(){GenericApi.getByIdGeneric(\"nombre-proceso\",from.procesoDisciplinarioId).then(function(datos){if(!datos.error){setNombreProceso(datos.data.attributes.nombre);obtenerParametros();obtenerDatosUsuarioSolicitante();// Se setea el id de la actuación\nsetidMasActuacion(actuacionIdMaestra);// Se consume la API\nGenericApi.getByIdGeneric('mas_actuaciones',actuacionIdMaestra).then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se setean los datos\nsetActuacionCierraProceso(datos.data.attributes.cierra_proceso);setDespuesAprobacionListarActuacion(datos.data.attributes.despues_aprobacion_listar_actuacion);}});}});};var obtenerDatosUsuarioSolicitante=function obtenerDatosUsuarioSolicitante(){// Buscamos el parametro\nGenericApi.getGeneric(\"usuario/get-usuario-por-name/\"+solicitante).then(function(datos){if(!datos.error){if(datos[\"data\"].length>0){setIdDependenciaSolicitante(datos.data[0].attributes.id_dependencia);datosDelUsuarioARemitir(datos.data[0].attributes.name);}}else{}});};var datosDelUsuarioARemitir=function datosDelUsuarioARemitir(name){GenericApi.getGeneric('usuario/get-usuario-por-name/'+name).then(function(datos){if(!datos.error){var _datos$data$,_datos$data$$attribut,_datos$data$2,_datos$data$2$attribu,_datos$data$3,_datos$data$3$attribu,_datos$data$4,_datos$data$4$attribu,_datos$data$4$attribu2;// console.log(datos);\nsetUsuarioNombre(datos===null||datos===void 0?void 0:(_datos$data$=datos.data[0])===null||_datos$data$===void 0?void 0:(_datos$data$$attribut=_datos$data$.attributes)===null||_datos$data$$attribut===void 0?void 0:_datos$data$$attribut.nombre);setUsuarioApellido(datos===null||datos===void 0?void 0:(_datos$data$2=datos.data[0])===null||_datos$data$2===void 0?void 0:(_datos$data$2$attribu=_datos$data$2.attributes)===null||_datos$data$2$attribu===void 0?void 0:_datos$data$2$attribu.apellido);setUsuarioName(datos===null||datos===void 0?void 0:(_datos$data$3=datos.data[0])===null||_datos$data$3===void 0?void 0:(_datos$data$3$attribu=_datos$data$3.attributes)===null||_datos$data$3$attribu===void 0?void 0:_datos$data$3$attribu.name);setUsuarioDependenciaNombre(datos===null||datos===void 0?void 0:(_datos$data$4=datos.data[0])===null||_datos$data$4===void 0?void 0:(_datos$data$4$attribu=_datos$data$4.attributes)===null||_datos$data$4$attribu===void 0?void 0:(_datos$data$4$attribu2=_datos$data$4$attribu.dependencia)===null||_datos$data$4$attribu2===void 0?void 0:_datos$data$4$attribu2.nombre);}else{}});};function containsSpecialChars(str){var result=global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(function(specialChar){if(str.includes(specialChar)){return true;}return false;});return result;}var obtenerParametros=function obtenerParametros(){window.showSpinner(true);try{var data={\"data\":{\"type\":'mas_parametro',\"attributes\":{\"nombre\":\"minimo_caracteres_textarea|maximo_caracteres_textarea\"}}};// Buscamos el parametro\nGenericApi.getByDataGeneric(\"parametro/parametro-nombre\",data).then(function(datos){window.showSpinner(false);if(!datos.error){if(datos[\"data\"].length>0){datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea');}).map(function(filteredName){return setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]);});datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea');}).map(function(filteredName){return setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]);});}}else{setModalState({title:\"ACTUACIONES :: \",message:datos.error.toString(),show:true,redirect:'/AntecedentesForm',alert:global.Constants.TIPO_ALERTA.ERROR});}});}catch(error){// console.log(error);\n}};// Metodo encargado de aprobar o rechazar la actuacion\nvar enviarDatos=function enviarDatos(valores){// Se inicializa el cargando\nwindow.showSpinner(true);// Se consume la API para obtener los semaforos\nGenericApi.getByIdGeneric('get-semaforo-actuacion',actuacionIdMaestra).then(// Se inicializa la variable de respuesta\nfunction(datosSemaforo){// Se valida que no haya error\nif(!datosSemaforo.error){// Se recorre el array de respuesta\ndatosSemaforo.data.forEach(function(element){// Se valida que el elemento de inicio sea 2\nif(element.attributes.id_mas_evento_inicio.id==2){// Se valida que el id sea igual al id de la actuacion\nif(element.attributes.id_mas_actuacion_inicia.id==getidMasActuacion){// Se consume la API para actualizar la fecha del semaforo\nGenericApi.getByIdGeneric('existe-semaforo-con-fecha',element.id).then(// Se inicializa la variable de respuesta\nfunction(datosExiste){// Se valida que no haya error\nif(!datosExiste.error){// Se inicializan los datos\nvar date=new Date();var datapdxsemaforo={\"data\":{\"type\":\"pdxsemaforo\",\"attributes\":{\"id_semaforo\":element.id,\"id_proceso_disciplinario\":from.procesoDisciplinarioId,\"id_actuacion\":id,\"fecha_inicio\":date.toLocaleDateString('zh-Hans-CN'),\"estado\":1}}};// Se valida que exista informacion \nif(datosExiste.data.length>=1){// Se consume la api para consumir el servicio de actualizar el semaforo\nGenericApi.updateGeneric('pdxsemaforo',datosExiste.data[0].id,datapdxsemaforo);}else{// Se consume la api par añadir el servicio\nGenericApi.addGeneric('pdxsemaforo',datapdxsemaforo);}}else{// Se deshabilita el cargando\nwindow.showSpinner(false);// Se setea el modal\nsetModalState({title:getNombreProceso+\" :: APROBAR / RECHAZAR\",message:\"ERROR CON LA SEMAFORIZACIÓN\",show:true,alert:global.Constants.TIPO_ALERTA.ERROR});}});}}});}else{// Se deshabilita el cargando\nwindow.showSpinner(false);// Se setea el modal\nsetModalState({title:getNombreProceso+\" ::  APROBAR / RECHAZAR\",message:\"ERROR CON LA SEMAFORIZACIÓN\",show:true,alert:global.Constants.TIPO_ALERTA.ERROR});}});// Se consume la API del semaforos\nGenericApi.getByIdGeneric('get-autofinaliza-actuacion',actuacionIdMaestra).then(// Se inicializa la variable de respuesta\nfunction(datosSemaforoFinaliza){// Se valida que tenga longitud\nif(datosSemaforoFinaliza.data.length>=1){// Se recorre el array\ndatosSemaforoFinaliza.data.forEach(function(element){console.log(element);// Se consume la api del semaforo\nGenericApi.getGeneric('set-finaliza-semaforo/'+element.attributes.id_semaforo.id+\"/\"+from.procesoDisciplinarioId);});}});// Se inicializa el array con la informacion\nvar data={\"data\":{\"type\":\"trazabilidad-actuaciones\",\"attributes\":{\"uuid_actuacion\":id,\"id_estado_actuacion\":valor==1?1:2,\"observacion\":valores.informacion,\"estado\":1,\"envia_correo\":1,\"id_proceso_disciplinario\":procesoDisciplinarioId}}};// Se consume la API para aprobar o rechazar actuaciones\nGenericApi.addGeneric('trazabilidad-actuaciones',data).then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se inicializan las variables\nvar validacion=valor==1?'APROBADA':'RECHAZADA';var mensaje='LA ACTUACIÓN '+nombre+' HA SIDO '+validacion+' CON ÉXITO.';var tipoAct=tipoActuacion==\"0\"?\"ACTUACIONES\":tipoActuacion==\"1\"?'IMPEDIMENTO':'COMISORIO';var aprobacionRechazo=datos.attributes.despues_aprobacion_listar_actuacion;// Se valida cuando se aprueba\nif(valor==1){// Se valida cuando la actuacion tiene firmas\nif(getActuacionConFirmas>=1){var _from;// Se deshabilita el cargando\nwindow.showSpinner(false);// Se genera el modal y su redireccion\nsetModalState({title:\"SINPROC No \"+from.radicado+\" :: \"+tipoAct+\"APROBAR/RECHAZAR\",message:mensaje+\" EL PROCESO DISCIPLINARIO FUE APROBADO CON ÉXITO\",show:true,redirect:'/ActuacionesSigueImpedimentos',from:(_from={getActuacionCierraProceso:getActuacionCierraProceso,getDespuesAprobacionListarActuacion:getDespuesAprobacionListarActuacion,from:from,selected_id_etapa:selected_id_etapa,nombre:nombre,uuid_actuacion:id},_defineProperty(_from,\"nombre\",nombre),_defineProperty(_from,\"estadoActualActuacion\",estadoActualActuacion),_defineProperty(_from,\"tipoActuacion\",tipoActuacion),_defineProperty(_from,\"actuacionIdMaestra\",actuacionIdMaestra),_from),alert:global.Constants.TIPO_ALERTA.EXITO});// Se valida cuando la actuacion no tiene firmas\n}else if(getActuacionConFirmas<1){// Se deshabilita el cargando\nwindow.showSpinner(false);// Se genera el modal y su redireccion\nsetModalState({title:getNombreProceso+\" :: \"+tipoAct+\" APROBAR/RECHAZAR\",message:mensaje+\" EL PROCESO DISCIPLINARIO FUE APROBADO CON ÉXITO\",show:true,redirect:'/ActuacionesCargarArchivoDefinitivo',from:{getActuacionCierraProceso:getActuacionCierraProceso,getDespuesAprobacionListarActuacion:getDespuesAprobacionListarActuacion,from:from,selected_id_etapa:selected_id_etapa,nombre:nombre,uuid_actuacion:id,estadoActualActuacion:estadoActualActuacion,tipoActuacion:tipoActuacion,actuacionIdMaestra:actuacionIdMaestra},alert:global.Constants.TIPO_ALERTA.EXITO});}else{// Se deshabilita el cargando\nwindow.showSpinner(false);// Se genera el modal y su redireccion\nsetModalState({title:getNombreProceso+\" :: \"+tipoAct+\" APROBAR/RECHAZAR\",message:mensaje+\" ERROR EN LA CANTIDAD DE FIRMAS\",show:true,alert:global.Constants.TIPO_ALERTA.ERROR});}}else{// Se valida cuando la actuacion es un impedimento o comisorio\nif(tipoActuacion==1||tipoActuacion==2){// Se deshabilita el cargando\nwindow.showSpinner(false);// Se genera el modal y su redireccion\nsetModalState({title:getNombreProceso+\" :: \"+tipoAct+\" APROBAR/RECHAZAR\",message:mensaje,show:true,redirect:'/Transacciones',from:{from:from,selected_id_etapa:selected_id_etapa},alert:global.Constants.TIPO_ALERTA.EXITO});}else{// Se inicializa cuando se rechaza\nvar dataRechazo={\"data\":{\"type\":\"transacciones\",\"attributes\":{\"id_proceso_disciplinario\":from.procesoDisciplinarioId,\"id_dependencia_origen\":getIdDependenciaSolicitante,\"usuario_a_remitir\":solicitante,\"descripcion_a_remitir\":valores.informacion,\"id_etapa\":3}}};GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario',dataRechazo).then(function(datos){// Se deshabilita el cargando\nwindow.showSpinner(false);if(!datos.error){// Se setea el modal\nsetModalState({title:getNombreProceso+\" :: ACTUACIONES APROBAR/RECHAZAR\",message:mensaje+' EL PROCESO CON RADICADO: '+from.radicado+' FUE ASIGNADO AL USUARIO: '+getUsuarioNombre+' '+getUsuarioApellido+' ('+getUsuarioName+')  de la dependencia: '+getUsuarioDependenciaNombre+'',show:true,redirect:'/MisPendientes',alert:global.Constants.TIPO_ALERTA.EXITO});}else{// Se setea el modal\nsetModalState({title:getNombreProceso+\" :: ACTUACIONES APROBAR/RECHAZAR\",message:datos.error.toString(),show:true,redirect:'/MisPendientes',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});}}}else{// Se quita el cargando\nwindow.showSpinner(false);// Se inicializa el modal\nsetModalState({title:getNombreProceso+\" :: ACTUACIONES APROBAR/RECHAZAR\",message:datos.error.toString(),show:true,alert:global.Constants.TIPO_ALERTA.ERROR});}});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(ModalGen,{data:getModalState}),/*#__PURE__*/_jsx(Formik,{initialValues:{informacion:''},enableReinitialize:true,validate:function validate(valores){setCountTextArea(valores.informacion.length);var errores={};if(!valores.informacion){errores.informacion=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}else if(valores.informacion.length<=getMinimoTextArea){errores.informacion=global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES+' '+getMinimoTextArea;}if(valores.informacion){if(containsSpecialChars(valores.informacion))errores.informacion=global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS;}return errores;},onSubmit:function onSubmit(valores,_ref){var resetForm=_ref.resetForm;enviarDatos(valores);},children:function children(_ref2){var errors=_ref2.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"w2d_block\",children:/*#__PURE__*/_jsx(\"nav\",{\"aria-label\":\"breadcrumb\",children:/*#__PURE__*/_jsxs(\"ol\",{className:\"breadcrumb breadcrumb-alt push\",children:[/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/MisPendientes\",children:/*#__PURE__*/_jsx(\"small\",{children:\"Mis Pendientes\"})})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/RamasProceso/\",children:/*#__PURE__*/_jsx(\"small\",{children:\"Ramas del proceso\"})})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/ActuacionesLista/\",state:{from:from,selected_id_etapa:selected_id_etapa},children:/*#__PURE__*/_jsx(\"small\",{children:\"Actuaciones\"})})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:getRoutes.ver_detalle,state:{from:from,selected_id_etapa:selected_id_etapa,id:id,nombre:nombre,estadoActualActuacion:estadoActualActuacion},children:/*#__PURE__*/_jsxs(\"small\",{children:[\"Actuaci\\xF3n \",nombre]})})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsxs(\"small\",{children:[tipoActuacion==0?\"ACTUACIÓN\":tipoActuacion==1?'IMPEDIMENTO':'COMISORIO',\" Aprobar/Rechazar\"]})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsxs(\"h3\",{className:\"block-title\",children:[getNombreProceso.toUpperCase(),\" \",tipoActuacion==0?\"ACTUACIÓN\":tipoActuacion==1?'IMPEDIMENTO':'COMISORIO',\" :: \",titulo.toUpperCase(),\" \"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"informacion\",children:[\"MOTIVO POR EL QUE SE SOLICITA \",valor==1?\"LA APROBACIÓN\":\"EL RECHAZO\",\" \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger mt-2\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{as:\"textarea\",className:\"form-control mt-2\",id:\"informacion\",name:\"informacion\",rows:\"6\",placeholder:\"Informaci\\xF3n para su solicitud....\",maxLength:getMaximoTextArea,minLength:getMinimoTextArea}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-primary\",children:[countTextArea,\" / \",getMaximoTextArea]})}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"informacion\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.informacion});}})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:global.Constants.BOTON_NOMBRE.REGISTRAR}),/*#__PURE__*/_jsx(Link,{to:getRoutes.ver_detalle,state:{from:from,selected_id_etapa:selected_id_etapa,id:id,nombre:nombre,estadoActualActuacion:estadoActualActuacion,tipoActuacion:tipoActuacion,actuacionIdMaestra:actuacionIdMaestra},className:\"font-size-h5 font-w600\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:global.Constants.BOTON_NOMBRE.CANCELAR})})]})]})]})]});}})]});}export default ActuacionesAprobacionRechazar;","map":{"version":3,"names":["React","useEffect","useState","Spinner","ModalGen","ErrorMessage","Field","Form","Formik","Link","GenericApi","useLocation","ActuacionesAprobacionRechazar","title","message","show","getModalState","setModalState","countTextArea","setCountTextArea","getMinimoTextArea","setMinimoTextArea","getMaximoTextArea","setMaximoTextArea","getIdDependenciaSolicitante","setIdDependenciaSolicitante","getUsuarioNombre","setUsuarioNombre","getUsuarioApellido","setUsuarioApellido","getUsuarioName","setUsuarioName","getUsuarioDependenciaNombre","setUsuarioDependenciaNombre","getActuacionCierraProceso","setActuacionCierraProceso","getDespuesAprobacionListarActuacion","setDespuesAprobacionListarActuacion","getidMasActuacion","setidMasActuacion","location","state","getActuacionConFirmas","from","selected_id_etapa","id","nombre","estadoActualActuacion","titulo","valor","solicitante","tipoActuacion","actuacionIdMaestra","getNombreProceso","setNombreProceso","procesoDisciplinarioId","ver_detalle","getRoutes","setRoutes","fetchData","nombreProceso","console","log","getByIdGeneric","then","datos","error","data","attributes","obtenerParametros","obtenerDatosUsuarioSolicitante","cierra_proceso","despues_aprobacion_listar_actuacion","getGeneric","length","id_dependencia","datosDelUsuarioARemitir","name","apellido","dependencia","containsSpecialChars","str","result","global","Constants","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","window","showSpinner","getByDataGeneric","filter","map","filteredName","toString","redirect","alert","TIPO_ALERTA","ERROR","enviarDatos","valores","datosSemaforo","forEach","element","id_mas_evento_inicio","id_mas_actuacion_inicia","datosExiste","date","Date","datapdxsemaforo","toLocaleDateString","updateGeneric","addGeneric","datosSemaforoFinaliza","id_semaforo","informacion","validacion","mensaje","tipoAct","aprobacionRechazo","radicado","uuid_actuacion","EXITO","dataRechazo","errores","MENSAJE_ERROR","CAMPO_OBLIGATORIO","ERROR_FORMATO_CARACTERES","ERROR_FORMATO_CARACTERES_INVALIDOS","resetForm","errors","toUpperCase","BOTON_NOMBRE","REGISTRAR","CANCELAR"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Actuaciones/ActuacionesAprobacionRechazar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Link } from \"react-router-dom\";\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nfunction ActuacionesAprobacionRechazar() {\r\n\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getIdDependenciaSolicitante, setIdDependenciaSolicitante] = useState(\"\");\r\n    const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\r\n    const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\r\n    const [getUsuarioName, setUsuarioName] = useState(\"\");\r\n    const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\r\n    const [getActuacionCierraProceso, setActuacionCierraProceso] = useState(\"\");\r\n    const [getDespuesAprobacionListarActuacion, setDespuesAprobacionListarActuacion] = useState(\"\");\r\n    const [getidMasActuacion, setidMasActuacion] = useState();\r\n\r\n    const location = useLocation()\r\n    const { getActuacionConFirmas, from, selected_id_etapa, id, nombre, estadoActualActuacion, titulo, valor, solicitante, tipoActuacion, actuacionIdMaestra } = location.state;\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n    const [getRoutes, setRoutes] = useState({\r\n        ver_detalle: \"/ActuacionesVer/\" + from.procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/1\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            nombreProceso();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    console.log(\"actuacionIdMaestra ActuacionesAprobacionRechazar -> \", actuacionIdMaestra);\r\n\r\n    const nombreProceso = () => {\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                    obtenerParametros();\r\n                    obtenerDatosUsuarioSolicitante();\r\n\r\n                    // Se setea el id de la actuación\r\n                    setidMasActuacion(actuacionIdMaestra);\r\n\r\n                    // Se consume la API\r\n                    GenericApi.getByIdGeneric('mas_actuaciones', actuacionIdMaestra).then(\r\n\r\n                        // Se inicializa la variable de respuesta\r\n                        datos => {\r\n\r\n                            // Se valida que no haya error\r\n                            if (!datos.error) {\r\n\r\n                                // Se setean los datos\r\n                                setActuacionCierraProceso(datos.data.attributes.cierra_proceso);\r\n                                setDespuesAprobacionListarActuacion(datos.data.attributes.despues_aprobacion_listar_actuacion);\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const obtenerDatosUsuarioSolicitante = () => {\r\n\r\n        // Buscamos el parametro\r\n        GenericApi.getGeneric(\"usuario/get-usuario-por-name/\" + solicitante).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    if (datos[\"data\"].length > 0) {\r\n                        setIdDependenciaSolicitante(datos.data[0].attributes.id_dependencia);\r\n                        datosDelUsuarioARemitir(datos.data[0].attributes.name);\r\n                    }\r\n                } else {\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const datosDelUsuarioARemitir = (name) => {\r\n\r\n        GenericApi.getGeneric('usuario/get-usuario-por-name/' + name).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    // console.log(datos);\r\n                    setUsuarioNombre(datos?.data[0]?.attributes?.nombre);\r\n                    setUsuarioApellido(datos?.data[0]?.attributes?.apellido);\r\n                    setUsuarioName(datos?.data[0]?.attributes?.name);\r\n                    setUsuarioDependenciaNombre(datos?.data[0]?.attributes?.dependencia?.nombre);\r\n                } else {\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    const obtenerParametros = () => {\r\n\r\n        window.showSpinner(true);\r\n\r\n        try {\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                datos => {\r\n\r\n                    window.showSpinner(false);\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: \"ACTUACIONES :: \", message: datos.error.toString(), show: true, redirect: '/AntecedentesForm', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de aprobar o rechazar la actuacion\r\n    const enviarDatos = (valores) => {\r\n\r\n        // Se inicializa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se consume la API para obtener los semaforos\r\n        GenericApi.getByIdGeneric('get-semaforo-actuacion', actuacionIdMaestra).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datosSemaforo => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datosSemaforo.error) {\r\n\r\n                    // Se recorre el array de respuesta\r\n                    datosSemaforo.data.forEach(element => {\r\n\r\n                        // Se valida que el elemento de inicio sea 2\r\n                        if (element.attributes.id_mas_evento_inicio.id == 2) {\r\n\r\n                            // Se valida que el id sea igual al id de la actuacion\r\n                            if (element.attributes.id_mas_actuacion_inicia.id == getidMasActuacion) {\r\n\r\n                                // Se consume la API para actualizar la fecha del semaforo\r\n                                GenericApi.getByIdGeneric('existe-semaforo-con-fecha', element.id).then(\r\n\r\n                                    // Se inicializa la variable de respuesta\r\n                                    datosExiste => {\r\n\r\n                                        // Se valida que no haya error\r\n                                        if (!datosExiste.error) {\r\n\r\n                                            // Se inicializan los datos\r\n                                            let date = new Date();\r\n                                            let datapdxsemaforo = {\r\n                                                \"data\": {\r\n                                                    \"type\": \"pdxsemaforo\",\r\n                                                    \"attributes\": {\r\n                                                        \"id_semaforo\": element.id,\r\n                                                        \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                                                        \"id_actuacion\": id,\r\n                                                        \"fecha_inicio\": date.toLocaleDateString('zh-Hans-CN'),\r\n                                                        \"estado\": 1,\r\n                                                    }\r\n                                                }\r\n                                            }\r\n\r\n                                            // Se valida que exista informacion \r\n                                            if (datosExiste.data.length >= 1) {\r\n\r\n                                                // Se consume la api para consumir el servicio de actualizar el semaforo\r\n                                                GenericApi.updateGeneric('pdxsemaforo', datosExiste.data[0].id, datapdxsemaforo)\r\n                                            } else {\r\n\r\n                                                // Se consume la api par añadir el servicio\r\n                                                GenericApi.addGeneric('pdxsemaforo', datapdxsemaforo)\r\n                                            }\r\n                                        } else {\r\n\r\n                                            // Se deshabilita el cargando\r\n                                            window.showSpinner(false);\r\n\r\n                                            // Se setea el modal\r\n                                            setModalState(\r\n                                                {\r\n                                                    title: getNombreProceso + \" :: APROBAR / RECHAZAR\",\r\n                                                    message: \"ERROR CON LA SEMAFORIZACIÓN\",\r\n                                                    show: true,\r\n                                                    alert: global.Constants.TIPO_ALERTA.ERROR\r\n                                                });\r\n                                        }\r\n                                    }\r\n                                )\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n\r\n                    // Se deshabilita el cargando\r\n                    window.showSpinner(false);\r\n\r\n                    // Se setea el modal\r\n                    setModalState(\r\n                        {\r\n                            title: getNombreProceso + \" ::  APROBAR / RECHAZAR\",\r\n                            message: \"ERROR CON LA SEMAFORIZACIÓN\",\r\n                            show: true,\r\n                            alert: global.Constants.TIPO_ALERTA.ERROR\r\n                        });\r\n                }\r\n            }\r\n        )\r\n\r\n        // Se consume la API del semaforos\r\n        GenericApi.getByIdGeneric('get-autofinaliza-actuacion', actuacionIdMaestra).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datosSemaforoFinaliza => {\r\n\r\n                // Se valida que tenga longitud\r\n                if (datosSemaforoFinaliza.data.length >= 1) {\r\n\r\n                    // Se recorre el array\r\n                    datosSemaforoFinaliza.data.forEach(element => {\r\n                        console.log(element);\r\n                        // Se consume la api del semaforo\r\n                        GenericApi.getGeneric('set-finaliza-semaforo/' + element.attributes.id_semaforo.id + \"/\" + from.procesoDisciplinarioId)\r\n                    });\r\n                }\r\n            }\r\n        )\r\n\r\n        // Se inicializa el array con la informacion\r\n        let data = {\r\n            \"data\": {\r\n                \"type\": \"trazabilidad-actuaciones\",\r\n                \"attributes\": {\r\n                    \"uuid_actuacion\": id,\r\n                    \"id_estado_actuacion\": valor == 1 ? 1 : 2,\r\n                    \"observacion\": valores.informacion,\r\n                    \"estado\": 1,\r\n                    \"envia_correo\": 1,\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se consume la API para aprobar o rechazar actuaciones\r\n        GenericApi.addGeneric('trazabilidad-actuaciones', data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se inicializan las variables\r\n                    let validacion = (valor == 1 ? 'APROBADA' : 'RECHAZADA');\r\n                    let mensaje = 'LA ACTUACIÓN ' + nombre + ' HA SIDO ' + validacion + ' CON ÉXITO.';\r\n                    let tipoAct = tipoActuacion == \"0\" ? \"ACTUACIONES\" : (tipoActuacion == \"1\" ? 'IMPEDIMENTO' : 'COMISORIO');\r\n                    let aprobacionRechazo = datos.attributes.despues_aprobacion_listar_actuacion;\r\n\r\n                    // Se valida cuando se aprueba\r\n                    if (valor == 1) {\r\n\r\n                        // Se valida cuando la actuacion tiene firmas\r\n                        if (getActuacionConFirmas >= 1) {\r\n\r\n                            // Se deshabilita el cargando\r\n                            window.showSpinner(false);\r\n\r\n                            // Se genera el modal y su redireccion\r\n                            setModalState({\r\n                                title: \"SINPROC No \" + from.radicado + \" :: \" + tipoAct + \"APROBAR/RECHAZAR\", message: mensaje + \" EL PROCESO DISCIPLINARIO FUE APROBADO CON ÉXITO\",\r\n                                show: true,\r\n                                redirect: '/ActuacionesSigueImpedimentos',\r\n                                from: {\r\n                                    getActuacionCierraProceso: getActuacionCierraProceso,\r\n                                    getDespuesAprobacionListarActuacion: getDespuesAprobacionListarActuacion,\r\n                                    from: from,\r\n                                    selected_id_etapa: selected_id_etapa,\r\n                                    nombre: nombre,\r\n                                    uuid_actuacion: id,\r\n                                    nombre: nombre,\r\n                                    estadoActualActuacion: estadoActualActuacion,\r\n                                    tipoActuacion: tipoActuacion,\r\n                                    actuacionIdMaestra: actuacionIdMaestra\r\n                                },\r\n                                alert: global.Constants.TIPO_ALERTA.EXITO\r\n                            });\r\n\r\n                            // Se valida cuando la actuacion no tiene firmas\r\n                        } else if (getActuacionConFirmas < 1) {\r\n\r\n                            // Se deshabilita el cargando\r\n                            window.showSpinner(false);\r\n\r\n                            // Se genera el modal y su redireccion\r\n                            setModalState({\r\n                                title: getNombreProceso + \" :: \" + tipoAct + \" APROBAR/RECHAZAR\", message: mensaje + \" EL PROCESO DISCIPLINARIO FUE APROBADO CON ÉXITO\",\r\n                                show: true,\r\n                                redirect: '/ActuacionesCargarArchivoDefinitivo',\r\n                                from: {\r\n                                    getActuacionCierraProceso: getActuacionCierraProceso,\r\n                                    getDespuesAprobacionListarActuacion: getDespuesAprobacionListarActuacion,\r\n                                    from: from,\r\n                                    selected_id_etapa: selected_id_etapa,\r\n                                    nombre: nombre,\r\n                                    uuid_actuacion: id,\r\n                                    estadoActualActuacion: estadoActualActuacion,\r\n                                    tipoActuacion: tipoActuacion,\r\n                                    actuacionIdMaestra: actuacionIdMaestra\r\n                                }, alert: global.Constants.TIPO_ALERTA.EXITO\r\n                            });\r\n                        } else {\r\n\r\n                            // Se deshabilita el cargando\r\n                            window.showSpinner(false);\r\n\r\n                            // Se genera el modal y su redireccion\r\n                            setModalState({\r\n                                title: getNombreProceso + \" :: \" + tipoAct + \" APROBAR/RECHAZAR\",\r\n                                message: mensaje + \" ERROR EN LA CANTIDAD DE FIRMAS\",\r\n                                show: true,\r\n                                alert: global.Constants.TIPO_ALERTA.ERROR\r\n                            });\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        // Se valida cuando la actuacion es un impedimento o comisorio\r\n                        if (tipoActuacion == 1 || tipoActuacion == 2) {\r\n\r\n                            // Se deshabilita el cargando\r\n                            window.showSpinner(false);\r\n\r\n                            // Se genera el modal y su redireccion\r\n                            setModalState({\r\n                                title: getNombreProceso + \" :: \" + tipoAct + \" APROBAR/RECHAZAR\",\r\n                                message: mensaje,\r\n                                show: true,\r\n                                redirect: '/Transacciones',\r\n                                from: { from: from, selected_id_etapa: selected_id_etapa },\r\n                                alert: global.Constants.TIPO_ALERTA.EXITO\r\n                            });\r\n                        } else {\r\n\r\n                            // Se inicializa cuando se rechaza\r\n                            let dataRechazo = {\r\n                                \"data\": {\r\n                                    \"type\": \"transacciones\",\r\n                                    \"attributes\": {\r\n                                        \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                                        \"id_dependencia_origen\": getIdDependenciaSolicitante,\r\n                                        \"usuario_a_remitir\": solicitante,\r\n                                        \"descripcion_a_remitir\": valores.informacion,\r\n                                        \"id_etapa\": 3\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', dataRechazo).then(\r\n                                datos => {\r\n\r\n                                    // Se deshabilita el cargando\r\n                                    window.showSpinner(false);\r\n\r\n                                    if (!datos.error) {\r\n\r\n                                        // Se setea el modal\r\n                                        setModalState({\r\n                                            title: getNombreProceso + \" :: ACTUACIONES APROBAR/RECHAZAR\",\r\n                                            message: mensaje + ' EL PROCESO CON RADICADO: ' + from.radicado + ' FUE ASIGNADO AL USUARIO: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ')  de la dependencia: ' + getUsuarioDependenciaNombre + '',\r\n                                            show: true,\r\n                                            redirect: '/MisPendientes',\r\n                                            alert: global.Constants.TIPO_ALERTA.EXITO\r\n                                        });\r\n                                    } else {\r\n\r\n                                        // Se setea el modal\r\n                                        setModalState({\r\n                                            title: getNombreProceso + \" :: ACTUACIONES APROBAR/RECHAZAR\",\r\n                                            message: datos.error.toString(),\r\n                                            show: true,\r\n                                            redirect: '/MisPendientes',\r\n                                            from: { from },\r\n                                            alert: global.Constants.TIPO_ALERTA.ERROR\r\n                                        });\r\n                                    }\r\n                                }\r\n                            )\r\n                        }\r\n                    }\r\n                } else {\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n\r\n                    // Se inicializa el modal\r\n                    setModalState({\r\n                        title: getNombreProceso + \" :: ACTUACIONES APROBAR/RECHAZAR\",\r\n                        message: datos.error.toString(),\r\n                        show: true,\r\n                        alert: global.Constants.TIPO_ALERTA.ERROR\r\n                    });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    informacion: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    setCountTextArea(valores.informacion.length)\r\n                    let errores = {}\r\n                    if (!valores.informacion) {\r\n                        errores.informacion = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                    }\r\n                    else if (valores.informacion.length <= getMinimoTextArea) {\r\n                        errores.informacion = global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES + ' ' + getMinimoTextArea;\r\n                    }\r\n                    if (valores.informacion) {\r\n                        if (containsSpecialChars(valores.informacion))\r\n                            errores.informacion = global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS;\r\n                    }\r\n\r\n                    return errores;\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`}><small>Ramas del proceso</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}><small>Actuaciones</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={getRoutes.ver_detalle} state={{ from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion }}><small>Actuación {nombre}</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <small>{tipoActuacion == 0 ? \"ACTUACIÓN\" : (tipoActuacion == 1 ? 'IMPEDIMENTO' : 'COMISORIO')} Aprobar/Rechazar</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">{getNombreProceso.toUpperCase()} {tipoActuacion == 0 ? \"ACTUACIÓN\" : (tipoActuacion == 1 ? 'IMPEDIMENTO' : 'COMISORIO')} :: {titulo.toUpperCase()} </h3>\r\n                            </div>\r\n                            <div className=\"block-content\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12 mt-2\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"informacion\">MOTIVO POR EL QUE SE SOLICITA {valor == 1 ? \"LA APROBACIÓN\" : \"EL RECHAZO\"} <span className=\"text-danger mt-2\">*</span></label>\r\n                                            <Field as=\"textarea\" className=\"form-control mt-2\" id=\"informacion\" name=\"informacion\" rows=\"6\" placeholder=\"Información para su solicitud....\"\r\n                                                maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                            <div className=\"text-right\">\r\n                                                <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                            </div>\r\n                                            <ErrorMessage name=\"informacion\" component={() => (<span className=\"text-danger\">{errors.informacion}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\" >{global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n                                    <Link to={getRoutes.ver_detalle} state={{ from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion, tipoActuacion: tipoActuacion, actuacionIdMaestra: actuacionIdMaestra }} className=\"font-size-h5 font-w600\" >\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\" >{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ActuacionesAprobacionRechazar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}