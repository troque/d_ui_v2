{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Maestras\\\\ParametroCamposForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport Spinner from '../Utils/Spinner';\nimport { Link } from \"react-router-dom\";\nimport GenericApi from '../Api/Services/GenericApi';\nimport { useLocation } from 'react-router-dom';\nimport '../Utils/Constants';\nimport ModalGen from '../Utils/Modals/ModalGeneric';\nimport InfoErrorApi from '../Utils/InfoErrorApi';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ParametroCamposActuacionesForm() {\n  _s();\n  const [errorApi, setErrorApi] = useState('');\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n\n  // Constantes para cargar los valores\n  const [getDescripcionParametro, setDescripcionParametro] = useState(\"\");\n  const [getValorParametro, setValorParametro] = useState(\"\");\n  const [getArrayEstados, setArrayEstados] = useState([]);\n  const [getMensajeErrorNombreParametro, setMensajeErrorNombreParametro] = useState(\"\");\n  const [getMensajeErrorValorParametro, setMensajeErrorValorParametro] = useState(\"\");\n  const [getMensajeErrorEstado, setMensajeErrorEstado] = useState(\"\");\n  const getListaEstados = [{\n    value: '1',\n    label: 'ACTIVO'\n  }, {\n    value: '0',\n    label: 'INACTIVO'\n  }];\n  const getListaValorParametro = [{\n    value: 'Antecedentes',\n    label: 'LISTA DE ANTECEDENTES'\n  }, {\n    value: 'Dependencia',\n    label: 'DEPENDENCIA'\n  }, {\n    value: 'Investigado',\n    label: 'LISTADO DE NOMBRES DEL INVESTIGADO'\n  }, {\n    value: 'Cargo',\n    label: 'LISTADO DE CARGOS DEL INVESTIGADO'\n  }, {\n    value: 'Entidad',\n    label: 'LISTADO DE ENTIDADES DEL INVESTIGADO'\n  }, {\n    value: 'Interesados',\n    label: 'LISTADO DE INTERESADOS'\n  }, {\n    value: 'Fecha de Ingreso',\n    label: 'FECHA DE INGRESO'\n  }, {\n    value: 'Fecha de Registro',\n    label: 'FECHA DE REGISTRO'\n  }, {\n    value: 'Número de auto (generado despues de aprobación)',\n    label: 'NÚMERO DE AUTO (GENERADO DESPUÉS DE LA APROBACIÓN)'\n  }, {\n    value: 'Número de radicado',\n    label: 'NÚMERO DEL RADICADO'\n  }, {\n    value: 'Dependencia Origen',\n    label: 'NOMBRE DE LA DEPENDENCIA'\n  }];\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  useEffect(() => {\n    async function fetchData() {\n      // Se habilita el cargando\n      window.showSpinner(true);\n      if (from != null) {\n        // Se carga el nombre del parametro\n        setDescripcionParametro(from.attributes.nombre_campo);\n        setValorParametro(from.attributes.type);\n\n        // Se carga el estado\n        if (from.attributes.estado == 1) {\n          // Se setea el valor del estado\n          setArrayEstados({\n            label: 'ACTIVO',\n            value: from.attributes.estado\n          });\n        } else {\n          // Se setea el valor del estado\n          setArrayEstados({\n            label: 'INACTIVO',\n            value: from.attributes.estado\n          });\n        }\n\n        // Se deshabilita el cargando\n        window.showSpinner(false);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // Metodo encargado de registrar los valores\n  const enviarDatos = valores => {\n    // Se inicializa el array\n    let data;\n\n    // Se validan los campos\n    if (!getDescripcionParametro) {\n      // Se setea el valor\n      setMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO);\n\n      // Se retorna el error\n      return false;\n    } else if (getDescripcionParametro) {\n      // Se valida que contenga caracteres invalidos\n      if (containsSpecialChars(getDescripcionParametro)) {\n        // Se setea el valor\n        setMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS);\n\n        // Se retorna\n        return false;\n      } else {\n        // Se setea el valor\n        setMensajeErrorNombreParametro('');\n      }\n    }\n\n    // Se valida que tenga el minimo de caracteres ingresados\n    if (getDescripcionParametro.length <= 2) {\n      // Se setea el valor\n      setMensajeErrorNombreParametro('El parámetro debe tener al menos 3 caracteres');\n\n      // Se retorna el error\n      return false;\n    } else {\n      // Se setea el valor\n      setMensajeErrorNombreParametro('');\n    }\n\n    // Se valida que el valor del parametro sea diferente de null\n    if (!getArrayEstados.value) {\n      // Se setea el mensaje de error\n      setMensajeErrorEstado(\"DEBE SELECCIONAR AL MENOS UN VALOR\");\n\n      // Se retorna el error\n      return;\n    } else {\n      // Se setea el mensaje de error\n      setMensajeErrorEstado(\"\");\n    }\n\n    // Se inicializa el array a enviar por post\n    data = {\n      \"data\": {\n        \"type\": \"parametro-campos\",\n        \"attributes\": {\n          \"descripcion_parametro\": getDescripcionParametro,\n          \"type\": getValorParametro,\n          \"estado\": getArrayEstados.value\n        }\n      }\n    };\n\n    // Se utiliza el cargando\n    window.showSpinner(true);\n\n    // Se inicializa la API\n    GenericApi.addGeneric('parametro-campos', data).then(datos => {\n      // Se utiliza el cargando\n      window.showSpinner(false);\n\n      // Se valida que no haya error\n      if (!datos.error) {\n        setModalState({\n          title: \"ADMINISTRACIÓN :: ACTUACIONES :: PARAMÉTRICAS\",\n          message: global.Constants.MENSAJES_MODAL.EXITOSO,\n          show: true,\n          redirect: '/ParametroCampos',\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        setModalState({\n          title: \"ADMINISTRACIÓN :: ACTUACIONES :: PARAMÉTRICAS\",\n          message: datos.error.toString(),\n          show: true,\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  // Metodo encargado de actualizar los valores \n  const actualizarDatos = valores => {\n    // Se inicializa el valor del id\n    const id = from.id;\n\n    // Se inicializa el array\n    let data;\n\n    // Se validan los campos\n    if (!getDescripcionParametro) {\n      // Se setea el valor\n      setMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO);\n\n      // Se retorna el error\n      return false;\n    } else if (getDescripcionParametro) {\n      // Se valida que contenga caracteres invalidos\n      if (containsSpecialChars(getDescripcionParametro)) {\n        // Se setea el valor\n        setMensajeErrorNombreParametro(global.Constants.MENSAJE_INFORMATIVO.ERROR_FORMATO_CARACTERES_INVALIDOS);\n\n        // Se retorna\n        return false;\n      } else {\n        // Se setea el valor\n        setMensajeErrorNombreParametro('');\n      }\n    }\n\n    // Se valida que tenga el minimo de caracteres ingresados\n    if (getDescripcionParametro.length < 3) {\n      // Se setea el valor\n      setMensajeErrorNombreParametro('El parámetro debe tener al menos 3 caracteres');\n\n      // Se retorna el error\n      return false;\n    } else {\n      // Se setea el valor\n      setMensajeErrorNombreParametro('');\n    }\n\n    // Se inicializa el array a enviar por post\n    data = {\n      \"data\": {\n        \"type\": \"parametro-campos\",\n        \"attributes\": {\n          \"nombre_campo\": getDescripcionParametro,\n          \"type\": getValorParametro,\n          \"estado\": getArrayEstados.value\n        }\n      }\n    };\n\n    // Se utiliza el cargando\n    window.showSpinner(true);\n    GenericApi.updateGeneric('parametro-campos', id, data).then(datos => {\n      // Se deshabilita el cargando\n      window.showSpinner(false);\n\n      // Se valida que no haya error\n      if (!datos.error) {\n        setModalState({\n          title: \"ADMINISTRACIÓN :: ACTUACIONES :: PARAMÉTRICAS\",\n          message: 'Actualizado con éxito ',\n          show: true,\n          redirect: '/ParametroCampos',\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        setModalState({\n          title: \"ADMINISTRACIÓN :: ACTUACIONES :: PARAMÉTRICAS\",\n          message: datos.errors[0].detail,\n          show: true,\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  // Metodo encargado de validar que no se ingresen caracteres invalidos\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n\n  // Metodo encargado de setear el valor del parametro\n  const changeParametro = e => {\n    // Se setea el valor escrito a la constante\n    if (e.target.value === '' || global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(e.target.value) && e.target.value.length <= 255) {\n      setDescripcionParametro(e.target.value);\n    }\n  };\n\n  // Metodo encargado de setear el valor del parametro\n  const changeDescripcion = e => {\n    // Se setea el valor escrito a la constante\n    if (e.target.value === '' || global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(e.target.value) && e.target.value.length <= 255) {\n      setDescripcionParametro(e.target.value);\n    }\n  };\n\n  // Metodo encargado de setear el valor del estado\n  const selectChangeEstados = v => {\n    // Se carga el tipo de estado en el array del select\n    setArrayEstados(v);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n      error: errorApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        nombreParametro: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {},\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        if (from != null) {\n          actualizarDatos(valores);\n        } else {\n          enviarDatos(valores);\n        }\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block block-themed\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w2d_block let\",\n                  children: /*#__PURE__*/_jsxDEV(\"nav\", {\n                    \"aria-label\": \"breadcrumb\",\n                    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                      className: \"breadcrumb breadcrumb-alt push\",\n                      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"breadcrumb-item\",\n                        children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                          underline: \"hover\",\n                          className: \"text-dark\",\n                          to: `/ParametroCamposCaratula`,\n                          children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                            children: \"Lista par\\xE1metros de las actuaciones\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 328,\n                            columnNumber: 161\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 328,\n                          columnNumber: 82\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 328,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"breadcrumb-item\",\n                        children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                          children: [from != null ? 'Actualizar' : 'Crear', \" par\\xE1metros de las actuaciones\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 329,\n                          columnNumber: 82\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 329,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"block-title\",\n                  children: \"ADMINISTRACI\\xD3N :: ACTUACIONES :: PARAM\\xC9TRICAS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"nombreParametro\",\n                        children: [\"NOMBRE DEL PAR\\xC1METRO\", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 342,\n                          columnNumber: 102\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        as: \"input\",\n                        type: \"text\",\n                        className: \"form-control\",\n                        id: \"valorParametro\",\n                        name: \"valorParametro\",\n                        value: getValorParametro,\n                        onChange: changeDescripcion,\n                        autocomplete: \"off\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 49\n                      }, this), getMensajeErrorNombreParametro ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: getMensajeErrorNombreParametro\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 345,\n                        columnNumber: 53\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"nombreParametro\",\n                        children: [\"DESCRIPCION DEL PAR\\xC1METRO\", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 352,\n                          columnNumber: 107\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        as: \"input\",\n                        type: \"text\",\n                        className: \"form-control\",\n                        id: \"nombreParametro\",\n                        name: \"nombreParametro\",\n                        value: getDescripcionParametro,\n                        onChange: changeParametro,\n                        autocomplete: \"off\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 353,\n                        columnNumber: 49\n                      }, this), getMensajeErrorNombreParametro ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: getMensajeErrorNombreParametro\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 355,\n                        columnNumber: 53\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"estado\",\n                        children: [\"ESTADO \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 362,\n                          columnNumber: 80\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 362,\n                        columnNumber: 49\n                      }, this), getArrayEstados ? /*#__PURE__*/_jsxDEV(Select, {\n                        id: \"estado\",\n                        name: \"estado\",\n                        isMulti: false,\n                        value: getArrayEstados,\n                        placeholder: global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION,\n                        noOptionsMessage: () => \"Sin datos\",\n                        options: getListaEstados.map(e => ({\n                          label: e.label,\n                          value: e.value\n                        })),\n                        onChange: e => selectChangeEstados(e)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 364,\n                        columnNumber: 53\n                      }, this) : null, getMensajeErrorEstado ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: getMensajeErrorEstado\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 378,\n                        columnNumber: 53\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right bg-light\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: from != null ? global.Constants.BOTON_NOMBRE.ACTUALIZAR : global.Constants.BOTON_NOMBRE.REGISTRAR\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: '/ParametroCampos',\n                className: \"font-size-h5 font-w600\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: global.Constants.BOTON_NOMBRE.CANCELAR\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ParametroCamposActuacionesForm, \"dB/9eC1Fu4otPoJZrn+zEEvwy7k=\", false, function () {\n  return [useLocation];\n});\n_c = ParametroCamposActuacionesForm;\nexport default ParametroCamposActuacionesForm;\nvar _c;\n$RefreshReg$(_c, \"ParametroCamposActuacionesForm\");","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","Spinner","Link","GenericApi","useLocation","ModalGen","InfoErrorApi","Select","ParametroCamposActuacionesForm","errorApi","setErrorApi","getModalState","setModalState","title","message","show","getDescripcionParametro","setDescripcionParametro","getValorParametro","setValorParametro","getArrayEstados","setArrayEstados","getMensajeErrorNombreParametro","setMensajeErrorNombreParametro","getMensajeErrorValorParametro","setMensajeErrorValorParametro","getMensajeErrorEstado","setMensajeErrorEstado","getListaEstados","value","label","getListaValorParametro","location","from","state","fetchData","window","showSpinner","attributes","nombre_campo","type","estado","enviarDatos","valores","data","global","Constants","MENSAJE_ERROR","CAMPO_OBLIGATORIO","containsSpecialChars","ERROR_FORMATO_CARACTERES_INVALIDOS","length","addGeneric","then","datos","error","MENSAJES_MODAL","EXITOSO","redirect","alert","TIPO_ALERTA","EXITO","toString","ERROR","actualizarDatos","id","MENSAJE_INFORMATIVO","updateGeneric","errors","detail","str","result","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","changeParametro","e","target","formatOnlyLettersWhitAccent","test","changeDescripcion","selectChangeEstados","v","nombreParametro","resetForm","SELECCIONE_UNA_OPCION","map","BOTON_NOMBRE","ACTUALIZAR","REGISTRAR","CANCELAR"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/ParametroCamposForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport Spinner from '../Utils/Spinner';\r\nimport { Link } from \"react-router-dom\";\r\nimport GenericApi from '../Api/Services/GenericApi';\r\nimport { useLocation } from 'react-router-dom';\r\nimport '../Utils/Constants';\r\nimport ModalGen from '../Utils/Modals/ModalGeneric';\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport Select from 'react-select';\r\n\r\nfunction ParametroCamposActuacionesForm() {\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n\r\n    // Constantes para cargar los valores\r\n    const [getDescripcionParametro, setDescripcionParametro] = useState(\"\");\r\n    const [getValorParametro, setValorParametro] = useState(\"\");\r\n\r\n    const [getArrayEstados, setArrayEstados] = useState([]);\r\n\r\n    const [getMensajeErrorNombreParametro, setMensajeErrorNombreParametro] = useState(\"\");\r\n    const [getMensajeErrorValorParametro, setMensajeErrorValorParametro] = useState(\"\");\r\n    const [getMensajeErrorEstado, setMensajeErrorEstado] = useState(\"\");\r\n    \r\n    const getListaEstados =\r\n        [\r\n            { value: '1', label: 'ACTIVO' },\r\n            { value: '0', label: 'INACTIVO' }\r\n        ];\r\n\r\n    const getListaValorParametro =\r\n        [\r\n            { value: 'Antecedentes', label: 'LISTA DE ANTECEDENTES' },\r\n            { value: 'Dependencia', label: 'DEPENDENCIA' },\r\n            { value: 'Investigado', label: 'LISTADO DE NOMBRES DEL INVESTIGADO' },\r\n            { value: 'Cargo', label: 'LISTADO DE CARGOS DEL INVESTIGADO' },\r\n            { value: 'Entidad', label: 'LISTADO DE ENTIDADES DEL INVESTIGADO' },\r\n            { value: 'Interesados', label: 'LISTADO DE INTERESADOS' },\r\n            { value: 'Fecha de Ingreso', label: 'FECHA DE INGRESO' },\r\n            { value: 'Fecha de Registro', label: 'FECHA DE REGISTRO' },\r\n            { value: 'Número de auto (generado despues de aprobación)', label: 'NÚMERO DE AUTO (GENERADO DESPUÉS DE LA APROBACIÓN)' },\r\n            { value: 'Número de radicado', label: 'NÚMERO DEL RADICADO' },\r\n            { value: 'Dependencia Origen', label: 'NOMBRE DE LA DEPENDENCIA' },\r\n        ];\r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            // Se habilita el cargando\r\n            window.showSpinner(true);\r\n\r\n            if (from != null) {\r\n\r\n                // Se carga el nombre del parametro\r\n                setDescripcionParametro(from.attributes.nombre_campo);\r\n                setValorParametro(from.attributes.type);\r\n\r\n                // Se carga el estado\r\n                if (from.attributes.estado == 1) {\r\n\r\n                    // Se setea el valor del estado\r\n                    setArrayEstados({ label: 'ACTIVO', value: from.attributes.estado });\r\n                } else {\r\n\r\n                    // Se setea el valor del estado\r\n                    setArrayEstados({ label: 'INACTIVO', value: from.attributes.estado });\r\n                }\r\n\r\n                // Se deshabilita el cargando\r\n                window.showSpinner(false);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Metodo encargado de registrar los valores\r\n    const enviarDatos = (valores) => {\r\n\r\n        // Se inicializa el array\r\n        let data;\r\n\r\n        // Se validan los campos\r\n        if (!getDescripcionParametro) {\r\n\r\n            // Se setea el valor\r\n            setMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO);\r\n\r\n            // Se retorna el error\r\n            return false;\r\n        } else if (getDescripcionParametro) {\r\n\r\n            // Se valida que contenga caracteres invalidos\r\n            if (containsSpecialChars(getDescripcionParametro)) {\r\n\r\n                // Se setea el valor\r\n                setMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS);\r\n\r\n                // Se retorna\r\n                return false;\r\n            } else {\r\n\r\n                // Se setea el valor\r\n                setMensajeErrorNombreParametro('');\r\n            }\r\n        }\r\n\r\n        // Se valida que tenga el minimo de caracteres ingresados\r\n        if (getDescripcionParametro.length <= 2) {\r\n\r\n            // Se setea el valor\r\n            setMensajeErrorNombreParametro('El parámetro debe tener al menos 3 caracteres');\r\n\r\n            // Se retorna el error\r\n            return false;\r\n        } else {\r\n\r\n            // Se setea el valor\r\n            setMensajeErrorNombreParametro('');\r\n        }\r\n\r\n        // Se valida que el valor del parametro sea diferente de null\r\n        if (!getArrayEstados.value) {\r\n\r\n            // Se setea el mensaje de error\r\n            setMensajeErrorEstado(\"DEBE SELECCIONAR AL MENOS UN VALOR\");\r\n\r\n            // Se retorna el error\r\n            return;\r\n        } else {\r\n\r\n            // Se setea el mensaje de error\r\n            setMensajeErrorEstado(\"\");\r\n        }\r\n\r\n        // Se inicializa el array a enviar por post\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"parametro-campos\",\r\n                \"attributes\": {\r\n                    \"descripcion_parametro\": getDescripcionParametro,\r\n                    \"type\": getValorParametro,\r\n                    \"estado\": getArrayEstados.value\r\n                }\r\n            }\r\n        };\r\n\r\n        // Se utiliza el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa la API\r\n        GenericApi.addGeneric('parametro-campos', data).then(\r\n            datos => {\r\n\r\n                // Se utiliza el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: ACTUACIONES :: PARAMÉTRICAS\", message: global.Constants.MENSAJES_MODAL.EXITOSO, show: true, redirect: '/ParametroCampos', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: ACTUACIONES :: PARAMÉTRICAS\", message: datos.error.toString(), show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de actualizar los valores \r\n    const actualizarDatos = (valores) => {\r\n\r\n        // Se inicializa el valor del id\r\n        const id = from.id;\r\n\r\n        // Se inicializa el array\r\n        let data;\r\n\r\n        // Se validan los campos\r\n        if (!getDescripcionParametro) {\r\n\r\n            // Se setea el valor\r\n            setMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO);\r\n\r\n            // Se retorna el error\r\n            return false;\r\n        } else if (getDescripcionParametro) {\r\n\r\n            // Se valida que contenga caracteres invalidos\r\n            if (containsSpecialChars(getDescripcionParametro)) {\r\n\r\n                // Se setea el valor\r\n                setMensajeErrorNombreParametro(global.Constants.MENSAJE_INFORMATIVO.ERROR_FORMATO_CARACTERES_INVALIDOS);\r\n\r\n                // Se retorna\r\n                return false;\r\n            } else {\r\n\r\n                // Se setea el valor\r\n                setMensajeErrorNombreParametro('');\r\n            }\r\n        }\r\n\r\n        // Se valida que tenga el minimo de caracteres ingresados\r\n        if (getDescripcionParametro.length < 3) {\r\n\r\n            // Se setea el valor\r\n            setMensajeErrorNombreParametro('El parámetro debe tener al menos 3 caracteres');\r\n\r\n            // Se retorna el error\r\n            return false;\r\n        } else {\r\n\r\n            // Se setea el valor\r\n            setMensajeErrorNombreParametro('');\r\n        }\r\n\r\n        // Se inicializa el array a enviar por post\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"parametro-campos\",\r\n                \"attributes\": {\r\n                    \"nombre_campo\": getDescripcionParametro,\r\n                    \"type\": getValorParametro,\r\n                    \"estado\": getArrayEstados.value\r\n                }\r\n            }\r\n        };\r\n\r\n        // Se utiliza el cargando\r\n        window.showSpinner(true);\r\n\r\n        GenericApi.updateGeneric('parametro-campos', id, data).then(\r\n            datos => {\r\n\r\n                // Se deshabilita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: ACTUACIONES :: PARAMÉTRICAS\", message: 'Actualizado con éxito ', show: true, redirect: '/ParametroCampos', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: ACTUACIONES :: PARAMÉTRICAS\", message: datos.errors[0].detail, show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de validar que no se ingresen caracteres invalidos\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    // Metodo encargado de setear el valor del parametro\r\n    const changeParametro = (e) => {\r\n\r\n        // Se setea el valor escrito a la constante\r\n        if (e.target.value === '' || \r\n        (global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(e.target.value) && \r\n        e.target.value.length <= 255)) {\r\n            setDescripcionParametro(e.target.value);\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de setear el valor del parametro\r\n    const changeDescripcion = (e) => {\r\n\r\n        // Se setea el valor escrito a la constante\r\n        if (e.target.value === '' || \r\n        (global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(e.target.value) && \r\n        e.target.value.length <= 255)) {\r\n            setDescripcionParametro(e.target.value);\r\n        }\r\n    }\r\n\r\n\r\n    // Metodo encargado de setear el valor del estado\r\n    const selectChangeEstados = (v) => {\r\n\r\n        // Se carga el tipo de estado en el array del select\r\n        setArrayEstados(v);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<InfoErrorApi error={errorApi} />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    nombreParametro: '',\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n\r\n                    if (from != null) {\r\n                        actualizarDatos(valores);\r\n                    } else {\r\n                        enviarDatos(valores);\r\n                    }\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"block block-rounded\">\r\n                            <div className=\"block block-themed\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"w2d_block let\">\r\n                                        <nav aria-label=\"breadcrumb\">\r\n                                            <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                                <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/ParametroCamposCaratula`}> <small>Lista parámetros de las actuaciones</small></Link></li>\r\n                                                <li className=\"breadcrumb-item\"> <small>{from != null ? 'Actualizar' : 'Crear'} parámetros de las actuaciones</small></li>\r\n                                            </ol>\r\n                                        </nav>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-header\">\r\n                                    <h3 className=\"block-title\">ADMINISTRACIÓN :: ACTUACIONES :: PARAMÉTRICAS</h3>\r\n                                </div>\r\n                                <div className=\"block-content\">\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"col-md-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"nombreParametro\">NOMBRE DEL PARÁMETRO<span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"input\" type=\"text\" className=\"form-control\" id=\"valorParametro\" name=\"valorParametro\" value={getValorParametro} onChange={changeDescripcion} autocomplete=\"off\"></Field>\r\n                                                {getMensajeErrorNombreParametro ?\r\n                                                    <span className=\"text-danger\">{getMensajeErrorNombreParametro}</span>\r\n                                                    : null}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"nombreParametro\">DESCRIPCION DEL PARÁMETRO<span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"input\" type=\"text\" className=\"form-control\" id=\"nombreParametro\" name=\"nombreParametro\" value={getDescripcionParametro} onChange={changeParametro} autocomplete=\"off\"></Field>\r\n                                                {getMensajeErrorNombreParametro ?\r\n                                                    <span className=\"text-danger\">{getMensajeErrorNombreParametro}</span>\r\n                                                    : null}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"estado\">ESTADO <span className=\"text-danger\">*</span></label>\r\n                                                {(getArrayEstados) ?\r\n                                                    <Select\r\n                                                        id='estado'\r\n                                                        name='estado'\r\n                                                        isMulti={false}\r\n                                                        value={getArrayEstados}\r\n                                                        placeholder= {global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}\r\n                                                        noOptionsMessage={() => \"Sin datos\"}\r\n                                                        options={getListaEstados.map(e =>\r\n                                                            ({ label: e.label, value: e.value })\r\n                                                        )}\r\n                                                        onChange={(e) => selectChangeEstados(e)}\r\n                                                    />\r\n                                                    : null}\r\n                                                {getMensajeErrorEstado ?\r\n                                                    <span className=\"text-danger\">{getMensajeErrorEstado}</span>\r\n                                                    : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right bg-light\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\" >\r\n                                    {from != null ? global.Constants.BOTON_NOMBRE.ACTUALIZAR : global.Constants.BOTON_NOMBRE.REGISTRAR}\r\n                                </button>\r\n                                <Link to={'/ParametroCampos'} className=\"font-size-h5 font-w600\" >\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\" >{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ParametroCamposActuacionesForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}