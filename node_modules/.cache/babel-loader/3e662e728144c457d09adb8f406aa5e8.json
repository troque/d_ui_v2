{"ast":null,"code":"import _objectSpread from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useLocation}from'react-router-dom';import DataTable from'react-data-table-component';import GenericApi from'../../Api/Services/GenericApi';import ParametrosMasApi from\"../../Api/Services/ParametrosMasApi\";import Spinner from'../../Utils/Spinner';import ModalGen from'../../Utils/Modals/ModalGeneric';import'../../Utils/Constants';import{getUser}from'../../Utils/Common';import\"react-datepicker/dist/react-datepicker.css\";import DatePicker,{registerLocale}from\"react-datepicker\";import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ActuacionParametrosPlantillaForm(props){var location=useLocation();var from=location.state.from;var radicado=from.radicado;var procesoDisciplinarioId=from.procesoDisciplinarioId;var id_etapa=from.idEtapa;var fechaRegistro=from.fechaRegistro;var fechaIngreso=from.fechaIngreso;var dependencia=getUser().nombre_dependencia?getUser().nombre_dependencia.nombre:\"\";var registradoPor=from.registradoPor;var vigencia=from.vigencia;var generadoPor=getUser().nombre_completo?getUser().nombre_completo:\"\";var _useState=useState({title:\"\",message:\"\",show:false}),_useState2=_slicedToArray(_useState,2),modalState=_useState2[0],setModalState=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),getListaParametros=_useState4[0],setListaParametros=_useState4[1];var _useState5=useState({data:[]}),_useState6=_slicedToArray(_useState5,2),getListaCamposPorParametroTemporal=_useState6[0],setListaCamposPorParametroTemporal=_useState6[1];var _useState7=useState({data:[]}),_useState8=_slicedToArray(_useState7,2),getListaCamposPorCamposTemporal=_useState8[0],setListaCamposPorCamposTemporal=_useState8[1];//const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\nvar _useState9=useState({data:[],links:[],meta:[]}),_useState10=_slicedToArray(_useState9,2),getAntecedentesLista=_useState10[0],setAntecedentesLista=_useState10[1];var _useState11=useState({data:[],links:[],meta:[]}),_useState12=_slicedToArray(_useState11,2),getInteresadosLista=_useState12[0],setInteresadosLista=_useState12[1];var _useState13=useState({data:[],links:[],meta:[]}),_useState14=_slicedToArray(_useState13,2),getEntidadesInvestigadoLista=_useState14[0],setEntidadesInvestigadoLista=_useState14[1];var _useState15=useState({data:[],links:[],meta:[]}),_useState16=_slicedToArray(_useState15,2),getCargosInvestigadoLista=_useState16[0],setCargosInvestigadoLista=_useState16[1];var _useState17=useState({data:[],links:[],meta:[]}),_useState18=_slicedToArray(_useState17,2),getEntidadInvestigadoLista=_useState18[0],setEntidadInvestigadoLista=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),getParametrosCampos=_useState20[0],setParametrosCampos=_useState20[1];var _useState21=useState({data:[]}),_useState22=_slicedToArray(_useState21,2),getListaParametrosBaseDatos=_useState22[0],setListaParametrosBaseDatos=_useState22[1];var _useState23=useState(true),_useState24=_slicedToArray(_useState23,2),getPrueba=_useState24[0],setPrueba=_useState24[1];var _useState25=useState(true),_useState26=_slicedToArray(_useState25,2),getExistenDatosResultados=_useState26[0],setExistenDatosResultados=_useState26[1];var _useState27=useState([]),_useState28=_slicedToArray(_useState27,2),getCamposAdicionales=_useState28[0],setCamposAdicionales=_useState28[1];var _useState29=useState(),_useState30=_slicedToArray(_useState29,2),getMaxDate=_useState30[0],setMaxDate=_useState30[1];var _useState31=useState(moment().format('YYYY-MM-DD')),_useState32=_slicedToArray(_useState31,2),value=_useState32[0],setValue=_useState32[1];var _useState33=useState(true),_useState34=_slicedToArray(_useState33,2),getIsLoading=_useState34[0],setIsLoading=_useState34[1];var numeroLlamados=0;var numeroTotalLlamados=3;var _useState35=useState([{grupo:\"\",datos:[],titulo:[]}]),_useState36=_slicedToArray(_useState35,2),getTablaParametrosData=_useState36[0],setTablaParametrosData=_useState36[1];// Metodo encargado de cargar la informacion general del formulario\nuseEffect(function(){// Se setea el maximo de fecha\nsetMaxDate(new Date().toISOString().split(\"T\")[0]);// Se inicializa la funcion asyncrona\nfunction fetchData(){return _fetchData.apply(this,arguments);}// Se llama el metodo\nfunction _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Metodo encargado de cargar los parametros de la plantilla\ncargarTablaParametrosActuaciones();case 1:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[props.id_mas_actuacion]);// Metodo encargado de cargar los parametros generales de la plantilla de la BD\nvar cargarTablaParametrosActuaciones=function cargarTablaParametrosActuaciones(){// Se inicializa el array\nvar array=[];// Se inicializa la API\nGenericApi.getGeneric('parametro-campos').then(// Se inicializa la variable de respuesta\nfunction(datos){validacionSpinner();// Se valida que no haya error\nif(!datos.error){// Se recorre el array para insertar los valores necesarios\nfor(var index=0;index<datos.data.length;index++){// Se captura los datos por posicion\nvar element=datos.data[index].attributes;var title=element.nombre_campo;var estado=element.estado==\"1\"?true:false;var type=element.type;var _value=validarValueParametros(type,estado);// Se añade el dato al array general\narray.push({title:title,value:_value,type:type,check:estado});}// Se setea la respuesta en la constante\nsetListaParametrosBaseDatos(array);// Se generan la lista de parametros del documento\ncargarParametros(array);}});};// Metodo encargado de retorna el valor por el elemento\nvar validarValueParametros=function validarValueParametros(element,estado){// Se inicializa la variable\nvar valor;// Se valida por el elemento\nif((element==\"Sinproc\"||element==\"Número de radicado\"||element==\"Radicación\"||element==\"Radicado\")&&estado){valor=radicado;}else if(element==\"Usuario\"&&estado){valor=registradoPor;}else if((element==\"Dependencia Origen\"||element==\"Dependencia\")&&estado){valor=dependencia;}else if(element==\"Vigencia\"&&estado){valor=vigencia;}else if(element==\"Fecha de Registro\"&&estado){valor=fechaRegistro;}else if(element==\"Fecha de Ingreso\"&&estado){valor=fechaIngreso;}else if(element==\"Generado\"&&estado){valor=generadoPor;}else if((element==\"Número de auto (generado despues de aprobación)\"||element==\"Auto\")&&estado){valor=\"${numero_de_auto}\";}// Se retorna el valor\nreturn valor;};var handleChangeInteresados=function handleChangeInteresados(e,parametro,id_campo){var _e$target=e.target,value=_e$target.value,checked=_e$target.checked;var valorId=getInteresadosLista.map(function(item){if(value==item.id){item.checked=checked;}return item;});setInteresadosLista(valorId);var val=getInteresadosLista.map(function(p){if(p.checked==true){var primerApellido=p.attributes.primer_apellido!=null?p.attributes.primer_apellido:\"\";var segundoApellido=p.attributes.segundo_apellido!=null?p.attributes.segundo_apellido:\"\";var primerNombre=p.attributes.primer_nombre!=null?p.attributes.primer_nombre:\"\";var segundoNombre=p.attributes.segundo_nombre!=null?p.attributes.segundo_nombre:\"\";var sujetoProcesalNombre=p.attributes.sujeto_procesal_nombre!=\"\"?p.attributes.sujeto_procesal_nombre:\"\";var nombreCompleto=sujetoProcesalNombre+\" \"+primerApellido+\" \"+segundoApellido+\" \"+primerNombre+\" \"+segundoNombre;var nombre=nombreCompleto;return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};function checkeoAutomaticoInteresados(parametro,id_campo){setInteresadosLista(getInteresadosLista);var primerApellido=getInteresadosLista[0].attributes.primer_apellido!=null?getInteresadosLista[0].attributes.primer_apellido:\"\";var segundoApellido=getInteresadosLista[0].attributes.segundo_apellido!=null?getInteresadosLista[0].attributes.segundo_apellido:\"\";var primerNombre=getInteresadosLista[0].attributes.primer_nombre!=null?getInteresadosLista[0].attributes.primer_nombre:\"\";var segundoNombre=getInteresadosLista[0].attributes.segundo_nombre!=null?getInteresadosLista[0].attributes.segundo_nombre:\"\";var sujetoProcesalNombre=getInteresadosLista[0].attributes.sujeto_procesal_nombre!=null?getInteresadosLista[0].attributes.sujeto_procesal_nombre:\"\";var nombreCompleto=sujetoProcesalNombre+\" \"+primerApellido+\" \"+segundoApellido+\" \"+primerNombre+\" \"+segundoNombre;var nombre=nombreCompleto;// var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\nselectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoAntecedentes(parametro,id_campo){setAntecedentesLista(getAntecedentesLista);var nombre=\"\".concat(getAntecedentesLista[0].attributes.descripcion);selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoInvestigadosNombre(parametro,id_campo){setEntidadInvestigadoLista(getEntidadesInvestigadoLista);var nombre=\"\".concat(getEntidadesInvestigadoLista[0].attributes.nombre_investigado);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoInvestigadosCargo(parametro,id_campo){setCargosInvestigadoLista(getCargosInvestigadoLista);var nombre=\"\".concat(getCargosInvestigadoLista[0].attributes.cargo);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoInvestigadosEntidad(parametro,id_campo){setEntidadesInvestigadoLista(getEntidadInvestigadoLista);var nombre=\"\".concat(getEntidadInvestigadoLista[0].attributes.nombre_entidad);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoFechaAntecedentes(parametro,id_campo){setAntecedentesLista(getAntecedentesLista);var nombre=\"\".concat(getAntecedentesLista[0].attributes.fecha_creado);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}var handleChangeAntecedentes=function handleChangeAntecedentes(e,parametro,id_campo){var _e$target2=e.target,value=_e$target2.value,checked=_e$target2.checked;var valorId=getAntecedentesLista.map(function(item){if(value==item.id){item.checked=checked;}return item;});setAntecedentesLista(valorId);var val=getAntecedentesLista.map(function(p){if(p.checked==true){var nombre=\"\".concat(p.attributes.descripcion);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeFechaAntecedentes=function handleChangeFechaAntecedentes(e,parametro,id_campo){var _e$target3=e.target,value=_e$target3.value,checked=_e$target3.checked;var valorId=getAntecedentesLista.map(function(item){if(value==item.id){item.checked=checked;}return item;});setAntecedentesLista(valorId);var val=getAntecedentesLista.map(function(p){if(p.checked==true){var nombre=\"\".concat(p.attributes.fecha_creado);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeInvestigados=function handleChangeInvestigados(e,parametro,id_campo){var _e$target4=e.target,value=_e$target4.value,checked=_e$target4.checked;var valorId=getEntidadesInvestigadoLista.map(function(item){if(value==item.attributes.nombre_investigado){item.checked=checked;}return item;});setEntidadesInvestigadoLista(valorId);var val=getEntidadesInvestigadoLista.map(function(p){if(p.checked==true){var value=\"\".concat(p.attributes.nombre_investigado);var nombre=\"\".concat(p.attributes.nombre_investigado);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeCargosInvestigados=function handleChangeCargosInvestigados(e,parametro,id_campo){var _e$target5=e.target,value=_e$target5.value,checked=_e$target5.checked;var valorId=getCargosInvestigadoLista.map(function(item){if(value==item.attributes.cargo){item.checked=checked;}return item;});setCargosInvestigadoLista(valorId);var val=getCargosInvestigadoLista.map(function(p){if(p.checked==true){var value=\"\".concat(p.attributes.cargo);var nombre=\"\".concat(p.attributes.cargo);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeEntidadesInvestigados=function handleChangeEntidadesInvestigados(e,parametro,id_campo){var _e$target6=e.target,value=_e$target6.value,checked=_e$target6.checked;var valorId=getEntidadInvestigadoLista.map(function(item){if(value==item.attributes.nombre_entidad){item.checked=checked;}return item;});setCargosInvestigadoLista(valorId);var val=getEntidadInvestigadoLista.map(function(p){if(p.checked==true){var value=\"\".concat(p.attributes.nombre_entidad);var nombre=\"\".concat(p.attributes.nombre_entidad);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var onChangeValue=function onChangeValue(value,dato,parametro,grupo,principal,pos){var nuevosResultados=JSON.parse(JSON.stringify(getListaParametros));if(value){nuevosResultados.resultados[parametro][pos].seleccionar=true;}else{nuevosResultados.resultados[parametro][pos].seleccionar=false;}if(principal){var inputs=document.querySelectorAll('input[name=\"'+grupo+'\"]');// Deshabilitar los inputs seleccionados\ninputs.forEach(function(input){input.disabled=!value;var datosEnvio=input.id.split('$$$');nuevosResultados.resultados[datosEnvio[1]][datosEnvio[2]].seleccionar=false;});}setListaParametros(nuevosResultados);modificarListaCampos(value,dato?dato:'SIN DATOS',parametro,pos);removerInpuntsLista();establecerTabla(nuevosResultados,[]);};var modificarListaCampos=function modificarListaCampos(value,dato,parametro,pos){var index=getListaCamposPorParametroTemporal.data.findIndex(function(data){return data.param===parametro;});if(index>-1){if(getListaCamposPorParametroTemporal.data[index].value){var listaSplit=getListaCamposPorParametroTemporal.data[index].value.replace(/\\s/g,'').split('$$$');var listaSplitIndex=getListaCamposPorParametroTemporal.data[index].orden.toString().split('$$$');var listaSplitConEspacios=getListaCamposPorParametroTemporal.data[index].value.split('$$$');var auxDato=dato.replace(/\\s/g,'');if(value){getListaCamposPorParametroTemporal.data[index].value+=\"$$$\"+dato;getListaCamposPorParametroTemporal.data[index].orden+=\"$$$\"+pos;}else{getListaCamposPorParametroTemporal.data[index].value=null;getListaCamposPorParametroTemporal.data[index].orden=null;//listaSplit.forEach((element, indexElement) => {\nlistaSplitIndex.forEach(function(element,indexElement){//if(auxDato !== element){\nif(element!==pos+\"\"){if(getListaCamposPorParametroTemporal.data[index].value===null){getListaCamposPorParametroTemporal.data[index].value=listaSplitConEspacios[indexElement];getListaCamposPorParametroTemporal.data[index].orden=listaSplitIndex[indexElement];}else{getListaCamposPorParametroTemporal.data[index].value+=\"$$$\"+listaSplitConEspacios[indexElement];getListaCamposPorParametroTemporal.data[index].orden+=\"$$$\"+listaSplitIndex[indexElement];}}});}}else{if(value){getListaCamposPorParametroTemporal.data[index].value=dato;getListaCamposPorParametroTemporal.data[index].orden=pos;}}setListaCamposPorParametroTemporal(getListaCamposPorParametroTemporal);}else{if(value){var nuevoElemento={'param':parametro,'value':dato,'orden':pos};// Crear una copia del estado actual y agregar el nuevo elemento\nvar nuevaLista=[].concat(_toConsumableArray(getListaCamposPorParametroTemporal.data),[nuevoElemento]);// Actualizar el estado con la nueva lista que contiene el nuevo elemento\nsetListaCamposPorParametroTemporal(_objectSpread(_objectSpread({},getListaCamposPorParametroTemporal),{},{data:nuevaLista}));}}};var removerInpuntsLista=function removerInpuntsLista(){if(getListaParametros&&getListaParametros.params&&getListaParametros.resultados){var grupos=[];getListaParametros.params.forEach(function(parametro){if(getListaParametros.resultados[parametro]&&Array.isArray(getListaParametros.resultados[parametro])){getListaParametros.resultados[parametro].forEach(function(resultado){grupos.push(resultado.grupo);});}grupos=_toConsumableArray(new Set(grupos));});grupos.forEach(function(grupo){var inputs=document.querySelectorAll('input[name=\"'+grupo+'\"]');inputs.forEach(function(input){if(input.disabled){var datosEnvio=input.id.split('$$$');modificarListaCampos(false,datosEnvio[0],datosEnvio[1],datosEnvio[2]);}});});}};var establecerTabla=function establecerTabla(datos){var grupoGeneral=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];if(grupoGeneral.length<=0){datos.params.forEach(function(element){if(Array.isArray(datos.resultados[element])&&datos.resultados[element].length>0){if(datos.resultados[element][0]['crear_tabla']&&grupoGeneral.filter(function(dato){return dato===datos.resultados[element][0]['grupo_general'];})==0){grupoGeneral.push(datos.resultados[element][0]['grupo_general']);}}});}var filas=[];var fila=[];var titulo=[];var nuevoGrupo=[];grupoGeneral.forEach(function(grupo,index){datos.params.forEach(function(parametro){var _datos$resultados$par,_datos$resultados$par2;if(((_datos$resultados$par=datos.resultados[parametro])===null||_datos$resultados$par===void 0?void 0:(_datos$resultados$par2=_datos$resultados$par[0])===null||_datos$resultados$par2===void 0?void 0:_datos$resultados$par2['grupo_general'])==grupo){titulo.push(datos.resultados[parametro][0]['parametro']);datos.resultados[parametro].forEach(function(resultado){fila.push(resultado);});filas.push(fila);fila=[];}});nuevoGrupo.push({grupo:grupo,datos:filas,titulo:titulo});titulo=[];filas=[];fila=[];});setTablaParametrosData(nuevoGrupo);};var componentInputCheckBox=function componentInputCheckBox(recorrido){if(recorrido){return recorrido.map(function(dato,index){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{id:dato.dato+\"$$$\"+dato.parametro+\"$$$\"+index,name:dato.principal?dato.grupo+\"_\"+dato.principal:dato.grupo,type:\"checkbox\",checked:dato.seleccionar,onChange:function onChange(e){return onChangeValue(e.target.checked,dato.dato,dato.parametro,dato.grupo,dato.principal,index);}}),\" \",dato.dato?dato.dato:'SIN DATOS']})},index);});}};var cargarValoresDeParametro=function cargarValoresDeParametro(parametro){var _getListaParametros$r;if(getListaParametros!==null&&getListaParametros!==void 0&&(_getListaParametros$r=getListaParametros.resultados)!==null&&_getListaParametros$r!==void 0&&_getListaParametros$r[parametro]){var _getListaParametros$r2;return/*#__PURE__*/_jsx(_Fragment,{children:componentInputCheckBox(getListaParametros===null||getListaParametros===void 0?void 0:(_getListaParametros$r2=getListaParametros.resultados)===null||_getListaParametros$r2===void 0?void 0:_getListaParametros$r2[parametro])});}};var selectChangeListaCampos=function selectChangeListaCampos(parametro,id_campo,value){var newParams=getListaCamposPorParametroTemporal.data.map(function(item){if(item.parametro==parametro){item.id_campo=id_campo;var itemCampo=getListaParametrosBaseDatos[id_campo];item.valor=itemCampo.value!=null?itemCampo.value:value;item.valorTemporal=itemCampo.value!=null?itemCampo.value:value;}return item;});//setListaCamposPorParametroDefinitiva({ data: newParams });\n};// Metodo encargado de generar las columnas de los parametros de la plantilla\nvar columnsCampos=[{name:'CAMPO',cell:function cell(campo){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"strong\",{children:campo.nombreCampo?campo.nombreCampo:\"\"})});},sortable:true,width:\"15%\"},{name:'TIPO',cell:function cell(campo){return/*#__PURE__*/_jsx(\"select\",{className:\"form-control text-uppercase\",id:\"idCampo\".concat(campo.nombreCampo),name:\"name\".concat(campo.nombreCampo),disabled:true,children:/*#__PURE__*/_jsxs(\"option\",{value:validarTipoCampo(campo.tipoCampo),selected:true,children:[\" \",validarTipoCampo(campo.tipoCampo),\" \"]})});},sortable:false,width:\"25%\"},{name:'ITEMS',width:\"50%\",cell:function cell(campo){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:cargarValoresCampos(campo)})});}}];// Metodo encargado de setear el valor al mismo input\nvar changeTextInput=function changeTextInput(e,arrayDatos){// Se setea temporalmente\nvar elementoHtml=document.getElementById(e.target.name);var nombreElemento=e.target.name;// Se captura el valor escrito\nvar valor=e.target.value;// El elemento existe\nif(elementoHtml){// Se setea el nuevo valor\nelementoHtml.title=valor;// Se asigna el item dentro del array para enviarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;// Se valida que la key sea igual al elemento modificado\nif(key==nombreElemento){// Se añade el item\ne.items=[valor];}});}// Se setea en el from cada que vez que finaliza la acción\nfrom.getCamposAdicionales=getCamposAdicionales;};// Metodo encargado de cambiar el valor de la fecha\nvar changeDateInput=function changeDateInput(e){// Se formatea\nvar newDate=moment(e.target.value).format('DD/MM/YYYY');// Se captura el nombre del elemento\nvar nombreElemento=e.target.name;// Se setea los valores\nsetValue(newDate);// Se asigna el item dentro del array para enviarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;// Se valida que la key sea igual al elemento modificado\nif(key==nombreElemento){// Se añade el item\ne.items=[newDate];}});// Se setea en el from cada que vez que finaliza la acción\nfrom.getCamposAdicionales=getCamposAdicionales;};// Metodo encargado de cambiar el valor del input\nvar changeCheckInput=function changeCheckInput(e,value){// Se captura el elemento html\nvar nombreElemento=value;// Se captura el elemento del check true o false\nvar checkeado=e.target.checked;// Se captura el valor chequeado html\nvar valorCheck=e.target.value;// Se valida cuando esta chequeado\nif(checkeado==true){// Se asigna el item dentro del array para enviarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;// Se valida que la key sea igual al elemento modificado\nif(key==nombreElemento){// Se valida la primera vez\nif(!e.itemsSeleccionado){// Se añade el item\ne.itemsSeleccionado=[valorCheck];}else{// Se añade el item al array\ne.itemsSeleccionado.push(valorCheck);}}});}else if(checkeado==false){// Se asigna el item dentro del array para quitarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;var items=e.itemsSeleccionado?e.itemsSeleccionado:[];// Continua el proceso para quitarlo del array\nif(items.length>0&&key==nombreElemento){// Se busca la posicion del elemento\nvar index=items.indexOf(valorCheck);// Se quita el elemento\nitems.splice(index,1);}});}// Se setea en el from cada que vez que finaliza la acción\nfrom.getCamposAdicionales=getCamposAdicionales;};// Metodo encargado de cargar los valores de los campos\nvar cargarValoresCampos=function cargarValoresCampos(campo){// Se inicializa la variable de campos\nvar campoParametro=campo;// Se capturan la informacion del campo\nvar tipoCampo=campoParametro.tipoCampo;var nombreCampo=campoParametro.nombreCampo;var itemCampo=tipoCampo==2?campoParametro.items:\"\";// Se valida cuando el tipo campo es un listado\nif(tipoCampo==2){// Se retorna el mapeo\nreturn(// Se recorre el elemento\nitemCampo.map(function(item,i){// Se retorna el HTML\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12 mt-1 ml-2 mb-1\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:item,name:item,value:item,onChange:function onChange(e){return changeCheckInput(e,nombreCampo);},defaultChecked:item.checked}),\" \",item]},item);}));}else if(tipoCampo==1){// Se retorna el html del tipo fecha \nreturn/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mt-2 mb-2\",children:/*#__PURE__*/_jsx(\"input\",{type:\"date\",className:\"form-control\",id:nombreCampo,name:nombreCampo,onChange:changeDateInput,max:getMaxDate})});}else if(tipoCampo==0){// Se retorna el html del tipo texto\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mt-2 mb-2\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:nombreCampo,name:nombreCampo,placeholder:nombreCampo,onChange:function onChange(e){return changeTextInput(e,campo);}})});}};// Metodo encargado de retorna los items separados\nvar validarItems=function validarItems(item){// Se valida que exista y tenga un elemento\nif(item&&item.length==0){// Se retorna el primer elemento\nreturn item;}else if(item&&item.length>0){// Se retorna por comas\nreturn item.join(\", \");}};// Metodo encargado de validar el tipo del campo\nvar validarTipoCampo=function validarTipoCampo(tipo){// Se inicializa la variable\nvar nombreRetornado;// Se valida el tipo\nif(tipo==0){// Se redeclara la variable\nnombreRetornado=\"Texto\";}else if(tipo==1){// Se redeclara la variable\nnombreRetornado=\"Fecha\";}else if(tipo==2){// Se redeclara la variable\nnombreRetornado=\"Lista\";}// Se retorna el valor\nreturn nombreRetornado;};// Metodo encargado de cargar los parametros de la base de datos\nvar cargarParametros=function cargarParametros(listaParametrosBaseDatos){// Se setean los valores en null y vacios para que no salga el limitante de las hooks\nsetListaParametros(null);setAntecedentesLista({data:[]});setInteresadosLista({data:[]});setEntidadesInvestigadoLista({data:[]});setCargosInvestigadoLista({data:[]});setEntidadInvestigadoLista({data:[]});setListaCamposPorParametroTemporal({data:[]});setListaParametros({data:[]});// Se inicializa el array\nvar data={\"data\":{\"type\":'mas_actuaciones',\"attributes\":{\"id\":props.id_mas_actuacion,\"id_proceso_disciplinario\":from.procesoDisciplinarioId}}};// Se inicializa la API\nGenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/'+props.id_mas_actuacion+'/'+from.procesoDisciplinarioId,data).then(// Se inicializa la variable de respuesta\nfunction(datos){validacionSpinner();// Se valida que no haya error\nif(!datos.error){// Se setean los valores a la lista general de parametros\nsetListaParametros(datos);var existenDatos=false;var grupoGeneral=[];datos.params.forEach(function(element){if(Array.isArray(datos.resultados[element])&&datos.resultados[element].length>0){existenDatos=true;if(datos.resultados[element][0]['crear_tabla']&&grupoGeneral.filter(function(dato){return dato===datos.resultados[element][0]['grupo_general'];})==0){grupoGeneral.push(datos.resultados[element][0]['grupo_general']);}}});establecerTabla(datos,grupoGeneral);setExistenDatosResultados(existenDatos);if(existenDatos&&datos&&datos.params&&datos.resultados){var nuevoElemento=[];datos.params.forEach(function(parametro){if(datos.resultados[parametro]&&Array.isArray(datos.resultados[parametro])){datos.resultados[parametro].forEach(function(element,posicion){//if (datos.resultados[parametro].length === 1 || (element && element.principal)) {\nvar index=nuevoElemento.findIndex(function(data){return data.param===parametro;});if(index>-1){nuevoElemento[index].value+=\"$$$\"+(element.dato?element.dato:'SIN DATOS');nuevoElemento[index].orden+=\"$$$\"+posicion;}else{nuevoElemento.push({'param':parametro,'value':element.dato?element.dato:'SIN DATOS','orden':posicion});}//}\n});}});setListaCamposPorParametroTemporal(_objectSpread(_objectSpread({},getListaCamposPorParametroTemporal),{},{data:nuevoElemento}));}window.showSpinner(false);}});// Se inicializa la API\nGenericApi.getGeneric('mas_actuaciones/'+props.id_mas_actuacion).then(// Se inicializa la variable de respuesta\nfunction(datos){validacionSpinner();// Se valida que no haya error\nif(!datos.error){// Se valida que hayan campos adicionales\nif(datos.data.attributes.campos.length>0){// Se setean los valores a la lista\nsetCamposAdicionales(datos.data.attributes.campos);// Se setean los campos en el from\nfrom.campos=datos.data.attributes.campos;}else if(from.campos){// Se setean los campos en el from\ndelete from.campos;}}});// Se quita el cargando\nwindow.showSpinner(false);};var descargarArchivo=function descargarArchivo(){try{window.showSpinner(true);var data={\"data\":{\"type\":\"mas_actuaciones\",\"attributes\":{\"params\":getListaCamposPorParametroTemporal.data}}};GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/'+props.id_mas_actuacion,data).then(function(datos){if(!datos.error){downloadBase64File(datos.content_type,datos.base_64,datos.file_name,global.Constants.TIPO_DOCUMENTO_PERMITIDO_ACTUACIONES.DOCX);window.showSpinner(false);}else{setModalState({title:\"SINPROC No \"+radicado+\" :: \",message:datos.error.toString(),show:true,redirect:null,from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});}catch(error){console.error(error);}};function downloadBase64File(contentType,base64Data,fileName,extension){var linkSource=\"data:\".concat(contentType,\";base64,\").concat(base64Data);var downloadLink=document.createElement(\"a\");downloadLink.href=linkSource;downloadLink.download=fileName;downloadLink.click();}var validacionSpinner=function validacionSpinner(){numeroLlamados++;if(numeroLlamados>=numeroTotalLlamados){setIsLoading(false);}};var cargarInfoParametrosFila=function cargarInfoParametrosFila(){return getListaParametros.params.map(function(parametro,i){var _getListaParametros$r3,_getListaParametros$r4;if(i==0){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"${\"+parametro+\"}\"}),/*#__PURE__*/_jsx(\"td\",{children:getListaParametros.numero_de_auto})]},i);}else if((getListaParametros===null||getListaParametros===void 0?void 0:(_getListaParametros$r3=getListaParametros.resultados[parametro])===null||_getListaParametros$r3===void 0?void 0:(_getListaParametros$r4=_getListaParametros$r3[0])===null||_getListaParametros$r4===void 0?void 0:_getListaParametros$r4.crear_tabla)===false){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"${\"+parametro+\"}\"}),/*#__PURE__*/_jsx(\"td\",{children:getListaParametros===null||getListaParametros===void 0?void 0:getListaParametros.resultados[parametro].map(function(dato,index){return/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{id:dato.dato+\"$$$\"+dato.parametro+\"$$$\"+index,name:dato.principal?dato.grupo+\"_\"+dato.principal:dato.grupo,type:\"checkbox\",checked:dato.seleccionar,onChange:function onChange(e){return onChangeValue(e.target.checked,dato.dato,dato.parametro,dato.grupo,dato.principal,index);}}),\" \",dato.dato?dato.dato:'SIN DATOS']});})})]},i);}});};var cargarInfoParametrosTabla=function cargarInfoParametrosTabla(){return getTablaParametrosData.map(function(parametros,indexGeneral){var _parametros$datos;return/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:2,children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered table-striped table-vcenter js-dataTable-full\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:parametros.titulo.map(function(titulo,indexTitulo){return/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"${\"+titulo+\"}\"})},indexTitulo);})})}),/*#__PURE__*/_jsx(\"tbody\",{children:(_parametros$datos=parametros.datos)===null||_parametros$datos===void 0?void 0:_parametros$datos[0].map(function(datos,indexDatos){return/*#__PURE__*/_jsx(\"tr\",{children:parametros.datos.map(function(dato,indexDato){return/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{id:dato[indexDatos].dato+\"$$$\"+dato[indexDatos].parametro+\"$$$\"+dato[indexDatos].index,name:dato[indexDatos].principal?dato[indexDatos].grupo+\"_\"+dato[indexDatos].principal:dato[indexDatos].grupo,type:\"checkbox\",checked:dato[indexDatos].seleccionar,onChange:function onChange(e){return onChangeValue(e.target.checked,dato[indexDatos].dato,dato[indexDatos].parametro,dato[indexDatos].grupo,dato[indexDatos].principal,dato[indexDatos].index);}}),\" \",dato[indexDatos].dato?dato[indexDatos].dato:'SIN DATOS']})},indexDato);})});})})]})})});});// return (\n//     {\n//         getTablaParametrosData.map((parametros, index) => (\n//             <tr>\n//                 <td colSpan={2}>\n//                     <div>\n//                         <table width={'100%'}>\n//                             <thead>\n//                                 <tr>\n//                                     {\n//                                         getTablaParametrosColumna?.map((column, columnIndex) => (\n//                                             <th key={columnIndex}>{column}</th>\n//                                         ))\n//                                     }\n//                                 </tr>\n//                             </thead>\n//                             <tbody>\n//                                 {\n//                                     getTablaParametrosData[0].map((_, rowIndex) => (\n//                                         <tr key={rowIndex}>\n//                                             {getTablaParametrosData.map((columna, index) => (\n//                                             <td key={index}>\n//                                                 {\n//                                                     <label>\n//                                                         <input\n//                                                             id={columna[rowIndex].dato + \"$$$\" + columna[rowIndex].parametro + \"$$$\" + columna[rowIndex].index}\n//                                                             name={columna[rowIndex].principal ? columna[rowIndex].grupo + \"_\" + columna[rowIndex].principal : columna[rowIndex].grupo}\n//                                                             type=\"checkbox\"\n//                                                             checked={columna[rowIndex].seleccionar}\n//                                                             onChange={(e) =>\n//                                                                 onChangeValue(\n//                                                                 e.target.checked,\n//                                                                 columna[rowIndex].dato,\n//                                                                 columna[rowIndex].parametro,\n//                                                                 columna[rowIndex].grupo,\n//                                                                 columna[rowIndex].principal,\n//                                                                 columna[rowIndex].index\n//                                                                 )\n//                                                             }\n//                                                         />{\" \"}\n//                                                         {columna[rowIndex].dato ? columna[rowIndex].dato : 'SIN DATOS'}\n//                                                     </label>\n//                                                 }\n//                                             </td>\n//                                             ))}\n//                                         </tr>\n//                                     ))\n//                                 }\n//                             </tbody>\n//                         </table>\n//                     </div>\n//                 </td>\n//             </tr>\n//         )\n//     }\n// )\n};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(ModalGen,{data:modalState}),getIsLoading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-primary\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"CARGANDO...\"})})}):/*#__PURE__*/_jsx(_Fragment,{children:getListaParametros!=null?/*#__PURE__*/_jsx(_Fragment,{children:getExistenDatosResultados==false?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"block-content alert-warning text-center\",children:/*#__PURE__*/_jsx(\"label\",{children:\"LA PLANTILLA NO CUENTA CON PARAMETROS\"})})}),/*#__PURE__*/_jsx(\"br\",{})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(\"label\",{children:\"PAR\\xC1METROS DE LA PLANTILLA\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-2 mb-2\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered table-striped table-vcenter js-dataTable-full\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"PAR\\xC1METRO\"})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"VALOR\"})})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[getListaParametros!==null&&getListaParametros!==void 0&&getListaParametros.resultados?cargarInfoParametrosFila():null,getListaParametros!==null&&getListaParametros!==void 0&&getListaParametros.resultados?cargarInfoParametrosTabla():null]})]})}),getCamposAdicionales&&getCamposAdicionales.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",style:{marginTop:'50px'},children:/*#__PURE__*/_jsx(\"label\",{children:\"CAMPOS ADICIONALES\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-2 mb-2\",children:/*#__PURE__*/_jsx(DataTable,{className:\"table table-bordered table-striped table-vcenter js-dataTable-full\",columns:columnsCampos,data:getCamposAdicionales,noDataComponent:global.Constants.DATA_TABLE.SIN_DATOS_TABLE,striped:true})})]}):null,/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12 mt-4 mb-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"mr-2\",htmlFor:\"documento_ruta\",children:\"DESCARGAR DOCUMENTO PRE-DILIGENCIADO CON LOS VALORES SELECCIONADOS\"}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",title:\"Descargar documento diligenciado\",onClick:function onClick(){return descargarArchivo();},className:\"btn btn-rounded btn-primary\",children:[\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-file-word\"})]})]})]})}):/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-4\",children:/*#__PURE__*/_jsx(\"label\",{children:\"CARGANDO PAR\\xC1METROS DE LA PLANTILLA...\"})})})]});}export default ActuacionParametrosPlantillaForm;","map":{"version":3,"names":["React","useEffect","useState","useLocation","DataTable","GenericApi","ParametrosMasApi","Spinner","ModalGen","getUser","DatePicker","registerLocale","moment","ActuacionParametrosPlantillaForm","props","location","from","state","radicado","procesoDisciplinarioId","id_etapa","idEtapa","fechaRegistro","fechaIngreso","dependencia","nombre_dependencia","nombre","registradoPor","vigencia","generadoPor","nombre_completo","title","message","show","modalState","setModalState","getListaParametros","setListaParametros","data","getListaCamposPorParametroTemporal","setListaCamposPorParametroTemporal","getListaCamposPorCamposTemporal","setListaCamposPorCamposTemporal","links","meta","getAntecedentesLista","setAntecedentesLista","getInteresadosLista","setInteresadosLista","getEntidadesInvestigadoLista","setEntidadesInvestigadoLista","getCargosInvestigadoLista","setCargosInvestigadoLista","getEntidadInvestigadoLista","setEntidadInvestigadoLista","getParametrosCampos","setParametrosCampos","getListaParametrosBaseDatos","setListaParametrosBaseDatos","getPrueba","setPrueba","getExistenDatosResultados","setExistenDatosResultados","getCamposAdicionales","setCamposAdicionales","getMaxDate","setMaxDate","format","value","setValue","getIsLoading","setIsLoading","numeroLlamados","numeroTotalLlamados","grupo","datos","titulo","getTablaParametrosData","setTablaParametrosData","Date","toISOString","split","fetchData","cargarTablaParametrosActuaciones","id_mas_actuacion","array","getGeneric","then","validacionSpinner","error","index","length","element","attributes","nombre_campo","estado","type","validarValueParametros","push","check","cargarParametros","valor","handleChangeInteresados","e","parametro","id_campo","target","checked","valorId","map","item","id","val","p","primerApellido","primer_apellido","segundoApellido","segundo_apellido","primerNombre","primer_nombre","segundoNombre","segundo_nombre","sujetoProcesalNombre","sujeto_procesal_nombre","nombreCompleto","filter","x","undefined","selectChangeListaCampos","toString","checkeoAutomaticoInteresados","checkeoAutomaticoAntecedentes","descripcion","checkeoAutomaticoInvestigadosNombre","nombre_investigado","checkeoAutomaticoInvestigadosCargo","cargo","checkeoAutomaticoInvestigadosEntidad","nombre_entidad","checkeoAutomaticoFechaAntecedentes","fecha_creado","handleChangeAntecedentes","handleChangeFechaAntecedentes","handleChangeInvestigados","handleChangeCargosInvestigados","handleChangeEntidadesInvestigados","onChangeValue","dato","principal","pos","nuevosResultados","JSON","parse","stringify","resultados","seleccionar","inputs","document","querySelectorAll","forEach","input","disabled","datosEnvio","modificarListaCampos","removerInpuntsLista","establecerTabla","findIndex","param","listaSplit","replace","listaSplitIndex","orden","listaSplitConEspacios","auxDato","indexElement","nuevoElemento","nuevaLista","params","grupos","Array","isArray","resultado","Set","grupoGeneral","filas","fila","nuevoGrupo","componentInputCheckBox","recorrido","cargarValoresDeParametro","newParams","itemCampo","valorTemporal","columnsCampos","name","cell","campo","nombreCampo","sortable","width","validarTipoCampo","tipoCampo","cargarValoresCampos","changeTextInput","arrayDatos","elementoHtml","getElementById","nombreElemento","key","items","changeDateInput","newDate","changeCheckInput","checkeado","valorCheck","itemsSeleccionado","indexOf","splice","campoParametro","i","validarItems","join","tipo","nombreRetornado","listaParametrosBaseDatos","getByDataGeneric","existenDatos","posicion","window","showSpinner","campos","descargarArchivo","downloadBase64File","content_type","base_64","file_name","global","Constants","TIPO_DOCUMENTO_PERMITIDO_ACTUACIONES","DOCX","redirect","alert","TIPO_ALERTA","ERROR","console","contentType","base64Data","fileName","extension","linkSource","downloadLink","createElement","href","download","click","cargarInfoParametrosFila","numero_de_auto","crear_tabla","cargarInfoParametrosTabla","parametros","indexGeneral","indexTitulo","indexDatos","indexDato","marginTop","DATA_TABLE","SIN_DATOS_TABLE"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Herramientas/ActuacionParametrosPlantillaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport ParametrosMasApi from \"../../Api/Services/ParametrosMasApi\";\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport '../../Utils/Constants';\r\nimport { getUser } from '../../Utils/Common';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport moment from 'moment';\r\n\r\nfunction ActuacionParametrosPlantillaForm(props) {\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let id_etapa = from.idEtapa;\r\n    const fechaRegistro = from.fechaRegistro;\r\n    const fechaIngreso = from.fechaIngreso;\r\n    const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\r\n    const registradoPor = from.registradoPor;\r\n    const vigencia = from.vigencia;\r\n    const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaParametros, setListaParametros] = useState();\r\n    const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({ data: [] });\r\n    const [getListaCamposPorCamposTemporal, setListaCamposPorCamposTemporal] = useState({ data: [] });\r\n    //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getInteresadosLista, setInteresadosLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getParametrosCampos, setParametrosCampos] = useState();\r\n    const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({ data: [] });\r\n    const [getPrueba, setPrueba] = useState(true);\r\n    const [getExistenDatosResultados, setExistenDatosResultados] = useState(true);\r\n\r\n    const [getCamposAdicionales, setCamposAdicionales] = useState([]);\r\n    const [getMaxDate, setMaxDate] = useState();\r\n    const [value, setValue] = useState(moment().format('YYYY-MM-DD'));\r\n    const [getIsLoading, setIsLoading] = useState(true);\r\n\r\n    let numeroLlamados = 0;\r\n    let numeroTotalLlamados = 3;\r\n    const [getTablaParametrosData, setTablaParametrosData] = useState([{grupo: \"\", datos: [], titulo: []}]);\r\n\r\n    // Metodo encargado de cargar la informacion general del formulario\r\n    useEffect(() => {\r\n\r\n        // Se setea el maximo de fecha\r\n        setMaxDate(new Date().toISOString().split(\"T\")[0]);\r\n\r\n        // Se inicializa la funcion asyncrona\r\n        async function fetchData() {\r\n\r\n            // Metodo encargado de cargar los parametros de la plantilla\r\n            cargarTablaParametrosActuaciones();\r\n        }\r\n\r\n        // Se llama el metodo\r\n        fetchData();\r\n    }, [props.id_mas_actuacion]);\r\n\r\n    // Metodo encargado de cargar los parametros generales de la plantilla de la BD\r\n    const cargarTablaParametrosActuaciones = () => {\r\n\r\n        // Se inicializa el array\r\n        var array = [];\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('parametro-campos').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                validacionSpinner()\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se recorre el array para insertar los valores necesarios\r\n                    for (let index = 0; index < datos.data.length; index++) {\r\n\r\n                        // Se captura los datos por posicion\r\n                        const element = datos.data[index].attributes;\r\n                        const title = element.nombre_campo;\r\n                        const estado = element.estado == \"1\" ? true : false;\r\n                        const type = element.type;\r\n                        const value = validarValueParametros(type, estado);\r\n\r\n                        // Se añade el dato al array general\r\n                        array.push({ title: title, value: value, type: type, check: estado });\r\n                    }\r\n\r\n                    // Se setea la respuesta en la constante\r\n                    setListaParametrosBaseDatos(array);\r\n\r\n                    // Se generan la lista de parametros del documento\r\n                    cargarParametros(array);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de retorna el valor por el elemento\r\n    const validarValueParametros = (element, estado) => {\r\n\r\n        // Se inicializa la variable\r\n        let valor;\r\n\r\n        // Se valida por el elemento\r\n        if ((element == \"Sinproc\" || element == \"Número de radicado\"\r\n            || element == \"Radicación\" || element == \"Radicado\") && estado) {\r\n            valor = radicado;\r\n        } else if (element == \"Usuario\" && estado) {\r\n            valor = registradoPor;\r\n        } else if ((element == \"Dependencia Origen\" || element == \"Dependencia\") && estado) {\r\n            valor = dependencia;\r\n        } else if (element == \"Vigencia\" && estado) {\r\n            valor = vigencia;\r\n        } else if (element == \"Fecha de Registro\" && estado) {\r\n            valor = fechaRegistro;\r\n        } else if (element == \"Fecha de Ingreso\" && estado) {\r\n            valor = fechaIngreso;\r\n        } else if (element == \"Generado\" && estado) {\r\n            valor = generadoPor;\r\n        } else if ((element == \"Número de auto (generado despues de aprobación)\" || element == \"Auto\") && estado) {\r\n            valor = \"${numero_de_auto}\";\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return valor;\r\n    }\r\n\r\n    const handleChangeInteresados = (e, parametro, id_campo) => {\r\n\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getInteresadosLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setInteresadosLista(valorId);\r\n        let val = getInteresadosLista.map((p) => {\r\n            if (p.checked == true) {\r\n\r\n                var primerApellido = p.attributes.primer_apellido != null ? p.attributes.primer_apellido : \"\";\r\n                var segundoApellido = p.attributes.segundo_apellido != null ? p.attributes.segundo_apellido : \"\";\r\n                var primerNombre = p.attributes.primer_nombre != null ? p.attributes.primer_nombre : \"\";\r\n                var segundoNombre = p.attributes.segundo_nombre != null ? p.attributes.segundo_nombre : \"\";\r\n                var sujetoProcesalNombre = p.attributes.sujeto_procesal_nombre != \"\" ? p.attributes.sujeto_procesal_nombre : \"\";\r\n                var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n                var nombre = nombreCompleto;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n    }\r\n\r\n    function checkeoAutomaticoInteresados(parametro, id_campo) {\r\n        setInteresadosLista(getInteresadosLista);\r\n\r\n        var primerApellido = getInteresadosLista[0].attributes.primer_apellido != null ? getInteresadosLista[0].attributes.primer_apellido : \"\";\r\n        var segundoApellido = getInteresadosLista[0].attributes.segundo_apellido != null ? getInteresadosLista[0].attributes.segundo_apellido : \"\";\r\n        var primerNombre = getInteresadosLista[0].attributes.primer_nombre != null ? getInteresadosLista[0].attributes.primer_nombre : \"\";\r\n        var segundoNombre = getInteresadosLista[0].attributes.segundo_nombre != null ? getInteresadosLista[0].attributes.segundo_nombre : \"\";\r\n        var sujetoProcesalNombre = getInteresadosLista[0].attributes.sujeto_procesal_nombre != null ? getInteresadosLista[0].attributes.sujeto_procesal_nombre : \"\";\r\n        var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n        var nombre = nombreCompleto;\r\n\r\n        // var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\r\n        setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\r\n        var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\r\n        setCargosInvestigadoLista(getCargosInvestigadoLista);\r\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\r\n        setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\r\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoFechaAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.fecha_creado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    const handleChangeAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.descripcion}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeFechaAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.fecha_creado}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadesInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_investigado) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setEntidadesInvestigadoLista(valorId);\r\n        let val = getEntidadesInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_investigado}`;\r\n                var nombre = `${p.attributes.nombre_investigado}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getCargosInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.cargo) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getCargosInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.cargo}`;\r\n                var nombre = `${p.attributes.cargo}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_entidad) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getEntidadInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_entidad}`;\r\n                var nombre = `${p.attributes.nombre_entidad}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n      const onChangeValue = (value, dato, parametro, grupo, principal, pos) => {\r\n\r\n        const nuevosResultados = JSON.parse(JSON.stringify(getListaParametros));\r\n\r\n        if (value) {\r\n            nuevosResultados.resultados[parametro][pos].seleccionar = true;\r\n        } \r\n        else {\r\n            nuevosResultados.resultados[parametro][pos].seleccionar = false;\r\n        }\r\n\r\n        if(principal){\r\n            const inputs = document.querySelectorAll('input[name=\"'+grupo+'\"]');\r\n            // Deshabilitar los inputs seleccionados\r\n            inputs.forEach(input => {\r\n                input.disabled = !value;\r\n                let datosEnvio = input.id.split('$$$');\r\n                nuevosResultados.resultados[datosEnvio[1]][datosEnvio[2]].seleccionar = false;\r\n            });\r\n        }\r\n\r\n        setListaParametros(nuevosResultados);\r\n        \r\n        modificarListaCampos(value, (dato ? dato : 'SIN DATOS'), parametro, pos)\r\n        removerInpuntsLista()\r\n        establecerTabla(nuevosResultados, [])\r\n    }\r\n\r\n    const modificarListaCampos = (value, dato, parametro, pos) => {\r\n        let index = getListaCamposPorParametroTemporal.data.findIndex(data => data.param === parametro)\r\n        if(index > -1){\r\n            if(getListaCamposPorParametroTemporal.data[index].value){\r\n                let listaSplit = getListaCamposPorParametroTemporal.data[index].value.replace(/\\s/g, '').split('$$$')\r\n                let listaSplitIndex = getListaCamposPorParametroTemporal.data[index].orden.toString().split('$$$')\r\n                let listaSplitConEspacios = getListaCamposPorParametroTemporal.data[index].value.split('$$$')\r\n                let auxDato = dato.replace(/\\s/g, '')\r\n                if(value){\r\n                    getListaCamposPorParametroTemporal.data[index].value += \"$$$\" + dato\r\n                    getListaCamposPorParametroTemporal.data[index].orden += \"$$$\" + pos\r\n                }\r\n                else{\r\n                    getListaCamposPorParametroTemporal.data[index].value = null\r\n                    getListaCamposPorParametroTemporal.data[index].orden = null\r\n                    //listaSplit.forEach((element, indexElement) => {\r\n                    listaSplitIndex.forEach((element, indexElement) => {\r\n                        //if(auxDato !== element){\r\n                        if(element !== pos+\"\"){\r\n                            if(getListaCamposPorParametroTemporal.data[index].value === null){\r\n                                getListaCamposPorParametroTemporal.data[index].value = listaSplitConEspacios[indexElement]\r\n                                getListaCamposPorParametroTemporal.data[index].orden = listaSplitIndex[indexElement]\r\n                            }\r\n                            else{\r\n                                getListaCamposPorParametroTemporal.data[index].value += \"$$$\" + listaSplitConEspacios[indexElement]\r\n                                getListaCamposPorParametroTemporal.data[index].orden += \"$$$\" + listaSplitIndex[indexElement]\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else{\r\n                if(value){\r\n                    getListaCamposPorParametroTemporal.data[index].value = dato\r\n                    getListaCamposPorParametroTemporal.data[index].orden = pos\r\n                }\r\n            }           \r\n            setListaCamposPorParametroTemporal(getListaCamposPorParametroTemporal)\r\n        }\r\n        else{\r\n            if(value){\r\n                const nuevoElemento = { \r\n                    'param': parametro,\r\n                    'value': dato, \r\n                    'orden': pos\r\n                }\r\n    \r\n                // Crear una copia del estado actual y agregar el nuevo elemento\r\n                const nuevaLista = [...getListaCamposPorParametroTemporal.data, nuevoElemento]\r\n    \r\n                // Actualizar el estado con la nueva lista que contiene el nuevo elemento\r\n                setListaCamposPorParametroTemporal({ ...getListaCamposPorParametroTemporal, data: nuevaLista })\r\n            }\r\n        }\r\n    } \r\n\r\n    const removerInpuntsLista = () => {\r\n        if (getListaParametros && getListaParametros.params && getListaParametros.resultados) {\r\n            let grupos = [];\r\n            getListaParametros.params.forEach(parametro => {\r\n                if (getListaParametros.resultados[parametro] && Array.isArray(getListaParametros.resultados[parametro])) {\r\n                    getListaParametros.resultados[parametro].forEach(resultado => {\r\n                        grupos.push(resultado.grupo);\r\n                    });\r\n                }\r\n                grupos = [...new Set(grupos)];\r\n            });\r\n    \r\n            grupos.forEach(grupo => {\r\n                let inputs = document.querySelectorAll('input[name=\"' + grupo + '\"]');\r\n                inputs.forEach(input => {\r\n                    if (input.disabled) {\r\n                        let datosEnvio = input.id.split('$$$');\r\n                        modificarListaCampos(false, datosEnvio[0], datosEnvio[1], datosEnvio[2]);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const establecerTabla = (datos, grupoGeneral = []) => {\r\n\r\n        if(grupoGeneral.length <= 0){\r\n            datos.params.forEach(element => {\r\n                if(Array.isArray(datos.resultados[element]) && datos.resultados[element].length > 0){\r\n                    if(datos.resultados[element][0]['crear_tabla'] && grupoGeneral.filter(dato => dato === datos.resultados[element][0]['grupo_general']) == 0){\r\n                        grupoGeneral.push(datos.resultados[element][0]['grupo_general'])\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n        let filas = []\r\n        let fila = []\r\n        let titulo = []\r\n\r\n        const nuevoGrupo = [];\r\n\r\n        grupoGeneral.forEach((grupo, index) => {\r\n            datos.params.forEach(parametro => {\r\n                if(datos.resultados[parametro]?.[0]?.['grupo_general'] == grupo){\r\n                    titulo.push(datos.resultados[parametro][0]['parametro'])\r\n                    datos.resultados[parametro].forEach(resultado => {\r\n                        fila.push(resultado)\r\n                    })\r\n                    filas.push(fila)\r\n                    fila = []\r\n                }\r\n            });\r\n            nuevoGrupo.push({\r\n                grupo: grupo,\r\n                datos: filas,\r\n                titulo: titulo\r\n            });\r\n            titulo = []\r\n            filas = []\r\n            fila = []\r\n        });\r\n        setTablaParametrosData(nuevoGrupo)\r\n\r\n    }\r\n\r\n    const componentInputCheckBox = (recorrido) => {\r\n        if(recorrido){\r\n            return (recorrido.map((dato, index) => {\r\n                return (                \r\n                    <div key={index}>\r\n                        <label><input id={dato.dato+\"$$$\"+dato.parametro+\"$$$\"+index} name={dato.principal ? dato.grupo+\"_\"+dato.principal : dato.grupo} type=\"checkbox\" checked={dato.seleccionar} onChange={e => onChangeValue(e.target.checked, dato.dato, dato.parametro, dato.grupo, dato.principal, index)}/> { dato.dato ? dato.dato : 'SIN DATOS' }</label>\r\n                    </div>\r\n                )\r\n            }))\r\n        }\r\n    }\r\n\r\n    const cargarValoresDeParametro = (parametro) => {\r\n        if(getListaParametros?.resultados?.[parametro]){\r\n            return (<>{componentInputCheckBox(getListaParametros?.resultados?.[parametro])}</>)\r\n        }\r\n    }\r\n\r\n    const selectChangeListaCampos = (parametro, id_campo, value) => {\r\n\r\n        var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n            if (item.parametro == parametro) {\r\n                item.id_campo = id_campo;\r\n                var itemCampo = getListaParametrosBaseDatos[id_campo];\r\n\r\n                item.valor = (itemCampo.value != null) ? itemCampo.value : value;\r\n                item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : value;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        //setListaCamposPorParametroDefinitiva({ data: newParams });\r\n    }\r\n\r\n    // Metodo encargado de generar las columnas de los parametros de la plantilla\r\n    const columnsCampos = [\r\n        {\r\n            name: 'CAMPO',\r\n            cell: campo =>\r\n                <div>\r\n                    <strong>{campo.nombreCampo ? campo.nombreCampo : \"\"}</strong>\r\n                </div>,\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            name: 'TIPO',\r\n            cell: campo =>\r\n                <select className=\"form-control text-uppercase\" id={`idCampo${campo.nombreCampo}`} name={`name${campo.nombreCampo}`} disabled>\r\n                    <option value={validarTipoCampo(campo.tipoCampo)} selected> {validarTipoCampo(campo.tipoCampo)} </option>\r\n                </select>\r\n            ,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'ITEMS',\r\n            width: \"50%\",\r\n            cell: campo =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresCampos(campo)}\r\n                    </div>\r\n                </div>\r\n        },\r\n    ];\r\n\r\n    // Metodo encargado de setear el valor al mismo input\r\n    const changeTextInput = (e, arrayDatos) => {\r\n\r\n        // Se setea temporalmente\r\n        let elementoHtml = document.getElementById(e.target.name);\r\n        let nombreElemento = e.target.name;\r\n\r\n        // Se captura el valor escrito\r\n        let valor = e.target.value;\r\n\r\n        // El elemento existe\r\n        if (elementoHtml) {\r\n\r\n            // Se setea el nuevo valor\r\n            elementoHtml.title = valor;\r\n\r\n            // Se asigna el item dentro del array para enviarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n\r\n                // Se valida que la key sea igual al elemento modificado\r\n                if (key == nombreElemento) {\r\n\r\n                    // Se añade el item\r\n                    e.items = [valor];\r\n                }\r\n            })\r\n        }\r\n\r\n        // Se setea en el from cada que vez que finaliza la acción\r\n        from.getCamposAdicionales = getCamposAdicionales;\r\n    }\r\n\r\n    // Metodo encargado de cambiar el valor de la fecha\r\n    const changeDateInput = (e) => {\r\n\r\n        // Se formatea\r\n        const newDate = moment(e.target.value).format('DD/MM/YYYY');\r\n\r\n        // Se captura el nombre del elemento\r\n        let nombreElemento = e.target.name;\r\n\r\n        // Se setea los valores\r\n        setValue(newDate);\r\n\r\n        // Se asigna el item dentro del array para enviarlo\r\n        getCamposAdicionales.forEach(e => {\r\n\r\n            // Se captura la key\r\n            let key = e.nombreCampo;\r\n\r\n            // Se valida que la key sea igual al elemento modificado\r\n            if (key == nombreElemento) {\r\n\r\n                // Se añade el item\r\n                e.items = [newDate];\r\n            }\r\n        })\r\n\r\n        // Se setea en el from cada que vez que finaliza la acción\r\n        from.getCamposAdicionales = getCamposAdicionales;\r\n    };\r\n\r\n    // Metodo encargado de cambiar el valor del input\r\n    const changeCheckInput = (e, value) => {\r\n\r\n        // Se captura el elemento html\r\n        let nombreElemento = value;\r\n\r\n        // Se captura el elemento del check true o false\r\n        let checkeado = e.target.checked;\r\n\r\n        // Se captura el valor chequeado html\r\n        let valorCheck = e.target.value;\r\n\r\n        // Se valida cuando esta chequeado\r\n        if (checkeado == true) {\r\n\r\n            // Se asigna el item dentro del array para enviarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n\r\n                // Se valida que la key sea igual al elemento modificado\r\n                if (key == nombreElemento) {\r\n\r\n                    // Se valida la primera vez\r\n                    if (!e.itemsSeleccionado) {\r\n\r\n                        // Se añade el item\r\n                        e.itemsSeleccionado = [valorCheck];\r\n                    } else {\r\n\r\n                        // Se añade el item al array\r\n                        e.itemsSeleccionado.push(valorCheck);\r\n                    }\r\n                }\r\n            })\r\n        } else if (checkeado == false) {\r\n\r\n            // Se asigna el item dentro del array para quitarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n                let items = e.itemsSeleccionado ? e.itemsSeleccionado : [];\r\n\r\n                // Continua el proceso para quitarlo del array\r\n                if (items.length > 0 && (key == nombreElemento)) {\r\n\r\n                    // Se busca la posicion del elemento\r\n                    var index = items.indexOf(valorCheck);\r\n\r\n                    // Se quita el elemento\r\n                    items.splice(index, 1);\r\n                }\r\n            })\r\n        }\r\n\r\n        // Se setea en el from cada que vez que finaliza la acción\r\n        from.getCamposAdicionales = getCamposAdicionales;\r\n    }\r\n\r\n    // Metodo encargado de cargar los valores de los campos\r\n    const cargarValoresCampos = (campo) => {\r\n\r\n        // Se inicializa la variable de campos\r\n        const campoParametro = campo;\r\n\r\n        // Se capturan la informacion del campo\r\n        const tipoCampo = campoParametro.tipoCampo;\r\n        const nombreCampo = campoParametro.nombreCampo;\r\n        const itemCampo = tipoCampo == 2 ? campoParametro.items : \"\";\r\n\r\n        // Se valida cuando el tipo campo es un listado\r\n        if (tipoCampo == 2) {\r\n\r\n            // Se retorna el mapeo\r\n            return (\r\n\r\n                // Se recorre el elemento\r\n                itemCampo.map((item, i) => {\r\n\r\n                    // Se retorna el HTML\r\n                    return (\r\n                        <div className=\"col-md-12 mt-1 ml-2 mb-1\" key={item}>\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id={item}\r\n                                name={item}\r\n                                value={item}\r\n                                onChange={(e) => changeCheckInput(e, nombreCampo)}\r\n                                defaultChecked={item.checked} /> {item}\r\n                        </div>\r\n                    )\r\n                })\r\n            )\r\n        } else if (tipoCampo == 1) {\r\n\r\n            // Se retorna el html del tipo fecha \r\n            return (\r\n                <div className=\"custom-control custom-switch custom-control-lg mt-2 mb-2\">\r\n                    <input type=\"date\"\r\n                        className=\"form-control\"\r\n                        id={nombreCampo}\r\n                        name={nombreCampo}\r\n                        onChange={changeDateInput}\r\n                        max={getMaxDate}\r\n                    />\r\n                </div>\r\n            )\r\n        } else if (tipoCampo == 0) {\r\n\r\n            // Se retorna el html del tipo texto\r\n            return (\r\n                <div className=\"custom-control custom-switch custom-control-lg mt-2 mb-2\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        id={nombreCampo}\r\n                        name={nombreCampo}\r\n                        placeholder={nombreCampo}\r\n                        onChange={e => changeTextInput(e, campo)} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de retorna los items separados\r\n    const validarItems = (item) => {\r\n\r\n        // Se valida que exista y tenga un elemento\r\n        if (item && item.length == 0) {\r\n\r\n            // Se retorna el primer elemento\r\n            return item;\r\n        } else if (item && item.length > 0) {\r\n\r\n            // Se retorna por comas\r\n            return item.join(\", \");\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de validar el tipo del campo\r\n    const validarTipoCampo = (tipo) => {\r\n\r\n        // Se inicializa la variable\r\n        let nombreRetornado;\r\n\r\n        // Se valida el tipo\r\n        if (tipo == 0) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Texto\";\r\n        } else if (tipo == 1) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Fecha\";\r\n        } else if (tipo == 2) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Lista\";\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return nombreRetornado;\r\n    }\r\n\r\n    // Metodo encargado de cargar los parametros de la base de datos\r\n    const cargarParametros = (listaParametrosBaseDatos) => {\r\n\r\n        // Se setean los valores en null y vacios para que no salga el limitante de las hooks\r\n        setListaParametros(null);\r\n        setAntecedentesLista({ data: [] });\r\n        setInteresadosLista({ data: [] });\r\n        setEntidadesInvestigadoLista({ data: [] });\r\n        setCargosInvestigadoLista({ data: [] });\r\n        setEntidadInvestigadoLista({ data: [] });\r\n        setListaCamposPorParametroTemporal({ data: [] });\r\n        setListaParametros({ data: [] });\r\n\r\n        // Se inicializa el array\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'mas_actuaciones',\r\n                \"attributes\": {\r\n                    \"id\": props.id_mas_actuacion,\r\n                    \"id_proceso_disciplinario\": from.procesoDisciplinarioId\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + props.id_mas_actuacion + '/' + from.procesoDisciplinarioId, data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                validacionSpinner()\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los valores a la lista general de parametros\r\n                    setListaParametros(datos);\r\n                    \r\n                    let existenDatos = false;\r\n                    let grupoGeneral = []\r\n                    datos.params.forEach(element => {\r\n                        if(Array.isArray(datos.resultados[element]) && datos.resultados[element].length > 0){\r\n                            existenDatos = true;\r\n                            if(datos.resultados[element][0]['crear_tabla'] && grupoGeneral.filter(dato => dato === datos.resultados[element][0]['grupo_general']) == 0){\r\n                                grupoGeneral.push(datos.resultados[element][0]['grupo_general'])\r\n                            }\r\n                        }\r\n                    });\r\n                    \r\n                    establecerTabla(datos, grupoGeneral)                    \r\n                    setExistenDatosResultados(existenDatos)\r\n\r\n                    if (existenDatos && datos && datos.params && datos.resultados) {\r\n                        const nuevoElemento = [];\r\n                      \r\n                        datos.params.forEach(parametro => {\r\n                          if (datos.resultados[parametro] && Array.isArray(datos.resultados[parametro])) {\r\n                            datos.resultados[parametro].forEach((element, posicion) => {\r\n                                //if (datos.resultados[parametro].length === 1 || (element && element.principal)) {\r\n                                    let index = nuevoElemento.findIndex(data => data.param === parametro);\r\n                                    if (index > -1) {\r\n                                    nuevoElemento[index].value += \"$$$\" + (element.dato ? element.dato : 'SIN DATOS');\r\n                                    nuevoElemento[index].orden += \"$$$\" + posicion;\r\n                                    } else {\r\n                                    nuevoElemento.push({ \r\n                                        'param': parametro,\r\n                                        'value': element.dato ? element.dato : 'SIN DATOS', \r\n                                        'orden': posicion\r\n                                    });\r\n                                    }\r\n                                //}\r\n                            });\r\n                          }\r\n                        });\r\n                        setListaCamposPorParametroTemporal({ ...getListaCamposPorParametroTemporal, data: nuevoElemento });\r\n                      }\r\n\r\n\r\n                    window.showSpinner(false)\r\n                }\r\n            }\r\n        )\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('mas_actuaciones/' + props.id_mas_actuacion).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n                \r\n                validacionSpinner()\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se valida que hayan campos adicionales\r\n                    if (datos.data.attributes.campos.length > 0) {\r\n\r\n                        // Se setean los valores a la lista\r\n                        setCamposAdicionales(datos.data.attributes.campos);\r\n\r\n                        // Se setean los campos en el from\r\n                        from.campos = datos.data.attributes.campos;\r\n                    } else if (from.campos) {\r\n\r\n                        // Se setean los campos en el from\r\n                        delete from.campos;\r\n                    }\r\n                }\r\n            }\r\n        )\r\n\r\n        // Se quita el cargando\r\n        window.showSpinner(false);\r\n    }\r\n\r\n    const descargarArchivo = () => {\r\n\r\n        try {\r\n            window.showSpinner(true)\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"mas_actuaciones\",\r\n                    \"attributes\": {\r\n                        \"params\": getListaCamposPorParametroTemporal.data,\r\n                    }\r\n                }\r\n            }\r\n\r\n            GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + props.id_mas_actuacion, data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        downloadBase64File(datos.content_type, datos.base_64, datos.file_name, global.Constants.TIPO_DOCUMENTO_PERMITIDO_ACTUACIONES.DOCX);\r\n                        window.showSpinner(false);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: \", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    function downloadBase64File(contentType, base64Data, fileName, extension) {\r\n        const linkSource = `data:${contentType};base64,${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    const validacionSpinner = () => {\r\n        numeroLlamados++\r\n        if(numeroLlamados >= numeroTotalLlamados){\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n \r\n    const cargarInfoParametrosFila = () => {\r\n        return (\r\n            getListaParametros.params.map((parametro, i) => {\r\n                if(i == 0){\r\n                    return(\r\n                        <tr key={i}>\r\n                            <th>\r\n                                { \"${\"+ parametro + \"}\" }\r\n                            </th>\r\n                            <td>\r\n                                { getListaParametros.numero_de_auto }\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                }\r\n                else if(getListaParametros?.resultados[parametro]?.[0]?.crear_tabla === false){\r\n                    return(\r\n                        <tr key={i}>\r\n                            <th>\r\n                                { \"${\"+ parametro + \"}\" }\r\n                            </th>\r\n                            <td>\r\n                                {\r\n                                    getListaParametros?.resultados[parametro].map((dato, index) => {\r\n                                        return (\r\n                                            <label><input id={dato.dato+\"$$$\"+dato.parametro+\"$$$\"+index} name={dato.principal ? dato.grupo+\"_\"+dato.principal : dato.grupo} type=\"checkbox\" checked={dato.seleccionar} onChange={e => onChangeValue(e.target.checked, dato.dato, dato.parametro, dato.grupo, dato.principal, index)}/> { dato.dato ? dato.dato : 'SIN DATOS' }</label>\r\n                                        )\r\n                                    })                                \r\n                                }\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const cargarInfoParametrosTabla = () => {\r\n        return (\r\n            getTablaParametrosData.map((parametros, indexGeneral) => (\r\n                <tr>\r\n                    <td colSpan={2}>\r\n                        <table className='table table-bordered table-striped table-vcenter js-dataTable-full'>\r\n                            <thead>\r\n                                <tr>\r\n                                    {\r\n                                        parametros.titulo.map((titulo, indexTitulo) => (\r\n                                            <th key={indexTitulo}><b>{ \"${\" + titulo + \"}\" }</b></th>\r\n                                        ))\r\n                                    }\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {\r\n                                        parametros.datos?.[0].map((datos, indexDatos) => (\r\n                                            <tr>\r\n                                                {\r\n                                                    parametros.datos.map((dato, indexDato) => (\r\n                                                        <td key={indexDato}>\r\n                                                            {\r\n                                                                <label>\r\n                                                                    <input\r\n                                                                        id={dato[indexDatos].dato + \"$$$\" + dato[indexDatos].parametro + \"$$$\" + dato[indexDatos].index}\r\n                                                                        name={dato[indexDatos].principal ? dato[indexDatos].grupo + \"_\" + dato[indexDatos].principal : dato[indexDatos].grupo}\r\n                                                                        type=\"checkbox\"\r\n                                                                        checked={dato[indexDatos].seleccionar}\r\n                                                                        onChange={(e) =>\r\n                                                                            onChangeValue(\r\n                                                                                e.target.checked,\r\n                                                                                dato[indexDatos].dato,\r\n                                                                                dato[indexDatos].parametro,\r\n                                                                                dato[indexDatos].grupo,\r\n                                                                                dato[indexDatos].principal,\r\n                                                                                dato[indexDatos].index\r\n                                                                            )\r\n                                                                        }\r\n                                                                    />{\" \"}\r\n                                                                    { dato[indexDatos].dato ? dato[indexDatos].dato : 'SIN DATOS' }\r\n                                                                </label>\r\n                                                            }\r\n                                                        </td>\r\n                                                    ))\r\n                                                }\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n            ))\r\n        )\r\n        // return (\r\n        //     {\r\n        //         getTablaParametrosData.map((parametros, index) => (\r\n        //             <tr>\r\n        //                 <td colSpan={2}>\r\n        //                     <div>\r\n        //                         <table width={'100%'}>\r\n        //                             <thead>\r\n        //                                 <tr>\r\n        //                                     {\r\n        //                                         getTablaParametrosColumna?.map((column, columnIndex) => (\r\n        //                                             <th key={columnIndex}>{column}</th>\r\n        //                                         ))\r\n        //                                     }\r\n        //                                 </tr>\r\n        //                             </thead>\r\n        //                             <tbody>\r\n        //                                 {\r\n        //                                     getTablaParametrosData[0].map((_, rowIndex) => (\r\n        //                                         <tr key={rowIndex}>\r\n        //                                             {getTablaParametrosData.map((columna, index) => (\r\n        //                                             <td key={index}>\r\n        //                                                 {\r\n        //                                                     <label>\r\n        //                                                         <input\r\n        //                                                             id={columna[rowIndex].dato + \"$$$\" + columna[rowIndex].parametro + \"$$$\" + columna[rowIndex].index}\r\n        //                                                             name={columna[rowIndex].principal ? columna[rowIndex].grupo + \"_\" + columna[rowIndex].principal : columna[rowIndex].grupo}\r\n        //                                                             type=\"checkbox\"\r\n        //                                                             checked={columna[rowIndex].seleccionar}\r\n        //                                                             onChange={(e) =>\r\n        //                                                                 onChangeValue(\r\n        //                                                                 e.target.checked,\r\n        //                                                                 columna[rowIndex].dato,\r\n        //                                                                 columna[rowIndex].parametro,\r\n        //                                                                 columna[rowIndex].grupo,\r\n        //                                                                 columna[rowIndex].principal,\r\n        //                                                                 columna[rowIndex].index\r\n        //                                                                 )\r\n        //                                                             }\r\n        //                                                         />{\" \"}\r\n        //                                                         {columna[rowIndex].dato ? columna[rowIndex].dato : 'SIN DATOS'}\r\n        //                                                     </label>\r\n        //                                                 }\r\n        //                                             </td>\r\n        //                                             ))}\r\n        //                                         </tr>\r\n        //                                     ))\r\n        //                                 }\r\n        //                             </tbody>\r\n        //                         </table>\r\n        //                     </div>\r\n        //                 </td>\r\n        //             </tr>\r\n        //         )\r\n        //     }\r\n        // )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <ModalGen data={modalState} />\r\n            {\r\n                getIsLoading\r\n                ?\r\n                    <div className=\"text-center\">\r\n                        <div className=\"spinner-border text-primary\" role=\"status\">\r\n                            <span className=\"sr-only\">CARGANDO...</span>\r\n                        </div>\r\n                    </div>\r\n                :\r\n                    <>\r\n                        {\r\n                            getListaParametros != null \r\n                            ?\r\n                                <>\r\n\r\n                                    {\r\n                                        getExistenDatosResultados == false\r\n                                        ?\r\n                                            <>\r\n                                                <div className='col-md-12 mt-4'>\r\n                                                    <div className=\"block-content alert-warning text-center\">\r\n                                                        <label>LA PLANTILLA NO CUENTA CON PARAMETROS</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <br></br>\r\n                                            </>\r\n                                        :\r\n                                            <>\r\n                                                <div className='col-md-12'>\r\n                                                    <label>PARÁMETROS DE LA PLANTILLA</label>\r\n                                                </div>\r\n                                                <div className='col-md-12 mt-2 mb-2'>\r\n                                                    <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th><b>PARÁMETRO</b></th>\r\n                                                                <th><b>VALOR</b></th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            { getListaParametros?.resultados ? cargarInfoParametrosFila() : null }\r\n                                                            { getListaParametros?.resultados ? cargarInfoParametrosTabla() : null }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                                {\r\n                                                    getCamposAdicionales && getCamposAdicionales.length > 0 ?\r\n                                                    <>\r\n                                                        <div className='col-md-12' style={{ marginTop: '50px' }}>\r\n                                                            <label>CAMPOS ADICIONALES</label>\r\n                                                        </div>\r\n                                                        <div className='col-md-12 mt-2 mb-2'>\r\n                                                            <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                                                columns={columnsCampos}\r\n                                                                data={getCamposAdicionales}\r\n                                                                noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                                                                striped\r\n                                                            />\r\n                                                        </div>\r\n                                                    </>\r\n                                                    : null\r\n                                                }\r\n                                                <div className='col-md-12 mt-4 mb-2'>\r\n                                                    <label className='mr-2' htmlFor=\"documento_ruta\">DESCARGAR DOCUMENTO PRE-DILIGENCIADO CON LOS VALORES SELECCIONADOS</label>\r\n                                                    <button type=\"button\" title='Descargar documento diligenciado' onClick={() => descargarArchivo()} className=\"btn btn-rounded btn-primary\"> <i className=\"fas fa-file-word\"></i></button>\r\n                                                </div>\r\n                                            </>\r\n                                    }\r\n                                </>\r\n                            :\r\n                                <div className='col-md-12 mt-4'>\r\n                                    <label>CARGANDO PARÁMETROS DE LA PLANTILLA...</label>\r\n                                </div>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    );\r\n\r\n    \r\n}\r\n\r\nexport default ActuacionParametrosPlantillaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}