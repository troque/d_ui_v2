{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ValidarClasificacionRadicado\\\\ValidarClasificacionRadicadoForm.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport Spinner from '../../Utils/Spinner';\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\nimport { Link } from \"react-router-dom\";\nimport 'react-datetime/css/react-datetime.css';\nimport 'moment/locale/es';\nimport { useLocation } from 'react-router-dom';\nimport { hasAccess } from '../../../components/Utils/Common';\nimport ClasificacionRadicado from '../ClasificacionRadicado/ClasificacionRadicado';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ValidarClasificacionRadicadoForm() {\n  _s();\n\n  const location = useLocation();\n  const {\n    from,\n    disable\n  } = location.state;\n  const [listaTipoRespuesta, setListaTipoRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\n  const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\n  const [getRespuestaValidacionJefe, setRespuestaValidacionJefe] = useState(false);\n  const [getClasificacionActiva, setClasificacionActiva] = useState([]);\n  const [getRtaJefe, setRtaJefe] = useState(false);\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getRtaValidacion, setRtaValidacion] = useState(false);\n  const [getNombreProceso, setNombreProceso] = useState('');\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const [getParametros, setParametros] = useState({\n    id_proceso_disciplinario: procesoDisciplinarioId,\n    id_etapa: 2,\n    // from.idEtapa\n    reclasificacion: true,\n    route: \"/MisPendientes/\",\n    tipo_clasificacion: global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION\n  });\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      validarClasificacion();\n      ParametrosMasApi.getAllTipoRespuesta().then(datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1));\n    }\n\n    fetchData();\n  }, []);\n  /**\r\n   * Se consulta si la clasificación ya fue aceptada en la etapa de Evaluación.\r\n   * @returns \r\n   */\n\n  const validarClasificacion = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"validacion_clasificado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId\n        }\n      }\n    };\n    return GenericApi.getByDataGeneric(\"validar-clasificacion/get-validar-clasificado/\" + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        // Si la clasificación fue validada.\n        setRtaValidacion(true);\n        listaReclasificacion();\n      }\n    });\n  };\n  /**\r\n   * Se trae toda la lista de las reclasificaciones realizadas por el sistema\r\n   */\n\n\n  const listaReclasificacion = () => {\n    GenericApi.getGeneric(\"clasificacion-radicado/get-reclasificacion/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setClasificacionRadicadoLista(datos);\n        setRespuestaClasificacionRadicado(true);\n        jefeDependencia();\n      } else {\n        setModalState({\n          title: \"Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ValidarClasificadoForm',\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n  /**\r\n   * Se consulta si el usuario que se encuentra en sesión es jefe de la dependencia\r\n   */\n\n\n  const jefeDependencia = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"usuario\",\n        \"attributes\": {\n          \"\": \"\"\n        }\n      }\n    };\n    GenericApi.getByDataGeneric(\"usuario/get-jefe-dependencia\", data).then(datos => {\n      if (!datos.error) {\n        setRtaJefe(true);\n        validacionPorJefe();\n      } else {\n        setRtaJefe(false);\n      }\n    });\n  };\n\n  const validacionPorJefe = () => {\n    GenericApi.getGeneric(\"validar-clasificacion/get-validar-clasificacion-jefe/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setRespuestaValidacionJefe(true);\n        nombreProceso();\n        return true;\n      } else {\n        setRespuestaValidacionJefe(false);\n        return false;\n      }\n    });\n  };\n\n  const nombreProceso = () => {\n    GenericApi.getByIdGeneric(\"nombre-proceso\", procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setNombreProceso(datos.data.attributes.nombre);\n      }\n\n      window.showSpinner(false);\n    });\n  };\n\n  let selectChangeTipoRespuesta = e => {\n    setSelectedTipoRespuesta(e);\n  };\n\n  const selectTipoRespuesta = () => {\n    return listaTipoRespuesta.data.map((tipo_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tipo_respuesta.id,\n          children: tipo_respuesta.attributes.nombre\n        }, tipo_respuesta.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this)\n      }, void 0, false);\n    });\n  };\n\n  const aceptarClasificacion = () => {\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"validar_clasificacion\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": 2,\n          \"estado\": true\n        }\n      }\n    };\n    GenericApi.addGeneric(\"validar-clasificacion\", data).then(datos => {\n      if (!datos.error) {\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: Validar clasificación\",\n          message: \"Registro Exitoso\",\n          show: true,\n          redirect: '/RamasProceso',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: Validar clasificación\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ValidarClasificadoForm',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n\n      window.showSpinner(false);\n    });\n  }; // COMPONENTE CONFIRMACION TIPO DE CLASIFICADO\n\n\n  const componenteTipoRespuesta = tipo_respuesta => {\n    // CONFIRMACION TIPO DE CLASIFICADO = SI\n    if (tipo_respuesta === 1) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            aceptacion_clasificacion: true\n          },\n          enableReinitialize: true,\n          onSubmit: _ref => {\n            let {\n              resetForm\n            } = _ref;\n            aceptarClasificacion();\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: \"Registrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ValidarClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } /// CONFIRMACION TIPO DE CLASIFICADO = NO\n    else if (tipo_respuesta === 2) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ClasificacionRadicado, {\n          getParametros: getParametros,\n          id: \"cr_componente\",\n          name: \"cr_componente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  const [respuestaClasificacionRadicado, setRespuestaClasificacionRadicado] = useState(false);\n  const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n\n  const listaClasificacionRadicado = () => {\n    if (clasificacionRadicadoLista.data != null && typeof clasificacionRadicadoLista.data != 'undefined') {\n      return clasificacionRadicadoLista.data.map((clasificacion_radicado, i) => {\n        return cargarTabla(clasificacion_radicado, i);\n      });\n    } else {\n      return clasificacionRadicadoLista.map((clasificacion_radicado, i) => {\n        return cargarTabla(clasificacion_radicado, i);\n      });\n    }\n  };\n\n  const cargarTabla = (clasificacion_radicado, i) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [clasificacion_radicado.attributes.estado === 1 ? setClasificacionActiva(1) : null, /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.etapa.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [clasificacion_radicado.attributes.expediente.nombre, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 74\n        }, this), clasificacion_radicado.attributes.id_tipo_expediente == global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? clasificacion_radicado.attributes.tipo_derecho_peticion.nombre : null, clasificacion_radicado.attributes.id_tipo_expediente == global.Constants.TIPOS_EXPEDIENTES.QUEJA ? clasificacion_radicado.attributes.tipo_queja.nombre : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.dependencia.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [clasificacion_radicado.attributes.usuario_registra.nombre, \" \", clasificacion_radicado.attributes.usuario_registra.apellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.estado == 1 ? 'Activo' : 'Inactivo'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.created_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), !getRtaValidacion && getRtaJefe && disable != true ? /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            uuid: clasificacion_radicado.id,\n            id_clasificacion_radicado: clasificacion_radicado.id,\n            id_proceso_disciplinario: clasificacion_radicado.attributes.id_proceso_disciplinario\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            return errores;\n          },\n          onSubmit: (valores, _ref2) => {\n            let {\n              resetForm\n            } = _ref2;\n            // console.log(valores);\n            asignarCaso(valores, false);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-check-square\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 83\n              }, this), \" Aceptar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this);\n  };\n\n  const asignarCaso = (datos, reparto) => {\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"clasificacion_radicado\",\n        \"attributes\": {\n          \"uuid\": datos.uuid,\n          \"id_proceso_disciplinario\": datos.id_proceso_disciplinario,\n          \"id_etapa\": 2,\n          \"id_tipo_expediente\": datos.id_tipo_expediente,\n          \"observaciones\": \"\",\n          \"id_tipo_queja\": null,\n          \"id_termino_respuesta\": null,\n          \"fecha_termino\": null,\n          \"hora_termino\": null,\n          \"gestion_juridica\": false,\n          \"estado\": true,\n          \"id_estado_reparto\": null,\n          \"id_tipo_derecho_peticion\": null,\n          \"oficina_control_interno\": false,\n          \"created_user\": datos.funcionario_registra_name,\n          \"reclasificacion\": null,\n          \"reparto\": reparto\n        }\n      }\n    };\n    GenericApi.addGeneric(\"clasificacion-radicado/asignar-caso-por-jefe\", data).then(datos => {\n      if (!datos.error) {\n        setModalState({\n          title: \"Asignación del proceso disciplinario\",\n          message: \"El proceso disciplinario es asignado a \" + datos.data.attributes['funcionario_actual'].nombre + \" \" + datos.data.attributes['funcionario_actual'].apellido,\n          show: true,\n          redirect: '/MisPendientes'\n        });\n      } else {\n        setModalState({\n          title: \"Asignación del proceso disciplinario\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ValidarClasificacionRadicadoForm',\n          from: {\n            from\n          }\n        });\n      }\n\n      window.showSpinner(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w2d_block\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          \"aria-label\": \"breadcrumb\",\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"breadcrumb breadcrumb-alt push\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"breadcrumb-item\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                underline: \"hover\",\n                className: \"text-dark\",\n                to: `/MisPendientes`,\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Mis Pendientes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 130\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"breadcrumb-item\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                underline: \"hover\",\n                className: \"text-dark\",\n                to: `/RamasProceso/`,\n                state: {\n                  from: from,\n                  disable: disable\n                },\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Ramas del proceso\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 171\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"breadcrumb-item\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                underline: \"hover\",\n                className: \"text-dark\",\n                \"aria-current\": \"page\",\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from,\n                  disable: disable\n                },\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Validar Clasificaci\\xF3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 205\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block block-themed\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: disable ? \"block-header bg-dark\" : \"block-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"block-title\",\n              children: [\" \", getNombreProceso, \" :: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Validar Clasificaci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 80\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12 text-right my-2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: '/RamasProceso/',\n                title: \"Regresar a ramas del proceso\",\n                state: {\n                  from: from,\n                  disable: disable\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-success\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-backward\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 87\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: hasAccess('EI_ValidarClasificacion', 'Consultar') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [getRespuestaValidacionJefe ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: \"El proceso fue clasificado directamente por el jefe de la dependencia.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 53\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-vcenter\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Etapa\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 435,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Tipo de expediente\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 436,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Dependencia\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 437,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Registrado por\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Estado\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Fecha de registro\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 440,\n                        columnNumber: 57\n                      }, this), !getRtaValidacion && getRtaJefe ? /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Asignaci\\xF3n\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 442,\n                        columnNumber: 61\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: respuestaClasificacionRadicado ? listaClasificacionRadicado() : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true) : null\n            }, void 0, false), !getRtaValidacion ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"ingresoTipoExpediente\",\n                      children: [\"Confirma la clasificaci\\xF3n del expediente? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 462,\n                        columnNumber: 130\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-control\",\n                      id: \"ingresoTipoExpediente\",\n                      name: \"ingresoTipoExpediente\",\n                      value: selectedTipoRespuesta,\n                      onChange: e => selectChangeTipoRespuesta(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Por favor seleccione\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 465,\n                        columnNumber: 53\n                      }, this), respuestaTipoRespuesta ? selectTipoRespuesta() : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 37\n              }, this), selectedTipoRespuesta === '1' ? componenteTipoRespuesta(1) : '', selectedTipoRespuesta === '2' ? componenteTipoRespuesta(2) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 33\n            }, this) : null, getRtaValidacion && getRtaJefe ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"alert alert-warning\",\n                    role: \"alert\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"RECLASIFICACI\\xD3N DEL EXPEDIENTE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 96\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 101\n                    }, this), \"Recuerde que una vez realice la reclasificaci\\xF3n del expediente deber\\xE1 iniciar nuevamente el proceso en la fases subsecuentes de la etapa evaluaci\\xF3n.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 45\n                  }, this), componenteTipoRespuesta(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 33\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ValidarClasificacionRadicadoForm, \"SDrUhavr5pNIKEbUWYrVfHNFDMI=\", false, function () {\n  return [useLocation];\n});\n\n_c = ValidarClasificacionRadicadoForm;\nexport default ValidarClasificacionRadicadoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidarClasificacionRadicadoForm\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","Spinner","ParametrosMasApi","Link","useLocation","hasAccess","ClasificacionRadicado","GenericApi","ModalGen","ValidarClasificacionRadicadoForm","location","from","disable","state","listaTipoRespuesta","setListaTipoRespuesta","data","selectedTipoRespuesta","setSelectedTipoRespuesta","respuestaTipoRespuesta","setRespuestaTipoRespuesta","getRespuestaValidacionJefe","setRespuestaValidacionJefe","getClasificacionActiva","setClasificacionActiva","getRtaJefe","setRtaJefe","modalState","setModalState","title","message","show","getRtaValidacion","setRtaValidacion","getNombreProceso","setNombreProceso","radicado","procesoDisciplinarioId","getParametros","setParametros","id_proceso_disciplinario","id_etapa","reclasificacion","route","tipo_clasificacion","global","Constants","TIPO_CLASIFICACION","VALIDAR_CLASIFICACION","fetchData","window","showSpinner","validarClasificacion","getAllTipoRespuesta","then","datos","error","showModal","getByDataGeneric","listaReclasificacion","getGeneric","setClasificacionRadicadoLista","setRespuestaClasificacionRadicado","jefeDependencia","toString","redirect","validacionPorJefe","nombreProceso","getByIdGeneric","attributes","nombre","selectChangeTipoRespuesta","e","selectTipoRespuesta","map","tipo_respuesta","i","id","aceptarClasificacion","addGeneric","alert","TIPO_ALERTA","EXITO","ERROR","componenteTipoRespuesta","aceptacion_clasificacion","resetForm","respuestaClasificacionRadicado","clasificacionRadicadoLista","links","meta","listaClasificacionRadicado","clasificacion_radicado","cargarTabla","estado","etapa","expediente","id_tipo_expediente","TIPOS_EXPEDIENTES","DERECHO_PETICION","tipo_derecho_peticion","QUEJA","tipo_queja","dependencia","usuario_registra","apellido","created_at","uuid","id_clasificacion_radicado","valores","errores","asignarCaso","reparto","funcionario_registra_name","target","value"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ValidarClasificacionRadicado/ValidarClasificacionRadicadoForm.js"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport 'moment/locale/es';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { hasAccess } from '../../../components/Utils/Common';\r\nimport ClasificacionRadicado from '../ClasificacionRadicado/ClasificacionRadicado';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\n\r\nfunction ValidarClasificacionRadicadoForm() {\r\n\r\n    const location = useLocation()\r\n    const { from, disable } = location.state\r\n    const [listaTipoRespuesta, setListaTipoRespuesta] = useState({ data: {} });\r\n    const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\r\n    const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\r\n    const [getRespuestaValidacionJefe, setRespuestaValidacionJefe] = useState(false);\r\n    const [getClasificacionActiva, setClasificacionActiva] = useState([]);\r\n    const [getRtaJefe, setRtaJefe] = useState(false);\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getRtaValidacion, setRtaValidacion] = useState(false);\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n\r\n    const [getParametros, setParametros] = useState({\r\n        id_proceso_disciplinario: procesoDisciplinarioId,\r\n        id_etapa: 2, // from.idEtapa\r\n        reclasificacion: true,\r\n        route: \"/MisPendientes/\",\r\n        tipo_clasificacion: global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION,\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            window.showSpinner(true);\r\n            validarClasificacion();\r\n            ParametrosMasApi.getAllTipoRespuesta().then(\r\n                datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1)\r\n            )\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    /**\r\n     * Se consulta si la clasificación ya fue aceptada en la etapa de Evaluación.\r\n     * @returns \r\n     */\r\n    const validarClasificacion = () => {\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"validacion_clasificado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            GenericApi.getByDataGeneric(\"validar-clasificacion/get-validar-clasificado/\" + procesoDisciplinarioId, data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n                        // Si la clasificación fue validada.\r\n                        setRtaValidacion(true);\r\n                        listaReclasificacion(); \r\n                    }\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Se trae toda la lista de las reclasificaciones realizadas por el sistema\r\n     */\r\n    const listaReclasificacion = () => {\r\n\r\n        GenericApi.getGeneric(\"clasificacion-radicado/get-reclasificacion/\" + procesoDisciplinarioId).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setClasificacionRadicadoLista(datos);\r\n                    setRespuestaClasificacionRadicado(true);\r\n                    jefeDependencia(); \r\n                  \r\n                }\r\n                else {\r\n                    setModalState({ title: \"Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ValidarClasificadoForm', from: { from } });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Se consulta si el usuario que se encuentra en sesión es jefe de la dependencia\r\n     */\r\n    const jefeDependencia = () => {\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"usuario\",\r\n                \"attributes\": {\r\n                    \"\": \"\"\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"usuario/get-jefe-dependencia\", data).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setRtaJefe(true);\r\n                    validacionPorJefe();\r\n                }\r\n                else {\r\n                    setRtaJefe(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const validacionPorJefe = () => {\r\n\r\n        GenericApi.getGeneric(\"validar-clasificacion/get-validar-clasificacion-jefe/\" + procesoDisciplinarioId).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setRespuestaValidacionJefe(true);\r\n                    nombreProceso();\r\n                    return true;\r\n                }\r\n                else {\r\n                    setRespuestaValidacionJefe(false)\r\n                    return false;\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const nombreProceso = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\",procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre)\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    let selectChangeTipoRespuesta = (e) => {\r\n        setSelectedTipoRespuesta(e);\r\n    }\r\n\r\n    const selectTipoRespuesta = () => {\r\n        return (\r\n            listaTipoRespuesta.data.map((tipo_respuesta, i) => {\r\n                return (\r\n                    <>\r\n                        <option key={tipo_respuesta.id} value={tipo_respuesta.id}>{tipo_respuesta.attributes.nombre}</option>\r\n                    </>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const aceptarClasificacion = () => {\r\n\r\n        window.showSpinner(true);\r\n\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"validar_clasificacion\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": 2,\r\n                    \"estado\": true,\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.addGeneric(\"validar-clasificacion\", data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"SINPROC No \" + radicado + \" :: Validar clasificación\", message: \"Registro Exitoso\", show: true, redirect: '/RamasProceso', from: { from }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                }\r\n                else {\r\n                    setModalState({ title: \"SINPROC No \" + radicado + \" :: Validar clasificación\", message: datos.error.toString(), show: true, redirect: '/ValidarClasificadoForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // COMPONENTE CONFIRMACION TIPO DE CLASIFICADO\r\n    const componenteTipoRespuesta = (tipo_respuesta) => {\r\n\r\n        // CONFIRMACION TIPO DE CLASIFICADO = SI\r\n        if (tipo_respuesta === 1) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            aceptacion_clasificacion: true,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        onSubmit={({ resetForm }) => {\r\n                            aceptarClasificacion();\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"block-content block-content-full text-right\">\r\n\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n\r\n                                <Link to={`/ValidarClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n                        </Form>\r\n\r\n                    </Formik>\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n        /// CONFIRMACION TIPO DE CLASIFICADO = NO\r\n        else if (tipo_respuesta === 2) {\r\n            return (\r\n                <>\r\n                    <ClasificacionRadicado getParametros={getParametros} id=\"cr_componente\" name=\"cr_componente\" />\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const [respuestaClasificacionRadicado, setRespuestaClasificacionRadicado] = useState(false);\r\n    const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const listaClasificacionRadicado = () => {\r\n\r\n        if (clasificacionRadicadoLista.data != null && typeof (clasificacionRadicadoLista.data) != 'undefined') {\r\n            return (\r\n\r\n                clasificacionRadicadoLista.data.map((clasificacion_radicado, i) => {\r\n                    return (\r\n                        cargarTabla(clasificacion_radicado, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                clasificacionRadicadoLista.map((clasificacion_radicado, i) => {\r\n                    return (\r\n                        cargarTabla(clasificacion_radicado, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const cargarTabla = (clasificacion_radicado, i) => {\r\n\r\n        return (\r\n            <tr>\r\n                {clasificacion_radicado.attributes.estado === 1 ? (setClasificacionActiva(1)) : null}\r\n\r\n                <td>{clasificacion_radicado.attributes.etapa.nombre}</td>\r\n                <td>{clasificacion_radicado.attributes.expediente.nombre}<br />\r\n                    {clasificacion_radicado.attributes.id_tipo_expediente == global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? clasificacion_radicado.attributes.tipo_derecho_peticion.nombre : null}\r\n                    {clasificacion_radicado.attributes.id_tipo_expediente == global.Constants.TIPOS_EXPEDIENTES.QUEJA ? clasificacion_radicado.attributes.tipo_queja.nombre : null}\r\n                </td>\r\n                <td>{clasificacion_radicado.attributes.dependencia.nombre}</td>\r\n                <td>{clasificacion_radicado.attributes.usuario_registra.nombre} {clasificacion_radicado.attributes.usuario_registra.apellido}</td>\r\n                <td>{clasificacion_radicado.attributes.estado == 1 ? 'Activo' : 'Inactivo'}</td>\r\n                <td>{clasificacion_radicado.attributes.created_at}</td>\r\n\r\n                {(!getRtaValidacion && getRtaJefe && disable != true) ? (\r\n                    <td>\r\n                        <Formik\r\n                            initialValues={{\r\n                                uuid: clasificacion_radicado.id,\r\n                                id_clasificacion_radicado: clasificacion_radicado.id,\r\n                                id_proceso_disciplinario: clasificacion_radicado.attributes.id_proceso_disciplinario\r\n                            }}\r\n                            enableReinitialize\r\n\r\n                            validate={(valores) => {\r\n                                let errores = {}\r\n                                return errores\r\n                            }}\r\n\r\n                            onSubmit={(valores, { resetForm }) => {\r\n                                // console.log(valores);\r\n                                asignarCaso(valores, false);\r\n                            }}>\r\n                            <Form>\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i class=\"fas fa-check-square\"></i> Aceptar</button>\r\n                            </Form>\r\n                        </Formik>\r\n                    </td>) : null\r\n                }\r\n            </tr>\r\n        )\r\n    }\r\n\r\n\r\n    const asignarCaso = (datos, reparto) => {\r\n\r\n        window.showSpinner(true);\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"uuid\": datos.uuid,\r\n                    \"id_proceso_disciplinario\": datos.id_proceso_disciplinario,\r\n                    \"id_etapa\": 2,\r\n                    \"id_tipo_expediente\": datos.id_tipo_expediente,\r\n                    \"observaciones\": \"\",\r\n                    \"id_tipo_queja\": null,\r\n                    \"id_termino_respuesta\": null,\r\n                    \"fecha_termino\": null,\r\n                    \"hora_termino\": null,\r\n                    \"gestion_juridica\": false,\r\n                    \"estado\": true,\r\n                    \"id_estado_reparto\": null,\r\n                    \"id_tipo_derecho_peticion\": null,\r\n                    \"oficina_control_interno\": false,\r\n                    \"created_user\": datos.funcionario_registra_name,\r\n                    \"reclasificacion\": null,\r\n                    \"reparto\": reparto\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.addGeneric(\"clasificacion-radicado/asignar-caso-por-jefe\", data).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"Asignación del proceso disciplinario\", message: \"El proceso disciplinario es asignado a \" + datos.data.attributes['funcionario_actual'].nombre + \" \" + datos.data.attributes['funcionario_actual'].apellido, show: true, redirect: '/MisPendientes' });\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Asignación del proceso disciplinario\", message: datos.error.toString(), show: true, redirect: '/ValidarClasificacionRadicadoForm', from: { from } });\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            {<Spinner />}\r\n            <ModalGen data={modalState} />\r\n\r\n            <div className=\"row\">\r\n\r\n\r\n                <div className=\"w2d_block\">\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                            <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                            <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from, disable: disable }}><small>Ramas del proceso</small></Link></li>\r\n                            <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" aria-current=\"page\" to={`/ClasificacionRadicadoLista/`} state={{ from: from, disable: disable }}><small>Validar Clasificación</small></Link></li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"block block-themed\">\r\n                        <div className={(disable ? (\"block-header bg-dark\") : \"block-header\")}>\r\n                            <h3 className=\"block-title\"> {getNombreProceso} :: <strong>Validar Clasificación</strong></h3>\r\n                        </div>\r\n\r\n                        <div className=\"block-content\">\r\n                            <div className='col-md-12 text-right my-2'>\r\n\r\n                                <Link to={'/RamasProceso/'} title='Regresar a ramas del proceso' state={{ from: from, disable: disable }}>\r\n                                    <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                                </Link>\r\n\r\n                            </div>\r\n                            <>\r\n                                {\r\n                                    (hasAccess('EI_ValidarClasificacion', 'Consultar')) ? (\r\n\r\n                                        <>\r\n                                            {\r\n                                                (getRespuestaValidacionJefe) ? (\r\n\r\n                                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                                        <p className=\"mb-0\">El proceso fue clasificado directamente por el jefe de la dependencia.</p>\r\n                                                    </div>\r\n\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            <table className=\"table table-vcenter\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>Etapa</th>\r\n                                                        <th>Tipo de expediente</th>\r\n                                                        <th>Dependencia</th>\r\n                                                        <th>Registrado por</th>\r\n                                                        <th>Estado</th>\r\n                                                        <th>Fecha de registro</th>\r\n                                                        {(!getRtaValidacion && getRtaJefe) ? (\r\n                                                            <th>Asignación</th>\r\n                                                        ) : null}\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {respuestaClasificacionRadicado ? listaClasificacionRadicado() : null}\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                        </>\r\n                                    ) : null\r\n\r\n                                }\r\n                            </>\r\n\r\n                            {(!getRtaValidacion) ? (\r\n                                <div className=\"block-content\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"ingresoTipoExpediente\">Confirma la clasificación del expediente? <span className=\"text-danger\">*</span></label>\r\n                                                <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                                                    value={selectedTipoRespuesta} onChange={e => selectChangeTipoRespuesta(e.target.value)}>\r\n                                                    <option value=\"\">Por favor seleccione</option>\r\n                                                    {respuestaTipoRespuesta ? selectTipoRespuesta() : null}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/*SI APLICA RECLASIFIFCACION*/}\r\n                                    {selectedTipoRespuesta === '1' ? componenteTipoRespuesta(1) : ''}\r\n                                    {/*NO APLICA RECLASIFIFCACION*/}\r\n                                    {selectedTipoRespuesta === '2' ? componenteTipoRespuesta(2) : ''}\r\n                                </div>) : null\r\n                            }\r\n\r\n                            {(getRtaValidacion && getRtaJefe) ? (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <div class=\"alert alert-warning\" role=\"alert\">\r\n                                                <strong>RECLASIFICACIÓN DEL EXPEDIENTE</strong><br/><br/>\r\n                                                Recuerde que una vez realice la reclasificación del expediente deberá iniciar nuevamente el proceso en la fases subsecuentes de la etapa evaluación.\r\n                                            </div>\r\n\r\n                                            {componenteTipoRespuesta(2)}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>) : null\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\nexport default ValidarClasificacionRadicadoForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}