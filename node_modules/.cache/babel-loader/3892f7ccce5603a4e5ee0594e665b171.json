{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ClasificacionRadicado\\\\ClasificacionRadicadoLista.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\nimport InfoExitoApi from '../../Utils/InfoExitoApi';\nimport ClasificacionRadicadoApi from '../../Api/Services/ClasificacionRadicadoApi';\nimport Spinner from '../../Utils/Spinner';\nimport { Navigate } from \"react-router-dom\";\nimport ParametrosMasApi from \"./../../Api/Services/ParametrosMasApi\";\nimport CierreEtapaApi from '../../Api/Services/CierreEtapaApi';\nimport { useLocation } from 'react-router-dom';\nimport { hasAccess } from '../../../components/Utils/Common';\nimport ListaBotones from '../../Utils/ListaBotones';\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ClasificacionRadicadoLista() {\n  _s();\n\n  const [errorApi, setErrorApi] = useState('');\n  const [isRedirect, setIsRedirect] = useState(false);\n  const [getIdTipoExpediente, setIdTipoExpediente] = useState();\n  const [listaTipoExpediente, setListaTipoExpediente] = useState({\n    data: {}\n  });\n  const [respuestaTipoExpediente, setTipoExpediente] = useState(false);\n  const [listaTipoQueja, setListaTipoQueja] = useState({\n    data: {}\n  });\n  const [respuestaTipoQueja, setTipoQueja] = useState(false);\n  const [listaTerminoRespuesta, setListaTerminoRespuesta] = useState({\n    data: {}\n  });\n  const [respuestaTerminoRespuesta, setTerminoRespuesta] = useState(false);\n  const [estadoEtapaCapturaReparto, setEstadoEtapaCapturaReparto] = useState(false);\n  const [getEstadoLista, setEstadoLista] = useState('');\n  const [perPage, setPerPage] = useState(10);\n  const [pageActual, setPageActual] = useState(1);\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let vigencia = from.vigencia;\n  let id_etapa = from.id_etapa;\n  const columns = [{\n    name: 'Tipo de expediente',\n    cell: clasificacion_radicado => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", clasificacion_radicado.attributes.expediente.nombre, \" \", clasificacion_radicado.attributes.expediente.id === 3 || clasificacion_radicado.attributes.expediente.id === 2 ? clasificacion_radicado.attributes.tipo_queja.nombre : null, clasificacion_radicado.attributes.expediente.id === 1 ? clasificacion_radicado.attributes.tipo_derecho_peticion.nombre : null, clasificacion_radicado.attributes.expediente.id === 4 ? clasificacion_radicado.attributes.fecha_termino : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), clasificacion_radicado.attributes.expediente.id === 4 ? \" (\" + clasificacion_radicado.attributes.hora_termino + \") horas\" : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), clasificacion_radicado.attributes.observaciones]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 45\n    }, this),\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Registrado En',\n    selector: clasificacion_radicado => 'PENDIENTE',\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Registrado por',\n    cell: clasificacion_radicado => clasificacion_radicado.attributes.nombre_completo,\n    sortable: true\n  }, {\n    name: 'Fecha de registro',\n    selector: clasificacion_radicado => clasificacion_radicado.attributes.created_at,\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Estado actual',\n    selector: clasificacion_radicado => 'Asignado',\n    sortable: true\n  }, {\n    name: 'Termino',\n    selector: clasificacion_radicado => 'Ver Normatividad',\n    sortable: true\n  }];\n  const [getRoutes, setRoutes] = useState({\n    id_etapa: 1,\n    id_fase: 1,\n    crear_registro: \"/ClasificacionRadicadoForm\",\n    consultar_registros: \"/ClasificacionRadicadoLista\",\n    adjuntar_documento: \"/SoporteRadicadoForm\",\n    repositorio_documentos: \"/SoporteRadicadoLista\",\n    modulo: \"CR_ClasificacionRadicado\",\n    funcionalidad_crear: \"Crear\",\n    funcionalidad_consultar: \"Consultar\"\n  });\n\n  const redirectToRoutes = () => {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/ClasificacionRadicadoLista/`,\n      state: {\n        from: from\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 16\n    }, this);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      setEstadoLista(\"Activos\");\n      cargarClasificaciones(1, 10, '1'); // VALIDA CIERRE DE ETAPA EVALUACION\n\n      const dataCierreEtapa = {\n        \"data\": {\n          \"type\": \"cerrar_etapa\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": procesoDisciplinarioId,\n            \"id_etapa\": 1,\n            \"id_delegada\": \"id_delegada\",\n            \"id_funcionario\": \"id_funcionario\"\n          }\n        }\n      };\n      CierreEtapaApi.getCierreEtapaByIdProcesoDisciplinario(dataCierreEtapa).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            setEstadoEtapaCapturaReparto(true);\n          }\n        } else {\n          setErrorApi(datos.error.toString());\n          window.showModal(1);\n        }\n      });\n    }\n\n    fetchData();\n  }, []); ///////////////////////////////////////////////////////////\n  /////////////////// PARA LA BÃšSQUEDA //////////////////////\n  ///////////////////////////////////////////////////////////\n\n  const [respuestaClasificacionRadicado, setRespuestaClasificacionRadicado] = useState(false);\n  const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [respuestaClasificacionRadicadoTotal, setRespuestaClasificacionRadicadoTotal] = useState(false);\n  const [clasificacionRadicadoListaTotal, setClasificacionRadicadoListaTotal] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n\n  const handleSearch = event => {\n    try {\n      if (event.target.value.trim().trim() == \"\" || event.target.value.trim().length == 0) {\n        setClasificacionRadicadoLista(clasificacionRadicadoListaTotal);\n      } else {\n        var filteredData = {\n          data: clasificacionRadicadoListaTotal.data.filter(suggestion => (suggestion.attributes.created_at + suggestion.attributes.estado + suggestion.attributes.observaciones + suggestion.attributes.nombre_completo + ((suggestion.attributes.expediente ? suggestion.attributes.expediente.nombre : \"\") + \" \" + (suggestion.attributes.tipo_queja ? suggestion.attributes.tipo_queja.nombre : \"\")) + (suggestion.attributes.tipo_derecho_peticion ? suggestion.attributes.tipo_derecho_peticion.nombre : \"\") + (suggestion.attributes.fecha_termino ? suggestion.attributes.fecha_termino : \"\") + (suggestion.attributes.hora_termino ? suggestion.attributes.hora_termino : \"\")).toLowerCase().includes(event.target.value.toLowerCase()))\n        };\n        setClasificacionRadicadoLista(filteredData);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const listaClasificacionRadicado = () => {\n    if (clasificacionRadicadoLista.data != null && typeof clasificacionRadicadoLista.data != 'undefined') {\n      return clasificacionRadicadoLista.data.map((clasificacion_radicado, i) => {\n        return cargarTabla(clasificacion_radicado);\n      });\n    } else {\n      return clasificacionRadicadoLista.map((clasificacion_radicado, i) => {\n        return cargarTabla(clasificacion_radicado);\n      });\n    }\n  };\n\n  const cargarTabla = clasificacion_radicado => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: [clasificacion_radicado.attributes.expediente.nombre, \" \", clasificacion_radicado.attributes.expediente.id === 3 || clasificacion_radicado.attributes.expediente.id === 2 ? clasificacion_radicado.attributes.tipo_queja.nombre : null, clasificacion_radicado.attributes.expediente.id === 1 ? clasificacion_radicado.attributes.tipo_derecho_peticion.nombre : null, clasificacion_radicado.attributes.expediente.id === 4 ? clasificacion_radicado.attributes.fecha_termino : null, clasificacion_radicado.attributes.expediente.id === 4 ? \" (\" + clasificacion_radicado.attributes.hora_termino + \") horas\" : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), clasificacion_radicado.attributes.observaciones]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"PENDIENTE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.nombre_completo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.created_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Asignado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"Ver Normatividad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this)]\n    }, clasificacion_radicado.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this);\n  };\n\n  const cargarClasificaciones = (page, perPage, estado) => {\n    const data = {\n      \"data\": {\n        \"type\": \"clasificacion_radicado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": \"1\",\n          \"id_tipo_expediente\": \"1\",\n          \"estado\": estado,\n          'per_page': perPage,\n          'current_page': page\n        }\n      }\n    };\n    console.log(JSON.stringify(data));\n\n    if (hasAccess('CR_ClasificacionRadicado', 'Consultar')) {\n      ClasificacionRadicadoApi.getAllClasificacionRadicadoByIdProDisciplinario(data, procesoDisciplinarioId).then(datos => {\n        if (!datos.error) {\n          setClasificacionRadicadoLista(datos);\n          setRespuestaClasificacionRadicado(true);\n          setClasificacionRadicadoListaTotal(datos);\n          setRespuestaClasificacionRadicadoTotal(true);\n\n          if (datos.data.length > 0) {\n            from.idTipoExpediente = datos.data[0][\"attributes\"][\"id_tipo_expediente\"];\n          }\n\n          window.showSpinner(false);\n        } else {\n          setErrorApi(datos.error.toString());\n          window.showSpinner(false);\n          window.showModal();\n        }\n      });\n    } else {\n      window.showSpinner(false);\n    }\n  };\n\n  const handlePageChange = page => {\n    window.showSpinner(true);\n    setPageActual(page);\n    cargarClasificaciones(page, perPage, '1');\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    window.showSpinner(true);\n    setPerPage(newPerPage);\n    setPageActual(page);\n    cargarClasificaciones(page, newPerPage, '1');\n  };\n\n  const handleCallback = childData => {\n    try {\n      window.showSpinner(true);\n      setEstadoLista(childData == '0' ? \"Inactivos\" : \"Activos\");\n      cargarClasificaciones(1, 10, childData);\n    } catch (error) {}\n  }; ///////////////////////////////////////////////////////////\n  /////////////////// PARA LA BÃšSQUEDA //////////////////////\n  ///////////////////////////////////////////////////////////\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-rounded block-bordered\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: /*#__PURE__*/_jsxDEV(\"nav\", {\n                \"aria-label\": \"breadcrumb\",\n                children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                  className: \"breadcrumb breadcrumb-alt push\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    class: \"breadcrumb-item\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                      underline: \"hover\",\n                      className: \"text-dark\",\n                      to: `/MisPendientes`,\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: \"Mis Pendientes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 138\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 70\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    class: \"breadcrumb-item\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                      underline: \"hover\",\n                      className: \"text-dark\",\n                      to: `/RamasProceso/`,\n                      state: {\n                        from: from\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: \"Ramas del proceso\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 161\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 317,\n                      columnNumber: 70\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    class: \"breadcrumb-item\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Clasificacion Radicado Lista\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 70\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block block-themed\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"block-title\",\n              children: [\"SINPROC No \", radicado, \" :: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Consultar lista de Clasificaci\\xF3n del radicado \", getEstadoLista]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 82\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group \",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"search\",\n                      children: \"Buscar: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      type: \"text\",\n                      id: \"search\",\n                      name: \"search\",\n                      onChange: handleSearch,\n                      onKeyPress: e => {\n                        e.key === 'Enter' && e.preventDefault();\n                      },\n                      className: \"form-control border border-success\",\n                      placeholder: \"Buscar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ListaBotones, {\n                  getRoutes: getRoutes,\n                  from: from,\n                  parentCallback: handleCallback,\n                  id: \"botonesNavegacion\",\n                  name: \"botonesNavegacion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 33\n              }, this), hasAccess('CR_ClasificacionRadicado', 'Consultar') ? /*#__PURE__*/_jsxDEV(DataTable, {\n                className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                columns: columns,\n                data: clasificacionRadicadoLista.data,\n                perPage: perPage,\n                page: pageActual,\n                pagination: true,\n                noDataComponent: \"Sin datos\",\n                paginationServer: true,\n                paginationTotalRows: clasificacionRadicadoLista.meta ? clasificacionRadicadoLista.meta.total : 1,\n                onChangePage: handlePageChange,\n                onChangeRowsPerPage: handlePerRowsChange,\n                defaultSortFieldId: \"Nombre\",\n                striped: true,\n                icon: true,\n                paginationComponentOptions: {\n                  rowsPerPageText: 'Filas por pÃ¡gina'\n                },\n                defaultSortAsc: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 41\n              }, this) : null]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClasificacionRadicadoLista, \"35vovLTsiSGYWSBYmIfihBtYC2I=\", false, function () {\n  return [useLocation];\n});\n\n_c = ClasificacionRadicadoLista;\nexport default ClasificacionRadicadoLista;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClasificacionRadicadoLista\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ClasificacionRadicado/ClasificacionRadicadoLista.js"],"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","Link","useParams","InfoErrorApi","InfoExitoApi","ClasificacionRadicadoApi","Spinner","Navigate","ParametrosMasApi","CierreEtapaApi","useLocation","hasAccess","ListaBotones","DataTable","ClasificacionRadicadoLista","errorApi","setErrorApi","isRedirect","setIsRedirect","getIdTipoExpediente","setIdTipoExpediente","listaTipoExpediente","setListaTipoExpediente","data","respuestaTipoExpediente","setTipoExpediente","listaTipoQueja","setListaTipoQueja","respuestaTipoQueja","setTipoQueja","listaTerminoRespuesta","setListaTerminoRespuesta","respuestaTerminoRespuesta","setTerminoRespuesta","estadoEtapaCapturaReparto","setEstadoEtapaCapturaReparto","getEstadoLista","setEstadoLista","perPage","setPerPage","pageActual","setPageActual","location","from","state","radicado","procesoDisciplinarioId","vigencia","id_etapa","columns","name","cell","clasificacion_radicado","attributes","expediente","nombre","id","tipo_queja","tipo_derecho_peticion","fecha_termino","hora_termino","observaciones","sortable","width","selector","nombre_completo","created_at","getRoutes","setRoutes","id_fase","crear_registro","consultar_registros","adjuntar_documento","repositorio_documentos","modulo","funcionalidad_crear","funcionalidad_consultar","redirectToRoutes","fetchData","window","showSpinner","cargarClasificaciones","dataCierreEtapa","getCierreEtapaByIdProcesoDisciplinario","then","datos","error","length","toString","showModal","respuestaClasificacionRadicado","setRespuestaClasificacionRadicado","clasificacionRadicadoLista","setClasificacionRadicadoLista","links","meta","respuestaClasificacionRadicadoTotal","setRespuestaClasificacionRadicadoTotal","clasificacionRadicadoListaTotal","setClasificacionRadicadoListaTotal","handleSearch","event","target","value","trim","filteredData","filter","suggestion","estado","toLowerCase","includes","console","listaClasificacionRadicado","map","i","cargarTabla","page","log","JSON","stringify","getAllClasificacionRadicadoByIdProDisciplinario","idTipoExpediente","handlePageChange","handlePerRowsChange","newPerPage","handleCallback","childData","e","key","preventDefault","total","rowsPerPageText"],"mappings":"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","sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\r\nimport InfoExitoApi from '../../Utils/InfoExitoApi';\r\nimport ClasificacionRadicadoApi from '../../Api/Services/ClasificacionRadicadoApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport ParametrosMasApi from \"./../../Api/Services/ParametrosMasApi\";\r\nimport CierreEtapaApi from '../../Api/Services/CierreEtapaApi';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { hasAccess } from '../../../components/Utils/Common';\r\nimport ListaBotones from '../../Utils/ListaBotones';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nfunction ClasificacionRadicadoLista() {\r\n\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n\r\n    const [getIdTipoExpediente, setIdTipoExpediente] = useState();\r\n\r\n    const [listaTipoExpediente, setListaTipoExpediente] = useState({ data: {} });\r\n    const [respuestaTipoExpediente, setTipoExpediente] = useState(false);\r\n\r\n    const [listaTipoQueja, setListaTipoQueja] = useState({ data: {} });\r\n    const [respuestaTipoQueja, setTipoQueja] = useState(false);\r\n\r\n    const [listaTerminoRespuesta, setListaTerminoRespuesta] = useState({ data: {} });\r\n    const [respuestaTerminoRespuesta, setTerminoRespuesta] = useState(false);\r\n    const [estadoEtapaCapturaReparto, setEstadoEtapaCapturaReparto] = useState(false);\r\n    const [getEstadoLista, setEstadoLista] = useState('');\r\n\r\n    const [perPage, setPerPage] = useState(10);\r\n    const [pageActual, setPageActual] = useState(1);\r\n\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let vigencia = from.vigencia;\r\n    let id_etapa = from.id_etapa;\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Tipo de expediente',\r\n            cell: clasificacion_radicado => <div> {clasificacion_radicado.attributes.expediente.nombre} {clasificacion_radicado.attributes.expediente.id === 3 || clasificacion_radicado.attributes.expediente.id === 2 ? clasificacion_radicado.attributes.tipo_queja.nombre : null}\r\n                {clasificacion_radicado.attributes.expediente.id === 1 ? clasificacion_radicado.attributes.tipo_derecho_peticion.nombre : null}\r\n                {clasificacion_radicado.attributes.expediente.id === 4 ? clasificacion_radicado.attributes.fecha_termino : null}\r\n                <br />{clasificacion_radicado.attributes.expediente.id === 4 ? \" (\" + clasificacion_radicado.attributes.hora_termino + \") horas\" : null}\r\n                <br />{clasificacion_radicado.attributes.observaciones}</div>,\r\n\r\n\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            name: 'Registrado En',\r\n            selector: clasificacion_radicado => 'PENDIENTE',\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n\r\n\r\n        {\r\n            name: 'Registrado por',\r\n            cell: clasificacion_radicado => clasificacion_radicado.attributes.nombre_completo,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Fecha de registro',\r\n            selector: clasificacion_radicado => clasificacion_radicado.attributes.created_at,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            name: 'Estado actual',\r\n            selector: clasificacion_radicado => 'Asignado',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Termino',\r\n            selector: clasificacion_radicado => 'Ver Normatividad',\r\n            sortable: true,\r\n        },\r\n    ];\r\n\r\n\r\n    const [getRoutes, setRoutes] = useState({\r\n        id_etapa: 1,\r\n        id_fase: 1,\r\n        crear_registro: \"/ClasificacionRadicadoForm\",\r\n        consultar_registros: \"/ClasificacionRadicadoLista\",\r\n        adjuntar_documento: \"/SoporteRadicadoForm\",\r\n        repositorio_documentos: \"/SoporteRadicadoLista\",\r\n        modulo: \"CR_ClasificacionRadicado\",\r\n        funcionalidad_crear: \"Crear\",\r\n        funcionalidad_consultar: \"Consultar\"\r\n    });\r\n\r\n\r\n    const redirectToRoutes = () => {\r\n        return <Navigate to={`/ClasificacionRadicadoLista/`} state={{ from: from }} />;\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            setEstadoLista(\"Activos\")\r\n            cargarClasificaciones(1, 10, '1');\r\n\r\n            // VALIDA CIERRE DE ETAPA EVALUACION\r\n            const dataCierreEtapa = {\r\n\r\n                \"data\": {\r\n                    \"type\": \"cerrar_etapa\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                        \"id_etapa\": 1,\r\n                        \"id_delegada\": \"id_delegada\",\r\n                        \"id_funcionario\": \"id_funcionario\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            CierreEtapaApi.getCierreEtapaByIdProcesoDisciplinario(dataCierreEtapa).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (datos[\"data\"].length > 0) {\r\n                            setEstadoEtapaCapturaReparto(true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        setErrorApi(datos.error.toString())\r\n                        window.showModal(1)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    ///////////////////////////////////////////////////////////\r\n    /////////////////// PARA LA BÃšSQUEDA //////////////////////\r\n    ///////////////////////////////////////////////////////////\r\n\r\n    const [respuestaClasificacionRadicado, setRespuestaClasificacionRadicado] = useState(false);\r\n    const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const [respuestaClasificacionRadicadoTotal, setRespuestaClasificacionRadicadoTotal] = useState(false);\r\n    const [clasificacionRadicadoListaTotal, setClasificacionRadicadoListaTotal] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const handleSearch = (event) => {\r\n        try {\r\n            if ((event.target.value.trim().trim() == \"\") || (event.target.value.trim().length == 0)) {\r\n\r\n                setClasificacionRadicadoLista(clasificacionRadicadoListaTotal);\r\n            }\r\n            else {\r\n\r\n\r\n\r\n                var filteredData = {\r\n                    data: clasificacionRadicadoListaTotal.data.filter(\r\n                        suggestion => ((\r\n                            suggestion.attributes.created_at + suggestion.attributes.estado\r\n                            + suggestion.attributes.observaciones\r\n                            + suggestion.attributes.nombre_completo\r\n                            + ((suggestion.attributes.expediente ? suggestion.attributes.expediente.nombre : \"\") + \" \" + (suggestion.attributes.tipo_queja ? suggestion.attributes.tipo_queja.nombre : \"\"))\r\n                            + (suggestion.attributes.tipo_derecho_peticion ? suggestion.attributes.tipo_derecho_peticion.nombre : \"\")\r\n                            + (suggestion.attributes.fecha_termino ? suggestion.attributes.fecha_termino : \"\")\r\n                            + (suggestion.attributes.hora_termino ? suggestion.attributes.hora_termino : \"\")).toLowerCase().includes(event.target.value.toLowerCase()))\r\n                    )\r\n                };\r\n                setClasificacionRadicadoLista(filteredData)\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n    };\r\n\r\n    const listaClasificacionRadicado = () => {\r\n\r\n        if (clasificacionRadicadoLista.data != null && typeof (clasificacionRadicadoLista.data) != 'undefined') {\r\n            return (\r\n\r\n\r\n                clasificacionRadicadoLista.data.map((clasificacion_radicado, i) => {\r\n                    return (\r\n                        cargarTabla(clasificacion_radicado)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                clasificacionRadicadoLista.map((clasificacion_radicado, i) => {\r\n                    return (\r\n                        cargarTabla(clasificacion_radicado)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const cargarTabla = (clasificacion_radicado) => {\r\n        return (\r\n            <tr key={clasificacion_radicado.id}>\r\n                <td>\r\n                    {clasificacion_radicado.attributes.expediente.nombre} {clasificacion_radicado.attributes.expediente.id === 3 || clasificacion_radicado.attributes.expediente.id === 2 ? clasificacion_radicado.attributes.tipo_queja.nombre : null}\r\n                    {clasificacion_radicado.attributes.expediente.id === 1 ? clasificacion_radicado.attributes.tipo_derecho_peticion.nombre : null}\r\n                    {clasificacion_radicado.attributes.expediente.id === 4 ? clasificacion_radicado.attributes.fecha_termino : null}\r\n                    {clasificacion_radicado.attributes.expediente.id === 4 ? \" (\" + clasificacion_radicado.attributes.hora_termino + \") horas\" : null}\r\n                    <br />{clasificacion_radicado.attributes.observaciones}\r\n                </td>\r\n                <td>PENDIENTE</td>\r\n                <td>{clasificacion_radicado.attributes.nombre_completo}</td>\r\n                <td>{clasificacion_radicado.attributes.created_at}</td>\r\n                <td>Asignado</td>\r\n                <td>Ver Normatividad</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const cargarClasificaciones = (page, perPage, estado) => {\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": \"1\",\r\n                    \"id_tipo_expediente\": \"1\",\r\n                    \"estado\": estado,\r\n                    'per_page': perPage,\r\n                    'current_page': page\r\n                }\r\n            }\r\n        }\r\n        console.log(JSON.stringify(data));\r\n\r\n        if (hasAccess('CR_ClasificacionRadicado', 'Consultar')) {\r\n            ClasificacionRadicadoApi.getAllClasificacionRadicadoByIdProDisciplinario(data, procesoDisciplinarioId).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setClasificacionRadicadoLista(datos)\r\n                        setRespuestaClasificacionRadicado(true)\r\n                        setClasificacionRadicadoListaTotal(datos)\r\n                        setRespuestaClasificacionRadicadoTotal(true)\r\n\r\n                        if (datos.data.length > 0) {\r\n                            from.idTipoExpediente = datos.data[0][\"attributes\"][\"id_tipo_expediente\"];\r\n                        }\r\n                        window.showSpinner(false);\r\n                    }\r\n                    else {\r\n                        setErrorApi(datos.error.toString())\r\n                        window.showSpinner(false);\r\n                        window.showModal()\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            window.showSpinner(false)\r\n        }\r\n    }\r\n\r\n    const handlePageChange = page => {\r\n        window.showSpinner(true);\r\n        setPageActual(page);\r\n        cargarClasificaciones(page, perPage, '1');\r\n    }\r\n\r\n    const handlePerRowsChange = async (newPerPage, page) => {\r\n        window.showSpinner(true);\r\n        setPerPage(newPerPage);\r\n        setPageActual(page);\r\n        cargarClasificaciones(page, newPerPage, '1');\r\n\r\n    }\r\n\r\n    const handleCallback = (childData) => {\r\n        try {\r\n            window.showSpinner(true);\r\n            setEstadoLista(childData == '0' ? \"Inactivos\" : \"Activos\")\r\n            cargarClasificaciones(1, 10, childData);\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////\r\n    /////////////////// PARA LA BÃšSQUEDA //////////////////////\r\n    ///////////////////////////////////////////////////////////\r\n\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <Formik>\r\n                <Form>\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"block block-rounded block-bordered\">\r\n                            <div className=\"block-content\">\r\n                                <nav aria-label=\"breadcrumb\">\r\n                                    <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                        <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                        <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                        <li class=\"breadcrumb-item\"> <small>Clasificacion Radicado Lista</small></li>\r\n                                    </ol>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"block block-themed\">\r\n                        <div className=\"block-header\">\r\n                            <h3 className=\"block-title\">SINPROC No {radicado} :: <strong>Consultar lista de ClasificaciÃ³n del radicado {getEstadoLista}</strong></h3>\r\n                        </div>\r\n\r\n                        <div className=\"block-content\">\r\n                            <>\r\n\r\n\r\n                                <div className='row'>\r\n\r\n                                    <div className='col-md-3'>\r\n                                        <div className=\"form-group \">\r\n                                            <label htmlFor='search'>Buscar: </label>\r\n                                            <Field type=\"text\" id=\"search\" name=\"search\" onChange={handleSearch} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} className=\"form-control border border-success\" placeholder=\"Buscar\" />\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <ListaBotones getRoutes={getRoutes} from={from} parentCallback={handleCallback} id=\"botonesNavegacion\" name=\"botonesNavegacion\" />\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                                {\r\n                                    (hasAccess('CR_ClasificacionRadicado', 'Consultar')) ? (\r\n\r\n                                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                            columns={columns}\r\n                                            data={clasificacionRadicadoLista.data}\r\n                                            perPage={perPage}\r\n                                            page={pageActual}\r\n                                            pagination\r\n                                            noDataComponent=\"Sin datos\"\r\n                                            paginationServer\r\n                                            paginationTotalRows={clasificacionRadicadoLista.meta ? clasificacionRadicadoLista.meta.total : 1}\r\n                                            onChangePage={handlePageChange}\r\n                                            onChangeRowsPerPage={handlePerRowsChange}\r\n                                            defaultSortFieldId=\"Nombre\"\r\n                                            striped\r\n                                            icon\r\n                                            paginationComponentOptions={{ rowsPerPageText: 'Filas por pÃ¡gina' }}\r\n                                            defaultSortAsc={false}\r\n                                        />\r\n                                    ) : null\r\n                                }\r\n                            </>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\nexport default ClasificacionRadicadoLista;\r\n"]},"metadata":{},"sourceType":"module"}