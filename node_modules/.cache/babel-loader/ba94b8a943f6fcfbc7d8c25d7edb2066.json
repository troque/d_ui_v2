{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Actuaciones\\\\AgregarUsuarioParaFirmaMecanica.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { Link } from \"react-router-dom\";\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { useLocation } from 'react-router-dom';\nimport { getUser } from '../../../components/Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AgregarUsuarioParaFirmaMecanica() {\n  _s();\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getListaUsuarios, setListaUsuarios] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getUsuarioSeleccionado, setUsuarioSeleccionado] = useState();\n  const [getTipoFirmaSeleccionada, setTipoFirmaSeleccionada] = useState();\n  const [getTipoFirmas, setTipoFirmas] = useState({\n    data: {}\n  });\n  const location = useLocation();\n  const {\n    from,\n    selected_id_etapa,\n    id,\n    nombre,\n    estadoActualActuacion,\n    titulo,\n    valor,\n    solicitante,\n    tipoActuacion\n  } = location.state;\n  const [getNombreProceso, setNombreProceso] = useState('');\n  const [getRoutes, setRoutes] = useState({\n    ver_detalle: \"/ActuacionesVer/\" + from.procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/1\"\n  });\n  const mensajeTituloPantalla = \"El usuario agregado recibirá una notificación por correo para que pueda revisar y firmar el documento\";\n  useEffect(() => {\n    // Metodo principal\n    async function fetchData() {\n      // Se carga el nombre del proceso\n      nombreProceso();\n    }\n\n    // Metodo principal\n    fetchData();\n  }, []);\n  const nombreProceso = () => {\n    // Se quita el cargando\n    window.showSpinner(true);\n\n    // Se inicializa la API\n    GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setea los datos\n        setNombreProceso(datos.data.attributes.nombre);\n\n        // Se llama el metodo\n        cargarUsuariosDependencia();\n      }\n    });\n  };\n  const cargarUsuariosDependencia = () => {\n    // Se captura el id de la dependencia del usuario\n    const iduserdependencia = getUser().id_dependencia;\n\n    // Se consume la API\n    GenericApi.getByIdGeneric(\"usuario/get-todos-usuarios-dependencia\", iduserdependencia).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setea la lista de usuarios\n        setListaUsuarios(datos);\n      } else {\n        // Se setea el modal\n        setModalState({\n          title: getNombreProceso.toUpperCase() + \" :: AGREGAR USUARIOS FIRMA MECANICA\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/Transacciones',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n\n      // Se carga el metodo de los tipos de firma\n      allFirmas();\n    });\n  };\n\n  // Metodo encargado de traer la lista de tipos de firmas\n  const allFirmas = () => {\n    // Se inicializa la API\n    GenericApi.getGeneric('mas-tipo-firma').then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se quita el cargando\n      window.showSpinner(false);\n\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setea la lista a la constante\n        setTipoFirmas(datos);\n      }\n    });\n  };\n\n  // Metodo encargado de enviar los valores al backend\n  const enviarDatos = valores => {\n    // Se usa el cargando\n    window.showSpinner(true);\n\n    // Se inicializa el array con la informacion\n    let data = {\n      \"data\": {\n        \"type\": \"Agregar Usuario\",\n        \"attributes\": {\n          \"id_actuacion\": id,\n          \"id_user\": getUsuarioSeleccionado,\n          \"tipo_firma\": getTipoFirmaSeleccionada,\n          \"uuid_proceso_disciplinario\": from.procesoDisciplinarioId\n        }\n      }\n    };\n\n    // Se inicializa la variable del titulo y mensaje del modal\n    const tituloModal = getNombreProceso + \" :: Agregar usuario para firma\";\n    const mensajeModal = global.Constants.MENSAJES_MODAL.EXITOSO;\n\n    // Se inicializa la API con su data\n    GenericApi.addGeneric(\"actuaciones/agregar-usuario-para-firma-mecanica\", data).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se quita el cargando\n      window.showSpinner(false);\n\n      // Se valida que no haya error\n      if (!datos.error && datos.data) {\n        // Se muestra el show modal en caso de exito\n        setModalState({\n          title: tituloModal.toUpperCase(),\n          message: global.Constants.MENSAJES_MODAL.EXITOSO,\n          show: true,\n          redirect: \"/ActuacionesVer/\" + id + \"/\" + selected_id_etapa + \"/1\",\n          from: {\n            from: from,\n            selected_id_etapa: selected_id_etapa,\n            id: id,\n            nombre: nombre,\n            estadoActualActuacion: estadoActualActuacion,\n            tipoActuacion: tipoActuacion\n          },\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        // Se muestra el show modal en caso de error\n        setModalState({\n          title: tituloModal.toUpperCase(),\n          message: 'REGISTRO FALLIDO: ' + datos,\n          show: true,\n          redirect: \"/ActuacionesVer/\" + id + \"/\" + selected_id_etapa + \"/1\",\n          from: {\n            from: from,\n            selected_id_etapa: selected_id_etapa,\n            id: id,\n            nombre: nombre,\n            estadoActualActuacion: estadoActualActuacion,\n            tipoActuacion: tipoActuacion\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  // Metodo encargado de asignar el valor del usuario seleccionado\n  const selectChangelistarUsuarios = e => {\n    // Se setea el valor enviado por parametros\n    setUsuarioSeleccionado(e.target.value);\n  };\n\n  // Metodo encargado de asignar el valor del tipo de firma seleccionada\n  const selectChangeTipoFirma = e => {\n    // Se setea el valor enviado por parametros\n    setTipoFirmaSeleccionada(e.target.value);\n  };\n\n  // Metodo encargado de listar los usuarios\n  const selectUsuario = () => {\n    // Se retorna\n    return (\n      // Se recorre el array de firmas\n      getListaUsuarios.data.map((u, i) => {\n        // Se valida que el estado este activo\n        if (u.attributes.estado == 1) {\n          // Se retorna el valor\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u.id,\n            children: u.attributes.nombre + \" \" + u.attributes.apellido + \" (\" + u.attributes.name + \")\"\n          }, u.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this);\n        }\n      })\n    );\n  };\n\n  // Metodo encargado de listar los tipos de firma\n  const selectTipoFirmas = () => {\n    // Se retorna\n    return (\n      // Se recorre el array de firmas\n      getTipoFirmas.data.map((firma, i) => {\n        // Se valida que el estado este activo\n        if (firma.attributes.estado == 1) {\n          // Se retorna el valor\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: firma.id,\n            children: firma.attributes.nombre\n          }, firma.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this);\n        }\n      })\n    );\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {},\n      enableReinitialize: true,\n      validate: valores => {},\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        enviarDatos(valores);\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w2d_block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"breadcrumb\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"breadcrumb breadcrumb-alt push\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/MisPendientes`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Mis Pendientes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 138\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/RamasProceso/`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Ramas del proceso\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 138\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/ActuacionesLista/`,\n                    state: {\n                      from: from,\n                      selected_id_etapa: selected_id_etapa\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Actuaciones\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 203\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: getRoutes.ver_detalle,\n                    state: {\n                      from: from,\n                      selected_id_etapa: selected_id_etapa,\n                      id: id,\n                      nombre: nombre,\n                      estadoActualActuacion: estadoActualActuacion\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Actuaci\\xF3n \", nombre]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 274\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [tipoActuacion == 0 ? \"Actuaciones\" : tipoActuacion == 1 ? 'Impedimentos' : 'Comisorio', \" Aprobar/Rechazar\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-themed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: [getNombreProceso.toUpperCase(), \" :: \", tipoActuacion == 0 ? \"ACTUACIÓN\" : tipoActuacion == 1 ? 'IMPEDIMENTO' : 'COMISORIO', \" :: \", titulo.toUpperCase(), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"alert alert-warning\",\n                    role: \"alert\",\n                    children: mensajeTituloPantalla.toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"listarUsuarios\",\n                      children: [\"LISTA DE USUARIOS \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 95\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      as: \"select\",\n                      className: \"form-control\",\n                      id: \"listarUsuarios\",\n                      name: \"listarUsuarios\",\n                      value: getUsuarioSeleccionado,\n                      onChange: selectChangelistarUsuarios,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"SELECCIONA\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 49\n                      }, this), getListaUsuarios.data.length > 0 ? selectUsuario() : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"listarUsuarios\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.listarUsuarios\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 265,\n                        columnNumber: 99\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"listarTipoFirma\",\n                      children: [\"TIPO FIRMA \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 270,\n                        columnNumber: 89\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      as: \"select\",\n                      className: \"form-control\",\n                      id: \"listarTipoFirma\",\n                      name: \"listarTipoFirma\",\n                      value: getTipoFirmaSeleccionada,\n                      onChange: selectChangeTipoFirma,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"SELECCIONA\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 49\n                      }, this), getTipoFirmas.data.length >= 1 ? selectTipoFirmas() : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"listarTipoFirma\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.listarTipoFirma\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 275,\n                        columnNumber: 100\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-rounded btn-primary\",\n                  children: \"ACEPTAR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: getRoutes.ver_detalle,\n                  state: {\n                    from: from,\n                    selected_id_etapa: selected_id_etapa,\n                    id: id,\n                    nombre: nombre,\n                    estadoActualActuacion: estadoActualActuacion,\n                    tipoActuacion: tipoActuacion\n                  },\n                  className: \"font-size-h5 font-w600\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-rounded btn-outline-primary\",\n                    children: \"CANCELAR\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(AgregarUsuarioParaFirmaMecanica, \"G7BmdLstjt2GUmSDN3oozNJ4d5k=\", false, function () {\n  return [useLocation];\n});\n_c = AgregarUsuarioParaFirmaMecanica;\nexport default AgregarUsuarioParaFirmaMecanica;\nvar _c;\n$RefreshReg$(_c, \"AgregarUsuarioParaFirmaMecanica\");","map":{"version":3,"names":["React","useEffect","useState","Spinner","ModalGen","ErrorMessage","Field","Form","Formik","Link","GenericApi","useLocation","getUser","AgregarUsuarioParaFirmaMecanica","getModalState","setModalState","title","message","show","getListaUsuarios","setListaUsuarios","data","links","meta","getUsuarioSeleccionado","setUsuarioSeleccionado","getTipoFirmaSeleccionada","setTipoFirmaSeleccionada","getTipoFirmas","setTipoFirmas","location","from","selected_id_etapa","id","nombre","estadoActualActuacion","titulo","valor","solicitante","tipoActuacion","state","getNombreProceso","setNombreProceso","getRoutes","setRoutes","ver_detalle","procesoDisciplinarioId","mensajeTituloPantalla","fetchData","nombreProceso","window","showSpinner","getByIdGeneric","then","datos","error","attributes","cargarUsuariosDependencia","iduserdependencia","id_dependencia","toUpperCase","toString","redirect","alert","global","Constants","TIPO_ALERTA","ERROR","allFirmas","getGeneric","enviarDatos","valores","tituloModal","mensajeModal","MENSAJES_MODAL","EXITOSO","addGeneric","EXITO","selectChangelistarUsuarios","e","target","value","selectChangeTipoFirma","selectUsuario","map","u","i","estado","apellido","name","selectTipoFirmas","firma","resetForm","errors","length","listarUsuarios","listarTipoFirma"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Actuaciones/AgregarUsuarioParaFirmaMecanica.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Link } from \"react-router-dom\";\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getUser } from '../../../components/Utils/Common';\r\n\r\nfunction AgregarUsuarioParaFirmaMecanica() {\r\n\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaUsuarios, setListaUsuarios] = useState({ data: [], links: [], meta: [] });\r\n    const [getUsuarioSeleccionado, setUsuarioSeleccionado] = useState();\r\n    const [getTipoFirmaSeleccionada, setTipoFirmaSeleccionada] = useState();\r\n    const [getTipoFirmas, setTipoFirmas] = useState({ data: {} });\r\n    const location = useLocation()\r\n    const { from, selected_id_etapa, id, nombre, estadoActualActuacion, titulo, valor, solicitante, tipoActuacion } = location.state;\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    const [getRoutes, setRoutes] = useState({\r\n        ver_detalle: \"/ActuacionesVer/\" + from.procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/1\"\r\n    });\r\n\r\n    const mensajeTituloPantalla = \"El usuario agregado recibirá una notificación por correo para que pueda revisar y firmar el documento\";\r\n\r\n    useEffect(() => {\r\n\r\n        // Metodo principal\r\n        async function fetchData() {\r\n\r\n            // Se carga el nombre del proceso\r\n            nombreProceso();\r\n        }\r\n\r\n        // Metodo principal\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const nombreProceso = () => {\r\n\r\n        // Se quita el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea los datos\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n\r\n                    // Se llama el metodo\r\n                    cargarUsuariosDependencia();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarUsuariosDependencia = () => {\r\n\r\n        // Se captura el id de la dependencia del usuario\r\n        const iduserdependencia = getUser().id_dependencia;\r\n\r\n        // Se consume la API\r\n        GenericApi.getByIdGeneric(\"usuario/get-todos-usuarios-dependencia\", iduserdependencia).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea la lista de usuarios\r\n                    setListaUsuarios(datos);\r\n                } else {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: getNombreProceso.toUpperCase() + \" :: AGREGAR USUARIOS FIRMA MECANICA\", message: datos.error.toString(), show: true, redirect: '/Transacciones', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n\r\n                // Se carga el metodo de los tipos de firma\r\n                allFirmas();\r\n            }\r\n        );\r\n    }\r\n\r\n    // Metodo encargado de traer la lista de tipos de firmas\r\n    const allFirmas = () => {\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('mas-tipo-firma').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea la lista a la constante\r\n                    setTipoFirmas(datos);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de enviar los valores al backend\r\n    const enviarDatos = (valores) => {\r\n\r\n        // Se usa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa el array con la informacion\r\n        let data = {\r\n            \"data\": {\r\n                \"type\": \"Agregar Usuario\",\r\n                \"attributes\": {\r\n                    \"id_actuacion\": id,\r\n                    \"id_user\": getUsuarioSeleccionado,\r\n                    \"tipo_firma\": getTipoFirmaSeleccionada,\r\n                    \"uuid_proceso_disciplinario\": from.procesoDisciplinarioId\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se inicializa la variable del titulo y mensaje del modal\r\n        const tituloModal = getNombreProceso + \" :: Agregar usuario para firma\";\r\n        const mensajeModal = global.Constants.MENSAJES_MODAL.EXITOSO;\r\n\r\n        // Se inicializa la API con su data\r\n        GenericApi.addGeneric(\"actuaciones/agregar-usuario-para-firma-mecanica\", data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error && datos.data) {\r\n\r\n                    // Se muestra el show modal en caso de exito\r\n                    setModalState({ title: tituloModal.toUpperCase(), message: global.Constants.MENSAJES_MODAL.EXITOSO, show: true, redirect: \"/ActuacionesVer/\" + id + \"/\" + selected_id_etapa + \"/1\", from: { from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion, tipoActuacion: tipoActuacion }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n\r\n                    // Se muestra el show modal en caso de error\r\n                    setModalState({ title: tituloModal.toUpperCase(), message: 'REGISTRO FALLIDO: ' + datos, show: true, redirect: \"/ActuacionesVer/\" + id + \"/\" + selected_id_etapa + \"/1\", from: { from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion, tipoActuacion: tipoActuacion }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // Metodo encargado de asignar el valor del usuario seleccionado\r\n    const selectChangelistarUsuarios = (e) => {\r\n\r\n        // Se setea el valor enviado por parametros\r\n        setUsuarioSeleccionado(e.target.value);\r\n    }\r\n\r\n    // Metodo encargado de asignar el valor del tipo de firma seleccionada\r\n    const selectChangeTipoFirma = (e) => {\r\n\r\n        // Se setea el valor enviado por parametros\r\n        setTipoFirmaSeleccionada(e.target.value);\r\n    }\r\n\r\n    // Metodo encargado de listar los usuarios\r\n    const selectUsuario = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array de firmas\r\n            getListaUsuarios.data.map((u, i) => {\r\n\r\n                // Se valida que el estado este activo\r\n                if (u.attributes.estado == 1) {\r\n\r\n                    // Se retorna el valor\r\n                    return (\r\n                        <option key={u.id} value={u.id}>{u.attributes.nombre + \" \" + u.attributes.apellido + \" (\" + u.attributes.name + \")\"}</option>\r\n                    );\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    // Metodo encargado de listar los tipos de firma\r\n    const selectTipoFirmas = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array de firmas\r\n            getTipoFirmas.data.map((firma, i) => {\r\n\r\n                // Se valida que el estado este activo\r\n                if (firma.attributes.estado == 1) {\r\n\r\n                    // Se retorna el valor\r\n                    return (\r\n                        <option key={firma.id} value={firma.id}>{firma.attributes.nombre}</option>\r\n                    );\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`}><small>Ramas del proceso</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}><small>Actuaciones</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={getRoutes.ver_detalle} state={{ from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion }}><small>Actuación {nombre}</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <small>{tipoActuacion == 0 ? \"Actuaciones\" : (tipoActuacion == 1 ? 'Impedimentos' : 'Comisorio')} Aprobar/Rechazar</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">{getNombreProceso.toUpperCase()} :: {tipoActuacion == 0 ? \"ACTUACIÓN\" : (tipoActuacion == 1 ? 'IMPEDIMENTO' : 'COMISORIO')} :: {titulo.toUpperCase()} </h3>\r\n                            </div>\r\n                            <div className=\"block-content\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div class=\"alert alert-warning\" role=\"alert\">\r\n                                            {mensajeTituloPantalla.toUpperCase()}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"listarUsuarios\">LISTA DE USUARIOS <span className=\"text-danger\">*</span></label>\r\n                                            <Field as=\"select\" className=\"form-control\" id=\"listarUsuarios\" name=\"listarUsuarios\" value={getUsuarioSeleccionado} onChange={selectChangelistarUsuarios}>\r\n                                                <option value=\"\">SELECCIONA</option>\r\n                                                {getListaUsuarios.data.length > 0 ? selectUsuario() : null}\r\n                                            </Field>\r\n                                            <ErrorMessage name=\"listarUsuarios\" component={() => (<span className=\"text-danger\">{errors.listarUsuarios}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"listarTipoFirma\">TIPO FIRMA <span className=\"text-danger\">*</span></label>\r\n                                            <Field as=\"select\" className=\"form-control\" id=\"listarTipoFirma\" name=\"listarTipoFirma\" value={getTipoFirmaSeleccionada} onChange={selectChangeTipoFirma}>\r\n                                                <option value=\"\">SELECCIONA</option>\r\n                                                {getTipoFirmas.data.length >= 1 ? selectTipoFirmas() : null}\r\n                                            </Field>\r\n                                            <ErrorMessage name=\"listarTipoFirma\" component={() => (<span className=\"text-danger\">{errors.listarTipoFirma}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">ACEPTAR</button>\r\n                                    <Link to={getRoutes.ver_detalle} state={{ from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion, tipoActuacion: tipoActuacion }} className=\"font-size-h5 font-w600\" >\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\" >CANCELAR</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AgregarUsuarioParaFirmaMecanica;"],"mappings":"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"},"metadata":{},"sourceType":"module"}