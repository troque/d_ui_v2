{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Actuaciones\\\\AgregarUsuarioParaFirmaMecanica.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { Link } from \"react-router-dom\";\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { useLocation } from 'react-router-dom';\nimport { getUser } from '../../../components/Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AgregarUsuarioParaFirmaMecanica() {\n  _s();\n\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getListaUsuarios, setListaUsuarios] = useState({\n    data: {}\n  });\n  const [getUsuarioSeleccionado, setUsuarioSeleccionado] = useState();\n  const [getTipoFirmaSeleccionada, setTipoFirmaSeleccionada] = useState();\n  const [getTipoFirmas, setTipoFirmas] = useState({\n    data: {}\n  });\n  const location = useLocation();\n  const {\n    from,\n    selected_id_etapa,\n    id,\n    nombre,\n    estadoActualActuacion,\n    titulo,\n    valor,\n    solicitante,\n    tipoActuacion\n  } = location.state;\n  const [getNombreProceso, setNombreProceso] = useState('');\n  const [getRoutes, setRoutes] = useState({\n    ver_detalle: \"/ActuacionesVer/\" + from.procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/1\"\n  });\n  useEffect(() => {\n    async function fetchData() {\n      nombreProceso();\n    }\n\n    fetchData();\n  }, []);\n\n  const nombreProceso = () => {\n    GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setNombreProceso(datos.data.attributes.nombre);\n        allUsers();\n      }\n    });\n  }; // Metodo encargado de traer todos los usuarios\n\n\n  const allUsers = () => {\n    // Se usa el cargando\n    window.showSpinner(true); // Se inicializa la API\n\n    GenericApi.getGeneric('usuario').then( // Se inicializa la variable de respuesta\n    datos => {\n      // Se quita el cargando\n      window.showSpinner(false); // Se valida que no haya error\n\n      if (!datos.error) {\n        // Se setea la lista a la constante\n        setListaUsuarios(datos);\n      }\n    }); // Se carga el metodo de los tipos de firma\n\n    allFirmas();\n  }; // Metodo encargado de traer la lista de tipos de firmas\n\n\n  const allFirmas = () => {\n    // Se usa el cargando\n    // window.showSpinner(true);\n    // Se inicializa la API\n    GenericApi.getGeneric('mas-tipo-firma').then( // Se inicializa la variable de respuesta\n    datos => {\n      // Se quita el cargando\n      // window.showSpinner(false);\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setea la lista a la constante\n        setTipoFirmas(datos);\n      }\n    });\n  }; // Metodo encargado de enviar los valores al backend\n\n\n  const enviarDatos = valores => {\n    // Se usa el cargando\n    window.showSpinner(true); // Se inicializa el array con la informacion\n\n    let data = {\n      \"data\": {\n        \"type\": \"Agregar Usuario\",\n        \"attributes\": {\n          \"id_actuacion\": id,\n          \"id_user\": getUsuarioSeleccionado,\n          \"tipo_firma\": getTipoFirmaSeleccionada,\n          \"uuid_proceso_disciplinario\": from.procesoDisciplinarioId\n        }\n      }\n    }; // Se inicializa la API con su data\n\n    GenericApi.addGeneric(\"actuaciones/agregar-usuario-para-firma-mecanica\", data).then( // Se inicializa la variable de respuesta\n    datos => {\n      // Se quita el cargando\n      window.showSpinner(false); // Se valida que no haya error\n\n      if (!datos.error && datos.data) {\n        // Se muestra el show modal en caso de exito\n        setModalState({\n          title: \"SINPROC No \" + from.radicado + \" :: Agregar usuario para firma\",\n          message: 'Registro Exitoso',\n          show: true,\n          redirect: \"/ActuacionesVer/\" + id + \"/\" + selected_id_etapa + \"/1\",\n          from: {\n            from: from,\n            selected_id_etapa: selected_id_etapa,\n            id: id,\n            nombre: nombre,\n            estadoActualActuacion: estadoActualActuacion,\n            tipoActuacion: tipoActuacion\n          },\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        // Se muestra el show modal en caso de error\n        setModalState({\n          title: \"SINPROC No \" + from.radicado + \" :: Agregar usuario para firma\",\n          message: 'Registro Fallido: ' + datos,\n          show: true,\n          redirect: \"/ActuacionesVer/\" + id + \"/\" + selected_id_etapa + \"/1\",\n          from: {\n            from: from,\n            selected_id_etapa: selected_id_etapa,\n            id: id,\n            nombre: nombre,\n            estadoActualActuacion: estadoActualActuacion,\n            tipoActuacion: tipoActuacion\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  }; // Metodo encargado de asignar el valor del usuario seleccionado\n\n\n  const selectChangelistarUsuarios = e => {\n    // Se setea el valor enviado por parametros\n    setUsuarioSeleccionado(e.target.value);\n  }; // Metodo encargado de asignar el valor del tipo de firma seleccionada\n\n\n  const selectChangeTipoFirma = e => {\n    // Se setea el valor enviado por parametros\n    setTipoFirmaSeleccionada(e.target.value);\n  }; // Metodo encargado de listar los usuarios\n\n\n  const selectUsuario = () => {\n    // Se retorna\n    return (// Se recorre el array de firmas\n      getListaUsuarios.data.map((user, i) => {\n        // Se valida que el estado este activo\n        if (user.attributes.estado == 1) {\n          // Se retorna el valor\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user.id,\n            children: user.attributes.nombre + \" \" + user.attributes.apellido + \" (\" + user.attributes.name + \")\"\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this);\n        }\n      })\n    );\n  }; // Metodo encargado de listar los tipos de firma\n\n\n  const selectTipoFirmas = () => {\n    // Se retorna\n    return (// Se recorre el array de firmas\n      getTipoFirmas.data.map((firma, i) => {\n        // Se valida que el estado este activo\n        if (firma.attributes.estado == 1) {\n          // Se retorna el valor\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: firma.id,\n            children: firma.attributes.nombre\n          }, firma.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this);\n        }\n      })\n    );\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {},\n      enableReinitialize: true,\n      validate: valores => {},\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        enviarDatos(valores);\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w2d_block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"breadcrumb\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"breadcrumb breadcrumb-alt push\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/MisPendientes`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Mis Pendientes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 138\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/RamasProceso/`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Ramas del proceso\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 138\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/ActuacionesLista/`,\n                    state: {\n                      from: from,\n                      selected_id_etapa: selected_id_etapa\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Actuaciones\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 203\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: getRoutes.ver_detalle,\n                    state: {\n                      from: from,\n                      selected_id_etapa: selected_id_etapa,\n                      id: id,\n                      nombre: nombre,\n                      estadoActualActuacion: estadoActualActuacion\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Actuaci\\xF3n \", nombre]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 274\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [tipoActuacion == 0 ? \"Actuaciones\" : tipoActuacion == 1 ? 'Impedimentos' : 'Comisorio', \" Aprobar/Rechazar\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-themed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: [tipoActuacion == 0 ? \"Actuación\" : tipoActuacion == 1 ? 'Impedimento' : 'Comisorio', \" \", nombre, \" :: \", titulo, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"listarUsuarios\",\n                      children: [\"Lista de usuarios \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 95\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      as: \"select\",\n                      className: \"form-control\",\n                      id: \"listarUsuarios\",\n                      name: \"listarUsuarios\",\n                      value: getUsuarioSeleccionado,\n                      onChange: selectChangelistarUsuarios,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Selecciona\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 49\n                      }, this), getListaUsuarios.data.length >= 1 ? selectUsuario() : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"listarUsuarios\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.listarUsuarios\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 99\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"listarTipoFirma\",\n                      children: [\"Tipo firma \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 89\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      as: \"select\",\n                      className: \"form-control\",\n                      id: \"listarTipoFirma\",\n                      name: \"listarTipoFirma\",\n                      value: getTipoFirmaSeleccionada,\n                      onChange: selectChangeTipoFirma,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Selecciona\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 250,\n                        columnNumber: 49\n                      }, this), getTipoFirmas.data.length >= 1 ? selectTipoFirmas() : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"listarTipoFirma\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.listarTipoFirma\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 100\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\\r \",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"listarActuaciones\",\n                      children: \"* El usuario agregado recibir\\xE1 una notificaci\\xF3n por correo para que pueda revisar y firmar el documento\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-rounded btn-primary\",\n                  children: \"Aceptar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: getRoutes.ver_detalle,\n                  state: {\n                    from: from,\n                    selected_id_etapa: selected_id_etapa,\n                    id: id,\n                    nombre: nombre,\n                    estadoActualActuacion: estadoActualActuacion,\n                    tipoActuacion: tipoActuacion\n                  },\n                  className: \"font-size-h5 font-w600\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-rounded btn-outline-primary\",\n                    children: \"Cancelar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AgregarUsuarioParaFirmaMecanica, \"v+DHFvPYHbN9wB4t1hEXib+at14=\", false, function () {\n  return [useLocation];\n});\n\n_c = AgregarUsuarioParaFirmaMecanica;\nexport default AgregarUsuarioParaFirmaMecanica;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgregarUsuarioParaFirmaMecanica\");","map":{"version":3,"names":["React","useEffect","useState","Spinner","ModalGen","ErrorMessage","Field","Form","Formik","Link","GenericApi","useLocation","getUser","AgregarUsuarioParaFirmaMecanica","getModalState","setModalState","title","message","show","getListaUsuarios","setListaUsuarios","data","getUsuarioSeleccionado","setUsuarioSeleccionado","getTipoFirmaSeleccionada","setTipoFirmaSeleccionada","getTipoFirmas","setTipoFirmas","location","from","selected_id_etapa","id","nombre","estadoActualActuacion","titulo","valor","solicitante","tipoActuacion","state","getNombreProceso","setNombreProceso","getRoutes","setRoutes","ver_detalle","procesoDisciplinarioId","fetchData","nombreProceso","getByIdGeneric","then","datos","error","attributes","allUsers","window","showSpinner","getGeneric","allFirmas","enviarDatos","valores","addGeneric","radicado","redirect","alert","global","Constants","TIPO_ALERTA","EXITO","ERROR","selectChangelistarUsuarios","e","target","value","selectChangeTipoFirma","selectUsuario","map","user","i","estado","apellido","name","selectTipoFirmas","firma","resetForm","errors","length","listarUsuarios","listarTipoFirma"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Actuaciones/AgregarUsuarioParaFirmaMecanica.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Link } from \"react-router-dom\";\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getUser } from '../../../components/Utils/Common';\r\n\r\nfunction AgregarUsuarioParaFirmaMecanica() {\r\n\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaUsuarios, setListaUsuarios] = useState({ data: {} });\r\n    const [getUsuarioSeleccionado, setUsuarioSeleccionado] = useState();\r\n    const [getTipoFirmaSeleccionada, setTipoFirmaSeleccionada] = useState();\r\n    const [getTipoFirmas, setTipoFirmas] = useState({ data: {} });\r\n    const location = useLocation()\r\n    const { from, selected_id_etapa, id, nombre, estadoActualActuacion, titulo, valor, solicitante, tipoActuacion } = location.state;\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    const [getRoutes, setRoutes] = useState({\r\n        ver_detalle: \"/ActuacionesVer/\" + from.procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/1\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            nombreProceso();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const nombreProceso = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\",from.procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                    allUsers();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de traer todos los usuarios\r\n    const allUsers = () => {\r\n\r\n        // Se usa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('usuario').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea la lista a la constante\r\n                    setListaUsuarios(datos);\r\n                }\r\n            }\r\n        )\r\n\r\n        // Se carga el metodo de los tipos de firma\r\n        allFirmas();\r\n    }\r\n\r\n    // Metodo encargado de traer la lista de tipos de firmas\r\n    const allFirmas = () => {\r\n\r\n        // Se usa el cargando\r\n        // window.showSpinner(true);\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('mas-tipo-firma').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se quita el cargando\r\n                // window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea la lista a la constante\r\n                    setTipoFirmas(datos);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de enviar los valores al backend\r\n    const enviarDatos = (valores) => {\r\n\r\n        // Se usa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa el array con la informacion\r\n        let data = {\r\n            \"data\": {\r\n                \"type\": \"Agregar Usuario\",\r\n                \"attributes\": {\r\n                    \"id_actuacion\": id,\r\n                    \"id_user\": getUsuarioSeleccionado,\r\n                    \"tipo_firma\": getTipoFirmaSeleccionada,\r\n                    \"uuid_proceso_disciplinario\": from.procesoDisciplinarioId\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se inicializa la API con su data\r\n        GenericApi.addGeneric(\"actuaciones/agregar-usuario-para-firma-mecanica\", data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error && datos.data) {\r\n\r\n                    // Se muestra el show modal en caso de exito\r\n                    setModalState({ title: \"SINPROC No \" + from.radicado + \" :: Agregar usuario para firma\", message: 'Registro Exitoso', show: true, redirect: \"/ActuacionesVer/\" + id + \"/\" + selected_id_etapa + \"/1\", from: { from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion, tipoActuacion: tipoActuacion }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n\r\n                    // Se muestra el show modal en caso de error\r\n                    setModalState({ title: \"SINPROC No \" + from.radicado + \" :: Agregar usuario para firma\", message: 'Registro Fallido: ' + datos, show: true, redirect: \"/ActuacionesVer/\" + id + \"/\" + selected_id_etapa + \"/1\", from: { from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion, tipoActuacion: tipoActuacion }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // Metodo encargado de asignar el valor del usuario seleccionado\r\n    const selectChangelistarUsuarios = (e) => {\r\n\r\n        // Se setea el valor enviado por parametros\r\n        setUsuarioSeleccionado(e.target.value);\r\n    }\r\n\r\n    // Metodo encargado de asignar el valor del tipo de firma seleccionada\r\n    const selectChangeTipoFirma = (e) => {\r\n\r\n        // Se setea el valor enviado por parametros\r\n        setTipoFirmaSeleccionada(e.target.value);\r\n    }\r\n\r\n    // Metodo encargado de listar los usuarios\r\n    const selectUsuario = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array de firmas\r\n            getListaUsuarios.data.map((user, i) => {\r\n\r\n                // Se valida que el estado este activo\r\n                if (user.attributes.estado == 1) {\r\n\r\n                    // Se retorna el valor\r\n                    return (\r\n                        <option key={user.id} value={user.id}>{user.attributes.nombre + \" \" + user.attributes.apellido + \" (\" + user.attributes.name + \")\"}</option>\r\n                    );\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    // Metodo encargado de listar los tipos de firma\r\n    const selectTipoFirmas = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array de firmas\r\n            getTipoFirmas.data.map((firma, i) => {\r\n\r\n                // Se valida que el estado este activo\r\n                if (firma.attributes.estado == 1) {\r\n\r\n                    // Se retorna el valor\r\n                    return (\r\n                        <option key={firma.id} value={firma.id}>{firma.attributes.nombre}</option>\r\n                    );\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`}><small>Ramas del proceso</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}><small>Actuaciones</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={getRoutes.ver_detalle} state={{ from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion }}><small>Actuación {nombre}</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <small>{tipoActuacion == 0 ? \"Actuaciones\" : (tipoActuacion == 1 ? 'Impedimentos' : 'Comisorio')} Aprobar/Rechazar</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">{tipoActuacion == 0 ? \"Actuación\" : (tipoActuacion == 1 ? 'Impedimento' : 'Comisorio')} {nombre} :: {titulo} </h3>\r\n                            </div>\r\n                            <div className=\"block-content\">\r\n                                <div className=\"row\">\r\n\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"listarUsuarios\">Lista de usuarios <span className=\"text-danger\">*</span></label>\r\n                                            <Field as=\"select\" className=\"form-control\" id=\"listarUsuarios\" name=\"listarUsuarios\" value={getUsuarioSeleccionado} onChange={selectChangelistarUsuarios}>\r\n                                                <option value=\"\">Selecciona</option>\r\n                                                {getListaUsuarios.data.length >= 1 ? selectUsuario() : null}\r\n                                            </Field>\r\n                                            <ErrorMessage name=\"listarUsuarios\" component={() => (<span className=\"text-danger\">{errors.listarUsuarios}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"listarTipoFirma\">Tipo firma <span className=\"text-danger\">*</span></label>\r\n                                            <Field as=\"select\" className=\"form-control\" id=\"listarTipoFirma\" name=\"listarTipoFirma\" value={getTipoFirmaSeleccionada} onChange={selectChangeTipoFirma}>\r\n                                                <option value=\"\">Selecciona</option>\r\n                                                {getTipoFirmas.data.length >= 1 ? selectTipoFirmas() : null}\r\n                                            </Field>\r\n                                            <ErrorMessage name=\"listarTipoFirma\" component={() => (<span className=\"text-danger\">{errors.listarTipoFirma}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-12\r\n                                    \">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"listarActuaciones\">* El usuario agregado recibirá una notificación por correo para que pueda revisar y firmar el documento</label>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\" >Aceptar</button>\r\n                                    <Link to={getRoutes.ver_detalle} state={{ from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion, tipoActuacion: tipoActuacion }} className=\"font-size-h5 font-w600\" >\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\" >Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default AgregarUsuarioParaFirmaMecanica;"],"mappings":"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"},"metadata":{},"sourceType":"module"}