{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\InformeCierre\\\\InformeCierreDocumentoForm.js\",\n  _s = $RefreshSig$();\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { Navigate, useParams } from \"react-router\";\nimport { Link, useLocation } from 'react-router-dom';\nimport ParametrosMasApi from \"./../../Api/Services/ParametrosMasApi\";\nimport InfoExitoApiTextsCustom from '../../Utils/InfoExitoApiTextsCustom';\nimport Spinner from '../../Utils/Spinner';\nimport { getUser } from '../../../components/Utils/Common';\nimport DocumentoSiriusApi from '../../Api/Services/DocumentoSiriusApi';\nimport GestorRespuestaApi from '../../Api/Services/GestorRespuestaApi';\nimport '../../Utils/Constants';\nimport ModalListaVersionesGestorRespuesta from '../../Utils/Modals/ModalListaVersionesGestorRespuesta';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { set } from 'react-hook-form';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InformeCierreDocumentoForm() {\n  _s();\n  const location = useLocation();\n  const {\n    from,\n    disable\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let vigencia = from.vigencia;\n  let tipoEvaluacion = from.tipoEvaluacion;\n  let tipoEvaluacionNombre = from.tipoEvaluacionNombre;\n  const [getNombreUsuario, setNombreUsuario] = useState(\"\");\n  const [exitoApiTextsCustom, setExitoApiTextsCustom] = useState({\n    titulo: null,\n    cuerpo: null,\n    boton: null\n  });\n  const [inputListArchivos, setInputListArchivos] = useState([{\n    folios: \"\",\n    archivo: {},\n    filebase64: \"\",\n    size: 0,\n    id_mas_formato: null\n  }]);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getFormatosApi, setFormatosApi] = useState();\n  const [getGestorRespuestaApi, setGestorRespuestaApi] = useState();\n  const [getListNombresArchivos, setListNombresArchivos] = useState({\n    attributes: null\n  });\n  const [getPesoTotalArchivos, setPesoTotalArchivos] = useState(0);\n  const [getHabilitarRegistrar, setHabilitarRegistrar] = useState(true);\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getUsuarioEnvioExpediente, setUsuarioEnvioExpediente] = useState();\n  const [getNombreProceso, setNombreProceso] = useState('');\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      setNombreUsuario(getUser().nombre);\n      nombreProceso();\n    }\n    fetchData();\n  }, []);\n  const nombreProceso = () => {\n    GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setNombreProceso(datos.data.attributes.nombre);\n        obtenerNombresDocumentosExistentes();\n      }\n    });\n  };\n  function obtenerNombresDocumentosExistentes() {\n    DocumentoSiriusApi.getNombresDocumentacionSiriusByIdProDisciplinario(procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setListNombresArchivos(datos);\n        obtenerFormatos();\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: Información Cierre\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/RamasProceso/',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  }\n  function obtenerFormatos() {\n    ParametrosMasApi.getFormatos().then(datos => {\n      if (!datos.error) {\n        setFormatosApi(datos.data);\n        obtenerParametros();\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: Información Cierre\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/RamasProceso/',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  }\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n\n  /*Llamadas API*/\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      };\n\n      //buscamos el parametro\n      ParametrosMasApi.getParametroPorNombre(data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          setModalState({\n            title: getNombreProceso + \" :: Información Cierre\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/RamasProceso/',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n        window.showSpinner(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  /*Componentes */\n  const componentForm = () => {\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        descripcion: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        let errores = {};\n        setCountTextArea(valores.descripcion.length);\n        if (valores.descripcion && valores.descripcion.length < getMinimoTextArea) {\n          errores.descripcion = 'Debe ingresar mínimo ' + getMinimoTextArea + ' caracteres';\n        }\n        if (valores.descripcion) {\n          if (containsSpecialChars(valores.descripcion)) errores.descripcion = 'Tiene caracteres inválidos';\n        }\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        handleOnSubmit(valores);\n      },\n      children: _ref2 => {\n        let {\n          errors,\n          values\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: inputListArchivos.map((x, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"box\",\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-9\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"row\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-md-5\",\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              className: \"form-control\",\n                              name: \"folios\",\n                              type: \"number\",\n                              min: \"1\",\n                              placeholder: \"No. de folios\",\n                              value: x.folios,\n                              onChange: e => handleInputChangeFolios(e, i),\n                              required: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 187,\n                              columnNumber: 69\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 186,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-md-5\",\n                            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                              className: \"custom-file-label\",\n                              htmlFor: \"example-file-input-custom\",\n                              \"data-toggle\": \"custom-file-input\",\n                              children: x.archivo.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 191,\n                              columnNumber: 69\n                            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                              className: \"custom-file-input\",\n                              \"data-toggle\": \"custom-file-input\",\n                              type: \"file\",\n                              name: \"archivo\",\n                              onChange: e => handleInputChangeArchivos(e, i),\n                              required: x.filebase64 == \"\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 192,\n                              columnNumber: 69\n                            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                              children: [\"Peso del archivo: \", formatBytes(x.archivo.size)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 193,\n                              columnNumber: 69\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 190,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 49\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-9\",\n              style: {\n                paddingLeft: \"55px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                as: \"textarea\",\n                className: \"form-control\",\n                id: \"descripcion\",\n                name: \"descripcion\",\n                rows: \"4\",\n                placeholder: \"Descripci\\xF3n de los soportes\",\n                required: true,\n                maxLength: getMaximoTextArea,\n                minLength: getMinimoTextArea\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-right\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-primary\",\n                  children: [countTextArea, \" / \", getMaximoTextArea]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"descripcion\",\n                component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: errors.descripcion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 84\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12 text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: \"Registrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/RamasProceso/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  };\n  function primerArchivoPdf(list) {\n    const extensionList = getFileExtension(list[0].archivo.name);\n    if (extensionList != 'pdf') {\n      setModalState({\n        title: getNombreProceso + \" :: Informe Cierre\",\n        message: 'El primer archivo seleccionado debe tener extensión .pdf',\n        show: true,\n        redirect: null,\n        from: {\n          from\n        },\n        alert: global.Constants.TIPO_ALERTA.ERROR\n      });\n      window.showModal(1);\n      setHabilitarRegistrar(false);\n    } else {\n      setHabilitarRegistrar(true);\n    }\n  }\n\n  /*\r\n  * FUNIONES TEMPORALES -- CONSTRUIR COMPONENTE\r\n  */\n  const handleInputChangeFolios = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...inputListArchivos];\n    list[index][name] = value;\n    setInputListArchivos(list);\n  };\n  const handleInputChangeArchivos = (e, index) => {\n    const {\n      name,\n      files\n    } = e.target;\n    if (files.length > 0) {\n      const extension = getFileExtension(files[0].name);\n      const resultado = getFormatosApi.filter(datos => datos.attributes.nombre == extension);\n      if (resultado.length > 0) {\n        const list = [...inputListArchivos];\n        list[index][name] = files[0];\n        primerArchivoPdf(list);\n        if (files[0]) {\n          list[index][name] = files[0];\n        } else {\n          list[index][name] = '';\n          list[index].filebase64 = '';\n          list[index].size = 0;\n          list[index].id_mas_formato = null;\n          setInputListArchivos(list);\n        }\n        //Conversion a Base64\n        Array.from(e.target.files).forEach(archivo => {\n          var reader = new FileReader();\n          reader.readAsDataURL(archivo);\n          reader.onload = function () {\n            var arrayAuxiliar = [];\n            var base64 = reader.result;\n            arrayAuxiliar = base64.split(',');\n            list[index].filebase64 = arrayAuxiliar[1];\n            list[index].id_mas_formato = resultado[0].id;\n            setInputListArchivos(list);\n          };\n        });\n        obtenerPesoTotalArchivos(list);\n        compararNombresArchivos(list);\n      } else {\n        const list = [...inputListArchivos];\n        list[index][name] = files[0];\n        list[index].filebase64 = '';\n        list[index].size = 0;\n        list[index].id_mas_formato = null;\n        setInputListArchivos(list);\n        setModalState({\n          title: getNombreProceso + \" :: Información Cierre\",\n          message: 'El archivo seleccionado no tiene un formato permitido',\n          show: true,\n          redirect: null,\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showModal(1);\n      }\n    } else {\n      const list = [...inputListArchivos];\n      list[index][name] = '';\n      list[index].filebase64 = '';\n      list[index].size = 0;\n      list[index].id_mas_formato = null;\n      setInputListArchivos(list);\n      obtenerPesoTotalArchivos(list);\n      compararNombresArchivos(list);\n    }\n  };\n  function getFileExtension(filename) {\n    return filename.slice((filename.lastIndexOf(\".\") - 1 >>> 0) + 2);\n  }\n  function compararNombresArchivos(list) {\n    if ((getListNombresArchivos === null || getListNombresArchivos === void 0 ? void 0 : getListNombresArchivos.data.length) > 0) {\n      let existe = false;\n      let nombre = \"\";\n      list.forEach((archivo, index) => {\n        let nombre_servidor = getListNombresArchivos.data.find(dato => dato.attributes.nombre_archivo == archivo.archivo.name);\n        if (nombre_servidor) {\n          nombre = nombre_servidor.attributes.nombre_archivo;\n          existe = true;\n          return;\n        }\n      });\n      if (existe) {\n        setModalState({\n          title: getNombreProceso + \" :: Información Cierre\",\n          message: \"El nombre del archivo '\" + nombre + \"', ya es utilizado por otro documento registrado en el sistema, por favor elimine el archivo y vuelva a subirlo con un nombre distinto\",\n          show: true,\n          redirect: null,\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showModal(1);\n      }\n    }\n  }\n  function obtenerPesoTotalArchivos(list) {\n    let peso = 0;\n    list.forEach((archivo, index) => {\n      if (archivo.archivo.size) {\n        peso += archivo.archivo.size;\n      }\n    });\n    if (peso > 15000000) {\n      setModalState({\n        title: getNombreProceso + \" :: Información Cierre\",\n        message: 'El peso/tamaño de los todos los adjuntos superan los 15 Mb pertmitidos para el registro.',\n        show: true,\n        redirect: null,\n        from: {\n          from\n        },\n        alert: global.Constants.TIPO_ALERTA.ERROR\n      });\n      window.showModal(1);\n    }\n    setPesoTotalArchivos(peso);\n  }\n  function formatBytes(bytes) {\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    if (bytes === undefined) return '0 Bytes';\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    //return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    return Math.round(parseFloat((bytes / Math.pow(k, i)).toFixed(dm), 1)) + ' ' + sizes[i];\n  }\n  const handleOnSubmit = valores => {\n    window.showSpinner(true);\n    let band = false;\n\n    // VALIDA QUE NO EXISTA EL NOMBRE REPÉTIDO EN EL SISTEMA\n    let nombre = \"\";\n    let existe = false;\n    if (valores.requiere_documento == 'true') {\n      if (getListNombresArchivos !== null && getListNombresArchivos !== void 0 && getListNombresArchivos.data && (getListNombresArchivos === null || getListNombresArchivos === void 0 ? void 0 : getListNombresArchivos.data.length) > 0) {\n        for (let i = 0; i < inputListArchivos.length; i++) {\n          let nombre_servidor = getListNombresArchivos.data.find(dato => dato.attributes.nombre_archivo == inputListArchivos[i].archivo.name);\n          if (nombre_servidor) {\n            nombre = nombre_servidor.attributes.nombre_archivo;\n            existe = true;\n            band = true;\n          }\n          if (existe) {\n            setModalState({\n              title: getNombreProceso + \" :: Informe Cierre\",\n              message: \"El nombre del archivo '\" + nombre + \"', ya es utilizado por otro documento registrado en el sistema, por favor elimine el archivo y vuelva a subirlo con un nombre distinto\",\n              show: true,\n              redirect: null,\n              from: {\n                from\n              },\n              alert: global.Constants.TIPO_ALERTA.ERROR\n            });\n            i = inputListArchivos.length + 1;\n          }\n        }\n      }\n    }\n\n    // VALIDA QUE NO SE PUEDAN SUBIR FORMATOS NO PERMITIDOS\n    if (valores.requiere_documento == 'true') {\n      for (let i = 0; i < inputListArchivos.length; i++) {\n        const extension = getFileExtension(inputListArchivos[i].archivo.name);\n        const resultado = getFormatosApi.filter(datos => datos.attributes.nombre == extension);\n        if (resultado.length <= 0) {\n          setModalState({\n            title: getNombreProceso + \" :: Informe Cierre\",\n            message: \"Uno de los documentos adjuntados no tiene un formato correspondiente\",\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n          band = true;\n        }\n      }\n    }\n    if (getPesoTotalArchivos > 15000000) {\n      setModalState({\n        title: getNombreProceso + \" :: Informe Cierre\",\n        message: 'El peso/tamaño de los todos los adjuntos superan los 15 Mb pertmitidos para el registro.',\n        show: true,\n        redirect: null,\n        from: {\n          from\n        },\n        alert: global.Constants.TIPO_ALERTA.ERROR\n      });\n      band = true;\n    }\n    const attributes = [];\n    if (band === false) {\n      // PASO 1. VALIDAR CON SIRIUS\n      // PASO 1.1 LOGIN Y RADICACION\n\n      for (let i = 0; i < inputListArchivos.length; i++) {\n        // PASO 2. GUARDAR EN BASE DE DATOS\n        if (inputListArchivos[i].folios !== null || inputListArchivos[i].folios !== '') {\n          attributes.push({\n            \"id_proceso_disciplinario\": procesoDisciplinarioId,\n            \"id_etapa\": global.Constants.ETAPAS.EVALUACION,\n            \"id_fase\": global.Constants.FASES.INFORME_CIERRE,\n            \"nombre_archivo\": inputListArchivos[i].archivo.name,\n            \"estado\": \"1\",\n            \"num_folios\": inputListArchivos[i].folios,\n            \"num_radicado\": radicado,\n            \"vigencia\": vigencia,\n            \"extension\": getFileExtension(inputListArchivos[i].archivo.name),\n            \"peso\": inputListArchivos[i].archivo.size,\n            \"descripcion\": valores.descripcion,\n            \"es_compulsa\": false,\n            \"file64\": inputListArchivos[i].filebase64,\n            \"id_mas_formato\": inputListArchivos[i].id_mas_formato,\n            \"es_soporte\": false //ESTABA TRUE\n          });\n        }\n      }\n\n      const data = {\n        \"data\": {\n          \"type\": \"documento_sirius\",\n          \"attributes\": attributes\n        }\n      };\n      console.log(\"Daticos - Informe Cierre\", data);\n      DocumentoSiriusApi.addDocumentoSirius(data).then(datos => {\n        if (!datos.error) {\n          setModalState({\n            title: getNombreProceso + \" :: Informe Cierre\",\n            message: global.Constants.MENSAJES_MODAL.EXITOSO,\n            show: true,\n            redirect: '/RamasProceso/',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.EXITO\n          });\n        } else {\n          setModalState({\n            title: getNombreProceso + \" :: Informe Cierre\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n        window.showSpinner(false);\n      });\n    }\n  };\n\n  /*\r\n  * FUNIONES TEMPORALES -- CONSTRUIR COMPONENTE\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w2d_block\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb breadcrumb-alt push\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"hover\",\n              className: \"text-dark\",\n              to: `/MisPendientes`,\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Mis Pendientes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 126\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"hover\",\n              className: \"text-dark\",\n              to: `/RamasProceso/`,\n              state: {\n                from: from\n              },\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Ramas del proceso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 149\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Informaci\\xF3n Cierre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-themed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: [getNombreProceso, \" ::: INFORMACI\\xD3N CIERRE\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12 text-right my-2\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: '/RamasProceso/',\n                  title: \"Regresar a ramas del proceso\",\n                  state: {\n                    from: from,\n                    disable: disable\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-success\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-backward\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 506,\n                      columnNumber: 91\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: \" Para cualquier archivo que requiera adjuntar valide previamente lo siguiente: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: \"NO puede superar QUINCE (15) Mb de peso/tama\\xF1o. Tipo/Formato permitido: pdf\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: \"El nombre del archivo debe ser de m\\xE1ximo 40 caracteres.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-12\",\n                children: componentForm()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(InformeCierreDocumentoForm, \"9PNfAtN9eVnrXCjz702aY4XVx8g=\", false, function () {\n  return [useLocation];\n});\n_c = InformeCierreDocumentoForm;\nexport default InformeCierreDocumentoForm;\nvar _c;\n$RefreshReg$(_c, \"InformeCierreDocumentoForm\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","useEffect","useState","Navigate","useParams","Link","useLocation","ParametrosMasApi","InfoExitoApiTextsCustom","Spinner","getUser","DocumentoSiriusApi","GestorRespuestaApi","ModalListaVersionesGestorRespuesta","ModalGen","set","GenericApi","InformeCierreDocumentoForm","location","from","disable","state","radicado","procesoDisciplinarioId","vigencia","tipoEvaluacion","tipoEvaluacionNombre","getNombreUsuario","setNombreUsuario","exitoApiTextsCustom","setExitoApiTextsCustom","titulo","cuerpo","boton","inputListArchivos","setInputListArchivos","folios","archivo","filebase64","size","id_mas_formato","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","countTextArea","setCountTextArea","getFormatosApi","setFormatosApi","getGestorRespuestaApi","setGestorRespuestaApi","getListNombresArchivos","setListNombresArchivos","attributes","getPesoTotalArchivos","setPesoTotalArchivos","getHabilitarRegistrar","setHabilitarRegistrar","getModalState","setModalState","title","message","show","getUsuarioEnvioExpediente","setUsuarioEnvioExpediente","getNombreProceso","setNombreProceso","fetchData","window","showSpinner","nombre","nombreProceso","getByIdGeneric","then","datos","error","data","obtenerNombresDocumentosExistentes","getNombresDocumentacionSiriusByIdProDisciplinario","obtenerFormatos","toString","redirect","alert","global","Constants","TIPO_ALERTA","ERROR","getFormatos","obtenerParametros","containsSpecialChars","str","result","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","getParametroPorNombre","length","filter","map","filteredName","console","log","componentForm","descripcion","valores","errores","resetForm","handleOnSubmit","errors","values","x","i","e","handleInputChangeFolios","name","handleInputChangeArchivos","formatBytes","paddingLeft","primerArchivoPdf","list","extensionList","getFileExtension","showModal","index","value","target","files","extension","resultado","Array","forEach","reader","FileReader","readAsDataURL","onload","arrayAuxiliar","base64","id","obtenerPesoTotalArchivos","compararNombresArchivos","filename","slice","lastIndexOf","existe","nombre_servidor","find","dato","nombre_archivo","peso","bytes","decimals","undefined","k","dm","sizes","Math","floor","round","parseFloat","pow","toFixed","band","requiere_documento","push","ETAPAS","EVALUACION","FASES","INFORME_CIERRE","addDocumentoSirius","MENSAJES_MODAL","EXITOSO","EXITO"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/InformeCierre/InformeCierreDocumentoForm.js"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { Navigate, useParams } from \"react-router\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport ParametrosMasApi from \"./../../Api/Services/ParametrosMasApi\";\r\nimport InfoExitoApiTextsCustom from '../../Utils/InfoExitoApiTextsCustom';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport { getUser } from '../../../components/Utils/Common';\r\nimport DocumentoSiriusApi from '../../Api/Services/DocumentoSiriusApi';\r\nimport GestorRespuestaApi from '../../Api/Services/GestorRespuestaApi';\r\nimport '../../Utils/Constants';\r\nimport ModalListaVersionesGestorRespuesta from '../../Utils/Modals/ModalListaVersionesGestorRespuesta';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { set } from 'react-hook-form';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\n\r\nfunction InformeCierreDocumentoForm() {\r\n\r\n    const location = useLocation();\r\n    const { from, disable } = location.state;\r\n\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let vigencia = from.vigencia;\r\n    let tipoEvaluacion = from.tipoEvaluacion;\r\n    let tipoEvaluacionNombre = from.tipoEvaluacionNombre\r\n\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [exitoApiTextsCustom, setExitoApiTextsCustom] = useState({ titulo: null, cuerpo: null, boton: null });\r\n    const [inputListArchivos, setInputListArchivos] = useState([{ folios: \"\", archivo: {}, filebase64: \"\", size: 0, id_mas_formato: null }]);\r\n\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getFormatosApi, setFormatosApi] = useState();\r\n\r\n    const [getGestorRespuestaApi, setGestorRespuestaApi] = useState();\r\n    const [getListNombresArchivos, setListNombresArchivos] = useState({ attributes: null });\r\n    const [getPesoTotalArchivos, setPesoTotalArchivos] = useState(0);\r\n    const [getHabilitarRegistrar, setHabilitarRegistrar] = useState(true);\r\n\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n\r\n    const [getUsuarioEnvioExpediente, setUsuarioEnvioExpediente] = useState();\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            setNombreUsuario(getUser().nombre);\r\n            nombreProceso();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const nombreProceso = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                    obtenerNombresDocumentosExistentes();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function obtenerNombresDocumentosExistentes() {\r\n        DocumentoSiriusApi.getNombresDocumentacionSiriusByIdProDisciplinario(procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListNombresArchivos(datos)\r\n                    obtenerFormatos();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso + \" :: Información Cierre\", message: datos.error.toString(), show: true, redirect: '/RamasProceso/', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    function obtenerFormatos() {\r\n        ParametrosMasApi.getFormatos().then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setFormatosApi(datos.data);\r\n                    obtenerParametros();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso + \" :: Información Cierre\", message: datos.error.toString(), show: true, redirect: '/RamasProceso/', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    function containsSpecialChars(str) {\r\n\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /*Llamadas API*/\r\n    const obtenerParametros = () => {\r\n        try {\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            ParametrosMasApi.getParametroPorNombre(data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (datos[\"data\"].length > 0) {\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: getNombreProceso + \" :: Información Cierre\", message: datos.error.toString(), show: true, redirect: '/RamasProceso/', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                    window.showSpinner(false);\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    /*Componentes */\r\n    const componentForm = () => {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    descripcion: '',\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n\r\n                    let errores = {}\r\n                    setCountTextArea(valores.descripcion.length);\r\n\r\n                    if (valores.descripcion && valores.descripcion.length < getMinimoTextArea) {\r\n                        errores.descripcion = 'Debe ingresar mínimo ' + getMinimoTextArea + ' caracteres'\r\n                    }\r\n\r\n\r\n                    if (valores.descripcion) {\r\n                        if (containsSpecialChars(valores.descripcion))\r\n                            errores.descripcion = 'Tiene caracteres inválidos'\r\n                    }\r\n\r\n                    return errores;\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    handleOnSubmit(valores);\r\n                }}>\r\n                {({ errors, values }) => (\r\n                    <Form>\r\n                        <div className='row'>\r\n                            <div className='col-md-12'>\r\n                                {\r\n                                    inputListArchivos.map((x, i) => {\r\n                                        return (\r\n                                            <div className=\"box\" key={i}>\r\n                                                <ul>\r\n                                                    <div className='row'>\r\n                                                        <div className='col-md-9'>\r\n                                                            <div className='row'>\r\n                                                                <div className='col-md-5'>\r\n                                                                    <input className='form-control' name=\"folios\" type=\"number\" min=\"1\" placeholder=\"No. de folios\" value={x.folios} onChange={e => handleInputChangeFolios(e, i)} required />\r\n                                                                </div>\r\n\r\n                                                                <div className='col-md-5'>\r\n                                                                    <label className=\"custom-file-label\" htmlFor=\"example-file-input-custom\" data-toggle=\"custom-file-input\">{x.archivo.name}</label>\r\n                                                                    <input className=\"custom-file-input\" data-toggle=\"custom-file-input\" type=\"file\" name=\"archivo\" onChange={e => handleInputChangeArchivos(e, i)} required={x.filebase64 == \"\"} />\r\n                                                                    <label>Peso del archivo: {formatBytes(x.archivo.size)}</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </ul>\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='row'>\r\n                            <div className=\"col-md-9\" style={{ paddingLeft: \"55px\" }}>\r\n                                <Field as=\"textarea\" className=\"form-control\" id=\"descripcion\" name=\"descripcion\" rows=\"4\" placeholder=\"Descripción de los soportes\" required\r\n                                    maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                <div className=\"text-right\">\r\n                                    <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                </div>\r\n                                <ErrorMessage name='descripcion' component={() => (<span className='text-danger'>{errors.descripcion}</span>)} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='row'>\r\n                            <div className=\"col-md-12 text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n                                <Link to={`/RamasProceso/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <br></br>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        )\r\n    }\r\n\r\n    function primerArchivoPdf(list) {\r\n        const extensionList = getFileExtension(list[0].archivo.name);\r\n\r\n        if (extensionList != 'pdf') {\r\n            setModalState({ title: getNombreProceso + \" :: Informe Cierre\", message: 'El primer archivo seleccionado debe tener extensión .pdf', show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n            window.showModal(1)\r\n            setHabilitarRegistrar(false);\r\n        }\r\n        else {\r\n            setHabilitarRegistrar(true);\r\n        }\r\n    }\r\n\r\n    /*\r\n    * FUNIONES TEMPORALES -- CONSTRUIR COMPONENTE\r\n    */\r\n    const handleInputChangeFolios = (e, index) => {\r\n        const { name, value } = e.target;\r\n        const list = [...inputListArchivos];\r\n        list[index][name] = value;\r\n        setInputListArchivos(list);\r\n    };\r\n\r\n    const handleInputChangeArchivos = (e, index) => {\r\n\r\n        const { name, files } = e.target;\r\n        if (files.length > 0) {\r\n            const extension = getFileExtension(files[0].name);\r\n            const resultado = getFormatosApi.filter(datos => datos.attributes.nombre == extension);\r\n\r\n            if (resultado.length > 0) {\r\n                const list = [...inputListArchivos];\r\n                list[index][name] = files[0];\r\n\r\n                primerArchivoPdf(list);\r\n\r\n                if (files[0]) {\r\n                    list[index][name] = files[0];\r\n                }\r\n                else {\r\n                    list[index][name] = '';\r\n                    list[index].filebase64 = '';\r\n                    list[index].size = 0;\r\n                    list[index].id_mas_formato = null;\r\n                    setInputListArchivos(list);\r\n                }\r\n                //Conversion a Base64\r\n                Array.from(e.target.files).forEach(archivo => {\r\n                    var reader = new FileReader();\r\n                    reader.readAsDataURL(archivo);\r\n                    reader.onload = function () {\r\n                        var arrayAuxiliar = [];\r\n                        var base64 = reader.result;\r\n                        arrayAuxiliar = base64.split(',');\r\n                        list[index].filebase64 = arrayAuxiliar[1];\r\n                        list[index].id_mas_formato = resultado[0].id;\r\n                        setInputListArchivos(list);\r\n                    }\r\n                })\r\n                obtenerPesoTotalArchivos(list);\r\n                compararNombresArchivos(list);\r\n            }\r\n            else {\r\n                const list = [...inputListArchivos];\r\n                list[index][name] = files[0];\r\n                list[index].filebase64 = '';\r\n                list[index].size = 0;\r\n                list[index].id_mas_formato = null;\r\n                setInputListArchivos(list);\r\n                setModalState({ title: getNombreProceso + \" :: Información Cierre\", message: 'El archivo seleccionado no tiene un formato permitido', show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                window.showModal(1)\r\n            }\r\n        }\r\n        else {\r\n            const list = [...inputListArchivos];\r\n            list[index][name] = '';\r\n            list[index].filebase64 = '';\r\n            list[index].size = 0;\r\n            list[index].id_mas_formato = null;\r\n            setInputListArchivos(list);\r\n            obtenerPesoTotalArchivos(list);\r\n            compararNombresArchivos(list);\r\n        }\r\n    }\r\n\r\n    function getFileExtension(filename) {\r\n        return filename.slice((filename.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n    }\r\n\r\n    function compararNombresArchivos(list) {\r\n        if (getListNombresArchivos?.data.length > 0) {\r\n            let existe = false;\r\n            let nombre = \"\";\r\n            list.forEach(\r\n                (archivo, index) => {\r\n\r\n                    let nombre_servidor = getListNombresArchivos.data.find(dato => dato.attributes.nombre_archivo == archivo.archivo.name);\r\n\r\n                    if (nombre_servidor) {\r\n                        nombre = nombre_servidor.attributes.nombre_archivo;\r\n                        existe = true;\r\n                        return\r\n                    }\r\n\r\n                }\r\n            );\r\n\r\n            if (existe) {\r\n                setModalState({ title: getNombreProceso + \" :: Información Cierre\", message: \"El nombre del archivo '\" + nombre + \"', ya es utilizado por otro documento registrado en el sistema, por favor elimine el archivo y vuelva a subirlo con un nombre distinto\", show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                window.showModal(1)\r\n            }\r\n        }\r\n    }\r\n\r\n    function obtenerPesoTotalArchivos(list) {\r\n        let peso = 0;\r\n        list.forEach(\r\n            (archivo, index) => {\r\n                if (archivo.archivo.size) {\r\n                    peso += archivo.archivo.size;\r\n                }\r\n            }\r\n        )\r\n\r\n        if (peso > 15000000) {\r\n            setModalState({ title: getNombreProceso + \" :: Información Cierre\", message: 'El peso/tamaño de los todos los adjuntos superan los 15 Mb pertmitidos para el registro.', show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n            window.showModal(1)\r\n        }\r\n\r\n        setPesoTotalArchivos(peso);\r\n    }\r\n\r\n    function formatBytes(bytes, decimals = 3) {\r\n        if (bytes === undefined) return '0 Bytes';\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const dm = decimals < 0 ? 0 : decimals;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        //return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n        return Math.round(parseFloat((bytes / Math.pow(k, i)).toFixed(dm), 1)) + ' ' + sizes[i];\r\n    }\r\n\r\n    const handleOnSubmit = (valores) => {\r\n\r\n        window.showSpinner(true);\r\n\r\n        let band = false;\r\n\r\n        // VALIDA QUE NO EXISTA EL NOMBRE REPÉTIDO EN EL SISTEMA\r\n        let nombre = \"\";\r\n        let existe = false;\r\n        if (valores.requiere_documento == 'true') {\r\n            if (getListNombresArchivos?.data && getListNombresArchivos?.data.length > 0) {\r\n                for (let i = 0; i < inputListArchivos.length; i++) {\r\n\r\n                    let nombre_servidor = getListNombresArchivos.data.find(dato => dato.attributes.nombre_archivo == inputListArchivos[i].archivo.name);\r\n\r\n                    if (nombre_servidor) {\r\n                        nombre = nombre_servidor.attributes.nombre_archivo;\r\n                        existe = true;\r\n                        band = true;\r\n                    }\r\n\r\n                    if (existe) {\r\n                        setModalState({ title: getNombreProceso + \" :: Informe Cierre\", message: \"El nombre del archivo '\" + nombre + \"', ya es utilizado por otro documento registrado en el sistema, por favor elimine el archivo y vuelva a subirlo con un nombre distinto\", show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                        i = inputListArchivos.length + 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // VALIDA QUE NO SE PUEDAN SUBIR FORMATOS NO PERMITIDOS\r\n        if (valores.requiere_documento == 'true') {\r\n            for (let i = 0; i < inputListArchivos.length; i++) {\r\n                const extension = getFileExtension(inputListArchivos[i].archivo.name);\r\n                const resultado = getFormatosApi.filter(datos => datos.attributes.nombre == extension);\r\n\r\n                if (resultado.length <= 0) {\r\n                    setModalState({ title: getNombreProceso + \" :: Informe Cierre\", message: \"Uno de los documentos adjuntados no tiene un formato correspondiente\", show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    band = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (getPesoTotalArchivos > 15000000) {\r\n            setModalState({ title: getNombreProceso + \" :: Informe Cierre\", message: 'El peso/tamaño de los todos los adjuntos superan los 15 Mb pertmitidos para el registro.', show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n            band = true;\r\n        }\r\n\r\n        const attributes = [];\r\n\r\n        if (band === false) {\r\n\r\n            // PASO 1. VALIDAR CON SIRIUS\r\n            // PASO 1.1 LOGIN Y RADICACION\r\n\r\n            for (let i = 0; i < inputListArchivos.length; i++) {\r\n                // PASO 2. GUARDAR EN BASE DE DATOS\r\n                if (inputListArchivos[i].folios !== null || inputListArchivos[i].folios !== '') {\r\n\r\n                    attributes.push({\r\n                        \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                        \"id_etapa\": global.Constants.ETAPAS.EVALUACION,\r\n                        \"id_fase\": global.Constants.FASES.INFORME_CIERRE,\r\n                        \"nombre_archivo\": inputListArchivos[i].archivo.name,\r\n                        \"estado\": \"1\",\r\n                        \"num_folios\": inputListArchivos[i].folios,\r\n                        \"num_radicado\": radicado,\r\n                        \"vigencia\": vigencia,\r\n                        \"extension\": getFileExtension(inputListArchivos[i].archivo.name),\r\n                        \"peso\": inputListArchivos[i].archivo.size,\r\n                        \"descripcion\": valores.descripcion,\r\n                        \"es_compulsa\": false,\r\n                        \"file64\": inputListArchivos[i].filebase64,\r\n                        \"id_mas_formato\": inputListArchivos[i].id_mas_formato,\r\n                        \"es_soporte\": false //ESTABA TRUE\r\n                    });\r\n\r\n                }\r\n            }\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"documento_sirius\",\r\n                    \"attributes\": attributes\r\n                }\r\n            }\r\n\r\n            console.log(\"Daticos - Informe Cierre\", data);\r\n\r\n            DocumentoSiriusApi.addDocumentoSirius(data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setModalState({ title: getNombreProceso + \" :: Informe Cierre\", message: global.Constants.MENSAJES_MODAL.EXITOSO, show: true, redirect: '/RamasProceso/', from: { from }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                    }\r\n                    else {\r\n                        setModalState({ title: getNombreProceso + \" :: Informe Cierre\", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                    window.showSpinner(false);\r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n    * FUNIONES TEMPORALES -- CONSTRUIR COMPONENTE\r\n    */\r\n\r\n    return (\r\n        <>\r\n            {<ModalGen data={getModalState} />}\r\n            {<Spinner />}\r\n            <div className=\"w2d_block\">\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                        <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                        <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                        <li className=\"breadcrumb-item\"> <small>Información Cierre</small></li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            <div className='content'>\r\n                <div className='row'>\r\n                    <div className='col-md-12'>\r\n                        <div className='block block-themed'>\r\n                            <div className='block-header'>\r\n                                <h3 className='block-title'>{getNombreProceso} ::: INFORMACIÓN CIERRE</h3>\r\n                            </div>\r\n                            <div className='block-content'>\r\n                                <div className='col-md-12 text-right my-2'>\r\n                                    <Link to={'/RamasProceso/'} title='Regresar a ramas del proceso' state={{ from: from, disable: disable }}>\r\n                                        <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\"> Para cualquier archivo que requiera adjuntar valide previamente lo siguiente: </p>\r\n                                        <p className=\"mb-0\">\r\n                                            NO puede superar QUINCE (15) Mb de peso/tamaño.\r\n                                            Tipo/Formato permitido: pdf\r\n                                            {/*getFormatosApi ? (getFormatosApi.map((suggestion) => {\r\n                                                if (suggestion.attributes.estado == true)\r\n                                                    return suggestion.attributes.nombre;\r\n\r\n                                            })).join(' - '):null*/}\r\n                                        </p>\r\n                                        <p className=\"mb-0\">\r\n                                            El nombre del archivo debe ser de máximo 40 caracteres.\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    {componentForm()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default InformeCierreDocumentoForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}