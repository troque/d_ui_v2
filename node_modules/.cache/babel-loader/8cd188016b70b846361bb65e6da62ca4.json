{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Maestras\\\\UsuarioForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport 'rhfa-emergency-styles/dist/styles.css';\nimport Spinner from '../Utils/Spinner';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { Link } from \"react-router-dom\";\nimport InfoErrorApi from '../Utils/InfoErrorApi';\nimport InfoExitoApi from '../Utils/InfoExitoApi';\nimport GenericApi from '../Api/Services/GenericApi';\nimport ModalGen from '../Utils/Modals/ModalGeneric';\nimport { Navigate } from \"react-router-dom\";\nimport ModalCoincidenciasUsuarios from '../Utils/Modals/ModalCoincidenciasUsuarios';\nimport '../Utils/Constants';\nimport Select from 'react-select';\n\n// Se inicializa la clase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UsuarioForm() {\n  _s();\n  // Se inicializan las constantes\n  const [errorApi, setErrorApi] = useState('');\n  const [getNombre, setNombre] = useState('');\n  const [getApellido, setApeliido] = useState('');\n  const [getUser, setUser] = useState('');\n  const [getEmail, setEmail] = useState('');\n  const [getIdentificacion, setIdentificacion] = useState('');\n  const [getIdDependencia, setIdDependencia] = useState('');\n  const [getEstado, setEstado] = useState('');\n  const [isRedirect, setIsRedirect] = useState(false);\n  const [rolesAsociados, setRolesAsociados] = useState([]);\n  const [tipoExpAsociados, setTipoExpAsociados] = useState([]);\n  const [getRespuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\n  const [listaDependenciaOrigen, setListaDependenciaOrigen] = useState({\n    data: {}\n  });\n  const [respuestaDependenciaOrigen, setDependenciaOrigen] = useState(false);\n  const [getListaRoles, setListaRoles] = useState({\n    data: {}\n  });\n  const [getRespuestaRoles, setRespuestaRoles] = useState(false);\n  const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({\n    data: {}\n  });\n  const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\n  const [listaTipoProcesoDisciplinario, setListaProcesoDisciplinario] = useState({\n    data: {}\n  });\n  const [respuestaProcesoDisciplinario, setRespuestaProcesoDisciplinario] = useState(false);\n  const [listaTiposQueja, setListaTiposQueja] = useState({\n    data: {}\n  });\n  const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\n  const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({\n    data: {}\n  });\n  const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\n  const [getTiposExpedientes, setTiposExpedientes] = useState({\n    data: {}\n  });\n  const [getReparto, setReparto] = useState('');\n  const [getIdDependenciaSecretariaComun, setIdDependenciaSecretariaComun] = useState('');\n  const [listaGruposTrabajo, setListaGruposTrabajo] = useState({\n    data: {}\n  });\n  const [getGrupoTrabajoSeleccionado, setGrupoTrabajoSeleccionado] = useState('');\n  const [getIdGrupoTrabajo, setIdGrupoTrabajo] = useState('');\n  const [respuestaGrupoTrabajo, setRespuestaGrupoTrabajo] = useState(false);\n  const [getListaGruposSeleccionadas, setListaGruposSeleccionadas] = useState([]);\n  const [getErrorGrupos, setErrorGrupos] = useState(\"\");\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getValidarSecretariaComun, setValidarSecretariaComun] = useState(false);\n\n  /**\r\n   * Método encargado de cargar la configuracion de la clase\r\n   */\n  useEffect(() => {\n    window.showSpinner(true); // Inicia el spinner        \n    async function fetchData() {\n      // Se llama la funcion del metodo           \n      getAllDependenciaOrigen(); // Se cargan las dependencias origen\n    }\n\n    window.showSpinner(false); // Finaliza el spinner        \n    fetchData(); // Se llama la funcion asincrona\n  }, []);\n\n  /**\r\n   * Método encargdo de cargar las dependencias registradas\r\n   */\n  const getAllDependenciaOrigen = () => {\n    GenericApi.getByIdGeneric('mas-dependencia-filtrado', global.Constants.ACCESO_DEPENDENCIA.CREAR_USUARIO).then(\n    // Se consume la api para traer las depedencias a estado registrar\n\n    // Se incializa la variable de respuesta\n    datos => {\n      if (!datos.error) {\n        // Se válida que no haya error\n\n        setListaDependenciaOrigen(datos); // Se setean los datos\n        setDependenciaOrigen(true); // Se redeclara la variable en true\n        getllRoles(); // Se llama el metodo para cargar los roles\n      } else {\n        // Se lanza el mensaje de error\n        setModalState({\n          title: \"ADMINISTRACIÓN :: USUARIOS\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/Usuario/Add',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false); // Finaliza el spinner   \n      }\n    });\n  };\n\n  /**\r\n   * Método encargado de cargar los roles\r\n   */\n  const getllRoles = () => {\n    GenericApi.getAllGeneric('role').then(\n    // Se consume la api para traer los roles\n\n    datos => {\n      // Se incializa la variable de respuesta\n\n      if (!datos.error) {\n        // Se valida que no haya error\n        setListaRoles(datos); // Se setean los datos\n        setRespuestaRoles(true); // Se redeclara la variable en true\n        cargarTiposExpedientes(); // Se llama el metodo para cargar los tipos de expediente\n      } else {\n        // Se lanza el mensaje de error\n        setModalState({\n          title: \"ADMINISTRACIÓN :: USUARIOS\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/Usuario/Add',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false); // Finaliza el spinner\n      }\n    });\n  };\n\n  /**\r\n   * Método encargado de cargar los tipos de expediente\r\n   */\n  const cargarTiposExpedientes = () => {\n    GenericApi.getAllGeneric('mas-tipo-expediente').then(\n    // Se consume la api para traer los roles\n\n    datos => {\n      // Se incializa la variable de respuesta\n\n      if (!datos.error) {\n        // Se valida que no haya error\n        setTiposExpedientes(datos); // Se setean los datos                    \n        setRespuestaTipoExpediente(true); // Se redeclara la variable en true\n        cargarTiposDerechoPeticion(); // Se llama el metodo para cargar los tipos de derecho de peticion\n      } else {\n        // Se lanza el mensaje de error\n        setModalState({\n          title: \"ADMINISTRACIÓN :: USUARIOS\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/Usuario/Add',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false); // Finaliza el spinner\n      }\n    });\n  };\n\n  /**\r\n   * Método encargado de cargar los tipos de derecho peticion\r\n   */\n\n  const cargarTiposDerechoPeticion = () => {\n    GenericApi.getAllGeneric('mas-tipo-derecho-peticion').then(\n    // Se consume la api para traer los tipos de derecho peticion\n\n    datos => {\n      // Se incializa la variable de respuesta\n\n      if (!datos.error) {\n        // Se valida que no haya error\n\n        setListaDerechoPeticion(datos); // Se setean los datos\n        setRespuestaDerechoPeticion(true); // Se redeclara la variable en true\n        cargarTiposQueja(); // Se llama el metodo para cargar los tipos de queja\n      } else {\n        // Se lanza el mensaje de error\n        setModalState({\n          title: \"ADMINISTRACIÓN :: USUARIOS\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/Usuario/Add',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false); // Finaliza el spinner\n      }\n    });\n  };\n\n  /**\r\n   * Método encagrado de cargar los tipos de queja\r\n   */\n  const cargarTiposQueja = () => {\n    GenericApi.getAllGeneric('mas-tipo-queja').then(\n    // Se consume la api para traer los tipos de queja\n\n    datos => {\n      // Se incializa la variable de respuesta\n\n      if (!datos.error) {\n        // Se valida que no haya error\n\n        setListaTiposQueja(datos); // Se setean los datos\n        setRespuestaTiposQueja(true); // Se redeclara la variable en true\n\n        setListaProcesoDisciplinario(datos); // Se setean los datos\n        setRespuestaProcesoDisciplinario(true); // Se redeclara la variable en true\n\n        cargarTerminoRespuesta(); // Se llama el metodo para cargar los tipos de respuesta\n      } else {\n        // Se lanza el mensaje de error\n        setModalState({\n          title: \"ADMINISTRACIÓN :: USUARIOS\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/Usuario/Add',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false); // Finaliza el spinner\n      }\n    });\n  };\n\n  /**\r\n   * Método encargado de cargar los terminos de respuesta\r\n   */\n  const cargarTerminoRespuesta = () => {\n    // Se consume la API\n    GenericApi.getAllGeneric('mas-termino-respuesta').then(datos => {\n      // Se incializa la variable de respuesta\n\n      if (!datos.error) {\n        // Se valida que no haya error\n\n        setListaTerminosRespuesta(datos); // Se setean los datos\n        setRespuestaTerminosRespuesta(true); // Se redeclara la variable en true\n        cargarIdDependenciaSecretariaComun(); // Se llama el metodo para cargar el id de secretaria comun\n      } else {\n        // Se lanza el mensaje de error\n        setModalState({\n          title: \"ADMINISTRACIÓN :: USUARIOS\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/Usuario/Add',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false); // Finaliza el spinner\n      }\n    });\n  };\n\n  /**\r\n   * Método encargado de cargar el id de secretaria comun\r\n   */\n  const cargarIdDependenciaSecretariaComun = () => {\n    // Se inicializa la variable\n    const data = {\n      \"data\": {\n        \"type\": 'mas_parametro',\n        \"attributes\": {\n          \"nombre\": \"id_dependencia_secretaria_comun\"\n        }\n      }\n    };\n\n    // Se consume la API\n    GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\n    // Se incializa la variable de respuesta\n    datos => {\n      if (!datos.error) {\n        // Se valida que no haya error\n\n        setIdDependenciaSecretariaComun(datos.data[0].attributes.valor); // Se setea el valor del id\n        cargarGruposDeTrabajo(); // Se llama el metodo para cargar los grupos de trabajo\n      } else {\n        // Se lanza el mensaje de error\n        setModalState({\n          title: \"ADMINISTRACIÓN :: USUARIOS\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/Usuario/Add',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false); // Finaliza el spinner\n      }\n    });\n  };\n\n  /**\r\n   * Método encargado de cargar los grupos de trabajo\r\n   */\n  const cargarGruposDeTrabajo = () => {\n    // Se consume la API\n    GenericApi.getGeneric(\"mas_grupo_trabajo\").then(datos => {\n      // Se incializa la variable de respuesta\n\n      if (!datos.error) {\n        // Se valida que no haya error\n\n        setListaGruposTrabajo(datos); // Se setea los datos\n        setRespuestaGrupoTrabajo(true); // Se setea la respuesta en true\n      } else {\n        setModalState({\n          title: \"ADMINISTRACIÓN :: USUARIOS\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/Usuario/Add',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false); // Finaliza el spinner  \n      }\n    });\n  };\n\n  /**\r\n   * Método encargado de setear el valor el cambiar\r\n   * @param {*} event \r\n   */\n  const handleInputChange = event => {\n    // Se capturan el input y valor correspondiente\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    if (name == \"nombre\") {\n      // Se valida cuando es nombre\n      setNombre(value); // Se setea el valor\n    }\n\n    if (name == \"apellido\") {\n      // Se valida cuando es apellido\n      setApeliido(value); // Se setea el valor\n    }\n\n    if (name == \"identificacion\") {\n      // Se valida cuando es apellido\n      setIdentificacion(value); // Se setea el valor\n    }\n\n    if (name == \"correo\") {\n      // Se valida cuando es correo\n      setEmail(value); // Se setea el valor\n    }\n\n    if (name == \"dependencia\") {\n      // Se valida cuando es dependencia\n\n      setIdDependencia(value); // Se setea el valor\n      validarSecretariaComun(value); // Se llama el metodo encargado de validar si la dependencia tiene accceso a Secretaria Comun\n    }\n\n    if (name == \"estado\") {\n      // Se valida cuando es estado            \n      setEstado(value); // Se setea el valor\n    }\n\n    if (name == \"user\") {\n      // Se valida cuando es user\n      setUser(value); // Se setea el valor\n    }\n\n    if (name == \"reparto\") {\n      // Se valida cuando es reparto\n      setReparto(value); // Se setea el valor\n    }\n\n    if (name == \"grupoTrabajo\") {\n      // Se valida cuando es grupoTrabajo\n      setIdGrupoTrabajo(value); // Se setea el valor\n    }\n  };\n\n  /**\r\n   * Metodo encargado de cambiar el valor en los grupos de trabajo\r\n   * @param {*} v \r\n   */\n  const selectChangeGrupo = v => {\n    if (v != null) {\n      // Se valida que es diferente de null\n      setListaGruposSeleccionadas(v); // Se setea el valor seleccionado\n    } else {\n      setErrorGrupos('Campo requerido'); // Se setea el mensaje de error de los grupos\n    }\n  };\n\n  /**\r\n   * Método encargado de validar si la dependencia tiene activo el permiso de secretaria comun\r\n   * @param {*} idDependencia \r\n   */\n  const validarSecretariaComun = idDependencia => {\n    window.showSpinner(true); // Se usa el cargando\n\n    // Se consume la API\n    GenericApi.getGeneric(\"mas-dependencia-configuracion/\" + idDependencia).then(datos => {\n      // Se inicializa la variable de respuesta\n\n      if (!datos.error) {\n        // Se valida que no haya error\n        setValidarSecretariaComun(true); // Se redeclara la variable en true\n      } else {\n        setValidarSecretariaComun(false); // Se redeclara la variable en true\n      }\n\n      window.showSpinner(false); // Se quita el cargando\n    });\n  };\n\n  /**\r\n   * Método encargado de cargar las dependencias de origen\r\n   * @returns \r\n   */\n  const selectDependenciaOrigen = () => {\n    // Se retorna\n    return listaDependenciaOrigen.data.map((dependencia, i) => {\n      // Se recorre el array\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: dependencia.id,\n        children: dependencia.attributes.nombre\n      }, dependencia.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }, this) // Se retorna el select por posicion\n      ;\n    });\n  };\n\n  const mostrarModalDirectorio = () => {\n    // Metodo encargado de mostrar el modal del directorio\n    window.showModalCoincidenciasUsuario(); // Se llama el modal\n  };\n\n  /**\r\n   *  Método encargado de retorna la buscqueda del modal\r\n   * @param {*} childData \r\n   */\n  const handleCallback = childData => {\n    try {\n      // Se inicializa el trycatch\n\n      if (childData != null) {\n        // Se valida que la data sea diferente de null\n\n        // Se setean los valores\n        setNombre(childData.nombre);\n        setApeliido(childData.apellido);\n        setEmail(childData.email);\n        setUser(childData.name);\n        setIdentificacion(childData.identificacion);\n      }\n    } catch (error) {}\n  };\n\n  // Metodo encargado de enviar los datos al backend\n  const enviarDatos = () => {\n    window.showSpinner(true); // Se usa el cargando\n    let data; // Se inicializa la data\n\n    // Se redeclara la variable con la informacion a enviar\n    data = {\n      \"data\": {\n        \"type\": \"usuario\",\n        \"attributes\": {\n          \"nombre\": getNombre ? getNombre : \"\",\n          \"apellido\": getApellido ? getApellido : \"\",\n          \"name\": getUser ? getUser : \"\",\n          \"email\": getEmail ? getEmail : \"\",\n          \"identificacion\": getIdentificacion ? getIdentificacion : \"\",\n          \"id_dependencia\": getIdDependencia ? getIdDependencia : \"\",\n          \"id_mas_grupo_trabajo_secretaria_comun\": getListaGruposSeleccionadas ? getListaGruposSeleccionadas : \"\",\n          \"roles\": rolesAsociados,\n          \"expedientes\": tipoExpAsociados,\n          \"estado\": getEstado ? getEstado : \"\",\n          \"reparto_habilitado\": getReparto ? getReparto : \"\"\n        }\n      }\n    };\n\n    // Se consume la API\n    GenericApi.addGeneric('usuario', data).then(datos => {\n      // Se inicializa la variable de respuesta\n\n      if (!datos.error) {\n        // Se valida que no haya error\n\n        setIsRedirect(true); // Se setea el valor en true                    \n        setModalState({\n          title: \"ADMINISTRACIÓN :: USUARIOS\",\n          message: global.Constants.MENSAJES_MODAL.EXITOSO,\n          show: true,\n          redirect: '/Usuario',\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        // Se muestra el mensaje de error\n        setModalState({\n          title: \"ADMINISTRACIÓN :: USUARIOS\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/Usuario/Add',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n\n      // Se quita el cargando\n      window.showSpinner(false);\n    });\n  };\n\n  // Metodo encargado de agregar el check\n  const agregarCheck = (e, rolId) => {\n    // Se valida que sea true el check\n    if (e == true) {\n      // Se añade al array el valor\n      setRolesAsociados(oldArray => [...oldArray, rolId]);\n    } else {\n      // Se busca el indice con el id\n      var index = rolesAsociados.indexOf(rolId);\n\n      // Se valida que se encuentre en el array\n      if (index !== -1) {\n        // Se quita del array de roles\n        rolesAsociados.splice(index, 1);\n      }\n    }\n  };\n\n  // Metodo encargado de agregar el check de tipos de expediente\n  const agregarCheckTipoExp = (e, extId, subExpid) => {\n    // Se valida que sea true el check\n    if (e == true) {\n      // Se añade al array el valor\n      setTipoExpAsociados(oldArray => [...oldArray, extId + \"|\" + subExpid]);\n    } else {\n      // Se busca el indice con el id\n      var index = tipoExpAsociados.indexOf(extId + \"|\" + subExpid);\n\n      // Se valida que se encuentre en el array\n      if (index !== -1) {\n        // Se quita del array de roles\n        tipoExpAsociados.splice(index, 1);\n      }\n    }\n  };\n\n  // Metodo encargado de listar los roles\n  const listarRoles = () => {\n    // Se retorna\n    return (\n      // Se recorre el array\n      getListaRoles.data.map((rol, i) => {\n        // Se retorna cada columna por posicion\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-control custom-switch custom-control-lg mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: e => agregarCheck(e.target.checked, rol.id),\n                className: \"custom-control-input\",\n                id: rol.id,\n                name: rol.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"custom-control-label\",\n                htmlFor: rol.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rol.attributes.nombre.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 25\n          }, this)]\n        }, rol.id + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 21\n        }, this);\n      })\n    );\n  };\n\n  // Metodo encargado de listar los tippos de expediente asociados\n  const listarTiposExpedientessociados = () => {\n    // Se retorna\n    return (\n      /*#__PURE__*/\n      // Se carga el html\n      _jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children:\n          // Se recorre el array\n          getTiposExpedientes.data.map((tipoExp, i) => {\n            // Se retorna el html ppr posicion\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"accordion\",\n              role: \"tablist\",\n              \"aria-multiselectable\": \"true\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block block-rounded mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-header block-header-default\",\n                  role: \"tab\",\n                  id: \"accordion_h1\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"font-w600\",\n                    \"data-toggle\": \"collapse\",\n                    \"data-parent\": \"#accordion\",\n                    href: \"#accordion_q1\",\n                    \"aria-expanded\": \"true\",\n                    \"aria-controls\": \"accordion_q1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-folder\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 560,\n                      columnNumber: 189\n                    }, this), \" \", tipoExp.attributes.nombre, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"accordion_q1\",\n                  className: \"show\",\n                  role: \"tabpanel\",\n                  \"aria-labelledby\": \"accordion_h1\",\n                  \"data-parent\": \"#accordion\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"block-content\",\n                    children: [tipoExp.id === '1' && respuestaTipoDerechoPeticion ? componenteTipoExpedienteDerecho() : '', tipoExp.id === '2' && respuestaTiposQueja ? componenteTipoExpedienteReferente() : '', tipoExp.id === '3' && respuestaTiposQueja ? componenteTipoExpedienteQueja() : '', tipoExp.id === '4' && respuestaTerminosRespuesta ? componenteTipoExpedienteTutela() : '', tipoExp.id === '5' && respuestaProcesoDisciplinario ? componenteTipoExpedienteProcesoDisciplinario() : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 37\n              }, this)\n            }, tipoExp.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 13\n      }, this)\n    );\n  };\n\n  // Tipo expediente - Derecho Peticion\n  const componenteTipoExpedienteDerecho = () => {\n    return listaTipoDerechoPeticion.data.map((derecho, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: tipoExpAsociados.indexOf(('1|' + derecho.id).toString()) > -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultChecked: true,\n                  type: \"checkbox\",\n                  onChange: e => agregarCheckTipoExp(e.target.checked, '1', derecho.id),\n                  className: \"custom-control-input\",\n                  id: 'derecho' + derecho.id,\n                  name: 'derecho' + derecho.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"custom-control-label\",\n                  htmlFor: 'derecho' + derecho.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onChange: e => agregarCheckTipoExp(e.target.checked, '1', derecho.id),\n                  className: \"custom-control-input\",\n                  id: 'derecho' + derecho.id,\n                  name: 'derecho' + derecho.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"custom-control-label\",\n                  htmlFor: 'derecho' + derecho.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 45\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: derecho.attributes.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 25\n        }, this)]\n      }, derecho.id + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  // Tipo expediente - Poder Referente\n  const componenteTipoExpedienteReferente = () => {\n    return listaTiposQueja.data.map((quejaDef, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: e => agregarCheckTipoExp(e.target.checked, '2', quejaDef.id),\n                className: \"custom-control-input\",\n                id: 'quejaDef' + quejaDef.id,\n                name: 'quejaDef' + quejaDef.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"custom-control-label\",\n                htmlFor: 'quejaDef' + quejaDef.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: quejaDef.attributes.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 25\n        }, this)]\n      }, quejaDef.id + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  // Tipo expediente - Queja\n  const componenteTipoExpedienteQueja = () => {\n    return listaTiposQueja.data.map((queja, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: e => agregarCheckTipoExp(e.target.checked, '3', queja.id),\n                className: \"custom-control-input\",\n                id: 'queja' + queja.id,\n                name: 'queja' + queja.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"custom-control-label\",\n                htmlFor: 'queja' + queja.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: queja.attributes.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 25\n        }, this)]\n      }, queja.id + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  // Tipo expediente - Tutela\n  const componenteTipoExpedienteTutela = () => {\n    return listaTerminosRespuesta.data.map((termino, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: e => agregarCheckTipoExp(e.target.checked, '4', termino.id),\n                className: \"custom-control-input\",\n                id: 'termino' + termino.id,\n                name: 'termino' + termino.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"custom-control-label\",\n                htmlFor: 'termino' + termino.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: termino.attributes.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 25\n        }, this)]\n      }, termino.id + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  // Tipo expediente - Proceso Disciplinario\n  const componenteTipoExpedienteProcesoDisciplinario = () => {\n    return listaTiposQueja.data.map((proceso, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: tipoExpAsociados.indexOf(('5|' + proceso.id).toString()) > -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  defaultChecked: true,\n                  type: \"checkbox\",\n                  onChange: e => agregarCheckTipoExp(e.target.checked, '5', proceso.id),\n                  className: \"custom-control-input\",\n                  id: 'proceso' + proceso.id,\n                  name: 'proceso' + proceso.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 714,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"custom-control-label\",\n                  htmlFor: 'proceso' + proceso.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onChange: e => agregarCheckTipoExp(e.target.checked, '5', proceso.id),\n                  className: \"custom-control-input\",\n                  id: 'proceso' + proceso.id,\n                  name: 'termino' + proceso.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"custom-control-label\",\n                  htmlFor: 'proceso' + proceso.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 45\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: proceso.attributes.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 25\n        }, this)]\n      }, proceso.id + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 21\n      }, this);\n    });\n  };\n  const componentFormularioUsuario = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ModalCoincidenciasUsuarios, {\n        parentCallback: handleCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          nombre: '',\n          apellido: '',\n          correo: '',\n          dependencia: '',\n          roles: '',\n          tipoExpediente: '',\n          estado: '',\n          user: '',\n          reparto: ''\n        },\n        enableReinitialize: true,\n        validate: valores => {\n          let errores = {};\n          if (!getUser) {\n            errores.user = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          if (!getNombre) {\n            errores.nombre = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          if (!getApellido) {\n            errores.apellido = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          if (!getEmail) {\n            errores.correo = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          if (!getIdDependencia) {\n            errores.dependencia = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          if (rolesAsociados.length == '') {\n            errores.roles = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          if (getEstado == '') {\n            errores.estado = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          if (!getReparto) {\n            errores.reparto = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          return errores;\n        },\n        onSubmit: (valores, _ref) => {\n          let {\n            resetForm\n          } = _ref;\n          enviarDatos();\n        },\n        children: _ref2 => {\n          var _listaGruposTrabajo$d;\n          let {\n            errors\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block block-themed\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"block-title\",\n                  children: \"ADMINISTRACI\\xD3N :: USUARIOS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 799,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row text-right w2d-enter\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: '/Usuario',\n                    title: \"Regresar\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn btn-primary\",\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fas fa-backward\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 805,\n                        columnNumber: 95\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 805,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 804,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-primary\",\n                  onClick: () => mostrarModalDirectorio(),\n                  children: \"BUSCAR USUARIO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 811,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"nombre\",\n                        children: [\"NOMBRES \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 819,\n                          columnNumber: 81\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 819,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        disabled: true,\n                        value: getNombre,\n                        type: \"text\",\n                        id: \"nombre\",\n                        name: \"nombre\",\n                        className: \"form-control\",\n                        placeholder: \"Nombre\",\n                        onChange: handleInputChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 820,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 818,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 817,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"apellido\",\n                        children: [\"APELLIDOS \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 827,\n                          columnNumber: 85\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 827,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        disabled: true,\n                        value: getApellido,\n                        type: \"text\",\n                        id: \"apellido\",\n                        name: \"apellido\",\n                        className: \"form-control\",\n                        placeholder: \"Apellido\",\n                        onChange: handleInputChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 828,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 826,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 825,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"user\",\n                        children: [\"USUARIO \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 835,\n                          columnNumber: 79\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 835,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        disabled: true,\n                        value: getUser,\n                        onChange: handleInputChange,\n                        type: \"text\",\n                        id: \"user\",\n                        name: \"user\",\n                        className: \"form-control\",\n                        placeholder: \"Usuario\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 836,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 834,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 833,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"correo\",\n                        children: [\"CORREO \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 842,\n                          columnNumber: 80\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 842,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        disabled: true,\n                        value: getEmail,\n                        type: \"text\",\n                        id: \"correo\",\n                        name: \"correo\",\n                        onChange: handleInputChange,\n                        className: \"form-control\",\n                        placeholder: \"Correo\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 843,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 841,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 840,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"correo\",\n                        children: [\"IDENTIFICACI\\xD3N \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 850,\n                          columnNumber: 88\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 850,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        disabled: true,\n                        value: getIdentificacion,\n                        type: \"text\",\n                        id: \"correo\",\n                        name: \"identificacion\",\n                        onChange: handleInputChange,\n                        className: \"form-control\",\n                        placeholder: \"identificacion\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 851,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 849,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 848,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"dependencia\",\n                        children: [\"DEPENDENCIA \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 858,\n                          columnNumber: 90\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 858,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        as: \"select\",\n                        value: getIdDependencia,\n                        onChange: handleInputChange,\n                        className: \"form-control\",\n                        id: \"dependencia\",\n                        name: \"dependencia\",\n                        placeholder: \"Dependencia\",\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 860,\n                          columnNumber: 53\n                        }, this), respuestaDependenciaOrigen ? selectDependenciaOrigen() : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 859,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"dependencia\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: errors.dependencia\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 863,\n                          columnNumber: 100\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 863,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 857,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 856,\n                    columnNumber: 41\n                  }, this), getValidarSecretariaComun ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"dependencgrupoTrabajoia\",\n                        children: [\"GRUPOS DE TRABAJO\", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 870,\n                          columnNumber: 115\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 870,\n                        columnNumber: 57\n                      }, this), respuestaGrupoTrabajo && listaGruposTrabajo.data.length > 0 ? /*#__PURE__*/_jsxDEV(Select, {\n                        id: \"grupoTrabajo\",\n                        name: \"grupoTrabajo\",\n                        isMulti: true,\n                        value: getListaGruposSeleccionadas,\n                        placeholder: \"Selecciona\",\n                        noOptionsMessage: () => \"Sin datos\",\n                        options: listaGruposTrabajo === null || listaGruposTrabajo === void 0 ? void 0 : (_listaGruposTrabajo$d = listaGruposTrabajo.data) === null || _listaGruposTrabajo$d === void 0 ? void 0 : _listaGruposTrabajo$d.map(e => ({\n                          label: e.attributes.nombre,\n                          value: e.id\n                        })),\n                        onChange: e => selectChangeGrupo(e)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 873,\n                        columnNumber: 61\n                      }, this) : null, /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"grupoTrabajo\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: [errors.grupoTrabajo, \" \", getErrorGrupos]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 885,\n                          columnNumber: 109\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 885,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 869,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 868,\n                    columnNumber: 49\n                  }, this) : setIdGrupoTrabajo(''), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"estado\",\n                        children: [\"ESTADO \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 894,\n                          columnNumber: 80\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 894,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        as: \"select\",\n                        value: getEstado,\n                        onChange: handleInputChange,\n                        className: \"form-control\",\n                        id: \"estado\",\n                        name: \"estado\",\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 896,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"1\",\n                          children: \"ACTIVO\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 897,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"0\",\n                          children: \"INACTIVO\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 898,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 895,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"estado\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: errors.estado\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 900,\n                          columnNumber: 95\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 900,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 893,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 892,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"reparto\",\n                        children: [\"HABILITADO PARA REPARTO\", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 905,\n                          columnNumber: 97\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 905,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        as: \"select\",\n                        value: getReparto,\n                        onChange: handleInputChange,\n                        className: \"form-control\",\n                        id: \"reparto\",\n                        name: \"reparto\",\n                        placeholder: \"Habilitado para reparto\",\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 907,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"1\",\n                          selected: true,\n                          children: \"SI\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 908,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"0\",\n                          children: \"NO\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 909,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 906,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"reparto\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: errors.reparto\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 911,\n                          columnNumber: 96\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 911,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 904,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 903,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block block-themed\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"block-title\",\n                  children: \"ASIGNACI\\xD3N DE ROLES\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 919,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"DEBE SELECCIONAR AL MENOS UN ROL\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 924,\n                        columnNumber: 85\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 924,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 923,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            style: {\n                              width: \"50px\"\n                            },\n                            children: \"SELECCIONAR\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 930,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"NOMBRE DE ROL\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 931,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 929,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 928,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: getRespuestaRoles ? listarRoles() : null\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 934,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 927,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 926,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"roles\",\n                    component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: errors.roles\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 939,\n                      columnNumber: 86\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 939,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 922,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block block-themed\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"block-title\",\n                  children: \"TIPOS DE EXPEDIENTES QUE EL USUARIO PUEDE GESTIONAR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 945,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"tipoExpediente\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.tipoExpediente\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 950,\n                        columnNumber: 99\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 950,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 949,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: getRespuestaTipoExpediente ? listarTiposExpedientessociados() : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 952,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 948,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 947,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right bg-light\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-rounded btn-primary\",\n                  children: global.Constants.BOTON_NOMBRE.REGISTRAR\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 958,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: '/Usuario',\n                  className: \"font-size-h5 font-w600\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-rounded btn-outline-primary\",\n                    children: global.Constants.BOTON_NOMBRE.CANCELAR\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 960,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 959,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 957,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 943,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 25\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w2d_block let\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb breadcrumb-alt push\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Administraci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 978,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Perfiles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"hover\",\n              className: \"text-dark\",\n              to: `/Usuario`,\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Lista de usuarios\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 120\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 980,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \" Crear usuario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: componentFormularioUsuario()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 985,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(UsuarioForm, \"d923lequ2lnilwW3Mk6ngl55oUA=\");\n_c = UsuarioForm;\nexport default UsuarioForm;\nvar _c;\n$RefreshReg$(_c, \"UsuarioForm\");","map":{"version":3,"names":["React","useEffect","useState","Spinner","ErrorMessage","Field","Form","Formik","Link","InfoErrorApi","InfoExitoApi","GenericApi","ModalGen","Navigate","ModalCoincidenciasUsuarios","Select","UsuarioForm","errorApi","setErrorApi","getNombre","setNombre","getApellido","setApeliido","getUser","setUser","getEmail","setEmail","getIdentificacion","setIdentificacion","getIdDependencia","setIdDependencia","getEstado","setEstado","isRedirect","setIsRedirect","rolesAsociados","setRolesAsociados","tipoExpAsociados","setTipoExpAsociados","getRespuestaTipoExpediente","setRespuestaTipoExpediente","listaDependenciaOrigen","setListaDependenciaOrigen","data","respuestaDependenciaOrigen","setDependenciaOrigen","getListaRoles","setListaRoles","getRespuestaRoles","setRespuestaRoles","listaTipoDerechoPeticion","setListaDerechoPeticion","respuestaTipoDerechoPeticion","setRespuestaDerechoPeticion","listaTipoProcesoDisciplinario","setListaProcesoDisciplinario","respuestaProcesoDisciplinario","setRespuestaProcesoDisciplinario","listaTiposQueja","setListaTiposQueja","respuestaTiposQueja","setRespuestaTiposQueja","listaTerminosRespuesta","setListaTerminosRespuesta","respuestaTerminosRespuesta","setRespuestaTerminosRespuesta","getTiposExpedientes","setTiposExpedientes","getReparto","setReparto","getIdDependenciaSecretariaComun","setIdDependenciaSecretariaComun","listaGruposTrabajo","setListaGruposTrabajo","getGrupoTrabajoSeleccionado","setGrupoTrabajoSeleccionado","getIdGrupoTrabajo","setIdGrupoTrabajo","respuestaGrupoTrabajo","setRespuestaGrupoTrabajo","getListaGruposSeleccionadas","setListaGruposSeleccionadas","getErrorGrupos","setErrorGrupos","getModalState","setModalState","title","message","show","getValidarSecretariaComun","setValidarSecretariaComun","window","showSpinner","fetchData","getAllDependenciaOrigen","getByIdGeneric","global","Constants","ACCESO_DEPENDENCIA","CREAR_USUARIO","then","datos","error","getllRoles","toString","redirect","alert","TIPO_ALERTA","ERROR","getAllGeneric","cargarTiposExpedientes","cargarTiposDerechoPeticion","cargarTiposQueja","cargarTerminoRespuesta","cargarIdDependenciaSecretariaComun","getByDataGeneric","attributes","valor","cargarGruposDeTrabajo","getGeneric","handleInputChange","event","target","value","type","checked","name","validarSecretariaComun","selectChangeGrupo","v","idDependencia","selectDependenciaOrigen","map","dependencia","i","id","nombre","mostrarModalDirectorio","showModalCoincidenciasUsuario","handleCallback","childData","apellido","email","identificacion","enviarDatos","addGeneric","MENSAJES_MODAL","EXITOSO","EXITO","agregarCheck","e","rolId","oldArray","index","indexOf","splice","agregarCheckTipoExp","extId","subExpid","listarRoles","rol","toUpperCase","listarTiposExpedientessociados","tipoExp","componenteTipoExpedienteDerecho","componenteTipoExpedienteReferente","componenteTipoExpedienteQueja","componenteTipoExpedienteTutela","componenteTipoExpedienteProcesoDisciplinario","derecho","quejaDef","queja","termino","proceso","componentFormularioUsuario","correo","roles","tipoExpediente","estado","user","reparto","valores","errores","MENSAJE_ERROR","CAMPO_OBLIGATORIO","length","resetForm","errors","MENSAJE_INFORMATIVO","SELECCIONE_UNA_OPCION","label","grupoTrabajo","width","BOTON_NOMBRE","REGISTRAR","CANCELAR"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/UsuarioForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport 'rhfa-emergency-styles/dist/styles.css'\r\nimport Spinner from '../Utils/Spinner';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Link, } from \"react-router-dom\";\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport InfoExitoApi from '../Utils/InfoExitoApi';\r\nimport GenericApi from '../Api/Services/GenericApi';\r\nimport ModalGen from '../Utils/Modals/ModalGeneric';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport ModalCoincidenciasUsuarios from '../Utils/Modals/ModalCoincidenciasUsuarios';\r\nimport '../Utils/Constants';\r\nimport Select from 'react-select';\r\n\r\n// Se inicializa la clase\r\nfunction UsuarioForm() {\r\n\r\n    // Se inicializan las constantes\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getNombre, setNombre] = useState('');\r\n    const [getApellido, setApeliido] = useState('');\r\n    const [getUser, setUser] = useState('');\r\n    const [getEmail, setEmail] = useState('');\r\n    const [getIdentificacion, setIdentificacion] = useState('');\r\n\r\n    const [getIdDependencia, setIdDependencia] = useState('');\r\n    const [getEstado, setEstado] = useState('');\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n    const [rolesAsociados, setRolesAsociados] = useState([]);\r\n    const [tipoExpAsociados, setTipoExpAsociados] = useState([]);\r\n    const [getRespuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\r\n    const [listaDependenciaOrigen, setListaDependenciaOrigen] = useState({ data: {} });\r\n    const [respuestaDependenciaOrigen, setDependenciaOrigen] = useState(false);\r\n    const [getListaRoles, setListaRoles] = useState({ data: {} });\r\n    const [getRespuestaRoles, setRespuestaRoles] = useState(false);\r\n\r\n    const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({ data: {} });\r\n    const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\r\n\r\n    const [listaTipoProcesoDisciplinario, setListaProcesoDisciplinario] = useState({ data: {} });\r\n    const [respuestaProcesoDisciplinario, setRespuestaProcesoDisciplinario] = useState(false);\r\n\r\n    const [listaTiposQueja, setListaTiposQueja] = useState({ data: {} });\r\n    const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\r\n\r\n    const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({ data: {} });\r\n    const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\r\n\r\n    const [getTiposExpedientes, setTiposExpedientes] = useState({ data: {} });\r\n    const [getReparto, setReparto] = useState('');\r\n    const [getIdDependenciaSecretariaComun, setIdDependenciaSecretariaComun] = useState('');\r\n    const [listaGruposTrabajo, setListaGruposTrabajo] = useState({ data: {} });\r\n    const [getGrupoTrabajoSeleccionado, setGrupoTrabajoSeleccionado] = useState('');\r\n    const [getIdGrupoTrabajo, setIdGrupoTrabajo] = useState('');\r\n    const [respuestaGrupoTrabajo, setRespuestaGrupoTrabajo] = useState(false);\r\n    const [getListaGruposSeleccionadas, setListaGruposSeleccionadas] = useState([]);\r\n    const [getErrorGrupos, setErrorGrupos] = useState(\"\");\r\n\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getValidarSecretariaComun, setValidarSecretariaComun] = useState(false);\r\n\r\n\r\n    /**\r\n     * Método encargado de cargar la configuracion de la clase\r\n     */\r\n    useEffect(() => {\r\n        window.showSpinner(true);// Inicia el spinner        \r\n        async function fetchData() {// Se llama la funcion del metodo           \r\n            getAllDependenciaOrigen();  // Se cargan las dependencias origen\r\n        }\r\n        window.showSpinner(false);// Finaliza el spinner        \r\n        fetchData();// Se llama la funcion asincrona\r\n    }, []);\r\n\r\n\r\n    /**\r\n     * Método encargdo de cargar las dependencias registradas\r\n     */\r\n    const getAllDependenciaOrigen = () => {\r\n\r\n        GenericApi.getByIdGeneric('mas-dependencia-filtrado', global.Constants.ACCESO_DEPENDENCIA.CREAR_USUARIO).then(// Se consume la api para traer las depedencias a estado registrar\r\n\r\n            // Se incializa la variable de respuesta\r\n            datos => {\r\n\r\n                if (!datos.error) { // Se válida que no haya error\r\n\r\n                    setListaDependenciaOrigen(datos);// Se setean los datos\r\n                    setDependenciaOrigen(true); // Se redeclara la variable en true\r\n                    getllRoles(); // Se llama el metodo para cargar los roles\r\n\r\n                }\r\n                else {\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner   \r\n                }\r\n            }\r\n\r\n\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de cargar los roles\r\n     */\r\n    const getllRoles = () => {\r\n\r\n        GenericApi.getAllGeneric('role').then(// Se consume la api para traer los roles\r\n\r\n            datos => { // Se incializa la variable de respuesta\r\n\r\n                if (!datos.error) {  // Se valida que no haya error\r\n                    setListaRoles(datos); // Se setean los datos\r\n                    setRespuestaRoles(true); // Se redeclara la variable en true\r\n                    cargarTiposExpedientes();  // Se llama el metodo para cargar los tipos de expediente\r\n                }\r\n                else {\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de cargar los tipos de expediente\r\n     */\r\n    const cargarTiposExpedientes = () => {\r\n\r\n        GenericApi.getAllGeneric('mas-tipo-expediente').then( // Se consume la api para traer los roles\r\n\r\n            datos => { // Se incializa la variable de respuesta\r\n\r\n                if (!datos.error) { // Se valida que no haya error\r\n                    setTiposExpedientes(datos); // Se setean los datos                    \r\n                    setRespuestaTipoExpediente(true); // Se redeclara la variable en true\r\n                    cargarTiposDerechoPeticion(); // Se llama el metodo para cargar los tipos de derecho de peticion\r\n\r\n                } else {\r\n\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de cargar los tipos de derecho peticion\r\n     */\r\n\r\n    const cargarTiposDerechoPeticion = () => {\r\n\r\n        GenericApi.getAllGeneric('mas-tipo-derecho-peticion').then(// Se consume la api para traer los tipos de derecho peticion\r\n\r\n\r\n            datos => { // Se incializa la variable de respuesta\r\n\r\n                if (!datos.error) { // Se valida que no haya error\r\n\r\n                    setListaDerechoPeticion(datos); // Se setean los datos\r\n                    setRespuestaDerechoPeticion(true); // Se redeclara la variable en true\r\n                    cargarTiposQueja();// Se llama el metodo para cargar los tipos de queja\r\n\r\n                } else {\r\n\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encagrado de cargar los tipos de queja\r\n     */\r\n    const cargarTiposQueja = () => {\r\n\r\n        GenericApi.getAllGeneric('mas-tipo-queja').then( // Se consume la api para traer los tipos de queja\r\n\r\n            datos => { // Se incializa la variable de respuesta\r\n\r\n                if (!datos.error) { // Se valida que no haya error\r\n\r\n                    setListaTiposQueja(datos); // Se setean los datos\r\n                    setRespuestaTiposQueja(true); // Se redeclara la variable en true\r\n\r\n                    setListaProcesoDisciplinario(datos); // Se setean los datos\r\n                    setRespuestaProcesoDisciplinario(true); // Se redeclara la variable en true\r\n\r\n                    cargarTerminoRespuesta();// Se llama el metodo para cargar los tipos de respuesta\r\n\r\n                } else {\r\n\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de cargar los terminos de respuesta\r\n     */\r\n    const cargarTerminoRespuesta = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric('mas-termino-respuesta').then(\r\n\r\n            datos => {// Se incializa la variable de respuesta\r\n\r\n                if (!datos.error) {// Se valida que no haya error\r\n\r\n                    setListaTerminosRespuesta(datos);// Se setean los datos\r\n                    setRespuestaTerminosRespuesta(true);// Se redeclara la variable en true\r\n                    cargarIdDependenciaSecretariaComun();// Se llama el metodo para cargar el id de secretaria comun\r\n                } else {\r\n\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de cargar el id de secretaria comun\r\n     */\r\n    const cargarIdDependenciaSecretariaComun = () => {\r\n\r\n        // Se inicializa la variable\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'mas_parametro',\r\n                \"attributes\": {\r\n                    \"nombre\": \"id_dependencia_secretaria_comun\"\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se consume la API\r\n        GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n\r\n            // Se incializa la variable de respuesta\r\n            datos => {\r\n\r\n                if (!datos.error) { // Se valida que no haya error\r\n\r\n                    setIdDependenciaSecretariaComun(datos.data[0].attributes.valor); // Se setea el valor del id\r\n                    cargarGruposDeTrabajo(); // Se llama el metodo para cargar los grupos de trabajo\r\n\r\n                } else {\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    /**\r\n     * Método encargado de cargar los grupos de trabajo\r\n     */\r\n    const cargarGruposDeTrabajo = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getGeneric(\"mas_grupo_trabajo\").then(\r\n\r\n            datos => {// Se incializa la variable de respuesta\r\n\r\n                if (!datos.error) {// Se valida que no haya error\r\n\r\n                    setListaGruposTrabajo(datos);// Se setea los datos\r\n                    setRespuestaGrupoTrabajo(true);// Se setea la respuesta en true\r\n                }\r\n                else {\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner  \r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de setear el valor el cambiar\r\n     * @param {*} event \r\n     */\r\n    const handleInputChange = (event) => {\r\n\r\n        // Se capturan el input y valor correspondiente\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if (name == \"nombre\") {// Se valida cuando es nombre\r\n            setNombre(value); // Se setea el valor\r\n        }\r\n\r\n        if (name == \"apellido\") { // Se valida cuando es apellido\r\n            setApeliido(value);// Se setea el valor\r\n        }\r\n\r\n        if (name == \"identificacion\") { // Se valida cuando es apellido\r\n            setIdentificacion(value);// Se setea el valor\r\n        }\r\n\r\n        if (name == \"correo\") { // Se valida cuando es correo\r\n            setEmail(value);  // Se setea el valor\r\n        }\r\n\r\n        if (name == \"dependencia\") {  // Se valida cuando es dependencia\r\n\r\n            setIdDependencia(value);  // Se setea el valor\r\n            validarSecretariaComun(value); // Se llama el metodo encargado de validar si la dependencia tiene accceso a Secretaria Comun\r\n        }\r\n\r\n        if (name == \"estado\") {  // Se valida cuando es estado            \r\n            setEstado(value); // Se setea el valor\r\n        }\r\n\r\n        if (name == \"user\") { // Se valida cuando es user\r\n            setUser(value); // Se setea el valor\r\n        }\r\n\r\n        if (name == \"reparto\") {  // Se valida cuando es reparto\r\n            setReparto(value); // Se setea el valor\r\n        }\r\n\r\n        if (name == \"grupoTrabajo\") { // Se valida cuando es grupoTrabajo\r\n            setIdGrupoTrabajo(value); // Se setea el valor\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de cambiar el valor en los grupos de trabajo\r\n     * @param {*} v \r\n     */\r\n    const selectChangeGrupo = (v) => {\r\n\r\n        if (v != null) { // Se valida que es diferente de null\r\n            setListaGruposSeleccionadas(v); // Se setea el valor seleccionado\r\n        } else {\r\n            setErrorGrupos('Campo requerido'); // Se setea el mensaje de error de los grupos\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Método encargado de validar si la dependencia tiene activo el permiso de secretaria comun\r\n     * @param {*} idDependencia \r\n     */\r\n    const validarSecretariaComun = (idDependencia) => {\r\n\r\n        window.showSpinner(true); // Se usa el cargando\r\n\r\n        // Se consume la API\r\n        GenericApi.getGeneric(\"mas-dependencia-configuracion/\" + idDependencia).then(\r\n\r\n            datos => { // Se inicializa la variable de respuesta\r\n\r\n\r\n                if (!datos.error) { // Se valida que no haya error\r\n                    setValidarSecretariaComun(true); // Se redeclara la variable en true\r\n                } else {\r\n                    setValidarSecretariaComun(false); // Se redeclara la variable en true\r\n                }\r\n\r\n                window.showSpinner(false); // Se quita el cargando\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de cargar las dependencias de origen\r\n     * @returns \r\n     */\r\n    const selectDependenciaOrigen = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            listaDependenciaOrigen.data.map((dependencia, i) => { // Se recorre el array\r\n                return (\r\n                    <option key={dependencia.id} value={dependencia.id}>{dependencia.attributes.nombre}</option>  // Se retorna el select por posicion\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const mostrarModalDirectorio = () => { // Metodo encargado de mostrar el modal del directorio\r\n        window.showModalCoincidenciasUsuario();  // Se llama el modal\r\n    }\r\n\r\n\r\n    /**\r\n     *  Método encargado de retorna la buscqueda del modal\r\n     * @param {*} childData \r\n     */\r\n    const handleCallback = (childData) => {\r\n\r\n        try { // Se inicializa el trycatch\r\n\r\n            if (childData != null) { // Se valida que la data sea diferente de null\r\n\r\n                // Se setean los valores\r\n                setNombre(childData.nombre);\r\n                setApeliido(childData.apellido);\r\n                setEmail(childData.email);\r\n                setUser(childData.name);\r\n                setIdentificacion(childData.identificacion);\r\n            }\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de enviar los datos al backend\r\n    const enviarDatos = () => {\r\n\r\n        window.showSpinner(true); // Se usa el cargando\r\n        let data; // Se inicializa la data\r\n\r\n        // Se redeclara la variable con la informacion a enviar\r\n        data = {\r\n\r\n            \"data\": {\r\n                \"type\": \"usuario\",\r\n                \"attributes\": {\r\n                    \"nombre\": getNombre ? getNombre : \"\",\r\n                    \"apellido\": getApellido ? getApellido : \"\",\r\n                    \"name\": getUser ? getUser : \"\",\r\n                    \"email\": getEmail ? getEmail : \"\",\r\n                    \"identificacion\": getIdentificacion ? getIdentificacion : \"\",\r\n                    \"id_dependencia\": getIdDependencia ? getIdDependencia : \"\",\r\n                    \"id_mas_grupo_trabajo_secretaria_comun\": getListaGruposSeleccionadas ? getListaGruposSeleccionadas : \"\",\r\n                    \"roles\": rolesAsociados,\r\n                    \"expedientes\": tipoExpAsociados,\r\n                    \"estado\": getEstado ? getEstado : \"\",\r\n                    \"reparto_habilitado\": getReparto ? getReparto : \"\",\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se consume la API\r\n        GenericApi.addGeneric('usuario', data).then(\r\n\r\n            datos => { // Se inicializa la variable de respuesta\r\n\r\n                if (!datos.error) { // Se valida que no haya error\r\n\r\n                    setIsRedirect(true); // Se setea el valor en true                    \r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: global.Constants.MENSAJES_MODAL.EXITOSO, show: true, redirect: '/Usuario', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n\r\n                } else {\r\n                    // Se muestra el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de agregar el check\r\n    const agregarCheck = (e, rolId) => {\r\n\r\n        // Se valida que sea true el check\r\n        if (e == true) {\r\n\r\n            // Se añade al array el valor\r\n            setRolesAsociados(oldArray => [...oldArray, rolId]);\r\n        } else {\r\n\r\n            // Se busca el indice con el id\r\n            var index = rolesAsociados.indexOf(rolId);\r\n\r\n            // Se valida que se encuentre en el array\r\n            if (index !== -1) {\r\n\r\n                // Se quita del array de roles\r\n                rolesAsociados.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de agregar el check de tipos de expediente\r\n    const agregarCheckTipoExp = (e, extId, subExpid) => {\r\n\r\n        // Se valida que sea true el check\r\n        if (e == true) {\r\n\r\n            // Se añade al array el valor\r\n            setTipoExpAsociados(oldArray => [...oldArray, (extId + \"|\" + subExpid)]);\r\n        } else {\r\n\r\n            // Se busca el indice con el id\r\n            var index = tipoExpAsociados.indexOf((extId + \"|\" + subExpid));\r\n\r\n            // Se valida que se encuentre en el array\r\n            if (index !== -1) {\r\n\r\n                // Se quita del array de roles\r\n                tipoExpAsociados.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de listar los roles\r\n    const listarRoles = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array\r\n            getListaRoles.data.map((rol, i) => {\r\n\r\n                // Se retorna cada columna por posicion\r\n                return (\r\n                    <tr key={(rol.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <input type=\"checkbox\" onChange={e => agregarCheck(e.target.checked, rol.id)} className=\"custom-control-input\" id={rol.id} name={rol.id} />\r\n                                <label className=\"custom-control-label\" htmlFor={rol.id}></label>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {rol.attributes.nombre.toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de listar los tippos de expediente asociados\r\n    const listarTiposExpedientessociados = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se carga el html\r\n            <div className='row'>\r\n                <div className=\"col-md-12\">\r\n                    {\r\n                        // Se recorre el array\r\n                        getTiposExpedientes.data.map((tipoExp, i) => {\r\n\r\n                            // Se retorna el html ppr posicion\r\n                            return (\r\n                                <div key={tipoExp.id} id=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\r\n                                    <div className=\"block block-rounded mb-1\">\r\n                                        <div className=\"block-header block-header-default\" role=\"tab\" id=\"accordion_h1\">\r\n                                            <a className=\"font-w600\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#accordion_q1\" aria-expanded=\"true\" aria-controls=\"accordion_q1\"><i className=\"fas fa-folder\" /> {tipoExp.attributes.nombre} </a>\r\n                                        </div>\r\n                                        <div id=\"accordion_q1\" className=\"show\" role=\"tabpanel\" aria-labelledby=\"accordion_h1\" data-parent=\"#accordion\">\r\n                                            <div className=\"block-content\">\r\n                                                {/*DERECHO DE PETICION*/}\r\n                                                {tipoExp.id === '1' && respuestaTipoDerechoPeticion ? componenteTipoExpedienteDerecho() : ''}\r\n                                                {/*PODER REFERENTE A SOLIICTUD*/}\r\n                                                {tipoExp.id === '2' && respuestaTiposQueja ? componenteTipoExpedienteReferente() : ''}\r\n                                                {/*QUEJA*/}\r\n                                                {tipoExp.id === '3' && respuestaTiposQueja ? componenteTipoExpedienteQueja() : ''}\r\n                                                {/*TUTELA*/}\r\n                                                {tipoExp.id === '4' && respuestaTerminosRespuesta ? componenteTipoExpedienteTutela() : ''}\r\n                                                {/*PROCESO DISCIPLINARIO*/}\r\n                                                {tipoExp.id === '5' && respuestaProcesoDisciplinario ? componenteTipoExpedienteProcesoDisciplinario() : ''}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div >\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Tipo expediente - Derecho Peticion\r\n    const componenteTipoExpedienteDerecho = () => {\r\n        return (\r\n\r\n            listaTipoDerechoPeticion.data.map((derecho, i) => {\r\n                return (\r\n                    <tr key={(derecho.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n\r\n                                        (tipoExpAsociados.indexOf(('1|' + derecho.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '1', derecho.id)} className=\"custom-control-input\" id={'derecho' + derecho.id} name={'derecho' + derecho.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'derecho' + derecho.id}></label>\r\n                                            </div>\r\n\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '1', derecho.id)} className=\"custom-control-input\" id={'derecho' + derecho.id} name={'derecho' + derecho.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'derecho' + derecho.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {derecho.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n\r\n\r\n        )\r\n    }\r\n\r\n    // Tipo expediente - Poder Referente\r\n    const componenteTipoExpedienteReferente = () => {\r\n        return (\r\n\r\n            listaTiposQueja.data.map((quejaDef, i) => {\r\n                return (\r\n                    <tr key={(quejaDef.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <div>\r\n                                    <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '2', quejaDef.id)} className=\"custom-control-input\" id={'quejaDef' + quejaDef.id} name={'quejaDef' + quejaDef.id} />\r\n                                    <label className=\"custom-control-label\" htmlFor={'quejaDef' + quejaDef.id}></label>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {quejaDef.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n\r\n\r\n        )\r\n    }\r\n\r\n    // Tipo expediente - Queja\r\n    const componenteTipoExpedienteQueja = () => {\r\n        return (\r\n\r\n            listaTiposQueja.data.map((queja, i) => {\r\n                return (\r\n                    <tr key={(queja.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <div>\r\n                                    <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '3', queja.id)} className=\"custom-control-input\" id={'queja' + queja.id} name={'queja' + queja.id} />\r\n                                    <label className=\"custom-control-label\" htmlFor={'queja' + queja.id}></label>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {queja.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n\r\n\r\n        )\r\n    }\r\n\r\n    // Tipo expediente - Tutela\r\n    const componenteTipoExpedienteTutela = () => {\r\n        return (\r\n            listaTerminosRespuesta.data.map((termino, i) => {\r\n                return (\r\n                    <tr key={(termino.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n\r\n                                <div>\r\n                                    <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '4', termino.id)} className=\"custom-control-input\" id={'termino' + termino.id} name={'termino' + termino.id} />\r\n                                    <label className=\"custom-control-label\" htmlFor={'termino' + termino.id}></label>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {termino.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // Tipo expediente - Proceso Disciplinario\r\n    const componenteTipoExpedienteProcesoDisciplinario = () => {\r\n        return (\r\n            listaTiposQueja.data.map((proceso, i) => {\r\n                return (\r\n                    <tr key={(proceso.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (tipoExpAsociados.indexOf(('5|' + proceso.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '5', proceso.id)} className=\"custom-control-input\" id={'proceso' + proceso.id} name={'proceso' + proceso.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'proceso' + proceso.id}></label>\r\n                                            </div>\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '5', proceso.id)} className=\"custom-control-input\" id={'proceso' + proceso.id} name={'termino' + proceso.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'proceso' + proceso.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {proceso.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const componentFormularioUsuario = () => {\r\n        return (\r\n            <>\r\n                {<ModalCoincidenciasUsuarios parentCallback={handleCallback} />}\r\n                <Spinner />\r\n                <Formik\r\n                    initialValues={{\r\n                        nombre: '',\r\n                        apellido: '',\r\n                        correo: '',\r\n                        dependencia: '',\r\n                        roles: '',\r\n                        tipoExpediente: '',\r\n                        estado: '',\r\n                        user: '',\r\n                        reparto: '',\r\n\r\n                    }}\r\n                    enableReinitialize\r\n                    validate={(valores) => {\r\n\r\n                        let errores = {}\r\n\r\n                        if (!getUser) {\r\n                            errores.user = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getNombre) {\r\n                            errores.nombre = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getApellido) {\r\n                            errores.apellido = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getEmail) {\r\n                            errores.correo = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getIdDependencia) {\r\n                            errores.dependencia = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (rolesAsociados.length == '') {\r\n                            errores.roles = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (getEstado == '') {\r\n                            errores.estado = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getReparto) {\r\n                            errores.reparto = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        return errores\r\n                    }}\r\n                    onSubmit={(valores, { resetForm }) => {\r\n                        enviarDatos();\r\n                    }}\r\n                >\r\n                    {({ errors }) => (\r\n                        <Form>\r\n                            <div className=\"block block-themed\">\r\n                                <div className=\"block-header\">\r\n                                    <h3 className=\"block-title\">ADMINISTRACIÓN :: USUARIOS</h3>\r\n                                </div>\r\n\r\n                                <div className=\"row text-right w2d-enter\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <Link to={'/Usuario'} title='Regresar'>\r\n                                            <button type=\"button\" className=\"btn btn-primary\"><i className=\"fas fa-backward\"></i> </button>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"block-content text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-primary\" onClick={() => mostrarModalDirectorio()}>\r\n                                        BUSCAR USUARIO\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"block-content\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor='nombre'>NOMBRES <span className=\"text-danger\">*</span></label>\r\n                                                <Field disabled value={getNombre} type=\"text\" id=\"nombre\" name=\"nombre\" className=\"form-control\" placeholder=\"Nombre\"\r\n                                                    onChange={handleInputChange} />\r\n                                                {/*<ErrorMessage name=\"nombre\" component={() => (<span className=\"text-danger\">{errors.nombre}</span>)} />*/}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor='apellido'>APELLIDOS <span className=\"text-danger\">*</span></label>\r\n                                                <Field disabled value={getApellido} type=\"text\" id=\"apellido\" name=\"apellido\" className=\"form-control\" placeholder=\"Apellido\"\r\n                                                    onChange={handleInputChange} />\r\n                                                {/*<ErrorMessage name=\"apellido\" component={() => (<span className=\"text-danger\">{errors.apellido}</span>)} />*/}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor='user'>USUARIO <span className=\"text-danger\">*</span></label>\r\n                                                <Field disabled value={getUser} onChange={handleInputChange} type=\"text\" id=\"user\" name=\"user\" className=\"form-control\" placeholder=\"Usuario\" />\r\n                                                {/*<ErrorMessage name=\"user\" component={() => (<span className=\"text-danger\">{errors.user}</span>)} />*/}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor='correo'>CORREO <span className=\"text-danger\">*</span></label>\r\n                                                <Field disabled value={getEmail} type=\"text\" id=\"correo\" name=\"correo\"\r\n                                                    onChange={handleInputChange} className=\"form-control\" placeholder=\"Correo\" />\r\n                                                {/*<ErrorMessage name=\"correo\" component={() => (<span className=\"text-danger\">{errors.correo}</span>)} />*/}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor='correo'>IDENTIFICACIÓN <span className=\"text-danger\">*</span></label>\r\n                                                <Field disabled value={getIdentificacion} type=\"text\" id=\"correo\" name=\"identificacion\"\r\n                                                    onChange={handleInputChange} className=\"form-control\" placeholder=\"identificacion\" />\r\n                                                {/*<ErrorMessage name=\"correo\" component={() => (<span className=\"text-danger\">{errors.correo}</span>)} />*/}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"dependencia\">DEPENDENCIA <span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"select\" value={getIdDependencia} onChange={handleInputChange} className=\"form-control\" id=\"dependencia\" name=\"dependencia\" placeholder=\"Dependencia\">\r\n                                                    <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                    {respuestaDependenciaOrigen ? selectDependenciaOrigen() : null}\r\n                                                </Field>\r\n                                                <ErrorMessage name=\"dependencia\" component={() => (<span className=\"text-danger\">{errors.dependencia}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        {getValidarSecretariaComun ?\r\n                                            (\r\n                                                <div className=\"col-md-6\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"dependencgrupoTrabajoia\">GRUPOS DE TRABAJO<span className=\"text-danger\">*</span></label>\r\n\r\n                                                        {respuestaGrupoTrabajo && listaGruposTrabajo.data.length > 0 ?\r\n                                                            <Select\r\n                                                                id='grupoTrabajo'\r\n                                                                name='grupoTrabajo'\r\n                                                                isMulti={true}\r\n                                                                value={getListaGruposSeleccionadas}\r\n                                                                placeholder=\"Selecciona\"\r\n                                                                noOptionsMessage={() => \"Sin datos\"}\r\n                                                                options={listaGruposTrabajo?.data?.map(e =>\r\n                                                                    ({ label: e.attributes.nombre, value: e.id }))}\r\n                                                                onChange={(e) => selectChangeGrupo(e)}\r\n                                                            />\r\n                                                            : null}\r\n                                                        <ErrorMessage name=\"grupoTrabajo\" component={() => (<span className=\"text-danger\">{errors.grupoTrabajo} {getErrorGrupos}</span>)} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                            :\r\n                                            setIdGrupoTrabajo('')\r\n                                        }\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"estado\">ESTADO <span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"select\" value={getEstado} onChange={handleInputChange} className=\"form-control\" id=\"estado\" name=\"estado\">\r\n                                                    <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                    <option value=\"1\">ACTIVO</option>\r\n                                                    <option value=\"0\">INACTIVO</option>\r\n                                                </Field>\r\n                                                <ErrorMessage name=\"estado\" component={() => (<span className=\"text-danger\">{errors.estado}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"reparto\">HABILITADO PARA REPARTO<span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"select\" value={getReparto} onChange={handleInputChange} className=\"form-control\" id=\"reparto\" name=\"reparto\" placeholder=\"Habilitado para reparto\">\r\n                                                    <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                    <option value=\"1\" selected>SI</option>\r\n                                                    <option value=\"0\">NO</option>\r\n                                                </Field>\r\n                                                <ErrorMessage name=\"reparto\" component={() => (<span className=\"text-danger\">{errors.reparto}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"block block-themed\">\r\n                                <div className=\"block-header\">\r\n                                    <h3 className=\"block-title\">ASIGNACIÓN DE ROLES</h3>\r\n                                </div>\r\n                                <div className=\"block-content\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <label >DEBE SELECCIONAR AL MENOS UN ROL<span className=\"text-danger\">*</span></label>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th style={{ width: \"50px\" }}>SELECCIONAR</th>\r\n                                                        <th>NOMBRE DE ROL</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody >\r\n                                                    {getRespuestaRoles ? listarRoles() : null}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        <ErrorMessage name=\"roles\" component={() => (<span className=\"text-danger\">{errors.roles}</span>)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"block block-themed\">\r\n                                <div className=\"block-header\">\r\n                                    <h3 className=\"block-title\">TIPOS DE EXPEDIENTES QUE EL USUARIO PUEDE GESTIONAR</h3>\r\n                                </div>\r\n                                <div className=\"block-content\">\r\n                                    <div className=\"row\" >\r\n                                        <div className=\"col-md-12\">\r\n                                            <ErrorMessage name=\"tipoExpediente\" component={() => (<span className=\"text-danger\">{errors.tipoExpediente}</span>)} />\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            {getRespuestaTipoExpediente ? listarTiposExpedientessociados() : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right bg-light\">\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">{global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n                                    <Link to={'/Usuario'} className=\"font-size-h5 font-w600\" >\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <div className=\"w2d_block let\">\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                        <li className=\"breadcrumb-item\"> <small>Administración</small></li>\r\n                        <li className=\"breadcrumb-item\"> <small>Perfiles</small></li>\r\n                        <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/Usuario`}><small>Lista de usuarios</small></Link></li>\r\n                        <li className=\"breadcrumb-item\"> <small> Crear usuario</small></li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n                {componentFormularioUsuario()}\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default UsuarioForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}