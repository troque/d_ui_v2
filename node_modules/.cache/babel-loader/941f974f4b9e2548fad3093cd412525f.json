{"ast":null,"code":"import axios from 'axios';\nimport { getBearerToken } from '../../../components/Utils/Common';\nconst baseUrl = process.env.REACT_APP_API_URL;\nconst headers = {\n  'Content-Type': 'application/vnd.api+json',\n  'Accept': 'application/vnd.api+json'\n};\n\nasync function getGeneric(relativeUrl) {\n  const url = baseUrl + relativeUrl;\n  headers['Authorization'] = getBearerToken();\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllGeneric(serviceName) {\n  const url = serviceName;\n  return getGeneric(url);\n}\n\nasync function getByIdGeneric(serviceName, id) {\n  const url = serviceName + \"/\" + id;\n  return getGeneric(url);\n}\n\nasync function getByDataGeneric(serviceName, data) {\n  const url = baseUrl + serviceName;\n  headers['Authorization'] = getBearerToken();\n  console.log(data);\n  return await axios.post(url, data, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function addGeneric(serviceName, data) {\n  const url = baseUrl + serviceName;\n  headers['Authorization'] = getBearerToken();\n  return await axios.post(url, data, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function updateGeneric(serviceName, id, data) {\n  const url = baseUrl + serviceName + \"/\" + id;\n  headers['Authorization'] = getBearerToken();\n  return await axios.put(url, data, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nexport default {\n  getGeneric,\n  getAllGeneric,\n  getByIdGeneric,\n  addGeneric,\n  updateGeneric,\n  getByDataGeneric\n};","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/Api/Services/GenericApi.js"],"names":["axios","getBearerToken","baseUrl","process","env","REACT_APP_API_URL","headers","getGeneric","relativeUrl","url","get","then","response","data","catch","error","estado","getAllGeneric","serviceName","getByIdGeneric","id","getByDataGeneric","console","log","post","addGeneric","updateGeneric","put"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { getBearerToken } from '../../../components/Utils/Common';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst headers = {\r\n    'Content-Type': 'application/vnd.api+json',\r\n    'Accept': 'application/vnd.api+json'\r\n}\r\n\r\nasync function getGeneric(relativeUrl){\r\n    const url = baseUrl + relativeUrl;\r\n    headers['Authorization'] = getBearerToken();\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n    .then(response => {\r\n        //console.log(response.data);\r\n        return response.data;\r\n    })\r\n    .catch(error => {\r\n        //console.log(error);\r\n        return {estado: false, error: error}\r\n    });\r\n}\r\n\r\nasync function getAllGeneric(serviceName){\r\n    const url = serviceName;\r\n    return getGeneric(url);\r\n}\r\n\r\nasync function getByIdGeneric(serviceName, id){\r\n    const url = serviceName + \"/\" + id;\r\n    return getGeneric(url);\r\n}\r\n\r\nasync function getByDataGeneric(serviceName, data){\r\n    const url = baseUrl + serviceName;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n\r\n    console.log(data);\r\n\r\n    return await axios.post(url, data, {\r\n        headers: headers\r\n    })\r\n    .then(response => {\r\n        return response.data;\r\n    })\r\n    .catch(error => {\r\n        return {estado: false, error: error}\r\n    });\r\n}\r\n\r\nasync function addGeneric(serviceName, data){\r\n    const url = baseUrl + serviceName;\r\n    headers['Authorization'] = getBearerToken();\r\n    return await axios.post(url, data, {\r\n        headers: headers\r\n    })\r\n    .then(response => {\r\n        return response.data;\r\n    })\r\n    .catch(error => {\r\n        return {estado: false, error: error}\r\n    });\r\n}\r\n\r\nasync function updateGeneric(serviceName, id, data){\r\n    const url = baseUrl + serviceName + \"/\" + id;\r\n    headers['Authorization'] = getBearerToken();\r\n    return await axios.put(url, data, {\r\n        headers: headers\r\n    })\r\n    .then(response => {\r\n        return response.data;\r\n    })\r\n    .catch(error => {\r\n        return {estado: false, error: error}\r\n    });\r\n}\r\n\r\n\r\n\r\nexport default { getGeneric, getAllGeneric, getByIdGeneric, addGeneric, updateGeneric, getByDataGeneric}\r\n"]},"metadata":{},"sourceType":"module"}