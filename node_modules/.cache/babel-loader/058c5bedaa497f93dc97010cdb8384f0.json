{"ast":null,"code":"import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{ErrorMessage,Field,Form,Formik}from'formik';import React,{useEffect,useState}from'react';import{useParams}from\"react-router\";import{Link}from\"react-router-dom\";import{useLocation}from'react-router-dom';import Spinner from'../Utils/Spinner';import ModalGen from'../Utils/Modals/ModalGeneric';import GenericApi from'../Api/Services/GenericApi';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function PortalNotificacionesCambiarEstadoForm(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),countTextArea=_useState2[0],setCountTextArea=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),nombreUsuario=_useState4[0],setNombreUsuario=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),getMaximoTextArea=_useState6[0],setMaximoTextArea=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),getMinimoTextArea=_useState8[0],setMinimoTextArea=_useState8[1];//const location = useLocation()\n//const { from, disable } = location.state\n//let procesoDisciplinarioId = from.procesoDisciplinarioId;\nvar _useParams=useParams(),idNotificacion=_useParams.idNotificacion;var _useState9=useState({data:[],links:[],meta:[]}),_useState10=_slicedToArray(_useState9,2),getLogNotificacion=_useState10[0],setLogNotificacion=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),getRtaInfoNotificacion=_useState12[0],setRtaInfoNotificacion=_useState12[1];var _useState13=useState(true),_useState14=_slicedToArray(_useState13,2),getEstadoNotificacion=_useState14[0],setEstadoNotificacion=_useState14[1];var _useState15=useState({title:\"\",message:\"\",show:false}),_useState16=_slicedToArray(_useState15,2),getModalState=_useState16[0],setModalState=_useState16[1];var _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),getNombreProceso=_useState18[0],setNombreProceso=_useState18[1];var _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),getDescripcion=_useState20[0],setDescripcion=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),getRepuestaDescripcion=_useState22[0],setRepuestaDescripcion=_useState22[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:window.showSpinner(true);GenericApi.getByIdGeneric(\"portal-notificaciones\",idNotificacion).then(function(datos){if(!datos.error){if(datos.data.attributes.estado==true){setEstadoNotificacion(false);}setLogNotificacion(datos);setRtaInfoNotificacion(true);nombreProceso(datos.data.attributes.uuid_proceso_disciplinario.uuid);}else{setModalState({title:getNombreProceso+\" :: NOTIFICACIÓN\",message:datos.error.toString(),show:true,redirect:'/PortalNotificaciones',alert:global.Constants.TIPO_ALERTA.ERROR});}});case 2:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[]);var obtenerParametros=function obtenerParametros(){try{var data={\"data\":{\"type\":'mas_parametro',\"attributes\":{\"nombre\":\"minimo_caracteres_textarea|maximo_caracteres_textarea\"}}};// buscamos el parametro\nGenericApi.getByDataGeneric(\"parametro/parametro-nombre\",data).then(function(datos){if(!datos.error){if(datos[\"data\"].length>0){datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea');}).map(function(filteredName){return setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]);});datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea');}).map(function(filteredName){return setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]);});}}else{setModalState({title:getNombreProceso+\" :: NOTIFICACIÓN\",message:datos.error.toString(),show:true,redirect:'/PortalNotificaciones',alert:global.Constants.TIPO_ALERTA.ERROR});}window.showSpinner(false);});}catch(error){// console.log(error);\n}};var nombreProceso=function nombreProceso(idProcesoDisciplinario){GenericApi.getByIdGeneric(\"nombre-proceso\",idProcesoDisciplinario).then(function(datos){if(!datos.error){setNombreProceso(datos.data.attributes.nombre);}obtenerParametros();});};var enviarDatos=function enviarDatos(datos){window.showSpinner(true);var data={\"data\":{\"type\":'portal-notificaciones',\"attributes\":{\"id_notificacion\":idNotificacion,\"descripcion\":getDescripcion,\"estado\":getEstadoNotificacion}}};GenericApi.getByDataGeneric(\"actualizar-estado-portal-notificaciones\",data).then(function(datos){if(!datos.error){setModalState({title:getNombreProceso+\" :: NOTIFICACIÓN\",message:global.Constants.MENSAJES_MODAL.EXITOSO,show:true,redirect:'/PortalNotificaciones',alert:global.Constants.TIPO_ALERTA.EXITO});window.showSpinner(false);}else{setModalState({title:getNombreProceso+\" :: NOTIFICACIÓN\",message:datos.error.toString(),show:true,redirect:'/PortalNotificaciones',alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);}});};var CargarInfoNotificacion=function CargarInfoNotificacion(){if(getLogNotificacion.data!=null&&typeof getLogNotificacion.data!='undefined'){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{style:{width:\"20%\"},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"FUNCIONARIO: \"}),getLogNotificacion.data.attributes.logs[0].nombre_completo.toLocaleUpperCase(),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"FECHA: \"}),getLogNotificacion.data.attributes.logs[0].fecha_creado]}),/*#__PURE__*/_jsx(\"td\",{style:{width:\"20%\"},children:getLogNotificacion.data.attributes.logs[0].nombre_dependencia}),/*#__PURE__*/_jsx(\"td\",{style:{width:\"60%\"},\"data-toggle\":\"popover\",\"data-placement\":\"top\",title:getLogNotificacion.data.attributes.logs[0].descripcion,children:getLogNotificacion.data.attributes.logs[0].descripcion_corta.toUpperCase()})]});}};var changeDescripcion=function changeDescripcion(e){if(e.target.value===''||global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(e.target.value)&&e.target.value.length<=getMaximoTextArea){setDescripcion(e.target.value);setCountTextArea(e.target.value.length);setRepuestaDescripcion(true);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(ModalGen,{data:getModalState}),/*#__PURE__*/_jsx(Formik,{initialValues:{descripcion:''},enableReinitialize:true,validate:function validate(valores){var errores={};if(countTextArea>getMaximoTextArea){errores.descripcion='Debe ingresar máximo '+getMaximoTextArea+' carácteres';}if(countTextArea<getMinimoTextArea){errores.descripcion='Debe ingresar mínimo '+getMinimoTextArea+' carácteres';}if(getRepuestaDescripcion==false){errores.descripcion=global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS;}return errores;},onSubmit:function onSubmit(valores,_ref){var resetForm=_ref.resetForm;enviarDatos(valores);},children:function children(_ref2){var _getLogNotificacion$d,_getLogNotificacion$d2,_getLogNotificacion$d3;var errors=_ref2.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"w2d_block let\",children:/*#__PURE__*/_jsx(\"nav\",{\"aria-label\":\"breadcrumb\",children:/*#__PURE__*/_jsxs(\"ol\",{className:\"breadcrumb breadcrumb-alt push\",children:[/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/PortalNotificaciones\",children:/*#__PURE__*/_jsx(\"small\",{children:\"Notificaciones\"})})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Cambiar estado de notificaci\\xF3n\"})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsxs(\"h3\",{className:\"block-title\",children:[\" \",getNombreProceso,\" :: \",/*#__PURE__*/_jsxs(\"strong\",{children:[getEstadoNotificacion?'ACTIVA':'INACTIVA',\" NOTIFICACI\\xD3N\"]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:(getLogNotificacion===null||getLogNotificacion===void 0?void 0:(_getLogNotificacion$d=getLogNotificacion.data)===null||_getLogNotificacion$d===void 0?void 0:(_getLogNotificacion$d2=_getLogNotificacion$d.attributes)===null||_getLogNotificacion$d2===void 0?void 0:(_getLogNotificacion$d3=_getLogNotificacion$d2.logs)===null||_getLogNotificacion$d3===void 0?void 0:_getLogNotificacion$d3.length)>0?/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered table-striped table-vcenter js-dataTable-full table-responsive-md\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"REGISTRADO POR\"}),/*#__PURE__*/_jsx(\"th\",{children:\"DEPENDENCIA\"}),/*#__PURE__*/_jsx(\"th\",{children:\"DESCRIPCI\\xD3N\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:getRtaInfoNotificacion?CargarInfoNotificacion():null})]}):null}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"descripcion\",children:[\"MOTIVO POR EL QUE \",getEstadoNotificacion?'ACTIVA':'INACTIVA',\" LA NOTIFICACI\\xD3N \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{as:\"textarea\",className:\"form-control\",id:\"descripcion\",name:\"descripcion\",rows:\"4\",placeholder:\"ESCRIBA EN ESTE ESPACIO LA OBSERVACI\\xD3N\",maxLength:getMaximoTextArea,minLength:getMinimoTextArea,value:getDescripcion,onChange:changeDescripcion}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-primary\",children:[countTextArea,\" / \",getMaximoTextArea]})}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"descripcion\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.descripcion});}})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right bg-light\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:global.Constants.BOTON_NOMBRE.REGISTRAR}),/*#__PURE__*/_jsx(Link,{to:\"/PortalNotificaciones/\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:global.Constants.BOTON_NOMBRE.CANCELAR})})]})]})]});}})]});}export default PortalNotificacionesCambiarEstadoForm;","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","useParams","Link","useLocation","Spinner","ModalGen","GenericApi","PortalNotificacionesCambiarEstadoForm","countTextArea","setCountTextArea","nombreUsuario","setNombreUsuario","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","idNotificacion","data","links","meta","getLogNotificacion","setLogNotificacion","getRtaInfoNotificacion","setRtaInfoNotificacion","getEstadoNotificacion","setEstadoNotificacion","title","message","show","getModalState","setModalState","getNombreProceso","setNombreProceso","getDescripcion","setDescripcion","getRepuestaDescripcion","setRepuestaDescripcion","fetchData","window","showSpinner","getByIdGeneric","then","datos","error","attributes","estado","nombreProceso","uuid_proceso_disciplinario","uuid","toString","redirect","alert","global","Constants","TIPO_ALERTA","ERROR","obtenerParametros","getByDataGeneric","length","filter","includes","map","filteredName","idProcesoDisciplinario","nombre","enviarDatos","MENSAJES_MODAL","EXITOSO","EXITO","CargarInfoNotificacion","width","logs","nombre_completo","toLocaleUpperCase","fecha_creado","nombre_dependencia","descripcion","descripcion_corta","toUpperCase","changeDescripcion","e","target","value","CARACTERES_ESPECIALES","formatOnlyLettersWhitAccent","test","valores","errores","MENSAJE_ERROR","ERROR_FORMATO_CARACTERES_INVALIDOS","resetForm","errors","BOTON_NOMBRE","REGISTRAR","CANCELAR"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/PortalNotificacionesCambiarEstadoForm.js"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport Spinner from '../Utils/Spinner';\r\nimport ModalGen from '../Utils/Modals/ModalGeneric';\r\nimport GenericApi from '../Api/Services/GenericApi';\r\n\r\nfunction PortalNotificacionesCambiarEstadoForm() {\r\n\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [nombreUsuario, setNombreUsuario] = useState(\"\");\r\n\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n\r\n    //const location = useLocation()\r\n    //const { from, disable } = location.state\r\n    //let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n    let { idNotificacion } = useParams();\r\n\r\n\r\n    const [getLogNotificacion, setLogNotificacion] = useState({ data: [], links: [], meta: [] });\r\n    const [getRtaInfoNotificacion, setRtaInfoNotificacion] = useState(false);\r\n    const [getEstadoNotificacion, setEstadoNotificacion] = useState(true);\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n    const [getDescripcion, setDescripcion] = useState('');\r\n    const [getRepuestaDescripcion, setRepuestaDescripcion] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            window.showSpinner(true);\r\n            GenericApi.getByIdGeneric(\"portal-notificaciones\", idNotificacion).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n\r\n                        if (datos.data.attributes.estado == true) {\r\n                            setEstadoNotificacion(false);\r\n                        }\r\n                        setLogNotificacion(datos);\r\n                        setRtaInfoNotificacion(true);                        \r\n                        nombreProceso(datos.data.attributes.uuid_proceso_disciplinario.uuid)\r\n                    }\r\n                    else {\r\n                        setModalState({ title: getNombreProceso + \" :: NOTIFICACIÓN\", message: datos.error.toString(), show: true, redirect: '/PortalNotificaciones', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n\r\n                }\r\n            )\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const obtenerParametros = () => {\r\n        try {\r\n\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            // buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: getNombreProceso + \" :: NOTIFICACIÓN\", message: datos.error.toString(), show: true, redirect: '/PortalNotificaciones', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                    window.showSpinner(false);\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    const nombreProceso = (idProcesoDisciplinario) => {\r\n\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\", idProcesoDisciplinario).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre)\r\n                }                \r\n                obtenerParametros();\r\n            }\r\n        )\r\n    }\r\n\r\n    const enviarDatos = (datos) => {\r\n        window.showSpinner(true);\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'portal-notificaciones',\r\n                \"attributes\": {\r\n                    \"id_notificacion\": idNotificacion,\r\n                    \"descripcion\": getDescripcion,\r\n                    \"estado\": getEstadoNotificacion,\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"actualizar-estado-portal-notificaciones\", data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setModalState({ title: getNombreProceso + \" :: NOTIFICACIÓN\", message: global.Constants.MENSAJES_MODAL.EXITOSO, show: true, redirect: '/PortalNotificaciones', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                    window.showSpinner(false);\r\n\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso + \" :: NOTIFICACIÓN\", message: datos.error.toString(), show: true, redirect: '/PortalNotificaciones', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const CargarInfoNotificacion = () => {\r\n\r\n        if (getLogNotificacion.data != null && typeof (getLogNotificacion.data) != 'undefined') {\r\n            return (\r\n                <tr>\r\n                    <td style={{ width: \"20%\" }}>\r\n                        <strong>FUNCIONARIO: </strong>{getLogNotificacion.data.attributes.logs[0].nombre_completo.toLocaleUpperCase()}<br />\r\n                        <strong>FECHA: </strong>{getLogNotificacion.data.attributes.logs[0].fecha_creado}\r\n                    </td>\r\n                    <td style={{ width: \"20%\" }}>{getLogNotificacion.data.attributes.logs[0].nombre_dependencia}</td>\r\n                    <td style={{ width: \"60%\" }} data-toggle=\"popover\" data-placement=\"top\" title={getLogNotificacion.data.attributes.logs[0].descripcion}>{getLogNotificacion.data.attributes.logs[0].descripcion_corta.toUpperCase()}</td>\r\n                </tr>\r\n            )\r\n        }\r\n    }\r\n\r\n    const changeDescripcion = (e) => {\r\n        if (e.target.value === '' || \r\n        (global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(e.target.value) && \r\n        e.target.value.length <= getMaximoTextArea)) {\r\n            setDescripcion(e.target.value);\r\n            setCountTextArea(e.target.value.length);\r\n            setRepuestaDescripcion(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    descripcion: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    let errores = {}\r\n                    \r\n                    if (countTextArea > getMaximoTextArea) {\r\n                        errores.descripcion = 'Debe ingresar máximo ' + getMaximoTextArea + ' carácteres';\r\n                    }\r\n                    if (countTextArea < getMinimoTextArea) {\r\n                        errores.descripcion = 'Debe ingresar mínimo ' + getMinimoTextArea + ' carácteres'\r\n                    }\r\n                    if(getRepuestaDescripcion == false){\r\n                        errores.descripcion = global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS;\r\n                    }\r\n\r\n                    return errores\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"w2d_block let\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/PortalNotificaciones`}><small>Notificaciones</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <small>Cambiar estado de notificación</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\"> {getNombreProceso} :: <strong>{getEstadoNotificacion ? 'ACTIVA' : 'INACTIVA'} NOTIFICACIÓN</strong></h3>\r\n                            </div>\r\n                            <div className=\"block-content\">\r\n                                <div className='col-md-12'>\r\n                                    {\r\n                                        getLogNotificacion?.data?.attributes?.logs?.length > 0\r\n                                        ?\r\n                                            <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full table-responsive-md\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>REGISTRADO POR</th>\r\n                                                        <th>DEPENDENCIA</th>\r\n                                                        <th>DESCRIPCIÓN</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {getRtaInfoNotificacion ? CargarInfoNotificacion() : null}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"descripcion\">MOTIVO POR EL QUE {getEstadoNotificacion ? 'ACTIVA' : 'INACTIVA'} LA NOTIFICACIÓN <span className=\"text-danger\">*</span></label>\r\n                                        <Field as=\"textarea\" className=\"form-control\" id=\"descripcion\" name=\"descripcion\" rows=\"4\" placeholder=\"ESCRIBA EN ESTE ESPACIO LA OBSERVACIÓN\"\r\n                                            maxLength={getMaximoTextArea} minLength={getMinimoTextArea} value={getDescripcion} onChange={changeDescripcion}></Field>\r\n                                        <div className=\"text-right\">\r\n                                            <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                        </div>\r\n                                        <ErrorMessage name=\"descripcion\" component={() => (<span className=\"text-danger\">{errors.descripcion}</span>)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"block-content block-content-full text-right bg-light\">\r\n                                \r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">{global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n                                \r\n                                <Link to={`/PortalNotificaciones/`}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default PortalNotificacionesCambiarEstadoForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}