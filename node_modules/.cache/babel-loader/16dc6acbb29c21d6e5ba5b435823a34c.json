{"ast":null,"code":"import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{ErrorMessage,Field,Form,Formik}from'formik';import{useLocation}from'react-router-dom';import Spinner from'../../Utils/Spinner';import GenericApi from'../../Api/Services/GenericApi';import ModalGen from'../../Utils/Modals/ModalGeneric';import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function EnviarAlAnteriorUsuario(){var location=useLocation();var from=location.state.from;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),countTextArea=_useState2[0],setCountTextArea=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),getMaximoTextArea=_useState4[0],setMaximoTextArea=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),getMinimoTextArea=_useState6[0],setMinimoTextArea=_useState6[1];var _useState7=useState({title:\"\",message:\"\",show:false}),_useState8=_slicedToArray(_useState7,2),getModalState=_useState8[0],setModalState=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),getNombreAnterior=_useState10[0],setNombreAnterior=_useState10[1];var _useState11=useState(from.procesoDisciplinarioId),_useState12=_slicedToArray(_useState11,2),getIdProcesoDisciplinario=_useState12[0],setIdProcesoDisciplinario=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),getDependenciaOrigen=_useState14[0],setDependenciaOrigen=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),getUsuarioSleccionado=_useState16[0],setUsuarioSleccionado=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),getUsuarioNombre=_useState18[0],setUsuarioNombre=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),getUsuarioApellido=_useState20[0],setUsuarioApellido=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),getUsuarioName=_useState22[0],setUsuarioName=_useState22[1];var _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),getUsuarioDependenciaNombre=_useState24[0],setUsuarioDependenciaNombre=_useState24[1];var _useState25=useState(),_useState26=_slicedToArray(_useState25,2),getUsuarioId=_useState26[0],setUsuarioId=_useState26[1];var _useState27=useState([]),_useState28=_slicedToArray(_useState27,2),getListaSemaforosActivosSecretaria=_useState28[0],setListaSemaforosActivosSecretaria=_useState28[1];var numeroLlamadosFinalizar=0;var numeroTotalLlamadosFinalizar=3;var procesoDisciplinarioId=from.procesoDisciplinarioId;//Funcion principal\nuseEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:window.showSpinner(true);obtenerParametros();obtenemosElUltimoUsuario();obtenerSemaforosProcesoDisciplinario();case 4:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[]);var obtenerSemaforosProcesoDisciplinario=function obtenerSemaforosProcesoDisciplinario(){GenericApi.getAllGeneric(\"semaforo/get-semaforo-proceso-disciplinario/\"+global.Constants.SEMAFORO_EVENTOS.EVENTO_DEPENDENCIA+\"/\"+procesoDisciplinarioId).then(function(datos){if(!datos.error){setListaSemaforosActivosSecretaria(datos);}window.showSpinner(false);});};// Funcion para validar y detener el spinner\nvar validacionSpinnerFinalizar=function validacionSpinnerFinalizar(){numeroLlamadosFinalizar++;if(numeroLlamadosFinalizar>=numeroTotalLlamadosFinalizar){window.showSpinner(false);}};// Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisiÃ³n-\nfunction containsSpecialChars(str){var result=global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(function(specialChar){if(str.includes(specialChar)){return true;}return false;});return result;}// consultamos la cantidad maxima de caracteres para el textarea\nvar obtenerParametros=function obtenerParametros(){try{var data={\"data\":{\"type\":'mas_parametro',\"attributes\":{\"nombre\":\"minimo_caracteres_textarea|maximo_caracteres_textarea\"}}};//buscamos el parametro\nGenericApi.getByDataGeneric('parametro/parametro-nombre',data).then(function(datos){if(!datos.error){if(datos[\"data\"].length>0){datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea');}).map(function(filteredName){return setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]);});datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea');}).map(function(filteredName){return setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]);});}}else{window.showModal(1);}});}catch(error){// console.log(error);\n}};var enviarDatos=function enviarDatos(valores){// console.log(getIdProcesoDisciplinario);\n// console.log(getDependenciaOrigen);\n// console.log(getUsuarioName);\n// console.log(valores.informacion);\nwindow.showSpinner(true);var data={\"data\":{\"type\":\"transacciones\",\"attributes\":{\"id_proceso_disciplinario\":getIdProcesoDisciplinario,\"id_dependencia_origen\":getDependenciaOrigen,\"usuario_a_remitir\":getUsuarioName,\"descripcion_a_remitir\":valores.informacion,\"id_etapa\":3}}};//Finalizando semaforo que inicia por grupo de trabajo\nif(getDependenciaOrigen.toString()!==global.Constants.DEPENDENCIA_ORIGEN.SECRETARIA_COMUN.toString()){GenericApi.getByIdGeneric('get-semaforo-evento',4).then(function(datosSemaforoFinaliza){validacionSpinnerFinalizar();if(datosSemaforoFinaliza.data.length>=1){datosSemaforoFinaliza.data.forEach(function(element){numeroTotalLlamadosFinalizar++;var data={\"data\":{\"type\":\"semaforo\",\"attributes\":{\"id_proceso_disciplinario\":from.procesoDisciplinarioId,\"id_semaforo\":element.id,\"id_actuacion_finaliza\":null,\"id_dependencia_finaliza\":null,\"id_usuario_finaliza\":getUsuarioId}}};GenericApi.getByDataGeneric('set-finaliza-semaforo',data).then(function(datos){validacionSpinnerFinalizar();});});}});}//Finalizando semaforo que inicia por dependencia y vuelve a iniciar uno nuevo\nGenericApi.getByIdGeneric('get-semaforo-evento',5).then(function(datosSemaforoFinaliza){validacionSpinnerFinalizar();if(datosSemaforoFinaliza.data.length>=1){datosSemaforoFinaliza.data.forEach(function(element){var _element$attributes,_element$attributes2,_element$attributes2$,_element$attributes3;if(element!==null&&element!==void 0&&(_element$attributes=element.attributes)!==null&&_element$attributes!==void 0&&_element$attributes.id_mas_dependencia_inicia&&(element===null||element===void 0?void 0:(_element$attributes2=element.attributes)===null||_element$attributes2===void 0?void 0:(_element$attributes2$=_element$attributes2.id_mas_dependencia_inicia)===null||_element$attributes2$===void 0?void 0:_element$attributes2$.id)!=getDependenciaOrigen){var _data={\"data\":{\"type\":\"semaforo\",\"attributes\":{\"id_proceso_disciplinario\":from.procesoDisciplinarioId,\"id_semaforo\":element.id,\"id_actuacion_finaliza\":null,\"id_dependencia_finaliza\":getDependenciaOrigen,\"id_usuario_finaliza\":null}}};numeroTotalLlamadosFinalizar++;GenericApi.getByDataGeneric('set-finaliza-semaforo',_data).then(function(datos){validacionSpinnerFinalizar();});}if(!getListaSemaforosActivosSecretaria.some(function(objeto){return objeto.id.toString()===element.id.toString();})&&!(element!==null&&element!==void 0&&(_element$attributes3=element.attributes)!==null&&_element$attributes3!==void 0&&_element$attributes3.id_mas_dependencia_inicia)){var date=new Date();var datapdxsemaforo={\"data\":{\"type\":\"pdxsemaforo\",\"attributes\":{\"id_semaforo\":element.id,\"id_proceso_disciplinario\":from.procesoDisciplinarioId,\"id_actuacion\":\"\",\"fecha_inicio\":date.toLocaleDateString('zh-Hans-CN'),\"estado\":1}}};numeroTotalLlamadosFinalizar++;GenericApi.addGeneric('pdxsemaforo',datapdxsemaforo).then(function(datos){validacionSpinnerFinalizar();});}});}});var tituiloModal=\"SINPROC No \"+from.radicado+\" :: Enviar al anterior usuario\";// console.log(data);\nGenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario',data).then(function(datos){if(!datos.error){var mensajeModal='El proceso con radicado: '+from.radicado+' fue asignado al usuario: '+getUsuarioNombre+' '+getUsuarioApellido+' ('+getUsuarioName+')  de la dependencia: '+getUsuarioDependenciaNombre+'';setModalState({title:tituiloModal.toUpperCase(),message:mensajeModal.toUpperCase(),show:true,redirect:'/MisPendientes',alert:global.Constants.TIPO_ALERTA.EXITO});}else{setModalState({title:tituiloModal.toUpperCase(),message:datos.error.toString(),show:true,redirect:'/AntecedentesLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}window.showSpinner(false);});};var obtenemosElUltimoUsuario=function obtenemosElUltimoUsuario(){if(getIdProcesoDisciplinario!=null){var data={\"data\":{\"type\":\"log_proceso_disciplinario\",\"attributes\":{\"id_proceso_disciplinario\":getIdProcesoDisciplinario}}};GenericApi.getByDataGeneric('log-proceso-disciplinario/get-log-etapa/'+getIdProcesoDisciplinario,data).then(function(datos){if(!datos.error){var tituiloModal=\"SINPROC No \"+from.radicado+\" :: Enviar al anterior usuario\";var mensajeModal='No existe un usuario anterior para remitir el proceso';var found=datos.data.find(function(element){return element.attributes.tipo_trasaccion.id==5;});if(found==null){setModalState({title:tituiloModal.toUpperCase(),message:mensajeModal.toUpperCase(),show:true,redirect:'/Transacciones',alert:global.Constants.TIPO_ALERTA.ERROR});}else{GenericApi.getAllGeneric('proceso-diciplinario/usuario-habilitado-transacciones/'+getIdProcesoDisciplinario+'/'+found.attributes.funcionario_registra.id).then(function(datos_respuesta){if(!datos_respuesta.error){if(datos_respuesta){setDependenciaOrigen(found.attributes.dependencia_origen.id);setUsuarioId(found.attributes.funcionario_registra.id);setUsuarioNombre(found.attributes.funcionario_registra.nombre);setUsuarioApellido(found.attributes.funcionario_registra.apellido);setUsuarioName(found.attributes.funcionario_registra.name);setUsuarioDependenciaNombre(found.attributes.funcionario_registra.dependencia.nombre);}else{var _mensajeModal='EL USUARIO '+found.attributes.funcionario_registra.nombre.toUpperCase()+' '+found.attributes.funcionario_registra.apellido.toUpperCase()+' NO TIENE PERMISO(S) HABILITADO(S) PARA RECIBIR EL PROCESO DISCIPLINARIO.';setModalState({title:tituiloModal.toUpperCase(),message:_mensajeModal.toUpperCase(),show:true,redirect:'/Transacciones',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}}else{setModalState({title:tituiloModal.toUpperCase(),message:datos_respuesta.error.toUpperCase(),show:true,redirect:'/Transacciones',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});}}else{window.showModal(1);}});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(ModalGen,{data:getModalState}),/*#__PURE__*/_jsx(Formik,{initialValues:{informacion:''},enableReinitialize:true,validate:function validate(valores){setCountTextArea(valores.informacion.length);var errores={};if(!valores.informacion){errores.informacion='Debe ingresar un valor';}else if(valores.informacion.length<=getMinimoTextArea){errores.informacion='La descripciÃ³n debe tener almenos '+getMinimoTextArea+' caracteres';}if(valores.informacion){if(containsSpecialChars(valores.informacion))errores.informacion='Tiene caracteres invÃ¡lidos';}return errores;},onSubmit:function onSubmit(valores,_ref){var resetForm=_ref.resetForm;enviarDatos(valores);},children:function children(_ref2){var errors=_ref2.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"w2d_block\",children:/*#__PURE__*/_jsx(\"nav\",{\"aria-label\":\"breadcrumb\",children:/*#__PURE__*/_jsxs(\"ol\",{className:\"breadcrumb breadcrumb-alt push\",children:[/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/MisPendientes\",children:/*#__PURE__*/_jsx(\"small\",{children:\"Mis Pendientes\"})})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/RamasProceso/\",state:{from:from},children:/*#__PURE__*/_jsx(\"small\",{children:\"Ramas del proceso\"})})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Enviar al ultimo usuario\"})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsxs(\"h3\",{className:\"block-title\",children:[\"SINPROC NO \",from.radicado,\" \",/*#__PURE__*/_jsxs(\"strong\",{children:[\" VIGENCIA: \",from.vigencia,\" :: REGRESAR AL \\xDALTIMO USUARIO\"]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"informacion\",children:[\"MOTIVO POR EL CUAL SE REGRESA PROCESO AL \\xDALTIMO USUARIO: \",getUsuarioNombre.toUpperCase()+\" \"+getUsuarioApellido.toUpperCase()+\" (\"+getUsuarioDependenciaNombre.toUpperCase()+\") \",\" \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{as:\"textarea\",className:\"form-control\",id:\"informacion\",name:\"informacion\",rows:\"6\",placeholder:\"Informaci\\xF3n para su remisi\\xF3n....\",maxLength:getMaximoTextArea,minLength:getMinimoTextArea}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-primary\",children:[countTextArea,\" / \",getMaximoTextArea]})}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"informacion\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.informacion});}})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:\"REMITIR\"}),/*#__PURE__*/_jsx(Link,{to:'/Transacciones',state:{from:from},className:\"font-size-h5 font-w600\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:\"CANCELAR\"})})]})]})]})]});}})]});}export default EnviarAlAnteriorUsuario;","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","useLocation","Spinner","GenericApi","ModalGen","Link","EnviarAlAnteriorUsuario","location","from","state","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","title","message","show","getModalState","setModalState","getNombreAnterior","setNombreAnterior","procesoDisciplinarioId","getIdProcesoDisciplinario","setIdProcesoDisciplinario","getDependenciaOrigen","setDependenciaOrigen","getUsuarioSleccionado","setUsuarioSleccionado","getUsuarioNombre","setUsuarioNombre","getUsuarioApellido","setUsuarioApellido","getUsuarioName","setUsuarioName","getUsuarioDependenciaNombre","setUsuarioDependenciaNombre","getUsuarioId","setUsuarioId","getListaSemaforosActivosSecretaria","setListaSemaforosActivosSecretaria","numeroLlamadosFinalizar","numeroTotalLlamadosFinalizar","fetchData","window","showSpinner","obtenerParametros","obtenemosElUltimoUsuario","obtenerSemaforosProcesoDisciplinario","getAllGeneric","global","Constants","SEMAFORO_EVENTOS","EVENTO_DEPENDENCIA","then","datos","error","validacionSpinnerFinalizar","containsSpecialChars","str","result","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","data","getByDataGeneric","length","filter","map","filteredName","showModal","enviarDatos","valores","informacion","toString","DEPENDENCIA_ORIGEN","SECRETARIA_COMUN","getByIdGeneric","datosSemaforoFinaliza","forEach","element","id","attributes","id_mas_dependencia_inicia","objeto","date","Date","datapdxsemaforo","toLocaleDateString","addGeneric","tituiloModal","radicado","mensajeModal","toUpperCase","redirect","alert","TIPO_ALERTA","EXITO","ERROR","found","find","tipo_trasaccion","funcionario_registra","datos_respuesta","dependencia_origen","nombre","apellido","name","dependencia","errores","resetForm","errors","vigencia"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Transacciones/EnviarAlAnteriorUsuario.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction EnviarAlAnteriorUsuario() {\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n\r\n\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getNombreAnterior, setNombreAnterior] = useState(\"\");\r\n    const [getIdProcesoDisciplinario, setIdProcesoDisciplinario] = useState(from.procesoDisciplinarioId);\r\n    const [getDependenciaOrigen, setDependenciaOrigen] = useState(\"\");\r\n    const [getUsuarioSleccionado, setUsuarioSleccionado] = useState(\"\");\r\n    \r\n    const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\r\n    const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\r\n    const [getUsuarioName, setUsuarioName] = useState(\"\");\r\n    const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\r\n    const [getUsuarioId, setUsuarioId] = useState();\r\n    const [getListaSemaforosActivosSecretaria, setListaSemaforosActivosSecretaria] = useState([]);\r\n    \r\n    let numeroLlamadosFinalizar = 0;\r\n    let numeroTotalLlamadosFinalizar = 3;\r\n\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n    //Funcion principal\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            obtenerParametros();\r\n            obtenemosElUltimoUsuario();\r\n            obtenerSemaforosProcesoDisciplinario()\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const obtenerSemaforosProcesoDisciplinario = () => {\r\n\r\n        GenericApi.getAllGeneric(\"semaforo/get-semaforo-proceso-disciplinario/\"+global.Constants.SEMAFORO_EVENTOS.EVENTO_DEPENDENCIA+\"/\"+procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaSemaforosActivosSecretaria(datos)\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // Funcion para validar y detener el spinner\r\n    const validacionSpinnerFinalizar = () => {\r\n        numeroLlamadosFinalizar++\r\n        if(numeroLlamadosFinalizar >= numeroTotalLlamadosFinalizar){\r\n            window.showSpinner(false);\r\n        }\r\n    }\r\n\r\n    // Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisiÃ³n-\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    // consultamos la cantidad maxima de caracteres para el textarea\r\n    const obtenerParametros = () => {\r\n        try {\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric('parametro/parametro-nombre', data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (datos[\"data\"].length > 0) {\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ));\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ));\r\n                        }\r\n                    } else {\r\n                        window.showModal(1);\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n        }\r\n    }\r\n\r\n    const enviarDatos = (valores) => {\r\n\r\n        // console.log(getIdProcesoDisciplinario);\r\n        // console.log(getDependenciaOrigen);\r\n        // console.log(getUsuarioName);\r\n        // console.log(valores.informacion);\r\n\r\n        window.showSpinner(true);\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"transacciones\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": getIdProcesoDisciplinario,\r\n                    \"id_dependencia_origen\": getDependenciaOrigen,\r\n                    \"usuario_a_remitir\": getUsuarioName,\r\n                    \"descripcion_a_remitir\": valores.informacion,\r\n                    \"id_etapa\": 3\r\n                }\r\n            }\r\n        }\r\n\r\n        //Finalizando semaforo que inicia por grupo de trabajo\r\n        if(getDependenciaOrigen.toString() !== global.Constants.DEPENDENCIA_ORIGEN.SECRETARIA_COMUN.toString()){\r\n            GenericApi.getByIdGeneric('get-semaforo-evento', 4).then(\r\n                datosSemaforoFinaliza => {\r\n                    validacionSpinnerFinalizar();\r\n                    if (datosSemaforoFinaliza.data.length >= 1) {\r\n                        datosSemaforoFinaliza.data.forEach(element => {\r\n                            numeroTotalLlamadosFinalizar++\r\n    \r\n                            let data = {\r\n                                \"data\": {\r\n                                    \"type\": \"semaforo\",\r\n                                    \"attributes\": {\r\n                                        \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                                        \"id_semaforo\": element.id,\r\n                                        \"id_actuacion_finaliza\": null,\r\n                                        \"id_dependencia_finaliza\": null,\r\n                                        \"id_usuario_finaliza\": getUsuarioId\r\n                                    }\r\n                                }\r\n                            }\r\n    \r\n                            GenericApi.getByDataGeneric('set-finaliza-semaforo', data).then(\r\n                                datos => {\r\n                                    validacionSpinnerFinalizar()\r\n                                }\r\n                            );\r\n    \r\n                        });\r\n                    }\r\n                }\r\n            )\r\n        }\r\n\r\n        //Finalizando semaforo que inicia por dependencia y vuelve a iniciar uno nuevo\r\n        GenericApi.getByIdGeneric('get-semaforo-evento', 5).then(\r\n            datosSemaforoFinaliza => {\r\n                \r\n                validacionSpinnerFinalizar();\r\n\r\n                if (datosSemaforoFinaliza.data.length >= 1) {\r\n                    datosSemaforoFinaliza.data.forEach(element => {\r\n                        if (element?.attributes?.id_mas_dependencia_inicia && element?.attributes?.id_mas_dependencia_inicia?.id != getDependenciaOrigen) {\r\n                            let data = {\r\n                                \"data\": {\r\n                                    \"type\": \"semaforo\",\r\n                                    \"attributes\": {\r\n                                        \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                                        \"id_semaforo\": element.id,\r\n                                        \"id_actuacion_finaliza\": null,\r\n                                        \"id_dependencia_finaliza\": getDependenciaOrigen,\r\n                                        \"id_usuario_finaliza\": null\r\n                                    }\r\n                                }\r\n                            }\r\n    \r\n                            numeroTotalLlamadosFinalizar++\r\n                            \r\n                            GenericApi.getByDataGeneric('set-finaliza-semaforo', data).then(\r\n                                datos => {\r\n                                    validacionSpinnerFinalizar()\r\n                                }\r\n                            );\r\n                        }\r\n                        if (\r\n                                (!getListaSemaforosActivosSecretaria.some(objeto => objeto.id.toString() === element.id.toString())) &&\r\n                                !element?.attributes?.id_mas_dependencia_inicia\r\n                            )\r\n                        {\r\n                            let date = new Date();\r\n                            let datapdxsemaforo = {\r\n                                \"data\": {\r\n                                    \"type\": \"pdxsemaforo\",\r\n                                    \"attributes\": {\r\n                                        \"id_semaforo\": element.id,\r\n                                        \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                                        \"id_actuacion\": \"\",\r\n                                        \"fecha_inicio\": date.toLocaleDateString('zh-Hans-CN'),\r\n                                        \"estado\": 1,\r\n                                    }\r\n                                }\r\n                            }\r\n                            numeroTotalLlamadosFinalizar++\r\n                            GenericApi.addGeneric('pdxsemaforo', datapdxsemaforo).then(\r\n                                datos => { \r\n                                    validacionSpinnerFinalizar() \r\n                                }\r\n                            )\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        )\r\n\r\n        const tituiloModal = \"SINPROC No \" + from.radicado + \" :: Enviar al anterior usuario\";\r\n\r\n        // console.log(data);\r\n        GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    const mensajeModal = 'El proceso con radicado: ' + from.radicado + ' fue asignado al usuario: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ')  de la dependencia: ' + getUsuarioDependenciaNombre + '';\r\n                    setModalState({ title: tituiloModal.toUpperCase(), message: mensajeModal.toUpperCase(), show: true, redirect: '/MisPendientes', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n                    setModalState({ title: tituiloModal.toUpperCase(), message: datos.error.toString(), show: true, redirect: '/AntecedentesLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    const obtenemosElUltimoUsuario = () => {\r\n        if (getIdProcesoDisciplinario != null) {\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"log_proceso_disciplinario\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": getIdProcesoDisciplinario\r\n                    }\r\n                }\r\n            }\r\n\r\n            GenericApi.getByDataGeneric('log-proceso-disciplinario/get-log-etapa/' + getIdProcesoDisciplinario, data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        const tituiloModal = \"SINPROC No \" + from.radicado + \" :: Enviar al anterior usuario\";\r\n                        const mensajeModal = 'No existe un usuario anterior para remitir el proceso';\r\n                        const found = datos.data.find(element => element.attributes.tipo_trasaccion.id == 5);\r\n                        if (found == null) {\r\n                            setModalState({ title: tituiloModal.toUpperCase(), message: mensajeModal.toUpperCase(), show: true, redirect: '/Transacciones', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                        } else {\r\n                            GenericApi.getAllGeneric('proceso-diciplinario/usuario-habilitado-transacciones/' + getIdProcesoDisciplinario + '/' + found.attributes.funcionario_registra.id).then(\r\n                                datos_respuesta => {\r\n                                    if (!datos_respuesta.error) {\r\n                                        if (datos_respuesta) {\r\n                                            setDependenciaOrigen(found.attributes.dependencia_origen.id);\r\n                                            setUsuarioId(found.attributes.funcionario_registra.id);\r\n                                            setUsuarioNombre(found.attributes.funcionario_registra.nombre);\r\n                                            setUsuarioApellido(found.attributes.funcionario_registra.apellido);\r\n                                            setUsuarioName(found.attributes.funcionario_registra.name);\r\n                                            setUsuarioDependenciaNombre(found.attributes.funcionario_registra.dependencia.nombre);\r\n                                        }\r\n                                        else{\r\n                                            const mensajeModal = 'EL USUARIO ' + found.attributes.funcionario_registra.nombre.toUpperCase() + ' ' + found.attributes.funcionario_registra.apellido.toUpperCase() + ' NO TIENE PERMISO(S) HABILITADO(S) PARA RECIBIR EL PROCESO DISCIPLINARIO.';\r\n                                            setModalState({ title: tituiloModal.toUpperCase(), message: mensajeModal.toUpperCase(), show: true, redirect: '/Transacciones', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        setModalState({ title: tituiloModal.toUpperCase(), message: datos_respuesta.error.toUpperCase(), show: true, redirect: '/Transacciones', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                                    }\r\n                                }\r\n                            )\r\n                        }\r\n                    } else {\r\n                        window.showModal(1);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    informacion: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    setCountTextArea(valores.informacion.length)\r\n                    let errores = {}\r\n                    if (!valores.informacion) {\r\n                        errores.informacion = 'Debe ingresar un valor';\r\n                    }\r\n                    else if (valores.informacion.length <= getMinimoTextArea) {\r\n                        errores.informacion = 'La descripciÃ³n debe tener almenos ' + getMinimoTextArea + ' caracteres';\r\n                    }\r\n                    if (valores.informacion) {\r\n                        if (containsSpecialChars(valores.informacion))\r\n                            errores.informacion = 'Tiene caracteres invÃ¡lidos';\r\n                    }\r\n\r\n                    return errores;\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <small>Enviar al ultimo usuario</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">SINPROC NO {from.radicado} <strong> VIGENCIA: {from.vigencia} :: REGRESAR AL ÃLTIMO USUARIO</strong></h3>\r\n                            </div>\r\n                            <div className=\"block-content\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"informacion\">MOTIVO POR EL CUAL SE REGRESA PROCESO AL ÃLTIMO USUARIO: {getUsuarioNombre.toUpperCase() + \" \" + getUsuarioApellido.toUpperCase() + \" (\" + getUsuarioDependenciaNombre.toUpperCase() + \") \"} <span className=\"text-danger\">*</span></label>\r\n                                            <Field as=\"textarea\" className=\"form-control\" id=\"informacion\" name=\"informacion\" rows=\"6\" placeholder=\"InformaciÃ³n para su remisiÃ³n....\"\r\n                                                maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                            <div className=\"text-right\">\r\n                                                <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                            </div>\r\n                                            <ErrorMessage name=\"informacion\" component={() => (<span className=\"text-danger\">{errors.informacion}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">REMITIR</button>\r\n                                    <Link to={'/Transacciones'} state={{ from: from }} className=\"font-size-h5 font-w600\" >\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">CANCELAR</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default EnviarAlAnteriorUsuario;"],"mappings":"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"},"metadata":{},"sourceType":"module"}