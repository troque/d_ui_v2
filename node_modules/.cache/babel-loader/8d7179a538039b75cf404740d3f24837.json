{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\LogSistema\\\\LogEtapaLista.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useLocation } from 'react-router-dom';\nimport LogApi from '../Api/Services/LogApi';\nimport moment from 'moment';\nimport { Link } from \"react-router-dom\";\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LogEtapaLista() {\n  _s();\n\n  const [errorApi, setErrorApi] = useState('');\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const [getRespuestaLog, setRespuestaLog] = useState(false);\n  const [getLogLista, setLogLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  }); // Paginación\n\n  const [perPage, setPerPage] = useState(10);\n  const [pageActual, setPageActual] = useState(1);\n  const columns = [{\n    name: 'Etapa',\n    cell: log => log.attributes.etapa.nombre,\n    sortable: true,\n    width: \"15%\"\n  }];\n  useEffect(() => {\n    async function fetchData() {\n      const data = {\n        \"data\": {\n          \"type\": \"log_etapa\",\n          \"attributes\": {\n            \"descripcion\": \"descripcion\",\n            \"id_etapa\": \"fecha_registro\",\n            \"id_fase\": \"id_dependencia\",\n            \"id_proceso_disciplinario\": \"id_proceso_disciplinario\",\n            \"id_tipo_log\": \"id_tipo_log\",\n            \"id_estado\": \"id_estado\",\n            \"created_user\": \"created_user\",\n            \"id_dependencia_origen\": \"id_dependencia_origen\"\n          }\n        }\n      };\n      LogApi.getLogEtapaProcesoDisciplinario(data, procesoDisciplinarioId).then(datos => !datos.error ? (setLogLista(datos), setRespuestaLog(true)) : window.showModal(1));\n    }\n\n    fetchData();\n  }, []);\n\n  const listaLog = () => {\n    if (getLogLista.data != null && typeof getLogLista.data != 'undefined') {\n      return getLogLista.data.map((log, i) => {\n        return cargarLog(log, i);\n      });\n    } else {\n      return getLogLista.map((log, i) => {\n        return cargarLog(log, i);\n      });\n    }\n  };\n\n  const cargarLog = (log, i) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.etapa ? log.attributes.etapa.nombre : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [log.attributes.funcionario_registra ? log.attributes.funcionario_registra.name : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 112\n          }, this), log.attributes.dependencia_origen ? log.attributes.dependencia_origen.nombre : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [log.attributes.funcionario_actual ? log.attributes.funcionario_actual.name : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 108\n          }, this), log.attributes.dep_funcionario_actual ? log.attributes.dep_funcionario_actual.nombre : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.estado_etapa ? log.attributes.estado_etapa.nombre : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }; ///////////////////////////////////////////////////////////\n  /////////////////// PARA LA BÚSQUEDA //////////////////////\n  ///////////////////////////////////////////////////////////\n\n\n  const [getRespuestaAntecedentes, setRespuestaAntecedentes] = useState(false);\n  const [getAntecedentesLista, setAntecedentesLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getListaDetalleCambios, setListaDetalleCambios] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [respuestaAntecedentesTotal, setRespuestaAntecedentesTotal] = useState(false);\n  const [getAntecedentesListaTotal, setAntecedentesListaTotal] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n\n  const handleSearch = event => {\n    try {\n      if (event.target.value.trim().trim() == \"\" || event.target.value.trim().length == 0) {\n        setAntecedentesLista(getAntecedentesListaTotal);\n      } else {\n        var filteredData = {\n          data: getAntecedentesListaTotal.data.filter(suggestion => suggestion.attributes.etapa.nombre.toLowerCase().includes(event.target.value.toLowerCase()))\n        };\n        setAntecedentesLista(filteredData);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const cargarLogPaginado = (page, perPage, estado) => {\n    const data = {\n      \"data\": {\n        \"type\": 'antecedente',\n        \"attributes\": {\n          \"antecedentes\": \"antecedentes\",\n          \"descripcion\": \"descripcion\",\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"fecha_registro\": Date.now(),\n          \"id_dependencia\": -1,\n          \"estado\": estado,\n          'per_page': perPage,\n          'current_page': page\n        }\n      }\n    };\n    console.log(JSON.stringify(data));\n    GenericApi.getByDataGeneric('antencedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        setAntecedentesListaTotal(datos);\n        setRespuestaAntecedentesTotal(true);\n        setAntecedentesLista(datos);\n        setRespuestaAntecedentes(true);\n\n        try {\n          if (datos.data.length > 0) {\n            from.antecedente = datos.data[0].attributes.descripcion;\n          }\n        } catch (error) {\n          console.log(error);\n        }\n\n        window.showSpinner(false);\n      } else {\n        window.showSpinner(false);\n        window.showModal(1);\n      }\n    });\n  };\n\n  const handlePageChange = page => {\n    window.showSpinner(true);\n    setPageActual(page);\n    cargarAntecedentes(page, perPage, '1');\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    window.showSpinner(true);\n    setPerPage(newPerPage);\n    setPageActual(page);\n    cargarAntecedentes(page, newPerPage, '1');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block block-themed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"block-title\",\n          children: \"Log Proceso disciplinario :: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Etapa\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Fecha\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Funcionario Registra\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Funcionario Actual\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Descripci\\xF3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Estado del tr\\xE1mite\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: getRespuestaLog ? listaLog() : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 mt-2 mb-2\",\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n        columns: columns,\n        data: getAntecedentesLista.data,\n        perPage: perPage,\n        page: pageActual,\n        pagination: true,\n        noDataComponent: \"Sin datos\",\n        paginationServer: true,\n        paginationTotalRows: getAntecedentesLista.meta ? getAntecedentesLista.meta.total : 1,\n        onChangePage: handlePageChange,\n        onChangeRowsPerPage: handlePerRowsChange,\n        defaultSortFieldId: \"Nombre\",\n        striped: true,\n        icon: true,\n        paginationComponentOptions: {\n          rowsPerPageText: 'Filas por página'\n        },\n        defaultSortAsc: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LogEtapaLista, \"lowlnBTs3FzMkUeIE2RL7qWYUMw=\", false, function () {\n  return [useLocation];\n});\n\n_c = LogEtapaLista;\nexport default LogEtapaLista;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogEtapaLista\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/LogSistema/LogEtapaLista.js"],"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","useLocation","LogApi","moment","Link","DataTable","LogEtapaLista","errorApi","setErrorApi","location","from","state","radicado","procesoDisciplinarioId","getRespuestaLog","setRespuestaLog","getLogLista","setLogLista","data","links","meta","perPage","setPerPage","pageActual","setPageActual","columns","name","cell","log","attributes","etapa","nombre","sortable","width","fetchData","getLogEtapaProcesoDisciplinario","then","datos","error","window","showModal","listaLog","map","i","cargarLog","created_at","funcionario_registra","dependencia_origen","funcionario_actual","dep_funcionario_actual","descripcion","estado_etapa","getRespuestaAntecedentes","setRespuestaAntecedentes","getAntecedentesLista","setAntecedentesLista","getListaDetalleCambios","setListaDetalleCambios","respuestaAntecedentesTotal","setRespuestaAntecedentesTotal","getAntecedentesListaTotal","setAntecedentesListaTotal","handleSearch","event","target","value","trim","length","filteredData","filter","suggestion","toLowerCase","includes","console","cargarLogPaginado","page","estado","Date","now","JSON","stringify","GenericApi","getByDataGeneric","antecedente","showSpinner","handlePageChange","cargarAntecedentes","handlePerRowsChange","newPerPage","total","rowsPerPageText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useLocation } from 'react-router-dom'\r\nimport LogApi from '../Api/Services/LogApi';\r\nimport moment from 'moment';\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from 'react-data-table-component';\r\n\r\nfunction LogEtapaLista() {\r\n\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId; \r\n\r\n    const [getRespuestaLog, setRespuestaLog] = useState(false);\r\n    const [getLogLista, setLogLista] = useState({ data: [], links: [], meta: [] });\r\n\r\n\r\n    // Paginación\r\n\r\n    const [perPage, setPerPage] = useState(10);\r\n    const [pageActual, setPageActual] = useState(1);\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Etapa',\r\n            cell: log => log.attributes.etapa.nombre,\r\n            sortable: true,\r\n            width: \"15%\",\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"log_etapa\",\r\n                    \"attributes\": {\r\n                        \"descripcion\": \"descripcion\",\r\n                        \"id_etapa\": \"fecha_registro\",\r\n                        \"id_fase\": \"id_dependencia\",\r\n                        \"id_proceso_disciplinario\": \"id_proceso_disciplinario\",\r\n                        \"id_tipo_log\": \"id_tipo_log\",\r\n                        \"id_estado\": \"id_estado\",\r\n                        \"created_user\": \"created_user\",\r\n                        \"id_dependencia_origen\": \"id_dependencia_origen\"\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            LogApi.getLogEtapaProcesoDisciplinario(data, procesoDisciplinarioId).then(\r\n                datos => !datos.error ? (setLogLista(datos), setRespuestaLog(true)) : window.showModal(1)\r\n            )\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const listaLog = () => {\r\n\r\n        if (getLogLista.data != null && typeof (getLogLista.data) != 'undefined') {\r\n            return (\r\n\r\n                getLogLista.data.map((log, i) => {\r\n                    return (\r\n                        cargarLog(log, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                getLogLista.map((log, i) => {\r\n                    return (\r\n                        cargarLog(log, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const cargarLog = (log, i) => {\r\n\r\n        return (\r\n            <>\r\n\r\n                <tr>\r\n                    <td>\r\n                        {(log.attributes.etapa ? log.attributes.etapa.nombre : \"\")}\r\n                    </td>\r\n                    <td>\r\n                        {log.attributes.created_at}\r\n                    </td>\r\n                    <td>\r\n                        {(log.attributes.funcionario_registra ? log.attributes.funcionario_registra.name : \"\")}<br/>\r\n                        {(log.attributes.dependencia_origen ? log.attributes.dependencia_origen.nombre : \"\")}\r\n                    </td>\r\n\r\n                    <td>\r\n                        {(log.attributes.funcionario_actual ? log.attributes.funcionario_actual.name : \"\")}<br/>\r\n                        {(log.attributes.dep_funcionario_actual ? log.attributes.dep_funcionario_actual.nombre : \"\")}\r\n                    </td>\r\n\r\n                    <td>\r\n                        {log.attributes.descripcion}\r\n                    </td>\r\n\r\n                    <td>\r\n                        {(log.attributes.estado_etapa ? log.attributes.estado_etapa.nombre : \"\")}\r\n                    </td>\r\n                </tr>\r\n\r\n                \r\n                               \r\n            </>\r\n        )\r\n    }\r\n\r\n     ///////////////////////////////////////////////////////////\r\n    /////////////////// PARA LA BÚSQUEDA //////////////////////\r\n    ///////////////////////////////////////////////////////////\r\n\r\n    const [getRespuestaAntecedentes, setRespuestaAntecedentes] = useState(false);\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const [getListaDetalleCambios, setListaDetalleCambios] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const [respuestaAntecedentesTotal, setRespuestaAntecedentesTotal] = useState(false);\r\n    const [getAntecedentesListaTotal, setAntecedentesListaTotal] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const handleSearch = (event) => {\r\n        try {\r\n            if ((event.target.value.trim().trim() == \"\") || (event.target.value.trim().length == 0)) {\r\n\r\n                setAntecedentesLista(getAntecedentesListaTotal);\r\n            }\r\n            else {\r\n\r\n\r\n                var filteredData = {\r\n                    data: getAntecedentesListaTotal.data.filter(\r\n                        suggestion => ((suggestion.attributes.etapa.nombre).toLowerCase().includes(event.target.value.toLowerCase()))\r\n                    )\r\n                };\r\n                setAntecedentesLista(filteredData)\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const cargarLogPaginado = (page, perPage, estado) => {\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'antecedente',\r\n                \"attributes\": {\r\n                    \"antecedentes\": \"antecedentes\",\r\n                    \"descripcion\": \"descripcion\",\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"fecha_registro\": Date.now(),\r\n                    \"id_dependencia\": -1,\r\n                    \"estado\": estado,\r\n                    'per_page': perPage,\r\n                    'current_page': page\r\n                }\r\n            }\r\n        }\r\n        console.log(JSON.stringify(data));\r\n\r\n            GenericApi.getByDataGeneric('antencedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setAntecedentesListaTotal(datos);\r\n                        setRespuestaAntecedentesTotal(true);\r\n                        setAntecedentesLista(datos);\r\n                        setRespuestaAntecedentes(true);\r\n\r\n                        try {\r\n                            if(datos.data.length > 0){\r\n                                from.antecedente = datos.data[0].attributes.descripcion;\r\n                            }\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                        \r\n                        \r\n\r\n                        window.showSpinner(false);\r\n                    }\r\n                    else {\r\n                        window.showSpinner(false);\r\n                        window.showModal(1);\r\n\r\n                    }\r\n\r\n                }\r\n            )\r\n       \r\n    }\r\n    \r\n\r\n    const handlePageChange = page => {\r\n        window.showSpinner(true);\r\n        setPageActual(page);\r\n        cargarAntecedentes(page, perPage, '1');\r\n    }\r\n\r\n    const handlePerRowsChange = async (newPerPage, page) => {\r\n        window.showSpinner(true);\r\n        setPerPage(newPerPage);\r\n        setPageActual(page);\r\n        cargarAntecedentes(page, newPerPage, '1');\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"block block-themed\">\r\n                    <div className=\"block-header\">\r\n                        <h3 className=\"block-title\">Log Proceso disciplinario :: </h3>\r\n                    </div>\r\n                    <div className=\"block-content\">\r\n                        <div className='col-md-12'>\r\n                            <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                <thead>\r\n                                    <tr>\r\n\r\n                                        <th>Etapa</th>\r\n                                        <th>Fecha</th>\r\n                                        <th>Funcionario Registra</th>\r\n                                        <th>Funcionario Actual</th>\r\n                                        <th>Descripción</th>\r\n                                        <th>Estado del trámite</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {getRespuestaLog ? listaLog() : null}\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n\r\n\r\n            <div className='col-md-12 mt-2 mb-2'>\r\n                <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                    columns={columns}\r\n                    data={getAntecedentesLista.data}\r\n                    perPage={perPage}\r\n                    page={pageActual}\r\n                    pagination\r\n                    noDataComponent=\"Sin datos\"\r\n                    paginationServer\r\n                    paginationTotalRows={getAntecedentesLista.meta ? getAntecedentesLista.meta.total : 1}\r\n                    onChangePage={handlePageChange}\r\n                    onChangeRowsPerPage={handlePerRowsChange}\r\n                    defaultSortFieldId=\"Nombre\"\r\n                    striped\r\n                    icon\r\n                    paginationComponentOptions={{ rowsPerPageText: 'Filas por página' }}\r\n                    defaultSortAsc={false}\r\n                />\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LogEtapaLista;"]},"metadata":{},"sourceType":"module"}