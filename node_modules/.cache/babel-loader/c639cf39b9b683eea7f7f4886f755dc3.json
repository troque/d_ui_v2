{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Transacciones\\\\EnviaraAlguienDeSecretariaComunDirigido.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useLocation } from 'react-router-dom';\nimport Spinner from '../../Utils/Spinner';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { getUser } from '../../Utils/Common';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EnviaraAlguienDeSecretariaComunDirigido() {\n  _s();\n  const [getUsuarioSleccionado, setUsuarioSleccionado] = useState(\"\");\n  const [getListaUusariosDependencia, setListaUusariosDependencia] = useState({\n    data: {}\n  });\n  const [getUsuarioId, setUsuarioId] = useState();\n  const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\n  const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\n  const [getUsuarioName, setUsuarioName] = useState(\"\");\n  const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\n  const [getUsuarioGruposTrabajo, setUsuarioGruposTrabajo] = useState([]);\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getIdGrupoTrabajo, setIdGrupoTrabajo] = useState('');\n  const [respuestaGrupoTrabajo, setRespuestaGrupoTrabajo] = useState(false);\n  const [respuestaUsuariosGrupoTrabajo, setRespuestaUsuariosGrupoTrabajo] = useState(false);\n  const [listaGruposTrabajo, setListaGruposTrabajo] = useState({\n    data: {}\n  });\n  const [getNombreProceso, setNombreProceso] = useState('');\n  const [getListaSemaforosActivosSecretaria, setListaSemaforosActivosSecretaria] = useState([]);\n  let numeroLlamadosFinalizar = 0;\n  let numeroTotalLlamadosFinalizar = 1;\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n\n  /**\r\n   * Funcion principal\r\n   */\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      nombreProceso();\n    }\n    fetchData();\n  }, []);\n\n  // Funcion para validar y detener el spinner\n  const validacionSpinnerFinalizar = () => {\n    numeroLlamadosFinalizar++;\n    if (numeroLlamadosFinalizar >= numeroTotalLlamadosFinalizar) {\n      window.showSpinner(false);\n      const tituloModal = getNombreProceso + \" :: Enviar a alguien de secretaria común dirigidamente\";\n      const mensajeModal = 'El proceso con radicado: ' + from.radicado + ' fue asignado al usuario: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ')  de la dependencia: ' + getUsuarioDependenciaNombre + '';\n      setModalState({\n        title: tituloModal.toUpperCase(),\n        message: mensajeModal.toUpperCase(),\n        show: true,\n        redirect: '/MisPendientes',\n        alert: global.Constants.TIPO_ALERTA.EXITO\n      });\n    }\n  };\n  const nombreProceso = () => {\n    GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setNombreProceso(datos.data.attributes.nombre);\n        obtenerParametros();\n        cargarGruposDeTrabajo();\n        obtenerSemaforosProcesoDisciplinario();\n      }\n    });\n  };\n  const cargarGruposDeTrabajo = () => {\n    GenericApi.getGeneric(\"mas_grupo_trabajo\").then(datos => {\n      if (!datos.error) {\n        setRespuestaGrupoTrabajo(true);\n        setListaGruposTrabajo(datos);\n      }\n      window.showSpinner(false);\n    });\n  };\n  const obtenerSemaforosProcesoDisciplinario = () => {\n    GenericApi.getAllGeneric(\"semaforo/get-semaforo-proceso-disciplinario/\" + global.Constants.SEMAFORO_EVENTOS.EVENTO_SECRETARIA_COMUN + \"/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setListaSemaforosActivosSecretaria(datos);\n      }\n      window.showSpinner(false);\n    });\n  };\n  const selectGrupoTrabajo = () => {\n    if (listaGruposTrabajo.data.length >= 1) {\n      return listaGruposTrabajo.data.map((grupoTrabajo, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: grupoTrabajo.id,\n          children: grupoTrabajo.attributes.nombre\n        }, grupoTrabajo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this);\n      });\n    }\n  };\n\n  // Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisión-\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n  const enviarDatos = valores => {\n    const iduserdependencia = getUser().id_dependencia;\n    window.showSpinner(true);\n    let data = {\n      \"data\": {\n        \"type\": \"transacciones\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_dependencia_origen\": iduserdependencia,\n          \"usuario_a_remitir\": getUsuarioSleccionado,\n          \"descripcion_a_remitir\": valores.informacion,\n          \"id_etapa\": 3\n        }\n      }\n    };\n\n    //Finalizando semaforo que inicia por grupo de trabajo\n    GenericApi.getByIdGeneric('get-semaforo-evento', 4).then(datosSemaforoFinaliza => {\n      if (datosSemaforoFinaliza.data.length >= 1) {\n        datosSemaforoFinaliza.data.forEach(element => {\n          if (getListaSemaforosActivosSecretaria.some(dato => dato.id == element.id) && element.attributes.id_mas_grupo_trabajo_inicia.id.toString() !== getIdGrupoTrabajo.toString()) {\n            let data = {\n              \"data\": {\n                \"type\": \"semaforo\",\n                \"attributes\": {\n                  \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\n                  \"id_semaforo\": element.id,\n                  \"id_actuacion_finaliza\": null,\n                  \"id_dependencia_finaliza\": null,\n                  \"id_usuario_finaliza\": getUsuarioId\n                }\n              }\n            };\n            GenericApi.getByDataGeneric('set-finaliza-semaforo', data);\n          }\n        });\n      }\n    });\n    const tituloModal = getNombreProceso + \" :: Enviar a alguien de secretaria común dirigidamente\";\n    GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(datos => {\n      if (!datos.error) {\n        validacionSpinnerFinalizar();\n        GenericApi.getByIdGeneric('get-semaforo-evento', 4).then(datosSemaforo => {\n          numeroTotalLlamadosFinalizar++;\n          validacionSpinnerFinalizar();\n          if (!datosSemaforo.error) {\n            datosSemaforo.data.forEach((element, index) => {\n              if (element.attributes.id_mas_evento_inicio.id == 4) {\n                if (!getListaSemaforosActivosSecretaria.some(objeto => objeto.id.toString() === element.id.toString())) {\n                  if (element.attributes.id_mas_grupo_trabajo_inicia.id.toString() == getIdGrupoTrabajo.toString()) {\n                    let date = new Date();\n                    let datapdxsemaforo = {\n                      \"data\": {\n                        \"type\": \"pdxsemaforo\",\n                        \"attributes\": {\n                          \"id_semaforo\": element.id,\n                          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n                          \"id_actuacion\": \"\",\n                          \"fecha_inicio\": date.toLocaleDateString('zh-Hans-CN'),\n                          \"estado\": 1\n                        }\n                      }\n                    };\n                    numeroTotalLlamadosFinalizar++;\n                    GenericApi.getByDataGeneric('pdxsemaforo', datapdxsemaforo).then(datosSemaforo => {\n                      numeroTotalLlamadosFinalizar++;\n                      validacionSpinnerFinalizar();\n                    });\n                  }\n                }\n              }\n            });\n          } else {\n            setModalState({\n              title: tituloModal.toUpperCase(),\n              message: \"HA OCURRIDO UN ERROR CON LA SEMAFORIZACIÓN\",\n              show: true,\n              alert: global.Constants.TIPO_ALERTA.ERROR\n            });\n          }\n        });\n      } else {\n        setModalState({\n          title: tituloModal.toUpperCase(),\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/AntecedentesLista',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n  const handleInputChange = event => {\n    if (!event.target.value) {\n      return;\n    }\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    if (name == \"usuario\") {\n      setUsuarioSleccionado(value);\n      datosDelUsuarioARemitir(value);\n    }\n    if (name == \"grupoTrabajo\") {\n      setIdGrupoTrabajo(value);\n      cargarUsuariosPorGrupo(value);\n    }\n  };\n  const datosDelUsuarioARemitir = name => {\n    window.showSpinner(true);\n    GenericApi.getGeneric('usuario/get-usuario-por-name/' + name).then(datos => {\n      if (!datos.error) {\n        // console.log(datos);\n        setUsuarioId(datos.data[0].id);\n        setUsuarioNombre(datos.data[0].attributes.nombre);\n        setUsuarioApellido(datos.data[0].attributes.apellido);\n        setUsuarioName(datos.data[0].attributes.name);\n        setUsuarioDependenciaNombre(datos.data[0].attributes.dependencia.nombre);\n        setUsuarioGruposTrabajo(datos.data[0].attributes.grupo_trabajo_secretaria_comun.split(','));\n      }\n      window.showSpinner(false);\n    });\n  };\n\n  // consultamos la cantidad maxima de caracteres para el textarea\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      };\n      GenericApi.getByDataGeneric('parametro/parametro-nombre', data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          window.showModal(1);\n        }\n      });\n    } catch (error) {\n      // console.log(error);\n    }\n  };\n  const cargarUsuariosPorGrupo = idGrupo => {\n    window.showSpinner(true);\n    const tituloModal = getNombreProceso + \" :: Enviar a alguien de mi dependencia\";\n    GenericApi.getAllGeneric(\"usuario/get-usuarios-grupotrabajo/\" + idGrupo + \"/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setRespuestaUsuariosGrupoTrabajo(true);\n        setListaUusariosDependencia(datos);\n        window.showSpinner(false);\n      } else {\n        setModalState({\n          title: tituloModal.toUpperCase(),\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/Transacciones',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n  const selectUsuarioGrupoTrabajo = () => {\n    if (getListaUusariosDependencia.data.length >= 1) {\n      return getListaUusariosDependencia.data.map((usuario, i) => {\n        if (usuario.attributes.name != getUser().nombre) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: usuario.attributes.name,\n            children: usuario.attributes.nombre + \" \" + usuario.attributes.apellido\n          }, usuario.attributes.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this);\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        informacion: '',\n        usuario: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        setCountTextArea(valores.informacion.length);\n        let errores = {};\n        if (getUsuarioSleccionado == undefined || getUsuarioSleccionado == \"\") errores.usuario = 'Debe seleccionar un usuario';\n        if (!valores.informacion) {\n          errores.informacion = 'Debe ingresar un valor';\n        } else if (valores.informacion.length <= getMinimoTextArea) {\n          errores.informacion = 'La descripción debe tener almenos ' + getMinimoTextArea + ' caracteres';\n        }\n        if (valores.informacion) {\n          if (containsSpecialChars(valores.informacion)) errores.informacion = 'Tiene caracteres inválidos';\n        }\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        enviarDatos(valores);\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w2d_block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"breadcrumb\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"breadcrumb breadcrumb-alt push\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/MisPendientes`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Mis Pendientes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 138\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/RamasProceso/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Ramas del proceso\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 161\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"Enviar a alguien de secretaria com\\xFAn dirigidamente\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-themed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: [\" \", getNombreProceso, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" :: ENVIAR A ALGUIEN DE SECRETARIA COM\\xDAN DIRIGIDAMENTE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 81\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"grupoTrabajo\",\n                      children: [\"SELECCIONE EL GRUPO DE TRABAJO \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 377,\n                        columnNumber: 106\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      value: getIdGrupoTrabajo,\n                      onChange: handleInputChange,\n                      as: \"select\",\n                      className: \"form-control\",\n                      id: \"grupoTrabajo\",\n                      name: \"grupoTrabajo\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"POR FAVOR SELECCIONE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 379,\n                        columnNumber: 49\n                      }, this), respuestaGrupoTrabajo ? selectGrupoTrabajo() : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 378,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"grupoTrabajo\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.grupoTrabajo\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 382,\n                        columnNumber: 97\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"dependenciaDestino\",\n                      children: [\"SELECCIONE EL USUARIO AL QUE SE ENVIAR\\xC1 EL PROCESO PARA SU GESTI\\xD3N \", getUsuarioSleccionado.toUpperCase(), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 387,\n                        columnNumber: 186\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      value: getUsuarioSleccionado,\n                      onChange: handleInputChange,\n                      as: \"select\",\n                      className: \"form-control\",\n                      id: \"usuario\",\n                      name: \"usuario\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"POR FAVOR SELECCIONE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 389,\n                        columnNumber: 49\n                      }, this), respuestaUsuariosGrupoTrabajo ? selectUsuarioGrupoTrabajo() : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"usuario\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.usuario\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 392,\n                        columnNumber: 92\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 392,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"informacion\",\n                      children: [\"OBSERVACIONES \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 397,\n                        columnNumber: 88\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      as: \"textarea\",\n                      className: \"form-control\",\n                      id: \"informacion\",\n                      name: \"informacion\",\n                      rows: \"6\",\n                      placeholder: \"INFORMACI\\xD3N PARA SU REMISI\\xD3N...\",\n                      maxLength: getMaximoTextArea,\n                      minLength: getMinimoTextArea\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-right\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-primary\",\n                        children: [countTextArea, \" / \", getMaximoTextArea]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 401,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"informacion\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.informacion\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 403,\n                        columnNumber: 96\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-rounded btn-primary\",\n                  children: \"REMITIR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: '/Transacciones',\n                  state: {\n                    from: from\n                  },\n                  className: \"font-size-h5 font-w600\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-rounded btn-outline-primary\",\n                    children: \"CANCELAR\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EnviaraAlguienDeSecretariaComunDirigido, \"O/N4jUnetYhXsZwcQILpjRM4SR4=\", false, function () {\n  return [useLocation];\n});\n_c = EnviaraAlguienDeSecretariaComunDirigido;\nexport default EnviaraAlguienDeSecretariaComunDirigido;\nvar _c;\n$RefreshReg$(_c, \"EnviaraAlguienDeSecretariaComunDirigido\");","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","useLocation","Spinner","GenericApi","getUser","ModalGen","Link","EnviaraAlguienDeSecretariaComunDirigido","getUsuarioSleccionado","setUsuarioSleccionado","getListaUusariosDependencia","setListaUusariosDependencia","data","getUsuarioId","setUsuarioId","getUsuarioNombre","setUsuarioNombre","getUsuarioApellido","setUsuarioApellido","getUsuarioName","setUsuarioName","getUsuarioDependenciaNombre","setUsuarioDependenciaNombre","getUsuarioGruposTrabajo","setUsuarioGruposTrabajo","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","getModalState","setModalState","title","message","show","getIdGrupoTrabajo","setIdGrupoTrabajo","respuestaGrupoTrabajo","setRespuestaGrupoTrabajo","respuestaUsuariosGrupoTrabajo","setRespuestaUsuariosGrupoTrabajo","listaGruposTrabajo","setListaGruposTrabajo","getNombreProceso","setNombreProceso","getListaSemaforosActivosSecretaria","setListaSemaforosActivosSecretaria","numeroLlamadosFinalizar","numeroTotalLlamadosFinalizar","location","from","state","procesoDisciplinarioId","fetchData","window","showSpinner","nombreProceso","validacionSpinnerFinalizar","tituloModal","mensajeModal","radicado","toUpperCase","redirect","alert","global","Constants","TIPO_ALERTA","EXITO","getByIdGeneric","then","datos","error","attributes","nombre","obtenerParametros","cargarGruposDeTrabajo","obtenerSemaforosProcesoDisciplinario","getGeneric","getAllGeneric","SEMAFORO_EVENTOS","EVENTO_SECRETARIA_COMUN","selectGrupoTrabajo","length","map","grupoTrabajo","i","id","containsSpecialChars","str","result","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","enviarDatos","valores","iduserdependencia","id_dependencia","informacion","datosSemaforoFinaliza","forEach","element","dato","id_mas_grupo_trabajo_inicia","toString","getByDataGeneric","addGeneric","datosSemaforo","index","id_mas_evento_inicio","objeto","date","Date","datapdxsemaforo","toLocaleDateString","ERROR","handleInputChange","event","target","value","type","checked","name","datosDelUsuarioARemitir","cargarUsuariosPorGrupo","apellido","dependencia","grupo_trabajo_secretaria_comun","filter","filteredName","showModal","idGrupo","selectUsuarioGrupoTrabajo","usuario","errores","undefined","resetForm","errors"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Transacciones/EnviaraAlguienDeSecretariaComunDirigido.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport { getUser } from '../../Utils/Common';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction EnviaraAlguienDeSecretariaComunDirigido() {\r\n\r\n    const [getUsuarioSleccionado, setUsuarioSleccionado] = useState(\"\");\r\n    const [getListaUusariosDependencia, setListaUusariosDependencia] = useState({ data: {} });\r\n    const [getUsuarioId, setUsuarioId] = useState();\r\n    const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\r\n    const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\r\n    const [getUsuarioName, setUsuarioName] = useState(\"\");\r\n    const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\r\n    const [getUsuarioGruposTrabajo, setUsuarioGruposTrabajo] = useState([]);\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getIdGrupoTrabajo, setIdGrupoTrabajo] = useState('');\r\n    const [respuestaGrupoTrabajo, setRespuestaGrupoTrabajo] = useState(false);\r\n    const [respuestaUsuariosGrupoTrabajo, setRespuestaUsuariosGrupoTrabajo] = useState(false);\r\n    const [listaGruposTrabajo, setListaGruposTrabajo] = useState({ data: {} });\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n    const [getListaSemaforosActivosSecretaria, setListaSemaforosActivosSecretaria] = useState([]);\r\n    let numeroLlamadosFinalizar = 0;\r\n    let numeroTotalLlamadosFinalizar = 1;\r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n    /**\r\n     * Funcion principal\r\n     */\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            nombreProceso();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Funcion para validar y detener el spinner\r\n    const validacionSpinnerFinalizar = () => {\r\n        numeroLlamadosFinalizar++\r\n        if(numeroLlamadosFinalizar >= numeroTotalLlamadosFinalizar){\r\n            window.showSpinner(false);\r\n            const tituloModal = getNombreProceso + \" :: Enviar a alguien de secretaria común dirigidamente\";\r\n            const mensajeModal = 'El proceso con radicado: ' + from.radicado + ' fue asignado al usuario: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ')  de la dependencia: ' + getUsuarioDependenciaNombre + '';\r\n            setModalState({ title: tituloModal.toUpperCase(), message: mensajeModal.toUpperCase(), show: true, redirect: '/MisPendientes', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n        }\r\n    }\r\n\r\n    const nombreProceso = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                    obtenerParametros();\r\n                    cargarGruposDeTrabajo();\r\n                    obtenerSemaforosProcesoDisciplinario()\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarGruposDeTrabajo = () => {\r\n        GenericApi.getGeneric(\"mas_grupo_trabajo\").then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setRespuestaGrupoTrabajo(true);\r\n                    setListaGruposTrabajo(datos);\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    const obtenerSemaforosProcesoDisciplinario = () => {\r\n\r\n        GenericApi.getAllGeneric(\"semaforo/get-semaforo-proceso-disciplinario/\"+global.Constants.SEMAFORO_EVENTOS.EVENTO_SECRETARIA_COMUN+\"/\"+procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaSemaforosActivosSecretaria(datos)\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const selectGrupoTrabajo = () => {\r\n        if (listaGruposTrabajo.data.length >= 1) {\r\n            return (\r\n                listaGruposTrabajo.data.map((grupoTrabajo, i) => {\r\n                    return (\r\n                        <option key={grupoTrabajo.id} value={grupoTrabajo.id}>{grupoTrabajo.attributes.nombre}</option>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisión-\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    const enviarDatos = (valores) => {\r\n        const iduserdependencia = getUser().id_dependencia;\r\n        window.showSpinner(true);\r\n\r\n        let data = {\r\n            \"data\": {\r\n                \"type\": \"transacciones\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_dependencia_origen\": iduserdependencia,\r\n                    \"usuario_a_remitir\": getUsuarioSleccionado,\r\n                    \"descripcion_a_remitir\": valores.informacion,\r\n                    \"id_etapa\": 3\r\n                }\r\n            }\r\n        }\r\n\r\n        //Finalizando semaforo que inicia por grupo de trabajo\r\n        GenericApi.getByIdGeneric('get-semaforo-evento', 4).then(\r\n            datosSemaforoFinaliza => {\r\n                if (datosSemaforoFinaliza.data.length >= 1) {\r\n                    datosSemaforoFinaliza.data.forEach(element => {\r\n                        if(getListaSemaforosActivosSecretaria.some(dato => dato.id == element.id) && element.attributes.id_mas_grupo_trabajo_inicia.id.toString() !== getIdGrupoTrabajo.toString()){\r\n                            let data = {\r\n                                \"data\": {\r\n                                    \"type\": \"semaforo\",\r\n                                    \"attributes\": {\r\n                                        \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                                        \"id_semaforo\": element.id,\r\n                                        \"id_actuacion_finaliza\": null,\r\n                                        \"id_dependencia_finaliza\": null,\r\n                                        \"id_usuario_finaliza\": getUsuarioId\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            GenericApi.getByDataGeneric('set-finaliza-semaforo', data);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        )\r\n\r\n        const tituloModal = getNombreProceso + \" :: Enviar a alguien de secretaria común dirigidamente\";\r\n\r\n        GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    validacionSpinnerFinalizar()\r\n\r\n                    GenericApi.getByIdGeneric('get-semaforo-evento', 4).then(\r\n                        datosSemaforo => {\r\n\r\n                            numeroTotalLlamadosFinalizar++\r\n                            validacionSpinnerFinalizar()\r\n\r\n                            if (!datosSemaforo.error) {\r\n\r\n                                datosSemaforo.data.forEach((element, index) => {\r\n                                    if (element.attributes.id_mas_evento_inicio.id == 4) {\r\n                                        if (!getListaSemaforosActivosSecretaria.some(objeto => objeto.id.toString() === element.id.toString())) {\r\n                                            if(element.attributes.id_mas_grupo_trabajo_inicia.id.toString() == getIdGrupoTrabajo.toString()){\r\n                                                let date = new Date();\r\n                                                let datapdxsemaforo = {\r\n                                                    \"data\": {\r\n                                                        \"type\": \"pdxsemaforo\",\r\n                                                        \"attributes\": {\r\n                                                            \"id_semaforo\": element.id,\r\n                                                            \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                                                            \"id_actuacion\": \"\",\r\n                                                            \"fecha_inicio\": date.toLocaleDateString('zh-Hans-CN'),\r\n                                                            \"estado\": 1,\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n\r\n                                                numeroTotalLlamadosFinalizar++\r\n\r\n                                                GenericApi.getByDataGeneric('pdxsemaforo', datapdxsemaforo).then(\r\n                                                    datosSemaforo => {\r\n                                                        numeroTotalLlamadosFinalizar++\r\n                                                        validacionSpinnerFinalizar()                                                        \r\n                                                    }\r\n                                                )\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                setModalState({ title: tituloModal.toUpperCase(), message: \"HA OCURRIDO UN ERROR CON LA SEMAFORIZACIÓN\", show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                            }\r\n                        }\r\n                    )\r\n                } else {\r\n                    setModalState({ title: tituloModal.toUpperCase(), message: datos.error.toString(), show: true, redirect: '/AntecedentesLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        if(!event.target.value){\r\n            return\r\n        }\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        if (name == \"usuario\") {\r\n            setUsuarioSleccionado(value);\r\n            datosDelUsuarioARemitir(value)\r\n        }\r\n        if (name == \"grupoTrabajo\") {\r\n            setIdGrupoTrabajo(value)\r\n            cargarUsuariosPorGrupo(value);\r\n        }\r\n    }\r\n\r\n    const datosDelUsuarioARemitir = (name) => {\r\n        window.showSpinner(true);\r\n        GenericApi.getGeneric('usuario/get-usuario-por-name/' + name).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    // console.log(datos);\r\n                    setUsuarioId(datos.data[0].id);\r\n                    setUsuarioNombre(datos.data[0].attributes.nombre);\r\n                    setUsuarioApellido(datos.data[0].attributes.apellido);\r\n                    setUsuarioName(datos.data[0].attributes.name);\r\n                    setUsuarioDependenciaNombre(datos.data[0].attributes.dependencia.nombre);\r\n                    setUsuarioGruposTrabajo(datos.data[0].attributes.grupo_trabajo_secretaria_comun.split(','))\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    // consultamos la cantidad maxima de caracteres para el textarea\r\n    const obtenerParametros = () => {\r\n        try {\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.getByDataGeneric('parametro/parametro-nombre', data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (datos[\"data\"].length > 0) {\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                        }\r\n                    } else {\r\n                        window.showModal(1);\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    const cargarUsuariosPorGrupo = (idGrupo) => {\r\n        window.showSpinner(true);\r\n        const tituloModal = getNombreProceso + \" :: Enviar a alguien de mi dependencia\";\r\n        GenericApi.getAllGeneric(\"usuario/get-usuarios-grupotrabajo/\"+idGrupo+\"/\"+procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setRespuestaUsuariosGrupoTrabajo(true);\r\n                    setListaUusariosDependencia(datos);\r\n                    window.showSpinner(false);\r\n                } else {\r\n                    setModalState({ title: tituloModal.toUpperCase(), message: datos.error.toString(), show: true, redirect: '/Transacciones', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const selectUsuarioGrupoTrabajo = () => {\r\n        if (getListaUusariosDependencia.data.length >= 1) {\r\n            return (\r\n                getListaUusariosDependencia.data.map((usuario, i) => {\r\n                    if (usuario.attributes.name != getUser().nombre) {\r\n                        return (\r\n                            <option key={usuario.attributes.name} value={usuario.attributes.name}>{usuario.attributes.nombre + \" \" + usuario.attributes.apellido}</option>\r\n                        )\r\n                    }\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    informacion: '',\r\n                    usuario: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    setCountTextArea(valores.informacion.length)\r\n                    let errores = {}\r\n                    if (getUsuarioSleccionado == undefined || getUsuarioSleccionado == \"\")\r\n                        errores.usuario = 'Debe seleccionar un usuario'\r\n\r\n                    if (!valores.informacion) {\r\n                        errores.informacion = 'Debe ingresar un valor'\r\n                    }\r\n                    else if (valores.informacion.length <= getMinimoTextArea) {\r\n                        errores.informacion = 'La descripción debe tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                    }\r\n                    if (valores.informacion) {\r\n                        if (containsSpecialChars(valores.informacion))\r\n                            errores.informacion = 'Tiene caracteres inválidos'\r\n                    }\r\n\r\n                    return errores\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <small>Enviar a alguien de secretaria común dirigidamente</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\"> {getNombreProceso} <strong> :: ENVIAR A ALGUIEN DE SECRETARIA COMÚN DIRIGIDAMENTE</strong></h3>\r\n                            </div>\r\n                            <div className=\"block-content\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"grupoTrabajo\">SELECCIONE EL GRUPO DE TRABAJO <span className=\"text-danger\">*</span></label>\r\n                                            <Field value={getIdGrupoTrabajo} onChange={handleInputChange} as=\"select\" className=\"form-control\" id=\"grupoTrabajo\" name=\"grupoTrabajo\">\r\n                                                <option value=\"\">POR FAVOR SELECCIONE</option>\r\n                                                {respuestaGrupoTrabajo ? selectGrupoTrabajo() : null}\r\n                                            </Field>\r\n                                            <ErrorMessage name=\"grupoTrabajo\" component={() => (<span className=\"text-danger\">{errors.grupoTrabajo}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"dependenciaDestino\">SELECCIONE EL USUARIO AL QUE SE ENVIARÁ EL PROCESO PARA SU GESTIÓN {getUsuarioSleccionado.toUpperCase()} <span className=\"text-danger\">*</span></label>\r\n                                            <Field value={getUsuarioSleccionado} onChange={handleInputChange} as=\"select\" className=\"form-control\" id=\"usuario\" name=\"usuario\">\r\n                                                <option value=\"\">POR FAVOR SELECCIONE</option>\r\n                                                {respuestaUsuariosGrupoTrabajo ? selectUsuarioGrupoTrabajo() : null}\r\n                                            </Field>\r\n                                            <ErrorMessage name=\"usuario\" component={() => (<span className=\"text-danger\">{errors.usuario}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"informacion\">OBSERVACIONES <span className=\"text-danger\">*</span></label>\r\n                                            <Field as=\"textarea\" className=\"form-control\" id=\"informacion\" name=\"informacion\" rows=\"6\" placeholder=\"INFORMACIÓN PARA SU REMISIÓN...\"\r\n                                                maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                            <div className=\"text-right\">\r\n                                                <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                            </div>\r\n                                            <ErrorMessage name=\"informacion\" component={() => (<span className=\"text-danger\">{errors.informacion}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">REMITIR</button>\r\n                                    <Link to={'/Transacciones'} state={{ from: from }} className=\"font-size-h5 font-w600\" >\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">CANCELAR</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EnviaraAlguienDeSecretariaComunDirigido;"],"mappings":"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"},"metadata":{},"sourceType":"module"}