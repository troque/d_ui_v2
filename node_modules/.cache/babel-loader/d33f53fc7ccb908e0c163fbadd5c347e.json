{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Maestras\\\\FaseLista.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport InfoErrorApi from '../Utils/InfoErrorApi';\nimport GenericApi from '../Api/Services/GenericApi';\nimport Spinner from '../Utils/Spinner';\nimport DataTable from 'react-data-table-component';\nimport ListaBotones from '../Utils/ListaBotones';\nimport '../Utils/Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FaseLista() {\n  _s();\n\n  const [getFaseLista, setFaseLista] = useState({\n    data: []\n  });\n  const paganationPerPages = global.Constants.DATA_TABLE.PAGINATION_PER_PAGE;\n  const [perPage, setPerPage] = useState(global.Constants.DATA_TABLE.PAGINATION_PER_PAGE);\n  const [pageActual, setPageActual] = useState(1);\n  const [getSeach, setSeach] = useState('');\n  const [getEstadoLista, setEstadoLista] = useState('1');\n  const [getRoutes, setRoutes] = useState({\n    crear_registro: \"/Fase/Add\",\n    consultar_registros: \"/Fase\",\n    muestra_atras: false,\n    id_etapa: global.Constants.ETAPAS.NINGUNA\n  });\n\n  const handleCallback = childData => {\n    try {\n      setEstadoLista(childData);\n    } catch (error) {}\n  };\n\n  const columns = [{\n    name: 'Nombre',\n    selector: fase => fase.attributes.nombre,\n    sortable: true,\n    width: \"40%\"\n  }, {\n    name: 'Etapa',\n    selector: fase => fase.attributes.etapa.nombre,\n    sortable: true,\n    width: \"30%\"\n  }, {\n    name: 'Estado',\n    selector: fase => fase.attributes.estado == global.Constants.ESTADOS.ACTIVO ? 'Activo' : 'Inactivo',\n    sortable: true\n  }, {\n    name: 'Acciones',\n    cell: row => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/Fase/${row.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn btn-primary\",\n          title: \"Editar\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-fw fa-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 26\n    }, this)\n  }];\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      cargarFases(1, paganationPerPages);\n    }\n\n    fetchData();\n  }, []);\n\n  const cargarFases = (page, perPage) => {\n    GenericApi.getAllGeneric('mas-fase-sin-estado').then(datos => {\n      if (!datos.error) {\n        setFaseLista(datos);\n        window.showSpinner(false);\n      } else {\n        window.showModal();\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  const handlePageChange = page => {\n    setPageActual(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    //window.showSpinner(true);\n    setPerPage(newPerPage);\n    setPageActual(page);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block block-rounded block-bordered\",\n    children: [/*#__PURE__*/_jsxDEV(InfoErrorApi, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block block-themed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-content\",\n          children: /*#__PURE__*/_jsxDEV(\"nav\", {\n            \"aria-label\": \"breadcrumb\",\n            children: /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"breadcrumb breadcrumb-alt push\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"breadcrumb-item\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Lista de fases\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 62\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"block-title\",\n          children: [\"Fases registradas \", getEstadoLista == global.Constants.ESTADOS.INACTIVO ? \"Inactivas\" : \"Activas\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group \",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"search\",\n                name: \"search\",\n                value: getSeach,\n                onChange: e => setSeach(e.target.value),\n                onKeyPress: e => {\n                  e.key === 'Enter' && e.preventDefault();\n                },\n                className: \"form-control border border-success\",\n                placeholder: \"Buscar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListaBotones, {\n            getRoutes: getRoutes,\n            parentCallback: handleCallback,\n            id: \"botonesNavegacion\",\n            name: \"botonesNavegacion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(DataTable, {\n              className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n              columns: columns,\n              data: getFaseLista.data.filter(suggestion => {\n                if (getSeach === \"\") {\n                  if (suggestion.attributes.estado == getEstadoLista) {\n                    return suggestion;\n                  }\n                } else if ((suggestion.id + suggestion.attributes.nombre + suggestion.attributes.etapa.nombre + (suggestion.attributes.estado == global.Constants.ESTADOS.ACTIVO ? 'Activo' : 'Inactivo')).toLowerCase().includes(getSeach.toLowerCase()) && suggestion.attributes.estado == getEstadoLista) {\n                  return suggestion;\n                }\n              }),\n              perPage: perPage,\n              page: pageActual,\n              pagination: true,\n              noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n              paginationTotalRows: getFaseLista.data.length,\n              onChangePage: handlePageChange,\n              onChangeRowsPerPage: handlePerRowsChange,\n              striped: true,\n              paginationComponentOptions: {\n                rowsPerPageText: global.Constants.DATA_TABLE.FILTRO_POR_PAGINA\n              },\n              defaultSortAsc: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FaseLista, \"hPdYFgfQd/8VJGCzPB6xzNVwvYY=\");\n\n_c = FaseLista;\nexport default FaseLista;\n\nvar _c;\n\n$RefreshReg$(_c, \"FaseLista\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/FaseLista.js"],"names":["React","useEffect","useState","Link","InfoErrorApi","GenericApi","Spinner","DataTable","ListaBotones","FaseLista","getFaseLista","setFaseLista","data","paganationPerPages","global","Constants","DATA_TABLE","PAGINATION_PER_PAGE","perPage","setPerPage","pageActual","setPageActual","getSeach","setSeach","getEstadoLista","setEstadoLista","getRoutes","setRoutes","crear_registro","consultar_registros","muestra_atras","id_etapa","ETAPAS","NINGUNA","handleCallback","childData","error","columns","name","selector","fase","attributes","nombre","sortable","width","etapa","estado","ESTADOS","ACTIVO","cell","row","id","fetchData","window","showSpinner","cargarFases","page","getAllGeneric","then","datos","showModal","handlePageChange","handlePerRowsChange","newPerPage","INACTIVO","e","target","value","key","preventDefault","filter","suggestion","toLowerCase","includes","SIN_DATOS_TABLE","length","rowsPerPageText","FILTRO_POR_PAGINA"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport GenericApi from '../Api/Services/GenericApi';\r\nimport Spinner from '../Utils/Spinner';\r\nimport DataTable from 'react-data-table-component';\r\nimport ListaBotones from '../Utils/ListaBotones';\r\nimport '../Utils/Constants';\r\n\r\nfunction FaseLista() {\r\n    const [getFaseLista, setFaseLista] = useState({ data: [] });\r\n    const paganationPerPages = global.Constants.DATA_TABLE.PAGINATION_PER_PAGE;\r\n    const [perPage, setPerPage] = useState(global.Constants.DATA_TABLE.PAGINATION_PER_PAGE);\r\n    const [pageActual, setPageActual] = useState(1);\r\n    const [getSeach, setSeach] = useState('');\r\n\r\n    const [getEstadoLista, setEstadoLista] = useState('1');\r\n    \r\n    const [getRoutes, setRoutes] = useState({\r\n\r\n        crear_registro: \"/Fase/Add\",\r\n        consultar_registros: \"/Fase\",\r\n        muestra_atras: false,\r\n        id_etapa: global.Constants.ETAPAS.NINGUNA,\r\n    });\r\n\r\n    const handleCallback = (childData) => {\r\n        try {\r\n\r\n            setEstadoLista(childData)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Nombre',\r\n            selector: fase => fase.attributes.nombre,\r\n            sortable: true,\r\n            width: \"40%\"\r\n        },\r\n        {\r\n            name: 'Etapa',\r\n            selector: fase => fase.attributes.etapa.nombre,\r\n            sortable: true,\r\n            width: \"30%\"\r\n        },\r\n        {\r\n            name: 'Estado',\r\n            selector: fase => (fase.attributes.estado == global.Constants.ESTADOS.ACTIVO ? 'Activo' : 'Inactivo'),\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Acciones',\r\n\r\n\r\n            cell: row => <div><Link to={`/Fase/${row.id}`}>\r\n                <button type=\"button\" className=\"btn btn btn-primary\" title='Editar'>\r\n                    <i className=\"fa fa-fw fa-edit\"></i>\r\n                </button>\r\n            </Link></div>\r\n        }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            cargarFases(1, paganationPerPages);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const cargarFases = (page, perPage) => {\r\n\r\n        GenericApi.getAllGeneric('mas-fase-sin-estado').then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    setFaseLista(datos);\r\n                    window.showSpinner(false);\r\n                }\r\n                else {\r\n                    window.showModal();\r\n                    window.showSpinner(false);\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const handlePageChange = page => {\r\n        setPageActual(page);\r\n\r\n    }\r\n\r\n    const handlePerRowsChange = async (newPerPage, page) => {\r\n        //window.showSpinner(true);\r\n        setPerPage(newPerPage);\r\n        setPageActual(page);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"block block-rounded block-bordered\">\r\n            {<InfoErrorApi />}\r\n            {<Spinner />}\r\n            <div className=\"block block-themed\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"block-content\">\r\n                        <nav aria-label=\"breadcrumb\">\r\n                            <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                <li class=\"breadcrumb-item\"> <small>Lista de fases</small></li>\r\n                            </ol>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n                <div className=\"block-header\">\r\n                    <h3 className=\"block-title\">Fases registradas {getEstadoLista == global.Constants.ESTADOS.INACTIVO ? \"Inactivas\" : \"Activas\"}</h3>\r\n\r\n                </div>\r\n                <div className=\"block-content\">\r\n                    <div className='row'>\r\n                        <div className='col-md-3'>\r\n                            <div className=\"form-group \">\r\n\r\n                                <input type=\"text\" id=\"search\" name=\"search\" value={getSeach} onChange={e => setSeach(e.target.value)} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} className=\"form-control border border-success\" placeholder=\"Buscar\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <ListaBotones getRoutes={getRoutes} parentCallback={handleCallback} id=\"botonesNavegacion\" name=\"botonesNavegacion\" />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                columns={columns}\r\n                                data={getFaseLista.data.filter((suggestion) => {\r\n                                    if (getSeach === \"\") {\r\n                                        if (suggestion.attributes.estado == getEstadoLista) {\r\n                                            return suggestion;\r\n                                        }\r\n                                    } else if (\r\n\r\n                                        ((suggestion.id\r\n                                            + suggestion.attributes.nombre\r\n                                            + (suggestion.attributes.etapa.nombre)\r\n                                            + (suggestion.attributes.estado == global.Constants.ESTADOS.ACTIVO ? 'Activo' : 'Inactivo')).toLowerCase().includes(getSeach.toLowerCase())\r\n                                            && (suggestion.attributes.estado == getEstadoLista))\r\n\r\n                                    ) {\r\n                                        return suggestion;\r\n                                    }\r\n                                })}\r\n                                perPage={perPage}\r\n                                page={pageActual}\r\n                                pagination\r\n                                noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                                paginationTotalRows={getFaseLista.data.length}\r\n                                onChangePage={handlePageChange}\r\n                                onChangeRowsPerPage={handlePerRowsChange}\r\n                                striped\r\n                                paginationComponentOptions={{ rowsPerPageText: global.Constants.DATA_TABLE.FILTRO_POR_PAGINA }}\r\n                                defaultSortAsc={false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaseLista;"]},"metadata":{},"sourceType":"module"}