{"ast":null,"code":"import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{ErrorMessage,Field,Form,Formik}from'formik';import{Link}from\"react-router-dom\";import'react-datetime/css/react-datetime.css';import'moment/locale/es';import{getUser}from'../../../components/Utils/Common';import{useLocation}from'react-router-dom';import DatePerson from\"../../DatePerson/DatePerson\";import'../../Utils/Constants';import ModalGen from'../../Utils/Modals/ModalGeneric';import GenericApi from'../../Api/Services/GenericApi';import Spinner from'../../Utils/Spinner';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ClasificacionRadicado(props){var _useState=useState({title:\"\",message:\"\",show:false}),_useState2=_slicedToArray(_useState,2),getModalState=_useState2[0],setModalState=_useState2[1];var _useState3=useState({data:{}}),_useState4=_slicedToArray(_useState3,2),listaTipoExpediente=_useState4[0],setListaTipoExpediente=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),respuestaTipoExpediente=_useState6[0],setRespuestaTipoExpediente=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),selectedTipoExpediente=_useState8[0],setSelectedTipoExpediente=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),countTextArea=_useState10[0],setCountTextArea=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),getMaximoTextArea=_useState12[0],setMaximoTextArea=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),getMinimoTextArea=_useState14[0],setMinimoTextArea=_useState14[1];var _useState15=useState({data:{}}),_useState16=_slicedToArray(_useState15,2),listaTipoDerechoPeticion=_useState16[0],setListaDerechoPeticion=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),selectedTipoDerechoPeticion=_useState18[0],setSelectedDerechoPeticion=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),respuestaTipoDerechoPeticion=_useState20[0],setRespuestaDerechoPeticion=_useState20[1];var _useState21=useState({data:{}}),_useState22=_slicedToArray(_useState21,2),listaTipoRespuesta=_useState22[0],setListaTipoRespuesta=_useState22[1];var _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),selectedTipoRespuesta=_useState24[0],setSelectedTipoRespuesta=_useState24[1];var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),respuestaTipoRespuesta=_useState26[0],setRespuestaTipoRespuesta=_useState26[1];var _useState27=useState({data:{}}),_useState28=_slicedToArray(_useState27,2),listaTerminosRespuesta=_useState28[0],setListaTerminosRespuesta=_useState28[1];var _useState29=useState(\"\"),_useState30=_slicedToArray(_useState29,2),selectedTerminosRespuesta=_useState30[0],setSelectedTerminosRespuesta=_useState30[1];var _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),respuestaTerminosRespuesta=_useState32[0],setRespuestaTerminosRespuesta=_useState32[1];var _useState33=useState({data:{}}),_useState34=_slicedToArray(_useState33,2),listaTiposQueja=_useState34[0],setListaTiposQueja=_useState34[1];var _useState35=useState(\"\"),_useState36=_slicedToArray(_useState35,2),selectedTiposQueja=_useState36[0],setSelectedTiposQueja=_useState36[1];var _useState37=useState(false),_useState38=_slicedToArray(_useState37,2),respuestaTiposQueja=_useState38[0],setRespuestaTiposQueja=_useState38[1];var _useState39=useState(null),_useState40=_slicedToArray(_useState39,2),fechaTermino=_useState40[0],setFechaTermino=_useState40[1];var _useState41=useState([]),_useState42=_slicedToArray(_useState41,2),resultDiasNoLaborales=_useState42[0],setResultDiasNoLaborales=_useState42[1];var _useState43=useState(\"\"),_useState44=_slicedToArray(_useState43,2),getNombreUsuario=_useState44[0],setNombreUsuario=_useState44[1];var _useState45=useState(\"\"),_useState46=_slicedToArray(_useState45,2),getNombreRol=_useState46[0],setNombreRol=_useState46[1];var _useState47=useState(0),_useState48=_slicedToArray(_useState47,2),getAnosAtrasInvalidos=_useState48[0],setAnosAtrasInvalidos=_useState48[1];var _useState49=useState(\"\"),_useState50=_slicedToArray(_useState49,2),getAlerta=_useState50[0],setAlerta=_useState50[1];var _useState51=useState(\"\"),_useState52=_slicedToArray(_useState51,2),getMensajeAlerta=_useState52[0],setMensajeAlerta=_useState52[1];var _useState53=useState(''),_useState54=_slicedToArray(_useState53,2),getNombreProceso=_useState54[0],setNombreProceso=_useState54[1];var _useState55=useState(''),_useState56=_slicedToArray(_useState55,2),getHorasTermino=_useState56[0],setHorasTermino=_useState56[1];var _useState57=useState(''),_useState58=_slicedToArray(_useState57,2),getObservaciones=_useState58[0],setObservaciones=_useState58[1];var _useState59=useState(false),_useState60=_slicedToArray(_useState59,2),getRepuestaObservaciones=_useState60[0],setRepuestaObservaciones=_useState60[1];var location=useLocation();var from=location.state.from;var procesoDisciplinarioId=from.procesoDisciplinarioId;var radicado=from.radicado;var id_etapa=from.id_etapa;/**\r\n     * Validación de los caracteres especiales en los campos de texto\r\n     * @param {*} str \r\n     * @returns \r\n     */function containsSpecialChars(str){var result=global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(function(specialChar){if(str.includes(specialChar)){return true;}return false;});return result;}/**\r\n     * Funcion principal\r\n     */useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setNombreUsuario(getUser().nombre);setNombreRol(getUser().roles);getApiTipoRespuesta();nombreProceso();case 4:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[]);var getApiTipoRespuesta=function getApiTipoRespuesta(){window.showSpinner(true);GenericApi.getGeneric(\"tipo-respuesta\").then(function(datos){if(!datos.error){setListaTipoRespuesta(datos);setRespuestaTipoRespuesta(true);getApiTipoExpediente();}else{setModalState({title:getNombreProceso+\" :: CLASIFICACIÓN DEL RADICADO\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);}});};var getApiTipoExpediente=function getApiTipoExpediente(){GenericApi.getGeneric(\"proceso-disciplinario/tipo-expdiente/\"+procesoDisciplinarioId).then(function(datos){if(!datos.error){setListaTipoExpediente(datos);setRespuestaTipoExpediente(true);getApiTipoDerechoPeticion();}else{setModalState({title:getNombreProceso+\" :: CLASIFICACIÓN DEL RADICADO\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);}});};var getApiTipoDerechoPeticion=function getApiTipoDerechoPeticion(){GenericApi.getGeneric(\"lista-tipo-derecho-peticion/\"+procesoDisciplinarioId).then(function(datos){if(!datos.error){setListaDerechoPeticion(datos);setRespuestaDerechoPeticion(true);getApiTerminosRespuesta();}else{setModalState({title:getNombreProceso+\" :: CLASIFICACIÓN DEL RADICADO\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);}});};var getApiTerminosRespuesta=function getApiTerminosRespuesta(){GenericApi.getGeneric(\"lista-terminos-respuesta/\"+procesoDisciplinarioId).then(function(datos){if(!datos.error){setListaTerminosRespuesta(datos);setRespuestaTerminosRespuesta(true);getApiTipoQueja();}else{setModalState({title:getNombreProceso+\" :: CLASIFICACIÓN DEL RADICADO\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);}});};var getApiTipoQueja=function getApiTipoQueja(){GenericApi.getGeneric(\"lista-tipo-queja/\"+procesoDisciplinarioId).then(function(datos){if(!datos.error){setListaTiposQueja(datos);setRespuestaTiposQueja(true);getApiDiasNoLaborales();}else{setModalState({title:getNombreProceso+\" :: CLASIFICACIÓN DEL RADICADO\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);}});};var getApiDiasNoLaborales=function getApiDiasNoLaborales(){GenericApi.getGeneric(\"dias-no-laborales?estado=1\").then(function(datos){if(!datos.error){var data=[];for(var i in datos.data){var date=datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];var result=new Date(date);result.setDate(result.getDate()+1);data.push(i,date);}setResultDiasNoLaborales(data);obtenerParametros();//console.log(resultDiasNoLaborales);\n}else{setModalState({title:getNombreProceso+\" :: CLASIFICACIÓN DEL RADICADO\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoForm',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);}});};/**\r\n     * Funcion que obtiene información de las parámetricas.\r\n     * Ejm: número máximo y mínimo de caracteres \r\n     */var obtenerParametros=function obtenerParametros(){try{var data={\"data\":{\"type\":'mas_parametro',\"attributes\":{\"nombre\":\"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"}}};//buscamos el parametro\nGenericApi.getByDataGeneric(\"parametro/parametro-nombre\",data).then(function(datos){if(!datos.error){if(datos[\"data\"].length>0){datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('limite_años_calendario');}).map(function(filteredName){return setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"]);});datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea');}).map(function(filteredName){return setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]);});datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea');}).map(function(filteredName){return setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]);});}}else{setModalState({title:getNombreProceso+\" :: CLASIFICACIÓN DEL RADICADO\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoForm',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}window.showSpinner(false);});}catch(error){// console.log(error);\nwindow.showSpinner(false);}};var nombreProceso=function nombreProceso(){GenericApi.getByIdGeneric(\"nombre-proceso\",procesoDisciplinarioId).then(function(datos){if(!datos.error){setNombreProceso(datos.data.attributes.nombre);}});};var disableCustomDt=function disableCustomDt(current){return!resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));};var selectChangeTipoRespuesta=function selectChangeTipoRespuesta(e){setSelectedTipoRespuesta(e);};var selectChangeTipoExpediente=function selectChangeTipoExpediente(e){setCountTextArea(0);setSelectedTipoExpediente(e);};var selectChangeTipoDerechoPeticion=function selectChangeTipoDerechoPeticion(tipo_expediente,e){setCountTextArea(0);setSelectedDerechoPeticion(e);// Se valida que el valor sea diferente de null\nif(e!=\"\"){// Se consume la api del mensaje\ngetApiMasTipoMensajesExpedientes(tipo_expediente,e);}};var selectChangeTerminoRespuesta=function selectChangeTerminoRespuesta(e){setSelectedTerminosRespuesta(e);};var selectChangeTiposQueja=function selectChangeTiposQueja(e){setSelectedTiposQueja(e);};//Componetes\nvar selectTipoRespuesta=function selectTipoRespuesta(){return listaTipoRespuesta.data.map(function(tipo_respuesta,i){return/*#__PURE__*/_jsx(\"option\",{value:tipo_respuesta.id,children:tipo_respuesta.attributes.nombre},tipo_respuesta.id);});};var selectTipoExpediente=function selectTipoExpediente(){return listaTipoExpediente.data.map(function(expediente,i){return/*#__PURE__*/_jsx(\"option\",{value:expediente.id,children:expediente.attributes.nombre},expediente.id);});};var selectTipoDerechoPeticion=function selectTipoDerechoPeticion(){return listaTipoDerechoPeticion.data.map(function(derecho_peticion,i){return/*#__PURE__*/_jsx(\"option\",{value:derecho_peticion.id,children:derecho_peticion.attributes.nombre},derecho_peticion.id);});};var selectTerminosRespuesta=function selectTerminosRespuesta(){return listaTerminosRespuesta.data.map(function(termino_respuesta,i){return/*#__PURE__*/_jsx(\"option\",{value:termino_respuesta.id,children:termino_respuesta.attributes.nombre},termino_respuesta.id);});};var selectTiposQueja=function selectTiposQueja(){return listaTiposQueja.data.map(function(tipo_queja,i){return/*#__PURE__*/_jsx(\"option\",{value:tipo_queja.id,children:tipo_queja.attributes.nombre},tipo_queja.id);});};var enviarDatos=function enviarDatos(datos){// Se usa el cargando\nwindow.showSpinner(true);// Se inicializa la variable\nvar data;// Se redeclara la data a enviar\ndata={\"data\":{\"type\":\"clasificacion_radicado\",\"attributes\":{\"id_proceso_disciplinario\":props.getParametros.id_proceso_disciplinario,\"id_etapa\":props.getParametros.id_etapa,\"id_tipo_expediente\":selectedTipoExpediente,\"observaciones\":datos.observaciones!=null?datos.observaciones:null,\"id_tipo_queja\":datos.tipo_queja,\"id_termino_respuesta\":selectedTerminosRespuesta,\"fecha_termino\":datos.fechaTermino!=null?datos.fechaTermino:null,\"hora_termino\":getHorasTermino!=null?getHorasTermino:null,\"gestion_juridica\":datos.gestion_juridica==='true'?true:false,\"estado\":true,\"id_estado_reparto\":2,\"id_tipo_derecho_peticion\":datos.tipo_derecho_peticion,\"oficina_control_interno\":false,\"created_user\":getNombreUsuario,\"reclasificacion\":props.getParametros.reclasificacion}}};// Se consume la API\nGenericApi.addGeneric(\"clasificacion-radicado\",data).then(// Se inicializa la variable de respuesta\nfunction(datos){// Se quita el cargando\nwindow.showSpinner(false);console.log(\"Paso por el cargando\");// Se valida que no haya error\nif(!datos.error){// Se le da estilo al boton del radicado\nfrom.cambiaColorClasificacionRadicado=\"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";// Se valida que el tipo de clasificacion del from sea igual a el tipo de clasificacion de validar\nif(props.getParametros.tipo_clasificacion===global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION){// Se valida que nombre del funcionario sea igual al del usuario logeado\nif(datos.data.attributes.funcionario_actual.name===getNombreUsuario){// Se setea el mensaje\nsetModalState({title:getNombreProceso+\" :: CLASIFICACIÓN DEL RADICADO\",message:\"EL PROCESO DISCIPLINARIO SE ASIGNA A: \"+datos.data.attributes.funcionario_actual.nombre+\" \"+datos.data.attributes.funcionario_actual.apellido,show:true,redirect:'/RamasProceso',from:{from:from},alert:global.Constants.TIPO_ALERTA.EXITO});}else{// Se setea el mensaje\nsetModalState({title:getNombreProceso+\" :: RE-CLASIFICACIÓN DEL RADICADO\",message:\"EL PROCESO DISCIPLINARIO SE ASIGNA A: \"+datos.data.attributes.funcionario_actual.nombre+\" \"+datos.data.attributes.funcionario_actual.apellido,show:true,redirect:'/MisPendientes',from:{from:from},alert:global.Constants.TIPO_ALERTA.EXITO});}}else if(props.getParametros.tipo_clasificacion===global.Constants.TIPO_CLASIFICACION.CLASIFICACION){// Se setea el mensaje\nsetModalState({title:getNombreProceso+\" ::  CLASIFICACIÓN DEL RADICADO\",message:global.Constants.MENSAJES_MODAL.EXITOSO,show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.EXITO});}}else{// Se setea el mensaje\nsetModalState({title:getNombreProceso+\" ::  CLASIFICACIÓN DEL RADICADO\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});};var handleCallbackFechaTermino=function handleCallbackFechaTermino(childData){try{setFechaTermino(childData);}catch(error){}};// COMPOENENTE TIPO EXPEDIENTE\nvar componenteTipoExpediente=function componenteTipoExpediente(tipo_expediente){// TIPO DE EXPEDIENTE = DERECHO DE PETICION\nif(tipo_expediente===global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"ingresoDerechoPeticion\",children:[\"TIPO DE DERECHO DE PETICI\\xD3N\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-control\",id:\"ingresoDerechoPeticion\",name:\"ingresoDerechoPeticion\",value:selectedTipoDerechoPeticion,onChange:function onChange(e){return selectChangeTipoDerechoPeticion(tipo_expediente,e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}),respuestaTipoDerechoPeticion?selectTipoDerechoPeticion():null]})]}),componenteTipoDerechoPeticion(tipo_expediente,selectedTipoDerechoPeticion)]});}// TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\nelse if(tipo_expediente===global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{tipo_queja:global.Constants.TIPO_QUEJA.EXTERNA},enableReinitialize:true,validate:function validate(valores){var errores={};return errores;},onSubmit:function onSubmit(valores,_ref){var resetForm=_ref.resetForm;enviarDatos(valores);},children:/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:global.Constants.BOTON_NOMBRE.REGISTRAR}),/*#__PURE__*/_jsx(Link,{to:\"/ClasificacionRadicadoLista/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:global.Constants.BOTON_NOMBRE.CANCELAR})})]})})})});}// TIPO DE EXPEDIENTE = QUEJA\nelse if(tipo_expediente===global.Constants.TIPOS_EXPEDIENTES.QUEJA){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{tipo_queja:''},enableReinitialize:true,validate:function validate(valores){var errores={};if(!valores.tipo_queja){errores.tipo_queja=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}return errores;},onSubmit:function onSubmit(valores,_ref2){var resetForm=_ref2.resetForm;enviarDatos(valores);},children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"tipo_queja\",children:[\"TIPO DE QUEJA\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Field,{as:\"select\",className:\"form-control\",id:\"tipo_queja\",name:\"tipo_queja\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}),respuestaTiposQueja?selectTiposQueja():null]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:global.Constants.BOTON_NOMBRE.REGISTRAR}),/*#__PURE__*/_jsx(Link,{to:\"/ClasificacionRadicadoLista/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:global.Constants.BOTON_NOMBRE.CANCELAR})})]})]})})});}// TIPO DE EXPEDIENTE = TUTELA\nelse if(tipo_expediente===global.Constants.TIPOS_EXPEDIENTES.TUTELA){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"ingresoTipoRtaTutela\",children:[\"T\\xC9RMINO DE RESPUESTA\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-control\",id:\"termino_rta\",name:\"termino_rta\",value:selectedTerminosRespuesta,onChange:function onChange(e){return selectChangeTerminoRespuesta(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"{selectedTerminosRespuesta}\",children:global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}),respuestaTerminosRespuesta?selectTerminosRespuesta():null]}),selectedTerminosRespuesta===global.Constants.TERMINOS_RESPUESTA.DIAS?componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS):'',selectedTerminosRespuesta===global.Constants.TERMINOS_RESPUESTA.HORAS?componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS):'']});}};// Metodo encargado de cargar el mensaje por el tipo de expediente\nvar getApiMasTipoMensajesExpedientes=function getApiMasTipoMensajesExpedientes(idTipoExpediente,idSubTipoExpediente){// Se inicializa la API\nGenericApi.getGeneric(\"mas_tipo_expediente_mensajes/\"+idTipoExpediente+\"/\"+idSubTipoExpediente).then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se captura la informacion en la posicion 0\nvar data=datos.data[0];// Se setea el mensaje \nsetMensajeAlerta(data.attributes.mensaje);}else{// Se setea el modal\nsetModalState({title:getNombreProceso+\" :: CLASIFICACIÓN DEL RADICADO\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoForm',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});};var changeObservaciones=function changeObservaciones(e){if(e.target.value===''||global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(e.target.value)&&e.target.value.length<=getMaximoTextArea){setObservaciones(e.target.value);setCountTextArea(e.target.value.length);setRepuestaObservaciones(true);}};// COMOPNENTE TIPO DERECHO DE PETICION\nvar componenteTipoDerechoPeticion=function componenteTipoDerechoPeticion(tipoExpediente,tipo_derecho_peticion){// TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\nif(tipo_derecho_peticion===global.Constants.DERECHOS_PETICION.COPIAS){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{observaciones:'',gestion_juridica:false,tipo_derecho_peticion:tipo_derecho_peticion},enableReinitialize:true,validate:function validate(valores){var errores={};setCountTextArea(valores.observaciones.length);if(!valores.observaciones){errores.observaciones=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(valores.observaciones.length<=getMinimoTextArea){errores.observaciones='DEBE TENER MÍNIMO '+getMinimoTextArea+' CARÁTERES';}if(valores.observaciones.length>getMaximoTextArea){errores.observaciones='DEBE TENER MAXIMO '+getMinimoTextArea+' CARÁTERES';}if(valores.observaciones){if(!global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(valores.observaciones)){errores.observaciones=global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS;}}return errores;},onSubmit:function onSubmit(valores,_ref3){var resetForm=_ref3.resetForm;enviarDatos(valores);},children:function children(_ref4){var errors=_ref4.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-warning alert-dismissable\",role:\"alert\",children:/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:getMensajeAlerta})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"OBSERVACIONES \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{as:\"textarea\",className:\"form-control\",id:\"observaciones\",name:\"observaciones\",rows:\"4\",placeholder:\"Escriba en este espacio las observaciones\",maxLength:getMaximoTextArea,minLength:getMinimoTextArea}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-primary\",children:[countTextArea,\" / \",getMaximoTextArea]})}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"observaciones\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.observaciones});}})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:global.Constants.BOTON_NOMBRE.REGISTRAR}),/*#__PURE__*/_jsx(Link,{to:\"/ClasificacionRadicadoLista/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:global.Constants.BOTON_NOMBRE.CANCELAR})})]})]});}})});}// TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\nelse if(tipo_derecho_peticion===global.Constants.DERECHOS_PETICION.GENERAL){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{observaciones:'',gestion_juridica:false,tipo_derecho_peticion:tipo_derecho_peticion},enableReinitialize:true,validate:function validate(valores){var errores={};setCountTextArea(valores.observaciones.length);if(!valores.observaciones){errores.observaciones=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}else if(valores.observaciones.length<=getMinimoTextArea){errores.observaciones='DEBE TENER MÍNIMO '+getMinimoTextArea+' CARÁCTERES';}if(valores.observaciones.length>getMaximoTextArea){errores.observaciones='DEBE TENER MAXIMO '+getMinimoTextArea+' CARÁTERES';}if(valores.observaciones){if(!global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(valores.observaciones)){errores.observaciones=global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS;}}return errores;},onSubmit:function onSubmit(valores,_ref5){var resetForm=_ref5.resetForm;enviarDatos(valores);},children:function children(_ref6){var errors=_ref6.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-warning alert-dismissable\",role:\"alert\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"alert-heading font-size-h4 my-2\",children:\"ALERTA\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:getMensajeAlerta})]}),/*#__PURE__*/_jsx(\"label\",{children:\"OBSERVACIONES\"}),\"  \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"}),/*#__PURE__*/_jsx(Field,{as:\"textarea\",className:\"form-control\",id:\"observaciones\",name:\"observaciones\",rows:\"4\",placeholder:\"Escriba en este espacio las observaciones\",maxLength:getMaximoTextArea,minLength:getMinimoTextArea}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-primary\",children:[countTextArea,\" / \",getMaximoTextArea]})}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"observaciones\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.observaciones});}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:global.Constants.BOTON_NOMBRE.REGISTRAR}),/*#__PURE__*/_jsx(Link,{to:\"/ClasificacionRadicadoLista/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:global.Constants.BOTON_NOMBRE.CANCELAR})})]})]});}})});}// TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\nelse if(tipo_derecho_peticion===global.Constants.DERECHOS_PETICION.ALERTA){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{observaciones:'',gestion_juridica:'',tipo_derecho_peticion:tipo_derecho_peticion},enableReinitialize:true,validate:function validate(valores){var errores={};if(!getObservaciones){errores.observaciones=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(countTextArea>getMaximoTextArea){errores.descripcion='DEBE INGRESAR MAXIMO '+getMaximoTextArea+' CARACTERES';}if(countTextArea<getMinimoTextArea){errores.descripcion='DEBE INGRESAR MÍNIMO '+getMinimoTextArea+' CARACTERES';}if(getRepuestaObservaciones==false){errores.descripcion=global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS;}if(!valores.gestion_juridica){errores.gestion_juridica=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}return errores;},onSubmit:function onSubmit(valores,_ref7){var resetForm=_ref7.resetForm;enviarDatos(valores);},children:function children(_ref8){var errors=_ref8.errors;return/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-warning alert-dismissable\",role:\"alert\",children:/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:getMensajeAlerta})}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"ingresoTipoExpediente\",children:[\"REQUIERE GESTI\\xD3N JUR\\xCDDICA\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Field,{as:\"select\",className:\"form-control\",id:\"gestion_juridica\",name:\"gestion_juridica\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}),/*#__PURE__*/_jsx(\"option\",{value:\"true\",children:\"SI\"}),/*#__PURE__*/_jsx(\"option\",{value:\"false\",children:\"NO\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"OBSERVACIONES\"}),\"  \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"}),/*#__PURE__*/_jsx(Field,{as:\"textarea\",className:\"form-control\",id:\"observaciones\",name:\"observaciones\",rows:\"4\",placeholder:\"Escriba en este espacio las observaciones\",maxLength:getMaximoTextArea,minLength:getMinimoTextArea,value:getObservaciones,onChange:changeObservaciones}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-primary\",children:[countTextArea,\" / \",getMaximoTextArea]})}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"observaciones\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.observaciones});}}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:global.Constants.BOTON_NOMBRE.REGISTRAR}),/*#__PURE__*/_jsx(Link,{to:\"/ClasificacionRadicadoLista/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:global.Constants.BOTON_NOMBRE.CANCELAR})})]})]})});}})});}};var changeHorasTermino=function changeHorasTermino(e){if(e.target.value===''||global.Constants.CARACTERES_ESPECIALES.formatOnlyNumbers.test(e.target.value)){setHorasTermino(e.target.value);}};// COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\nvar componenteTerminosRespuesta=function componenteTerminosRespuesta(termino_respuesta){// TERMINO TUTELA = DIAS      \nif(termino_respuesta===global.Constants.TERMINOS_RESPUESTA.DIAS){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{termino_rta:termino_respuesta,horasTermino:null,fechaTermino:fechaTermino},enableReinitialize:true,validate:function validate(valores){var errors={};if(!valores.fechaTermino&&!fechaTermino){errors.fechaTermino=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(valores.fechaTermino){if(!global.Constants.CARACTERES_ESPECIALES.formatDateYMDWithGuiones.test(valores.fechaTermino)){errors.fechaTermino=global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS;}}return errors;},onSubmit:function onSubmit(valores,_ref9){var resetForm=_ref9.resetForm;enviarDatos(valores);},children:function children(_ref10){var errors=_ref10.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group mt-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"FECHA PARA T\\xC9RMINO\"}),\"  \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"}),/*#__PURE__*/_jsx(DatePerson,{resultDiasNoLaborales:resultDiasNoLaborales,getAnosAtrasInvalidos:getAnosAtrasInvalidos,parentCallback:handleCallbackFechaTermino,id:\"fechaTermino\",name:\"fechaTermino\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"fechaTermino\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.fechaTermino});}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:global.Constants.BOTON_NOMBRE.REGISTRAR}),/*#__PURE__*/_jsx(Link,{to:\"/ClasificacionRadicadoLista/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:global.Constants.BOTON_NOMBRE.CANCELAR})})]})]});}})});}// TERMINO TUTELA = HORAS     \nelse if(termino_respuesta===global.Constants.TERMINOS_RESPUESTA.HORAS){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{termino_rta:termino_respuesta,horasTermino:'',fechaTermino:new Date()},enableReinitialize:true,validate:function validate(valores){var errores={};if(!getHorasTermino){errores.horasTermino=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(getHorasTermino>23){errores.horasTermino='EL MAXIMO DE HORAS ES DE 23';}return errores;},onSubmit:function onSubmit(valores,_ref11){var resetForm=_ref11.resetForm;enviarDatos(valores);},children:function children(_ref12){var errors=_ref12.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group mt-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"HORAS PARA T\\xC9RMINO\"}),\"  \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"}),/*#__PURE__*/_jsx(Field,{type:\"number\",min:\"1\",max:\"23\",id:\"horasTermino\",name:\"horasTermino\",className:\"form-control\",placeholder:\"\",value:getHorasTermino,onChange:changeHorasTermino}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"horasTermino\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.horasTermino});}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:global.Constants.BOTON_NOMBRE.REGISTRAR}),/*#__PURE__*/_jsx(Link,{to:\"/ClasificacionRadicadoLista/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:global.Constants.BOTON_NOMBRE.CANCELAR})})]})]});}})});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(ModalGen,{data:getModalState}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"ingresoTipoExpediente\",children:[\"TIPO DE EXPEDIENTE\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-control\",id:\"ingresoTipoExpediente\",name:\"ingresoTipoExpediente\",value:selectedTipoExpediente,onChange:function onChange(e){return selectChangeTipoExpediente(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}),respuestaTipoExpediente?selectTipoExpediente():null]})]})})}),selectedTipoExpediente===global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION?componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION):'',selectedTipoExpediente===global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE?componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE):'',selectedTipoExpediente===global.Constants.TIPOS_EXPEDIENTES.QUEJA?componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA):'',selectedTipoExpediente===global.Constants.TIPOS_EXPEDIENTES.TUTELA?componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA):'']})]});}export default ClasificacionRadicado;","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","Link","getUser","useLocation","DatePerson","ModalGen","GenericApi","Spinner","ClasificacionRadicado","props","title","message","show","getModalState","setModalState","data","listaTipoExpediente","setListaTipoExpediente","respuestaTipoExpediente","setRespuestaTipoExpediente","selectedTipoExpediente","setSelectedTipoExpediente","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","listaTipoDerechoPeticion","setListaDerechoPeticion","selectedTipoDerechoPeticion","setSelectedDerechoPeticion","respuestaTipoDerechoPeticion","setRespuestaDerechoPeticion","listaTipoRespuesta","setListaTipoRespuesta","selectedTipoRespuesta","setSelectedTipoRespuesta","respuestaTipoRespuesta","setRespuestaTipoRespuesta","listaTerminosRespuesta","setListaTerminosRespuesta","selectedTerminosRespuesta","setSelectedTerminosRespuesta","respuestaTerminosRespuesta","setRespuestaTerminosRespuesta","listaTiposQueja","setListaTiposQueja","selectedTiposQueja","setSelectedTiposQueja","respuestaTiposQueja","setRespuestaTiposQueja","fechaTermino","setFechaTermino","resultDiasNoLaborales","setResultDiasNoLaborales","getNombreUsuario","setNombreUsuario","getNombreRol","setNombreRol","getAnosAtrasInvalidos","setAnosAtrasInvalidos","getAlerta","setAlerta","getMensajeAlerta","setMensajeAlerta","getNombreProceso","setNombreProceso","getHorasTermino","setHorasTermino","getObservaciones","setObservaciones","getRepuestaObservaciones","setRepuestaObservaciones","location","from","state","procesoDisciplinarioId","radicado","id_etapa","containsSpecialChars","str","result","global","Constants","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","fetchData","nombre","roles","getApiTipoRespuesta","nombreProceso","window","showSpinner","getGeneric","then","datos","error","getApiTipoExpediente","toString","redirect","alert","TIPO_ALERTA","ERROR","getApiTipoDerechoPeticion","getApiTerminosRespuesta","getApiTipoQueja","getApiDiasNoLaborales","i","date","Date","setDate","getDate","push","obtenerParametros","getByDataGeneric","length","filter","map","filteredName","getByIdGeneric","attributes","disableCustomDt","current","format","selectChangeTipoRespuesta","e","selectChangeTipoExpediente","selectChangeTipoDerechoPeticion","tipo_expediente","getApiMasTipoMensajesExpedientes","selectChangeTerminoRespuesta","selectChangeTiposQueja","selectTipoRespuesta","tipo_respuesta","id","selectTipoExpediente","expediente","selectTipoDerechoPeticion","derecho_peticion","selectTerminosRespuesta","termino_respuesta","selectTiposQueja","tipo_queja","enviarDatos","getParametros","id_proceso_disciplinario","observaciones","gestion_juridica","tipo_derecho_peticion","reclasificacion","addGeneric","console","log","cambiaColorClasificacionRadicado","tipo_clasificacion","TIPO_CLASIFICACION","VALIDAR_CLASIFICACION","funcionario_actual","name","apellido","EXITO","CLASIFICACION","MENSAJES_MODAL","EXITOSO","handleCallbackFechaTermino","childData","componenteTipoExpediente","TIPOS_EXPEDIENTES","DERECHO_PETICION","target","value","MENSAJE_INFORMATIVO","SELECCIONE_UNA_OPCION","componenteTipoDerechoPeticion","PODER_REFERENTE","TIPO_QUEJA","EXTERNA","valores","errores","resetForm","BOTON_NOMBRE","REGISTRAR","CANCELAR","QUEJA","MENSAJE_ERROR","CAMPO_OBLIGATORIO","TUTELA","TERMINOS_RESPUESTA","DIAS","componenteTerminosRespuesta","HORAS","idTipoExpediente","idSubTipoExpediente","mensaje","changeObservaciones","formatOnlyLettersWhitAccent","test","tipoExpediente","DERECHOS_PETICION","COPIAS","ERROR_FORMATO_CARACTERES_INVALIDOS","errors","GENERAL","ALERTA","descripcion","changeHorasTermino","formatOnlyNumbers","termino_rta","horasTermino","formatDateYMDWithGuiones"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ClasificacionRadicado/ClasificacionRadicado.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport 'moment/locale/es';\r\nimport { getUser } from '../../../components/Utils/Common';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DatePerson from \"../../DatePerson/DatePerson\";\r\nimport '../../Utils/Constants';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\n\r\nfunction ClasificacionRadicado(props) {\r\n\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n\r\n    const [listaTipoExpediente, setListaTipoExpediente] = useState({ data: {} });\r\n\r\n    const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\r\n    const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\r\n\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n\r\n    const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({ data: {} });\r\n    const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\r\n    const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\r\n\r\n    const [listaTipoRespuesta, setListaTipoRespuesta] = useState({ data: {} });\r\n    const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\r\n    const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\r\n\r\n    const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({ data: {} });\r\n    const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\r\n    const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\r\n\r\n    const [listaTiposQueja, setListaTiposQueja] = useState({ data: {} });\r\n    const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\r\n    const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\r\n\r\n    const [fechaTermino, setFechaTermino] = useState(null);\r\n    const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\r\n\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [getNombreRol, setNombreRol] = useState(\"\");\r\n    const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\r\n\r\n    const [getAlerta, setAlerta] = useState(\"\");\r\n    const [getMensajeAlerta, setMensajeAlerta] = useState(\"\");\r\n\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n    const [getHorasTermino, setHorasTermino] = useState('');\r\n    const [getObservaciones, setObservaciones] = useState('');\r\n    const [getRepuestaObservaciones, setRepuestaObservaciones] = useState(false);\r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let radicado = from.radicado;\r\n    let id_etapa = from.id_etapa;\r\n\r\n    /**\r\n     * Validación de los caracteres especiales en los campos de texto\r\n     * @param {*} str \r\n     * @returns \r\n     */\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Funcion principal\r\n     */\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setNombreUsuario(getUser().nombre);\r\n            setNombreRol(getUser().roles);\r\n            getApiTipoRespuesta();\r\n            nombreProceso();\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const getApiTipoRespuesta = () => {\r\n        window.showSpinner(true);\r\n        GenericApi.getGeneric(\"tipo-respuesta\").then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaTipoRespuesta(datos);\r\n                    setRespuestaTipoRespuesta(true);\r\n                    getApiTipoExpediente();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso + \" :: CLASIFICACIÓN DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiTipoExpediente = () => {\r\n        GenericApi.getGeneric(\"proceso-disciplinario/tipo-expdiente/\" + procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaTipoExpediente(datos);\r\n                    setRespuestaTipoExpediente(true);\r\n                    getApiTipoDerechoPeticion();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso + \" :: CLASIFICACIÓN DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiTipoDerechoPeticion = () => {\r\n        GenericApi.getGeneric(\"lista-tipo-derecho-peticion/\" + procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaDerechoPeticion(datos);\r\n                    setRespuestaDerechoPeticion(true);\r\n                    getApiTerminosRespuesta();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso + \" :: CLASIFICACIÓN DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiTerminosRespuesta = () => {\r\n        GenericApi.getGeneric(\"lista-terminos-respuesta/\" + procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaTerminosRespuesta(datos);\r\n                    setRespuestaTerminosRespuesta(true);\r\n                    getApiTipoQueja();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso + \" :: CLASIFICACIÓN DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiTipoQueja = () => {\r\n        GenericApi.getGeneric(\"lista-tipo-queja/\" + procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaTiposQueja(datos);\r\n                    setRespuestaTiposQueja(true);\r\n                    getApiDiasNoLaborales();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso + \" :: CLASIFICACIÓN DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiDiasNoLaborales = () => {\r\n        GenericApi.getGeneric(\"dias-no-laborales?estado=1\").then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var data = [];\r\n                    for (var i in datos.data) {\r\n                        var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\r\n                        var result = new Date(date);\r\n                        result.setDate(result.getDate() + 1);\r\n                        data.push(i, date);\r\n                    }\r\n\r\n                    setResultDiasNoLaborales(data);\r\n                    obtenerParametros()\r\n                    //console.log(resultDiasNoLaborales);\r\n                } else {\r\n                    setModalState({ title: getNombreProceso + \" :: CLASIFICACIÓN DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Funcion que obtiene información de las parámetricas.\r\n     * Ejm: número máximo y mínimo de caracteres \r\n     */\r\n    const obtenerParametros = () => {\r\n        try {\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => (\r\n                                setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: getNombreProceso + \" :: CLASIFICACIÓN DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                    window.showSpinner(false);\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n            window.showSpinner(false);\r\n        }\r\n    }\r\n\r\n    const nombreProceso = () => {\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\", procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const disableCustomDt = current => {\r\n        return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));\r\n    }\r\n\r\n    let selectChangeTipoRespuesta = (e) => {\r\n        setSelectedTipoRespuesta(e);\r\n    }\r\n\r\n    let selectChangeTipoExpediente = (e) => {\r\n        setCountTextArea(0)\r\n        setSelectedTipoExpediente(e);\r\n    }\r\n\r\n    let selectChangeTipoDerechoPeticion = (tipo_expediente, e) => {\r\n        setCountTextArea(0)\r\n        setSelectedDerechoPeticion(e);\r\n\r\n        // Se valida que el valor sea diferente de null\r\n        if (e != \"\") {\r\n\r\n            // Se consume la api del mensaje\r\n            getApiMasTipoMensajesExpedientes(tipo_expediente, e);\r\n        }\r\n    }\r\n\r\n    let selectChangeTerminoRespuesta = (e) => {\r\n        setSelectedTerminosRespuesta(e);\r\n    }\r\n\r\n    let selectChangeTiposQueja = (e) => {\r\n        setSelectedTiposQueja(e);\r\n    }\r\n\r\n    //Componetes\r\n\r\n    const selectTipoRespuesta = () => {\r\n        return (\r\n            listaTipoRespuesta.data.map((tipo_respuesta, i) => {\r\n                return (\r\n                    <option key={tipo_respuesta.id} value={tipo_respuesta.id}>{tipo_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTipoExpediente = () => {\r\n        return (\r\n            listaTipoExpediente.data.map((expediente, i) => {\r\n                return (\r\n                    <option key={expediente.id} value={expediente.id}>{expediente.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTipoDerechoPeticion = () => {\r\n        return (\r\n            listaTipoDerechoPeticion.data.map((derecho_peticion, i) => {\r\n\r\n                return (\r\n                    <option key={derecho_peticion.id} value={derecho_peticion.id}>{derecho_peticion.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTerminosRespuesta = () => {\r\n        return (\r\n            listaTerminosRespuesta.data.map((termino_respuesta, i) => {\r\n                return (\r\n                    <option key={termino_respuesta.id} value={termino_respuesta.id}>{termino_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTiposQueja = () => {\r\n        return (\r\n            listaTiposQueja.data.map((tipo_queja, i) => {\r\n                return (\r\n                    <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const enviarDatos = (datos) => {\r\n\r\n        // Se usa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa la variable\r\n        let data;\r\n\r\n        // Se redeclara la data a enviar\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                    \"id_etapa\": props.getParametros.id_etapa,\r\n                    \"id_tipo_expediente\": selectedTipoExpediente,\r\n                    \"observaciones\": (datos.observaciones != null ? datos.observaciones : null),\r\n                    \"id_tipo_queja\": datos.tipo_queja,\r\n                    \"id_termino_respuesta\": selectedTerminosRespuesta,\r\n                    \"fecha_termino\": (datos.fechaTermino != null ? datos.fechaTermino : null),\r\n                    \"hora_termino\": (getHorasTermino != null ? getHorasTermino : null),\r\n                    \"gestion_juridica\": (datos.gestion_juridica === 'true' ? true : false),\r\n                    \"estado\": true,\r\n                    \"id_estado_reparto\": 2,\r\n                    \"id_tipo_derecho_peticion\": datos.tipo_derecho_peticion,\r\n                    \"oficina_control_interno\": false,\r\n                    \"created_user\": getNombreUsuario,\r\n                    \"reclasificacion\": props.getParametros.reclasificacion,\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se consume la API\r\n        GenericApi.addGeneric(\"clasificacion-radicado\", data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n\r\n                console.log(\"Paso por el cargando\");\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se le da estilo al boton del radicado\r\n                    from.cambiaColorClasificacionRadicado = \"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";\r\n\r\n                    // Se valida que el tipo de clasificacion del from sea igual a el tipo de clasificacion de validar\r\n                    if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION) {\r\n\r\n                        // Se valida que nombre del funcionario sea igual al del usuario logeado\r\n                        if (datos.data.attributes.funcionario_actual.name === getNombreUsuario) {\r\n\r\n                            // Se setea el mensaje\r\n                            setModalState({ title: getNombreProceso + \" :: CLASIFICACIÓN DEL RADICADO\", message: \"EL PROCESO DISCIPLINARIO SE ASIGNA A: \" + datos.data.attributes.funcionario_actual.nombre + \" \" + datos.data.attributes.funcionario_actual.apellido, show: true, redirect: '/RamasProceso', from: { from }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                        } else {\r\n\r\n                            // Se setea el mensaje\r\n                            setModalState({ title: getNombreProceso + \" :: RE-CLASIFICACIÓN DEL RADICADO\", message: \"EL PROCESO DISCIPLINARIO SE ASIGNA A: \" + datos.data.attributes.funcionario_actual.nombre + \" \" + datos.data.attributes.funcionario_actual.apellido, show: true, redirect: '/MisPendientes', from: { from }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                        }\r\n                    } else if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.CLASIFICACION) {\r\n\r\n                        // Se setea el mensaje\r\n                        setModalState({ title: getNombreProceso + \" ::  CLASIFICACIÓN DEL RADICADO\", message: global.Constants.MENSAJES_MODAL.EXITOSO, show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                    }\r\n                } else {\r\n\r\n                    // Se setea el mensaje\r\n                    setModalState({ title: getNombreProceso + \" ::  CLASIFICACIÓN DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleCallbackFechaTermino = (childData) => {\r\n        try {\r\n            setFechaTermino(childData)\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    // COMPOENENTE TIPO EXPEDIENTE\r\n    const componenteTipoExpediente = (tipo_expediente) => {\r\n\r\n        // TIPO DE EXPEDIENTE = DERECHO DE PETICION\r\n        if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) {\r\n            return (\r\n                <>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ingresoDerechoPeticion\">TIPO DE DERECHO DE PETICIÓN<span className=\"text-danger\">*</span></label>\r\n                        <select className=\"form-control\" id=\"ingresoDerechoPeticion\" name=\"ingresoDerechoPeticion\"\r\n                            value={selectedTipoDerechoPeticion} onChange={e => selectChangeTipoDerechoPeticion(tipo_expediente, e.target.value)}>\r\n                            <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                            {respuestaTipoDerechoPeticion ? selectTipoDerechoPeticion() : null}\r\n                        </select>\r\n                    </div>\r\n                    {/* Se ejecuta el componente */}\r\n                    {componenteTipoDerechoPeticion(tipo_expediente, selectedTipoDerechoPeticion)}\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: global.Constants.TIPO_QUEJA.EXTERNA\r\n                        }}\r\n                        enableReinitialize\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        <Form>\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">{global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                </Link>\r\n                            </div>\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = QUEJA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: '',\r\n                        }}\r\n                        enableReinitialize\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.tipo_queja) {\r\n                                errores.tipo_queja = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO\r\n                            }\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tipo_queja\">TIPO DE QUEJA<span className=\"text-danger\">*</span></label>\r\n                                <Field as=\"select\" className=\"form-control\" id=\"tipo_queja\" name=\"tipo_queja\">\r\n                                    <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                    {respuestaTiposQueja ? selectTiposQueja() : null}\r\n                                </Field>\r\n                            </div>\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">{global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                </Link>\r\n                            </div>\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = TUTELA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA) {\r\n            return (\r\n                <>\r\n                    <label htmlFor=\"ingresoTipoRtaTutela\">TÉRMINO DE RESPUESTA<span className=\"text-danger\">*</span></label>\r\n                    <select className=\"form-control\" id=\"termino_rta\" name=\"termino_rta\"\r\n                        value={selectedTerminosRespuesta}\r\n                        onChange={e => selectChangeTerminoRespuesta(e.target.value)}>\r\n                        <option value=\"{selectedTerminosRespuesta}\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                        {respuestaTerminosRespuesta ? selectTerminosRespuesta() : null}\r\n                    </select>\r\n\r\n                    {/*DIAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.DIAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS) : ''}\r\n\r\n                    {/*HORAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.HORAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS) : ''}\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    // Metodo encargado de cargar el mensaje por el tipo de expediente\r\n    const getApiMasTipoMensajesExpedientes = (idTipoExpediente, idSubTipoExpediente) => {\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric(\"mas_tipo_expediente_mensajes/\" + idTipoExpediente + \"/\" + idSubTipoExpediente).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se captura la informacion en la posicion 0\r\n                    let data = datos.data[0];\r\n\r\n                    // Se setea el mensaje \r\n                    setMensajeAlerta(data.attributes.mensaje);\r\n                } else {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: getNombreProceso + \" :: CLASIFICACIÓN DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const changeObservaciones = (e) => {\r\n        if (e.target.value === '' || \r\n        (global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(e.target.value) && \r\n        e.target.value.length <= getMaximoTextArea)) {\r\n            setObservaciones(e.target.value);\r\n            setCountTextArea(e.target.value.length);\r\n            setRepuestaObservaciones(true);\r\n        }\r\n    }\r\n\r\n    // COMOPNENTE TIPO DERECHO DE PETICION\r\n    const componenteTipoDerechoPeticion = (tipoExpediente, tipo_derecho_peticion) => {\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\r\n        if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.COPIAS) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: false,\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO\r\n                            }\r\n                            if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'DEBE TENER MÍNIMO ' + getMinimoTextArea + ' CARÁTERES';\r\n                            }\r\n                            if (valores.observaciones.length > getMaximoTextArea) {\r\n                                errores.observaciones = 'DEBE TENER MAXIMO ' + getMinimoTextArea + ' CARÁTERES';\r\n                            }\r\n                            if (valores.observaciones) {\r\n                                if (!global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(valores.observaciones)){\r\n                                    errores.observaciones = global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS\r\n                                }\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <p className=\"mb-0\">{getMensajeAlerta}</p>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>OBSERVACIONES <span className=\"text-danger\">*</span></label>\r\n                                        <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                            placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                        <div className=\"text-right\">\r\n                                            <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                        </div>\r\n                                        <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">{global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.GENERAL) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: false,\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'DEBE TENER MÍNIMO ' + getMinimoTextArea + ' CARÁCTERES'\r\n                            }\r\n                            if (valores.observaciones.length > getMaximoTextArea) {\r\n                                errores.observaciones = 'DEBE TENER MAXIMO ' + getMinimoTextArea + ' CARÁTERES';\r\n                            }\r\n                            if (valores.observaciones) {\r\n                                if (!global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(valores.observaciones)){\r\n                                    errores.observaciones = global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS\r\n                                }\r\n                            }\r\n\r\n                            return errores\r\n\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">ALERTA</h3>\r\n                                        <p className=\"mb-0\">{getMensajeAlerta}</p>\r\n                                    </div>\r\n                                    <label>OBSERVACIONES</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">{global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.ALERTA) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: '',\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n\r\n                            if (!getObservaciones) {\r\n                                errores.observaciones = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO\r\n                            }\r\n                            if (countTextArea > getMaximoTextArea) {\r\n                                errores.descripcion = 'DEBE INGRESAR MAXIMO ' + getMaximoTextArea + ' CARACTERES';\r\n                            }\r\n                            if (countTextArea < getMinimoTextArea) {\r\n                                errores.descripcion = 'DEBE INGRESAR MÍNIMO ' + getMinimoTextArea + ' CARACTERES';\r\n                            }\r\n                            if(getRepuestaObservaciones == false){\r\n                                errores.descripcion = global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS;\r\n                            }\r\n                            if (!valores.gestion_juridica) {\r\n                                errores.gestion_juridica = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <p className=\"mb-0\">{getMensajeAlerta}</p>\r\n                                    </div>\r\n                                    <label htmlFor=\"ingresoTipoExpediente\">REQUIERE GESTIÓN JURÍDICA<span className=\"text-danger\">*</span></label>\r\n                                    <Field as=\"select\" className=\"form-control\" id=\"gestion_juridica\" name=\"gestion_juridica\">\r\n                                        <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                        <option value=\"true\">SI</option>\r\n                                        <option value=\"false\">NO</option>\r\n                                    </Field>\r\n                                    <br />\r\n                                    <label>OBSERVACIONES</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea} value={getObservaciones} onChange={changeObservaciones}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                    <div className=\"block-content block-content-full text-right\">\r\n                                        <button type=\"submit\" className=\"btn btn-rounded btn-primary\">{global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n                                        <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                            <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    const changeHorasTermino = (e) => {\r\n        if (e.target.value === '' || global.Constants.CARACTERES_ESPECIALES.formatOnlyNumbers.test(e.target.value)) {\r\n            setHorasTermino(e.target.value);\r\n        }\r\n    }\r\n\r\n    // COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\r\n    const componenteTerminosRespuesta = (termino_respuesta) => {\r\n\r\n        // TERMINO TUTELA = DIAS      \r\n        if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: null,\r\n                            fechaTermino: fechaTermino\r\n                        }}\r\n                        enableReinitialize\r\n                        validate={(valores) => {\r\n                            let errors = {}\r\n\r\n                            if (!valores.fechaTermino && !fechaTermino) {\r\n                                errors.fechaTermino = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                            }\r\n                            if (valores.fechaTermino) {\r\n                                if (!global.Constants.CARACTERES_ESPECIALES.formatDateYMDWithGuiones.test(valores.fechaTermino)){\r\n                                    errors.fechaTermino = global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS\r\n                                }\r\n                            }\r\n\r\n                            return errors\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                        <Form>\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>FECHA PARA TÉRMINO</label>  <span className=\"text-danger\">*</span>\r\n                                {/*<DatePicker id=\"fechaTermino\" locale='es' name=\"fechaTermino\" dateFormat=\"DD/MM/YYYY\" closeOnSelect={true} placeholder=\"dd/mm/yyyy\" onChange={(date) => setFechaTermino(date)} timeFormat={false} isValidDate={disableCustomDt} />*/}\r\n                                <DatePerson resultDiasNoLaborales={resultDiasNoLaborales} getAnosAtrasInvalidos={getAnosAtrasInvalidos} parentCallback={handleCallbackFechaTermino} id=\"fechaTermino\" name=\"fechaTermino\" />\r\n                                <ErrorMessage name=\"fechaTermino\" component={() => (<span className=\"text-danger\">{errors.fechaTermino}</span>)} />\r\n                            </div>\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">{global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                </Link>\r\n                            </div>\r\n                        </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n\r\n            )\r\n        }\r\n\r\n        // TERMINO TUTELA = HORAS     \r\n        else if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\r\n\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: '',\r\n                            fechaTermino: new Date(),\r\n                        }}\r\n                        enableReinitialize\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!getHorasTermino) {\r\n                                errores.horasTermino = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                            }\r\n                            if (getHorasTermino > 23) {\r\n                                errores.horasTermino = 'EL MAXIMO DE HORAS ES DE 23';\r\n                            }\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n                                <div className=\"form-group mt-3\">\r\n                                    <label>HORAS PARA TÉRMINO</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field type=\"number\" min=\"1\" max='23' id=\"horasTermino\" name=\"horasTermino\" className=\"form-control\" placeholder=\"\" value={getHorasTermino} onChange={changeHorasTermino}/>\r\n                                    <ErrorMessage name=\"horasTermino\" component={() => (<span className=\"text-danger\">{errors.horasTermino}</span>)} />\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">{global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            )\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n\r\n            <div className=\"block-content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"ingresoTipoExpediente\">TIPO DE EXPEDIENTE<span className=\"text-danger\">*</span></label>\r\n                            <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                                value={selectedTipoExpediente} onChange={e => selectChangeTipoExpediente(e.target.value)}>\r\n                                <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                {respuestaTipoExpediente ? selectTipoExpediente() : null}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*DERECHO DE PETICION*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : ''}\r\n\r\n                {/*PODER REFERENTE A SOLIICTUD*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : ''}\r\n\r\n                {/*QUEJA*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : ''}\r\n\r\n                {/*TUTELA*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : ''}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ClasificacionRadicado;"],"mappings":"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"},"metadata":{},"sourceType":"module"}