{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Herramientas\\\\ActuacionParametrosPlantillaForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport DataTable from 'react-data-table-component';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport '../../Utils/Constants';\nimport { getUser } from '../../Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ActuacionParametrosPlantillaForm(props) {\n  _s();\n\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let id_etapa = from.idEtapa;\n  let fechaRegistro = from.fechaRegistro;\n  let fechaIngreso = from.fechaIngreso;\n  let dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getListaParametros, setListaParametros] = useState({\n    params: []\n  });\n  const [getListaCamposPorParametro, setListaCamposPorParametro] = useState({\n    data: []\n  });\n  const [getAntecedentesLista, setAntecedentesLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getInteresadosLista, setInteresadosLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [isCheckAll, setIsCheckAll] = useState(false);\n  const [isCheck, setIsCheck] = useState([]);\n  const [lang, setLang] = useState([]);\n  const [getParametrosCampos, setParametrosCampos] = useState();\n  const campos = [{\n    title: 'Antecedentes',\n    value: null,\n    type: \"Antecedentes\"\n  }, {\n    title: 'Dependencia',\n    value: dependencia\n  }, {\n    title: 'Investigados (Nombre)',\n    value: null,\n    type: \"Investigados\"\n  }, {\n    title: 'Investigados (Cargo)',\n    value: null,\n    type: \"CargosInvestigados\"\n  }, {\n    title: 'Investigados (Entidad)',\n    value: null,\n    type: \"EntidadesInvestigados\"\n  }, {\n    title: 'Interesados',\n    value: null,\n    type: \"Interesados\"\n  }, {\n    title: 'Fecha de ingreso',\n    value: fechaIngreso\n  }, {\n    title: 'Fecha de registro',\n    value: fechaRegistro\n  }, {\n    title: 'Número de auto (generado despues de aprobación)',\n    value: '${numero_de_auto}'\n  }, {\n    title: 'Número de radicado',\n    value: radicado\n  } //{ id: 8, title: 'Campo de entrada por usuario', value: null },\n  ];\n  useEffect(() => {\n    async function fetchData() {\n      cargarParametros();\n      cargarAntecedentes();\n      cargarInteresados();\n      cargarEntidadesInvestigado(); //cargarCampos();\n    }\n\n    fetchData();\n  }, [props.id_mas_actuacion]);\n\n  const selectCampos = parametro => {\n    return campos.map((item, i) => {\n      var itemFilter = getListaCamposPorParametro.data.filter(x => x.parametro == parametro);\n\n      if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this);\n      }\n    });\n  };\n\n  const handleChangeInteresados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getInteresadosLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setInteresadosLista(valorId);\n    let val = getInteresadosLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.sujeto_procesal_nombre} ${p.attributes.primer_apellido} ${p.attributes.segundo_apellido} ${p.attributes.primer_nombre} ${p.attributes.segundo_nombre}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n\n    if (checked) {\n      // push selected value in list\n      setLang(prev => [...prev, value]);\n    } else {\n      // remove unchecked value from the list\n      setLang(prev => prev.filter(x => x !== value));\n    }\n  };\n\n  const handleChangeAntecedentes = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getAntecedentesLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setAntecedentesLista(valorId);\n    let val = getAntecedentesLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.descripcion}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n\n    if (checked) {\n      // Se añade el valor en la lista\n      setLang(prev => [...prev, value]);\n    } else {\n      // Se quita el valor de la lista\n      setLang(prev => prev.filter(x => x !== value));\n    }\n  };\n\n  const handleChangeInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadesInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_investigado) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setEntidadesInvestigadoLista(valorId);\n    let val = getEntidadesInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_investigado}`;\n        var nombre = `${p.attributes.nombre_investigado}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n\n    if (checked) {\n      // Se añade el valor en la lista\n      setLang(prev => [...prev, value]);\n    } else {\n      // Se quita el valor de la lista\n      setLang(prev => prev.filter(x => x !== value));\n    }\n  };\n\n  const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getCargosInvestigadoLista.map(item => {\n      if (value == item.attributes.cargo) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getCargosInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.cargo}`;\n        var nombre = `${p.attributes.cargo}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n\n    if (checked) {\n      // Se añade el valor en la lista\n      setLang(prev => [...prev, value]);\n    } else {\n      // Se quita el valor de la lista\n      setLang(prev => prev.filter(x => x !== value));\n    }\n  };\n\n  const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_entidad) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getEntidadInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_entidad}`;\n        var nombre = `${p.attributes.nombre_entidad}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n\n    if (checked) {\n      // Se añade el valor en la lista\n      setLang(prev => [...prev, value]);\n    } else {\n      // Se quita el valor de la lista\n      setLang(prev => prev.filter(x => x !== value));\n    }\n  };\n\n  const selectAntecedentes = (parametro, id_campo) => {\n    if (Array.isArray(getAntecedentesLista)) {\n      return getAntecedentesLista.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + item.id,\n            name: 'check' + item.id,\n            value: item.id,\n            onChange: e => handleChangeAntecedentes(e, parametro, id_campo),\n            defaultChecked: item.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this), \" \", item.attributes.descripcion]\n        }, 'keyCheck' + item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this) // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n        ;\n      });\n    }\n  };\n\n  const selectInteresados = (parametro, id_campo) => {\n    if (Array.isArray(getInteresadosLista)) {\n      return getInteresadosLista.map((item, i) => {\n        var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + nombre,\n            name: 'check' + nombre,\n            value: item.id,\n            onChange: e => handleChangeInteresados(e, parametro, id_campo),\n            defaultChecked: item.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), \" \", nombre]\n        }, 'keyCheck' + nombre, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this) // <option key={nombre} value={nombre}>{nombre}</option>\n        ;\n      });\n    }\n  };\n\n  const selectInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadesInvestigadoLista)) {\n      return getEntidadesInvestigadoLista.map((item, i) => {\n        var value = `${item.attributes.nombre_investigado}`;\n        var nombre = `${item.attributes.nombre_investigado}`;\n\n        if (nombre != \"null\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: nombre,\n              name: nombre,\n              value: nombre,\n              onChange: e => handleChangeInvestigados(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this), \" \", nombre]\n          }, nombre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this) //<option key={value} value={value}>{nombre}</option>\n          ;\n        }\n      });\n    }\n  };\n\n  const selectCargosInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getCargosInvestigadoLista)) {\n      return getCargosInvestigadoLista.map((item, i) => {\n        var value = `${item.attributes.cargo}`;\n        var nombre = `${item.attributes.cargo}`;\n\n        if (nombre != \"null\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: nombre,\n              name: nombre,\n              value: nombre,\n              onChange: e => handleChangeCargosInvestigados(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, this), \" \", nombre]\n          }, nombre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this) // <option key={value} value={value}>{nombre}</option>\n          ;\n        }\n      });\n    }\n  };\n\n  const selectEntidadesInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadInvestigadoLista)) {\n      return getEntidadInvestigadoLista.map((item, i) => {\n        var value = `${item.attributes.nombre_entidad}`;\n        var nombre = `${item.attributes.nombre_entidad}`;\n\n        if (nombre != \"null\") {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: nombre,\n              name: nombre,\n              value: nombre,\n              onChange: e => handleChangeEntidadesInvestigados(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this), \" \", nombre]\n          }, nombre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this) //<option key={value} value={value}>{nombre}</option>\n          ;\n        }\n      });\n    }\n  };\n\n  const cargarValoresDeParametro = parametro => {\n    var campoParametro = getListaCamposPorParametro.data.filter(item => {\n      return item.parametro == parametro;\n    });\n    var tempCampo = campoParametro[0];\n\n    if (tempCampo != undefined && campos[tempCampo.id_campo] != undefined) {\n      var itemCampo = campos[tempCampo.id_campo]; //tiene un valor por defecto\n\n      if (itemCampo.value != null) {\n        var newParamsItem = getListaCamposPorParametro.data.map(item => {\n          if (item.parametro == parametro) {\n            item.id_campo = tempCampo.id_campo;\n            var itemCampoId = campos[tempCampo.id_campo];\n            item.valor = itemCampoId.value != null ? itemCampoId.value : \"\";\n          }\n\n          return item;\n        }); // setListaCamposPorParametro({ data: newParams });\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: itemCampo.value\n        }, void 0, false);\n      } else if (itemCampo.type == \"Antecedentes\") {\n        return (\n          /*#__PURE__*/\n          // <select className=\"form-control\" id={`antece-${parametro}`} name={`antece-${parametro}`}\n          //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\n          //     <option value=\"\">Por favor seleccione</option>\n          //     {selectAntecedentes()}\n          // </select>\n          _jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: selectAntecedentes(parametro, tempCampo.id_campo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 21\n          }, this)\n        );\n      } else if (itemCampo.type == \"Interesados\") {\n        return (\n          /*#__PURE__*/\n          // <select className=\"form-control\" id={`inter-${parametro}`} name={`inter-${parametro}`}\n          //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\n          //     <option value=\"\">Por favor seleccione</option>\n          //     {selectInteresados()}\n          // </select>\n          _jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: selectInteresados(parametro, tempCampo.id_campo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 21\n          }, this)\n        );\n      } else if (itemCampo.type == \"Investigados\") {\n        return (\n          /*#__PURE__*/\n          // <select className=\"form-control\" id={`ei-${parametro}`} name={`ei-${parametro}`}\n          //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\n          //     <option value=\"\">Por favor seleccione</option>\n          //     {selectInvestigados()}\n          // </select>\n          _jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: selectInvestigados(parametro, tempCampo.id_campo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 21\n          }, this)\n        );\n      } else if (itemCampo.type == \"CargosInvestigados\") {\n        return (\n          /*#__PURE__*/\n          // <select className=\"form-control\" id={`ei-${parametro}`} name={`ei-${parametro}`}\n          //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\n          //     <option value=\"\">Por favor seleccione</option>\n          //     {selectCargosInvestigados()}\n          // </select>\n          _jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: selectCargosInvestigados(parametro, tempCampo.id_campo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 21\n          }, this)\n        );\n      } else if (itemCampo.type == \"EntidadesInvestigados\") {\n        return (\n          /*#__PURE__*/\n          // <select className=\"form-control\" id={`ei-${parametro}`} name={`ei-${parametro}`}\n          //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\n          //     <option value=\"\">Por favor seleccione</option>\n          //     {selectEntidadesInvestigados()}\n          // </select>\n          _jsxDEV(\"div\", {\n            className: \"custom-control custom-switch custom-control-lg mb-2\",\n            children: selectEntidadesInvestigados(parametro, tempCampo.id_campo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 21\n          }, this)\n        );\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Seleccione un campo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 21\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const selectChangeListaCampos = (parametro, id_campo, value) => {\n    console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\n    var newParams = getListaCamposPorParametro.data.map(item => {\n      if (item.parametro == parametro) {\n        item.id_campo = id_campo;\n        var itemCampo = campos[id_campo];\n        item.valor = itemCampo.value != null ? itemCampo.value : value;\n      }\n\n      return item;\n    });\n    setListaCamposPorParametro({\n      data: newParams\n    }); //console.log(newParams);\n  };\n\n  const columns = [{\n    name: 'Parametros de la plantilla',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: parametro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 32\n    }, this),\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Campo',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      id: `id${parametro}`,\n      name: `name${parametro}`,\n      onChange: e => selectChangeListaCampos(parametro, e.target.value, \"\"),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Por favor seleccione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 21\n      }, this), selectCampos(parametro)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 17\n    }, this),\n    sortable: false,\n    width: \"25%\"\n  }, {\n    name: 'Valor seleccionado',\n    width: \"60%\",\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: cargarValoresDeParametro(parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 17\n    }, this)\n  }];\n\n  const cargarCampos = () => {\n    GenericApi.getGeneric('parametro-campos').then(datos => {\n      if (!datos.error) {\n        console.log(\"Parametro-campos -> \", datos);\n        setParametrosCampos(datos);\n      }\n    });\n  };\n\n  const cargarParametros = () => {\n    setListaParametros(null);\n    console.log(\"getCampos -> \", getParametrosCampos);\n    const data = {\n      \"data\": {\n        \"type\": 'mas_actuaciones',\n        \"attributes\": {\n          \"id\": props.id_mas_actuacion\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + props.id_mas_actuacion, data).then(datos => {\n      if (!datos.error) {\n        setListaParametros(datos); // var parametrosCampos = datos.params.map((item, i) => {\n        //     return { parametro: item, id_campo: \"\", valor: \"\" };\n        // });\n\n        var parametrosCampos = datos.params.map((item, i) => {\n          // QUEDA PENDIENTE VALIDAR CON LOS DATOS DE LA TABLA MAS_PARAMETRO_CAMPOS\n          var indexCampo = campos.findIndex(x => x.title == item || item == \"Hechos\" && x.title == \"Antecedentes\" || item == \"Radicación\" && x.title == \"Número de radicado\" || item == \"Investigado\" && x.title == \"Investigados (Nombre)\" || item == \"Cargo\" && x.title == \"Investigados (Cargo)\" || item == \"Entidad\" && x.title == \"Investigados (Entidad)\" || item == \"Quejoso\" && x.title == \"Interesados\" || item == \"Dependencia Origen\" && x.title == \"Dependencia\" || item == \"Delegada\" && x.title == \"Dependencia\" || item == \"Radicado\" && x.title == \"Número de radicado\" || item == \"Auto\" && x.title == \"Número de auto (generado despues de aprobación)\");\n\n          if (indexCampo >= 0) {\n            return {\n              parametro: item,\n              id_campo: indexCampo,\n              valor: \"\"\n            };\n          } else {\n            return {\n              parametro: item,\n              id_campo: \"\",\n              valor: \"\"\n            };\n          }\n        });\n        setListaCamposPorParametro({\n          data: parametrosCampos\n        });\n      }\n    });\n  };\n\n  const cargarAntecedentes = () => {\n    const data = {\n      \"data\": {\n        \"type\": 'antecedente',\n        \"attributes\": {\n          \"antecedentes\": \"antecedentes\",\n          \"descripcion\": \"descripcion\",\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"fecha_registro\": Date.now(),\n          \"id_dependencia\": -1,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setAntecedentesLista(parametrosCampos);\n      }\n    });\n  };\n\n  const cargarInteresados = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"interesado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"tipo_documento\": \"1\",\n          \"numero_documento\": \"1\",\n          \"primer_nombre\": \"1\",\n          \"segundo_nombre\": \"1\",\n          \"primer_apellido\": \"1\",\n          \"segundo_apellido\": \"1\",\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setInteresadosLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Datos del interesado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const cargarEntidadesInvestigado = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"entidad_investigado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": \"1\",\n          \"requiere_registro\": true,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setEntidadesInvestigadoLista(parametrosCampos);\n        setCargosInvestigadoLista(parametrosCampos);\n        setEntidadInvestigadoLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Entidades del investigado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const descargarArchivo = () => {\n    try {\n      window.showSpinner(true);\n      var params = getListaCamposPorParametro.data.map(item => {\n        return {\n          \"param\": item.parametro,\n          \"value\": item.valor\n        };\n      });\n      console.log(\"######params#####\");\n      console.log(params);\n      const data = {\n        \"data\": {\n          \"type\": \"mas_actuaciones\",\n          \"attributes\": {\n            \"params\": params\n          }\n        }\n      };\n      GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + props.id_mas_actuacion, data).then(datos => {\n        if (!datos.error) {\n          downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"docx\");\n          window.showSpinner(false);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: \",\n            message: datos.error.toString(),\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function downloadBase64File(contentType, base64Data, fileName, extension) {\n    //console.log(\"Datos que recibo\", contentType, base64Data, fileName, extension);\n    const linkSource = `data:${contentType};base64,${base64Data}`;\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = linkSource;\n    downloadLink.download = fileName;\n    downloadLink.click();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 13\n    }, this), getListaParametros != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Parametros de la plantilla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-2 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n          columns: columns,\n          data: getListaParametros.params,\n          noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n          striped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-2 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"documento_ruta\",\n          children: \"Descargar documento pre-diligenciado con los valores seleccionados \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          title: \"Descargar documento diligenciado\",\n          onClick: () => descargarArchivo(),\n          className: \"btn btn-primary ml-2\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-file-word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 157\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Cargando parametros de la plantilla...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ActuacionParametrosPlantillaForm, \"jp1CDu/5rrV2LfIfzXB2xS9JzC4=\", false, function () {\n  return [useLocation];\n});\n\n_c = ActuacionParametrosPlantillaForm;\nexport default ActuacionParametrosPlantillaForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActuacionParametrosPlantillaForm\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","DataTable","GenericApi","Spinner","ModalGen","getUser","ActuacionParametrosPlantillaForm","props","location","from","state","radicado","procesoDisciplinarioId","id_etapa","idEtapa","fechaRegistro","fechaIngreso","dependencia","nombre_dependencia","nombre","modalState","setModalState","title","message","show","getListaParametros","setListaParametros","params","getListaCamposPorParametro","setListaCamposPorParametro","data","getAntecedentesLista","setAntecedentesLista","links","meta","getInteresadosLista","setInteresadosLista","getEntidadesInvestigadoLista","setEntidadesInvestigadoLista","getCargosInvestigadoLista","setCargosInvestigadoLista","getEntidadInvestigadoLista","setEntidadInvestigadoLista","isCheckAll","setIsCheckAll","isCheck","setIsCheck","lang","setLang","getParametrosCampos","setParametrosCampos","campos","value","type","fetchData","cargarParametros","cargarAntecedentes","cargarInteresados","cargarEntidadesInvestigado","id_mas_actuacion","selectCampos","parametro","map","item","i","itemFilter","filter","x","undefined","length","id_campo","handleChangeInteresados","e","checked","target","valorId","id","val","p","attributes","sujeto_procesal_nombre","primer_apellido","segundo_apellido","primer_nombre","segundo_nombre","selectChangeListaCampos","toString","prev","handleChangeAntecedentes","descripcion","handleChangeInvestigados","nombre_investigado","handleChangeCargosInvestigados","cargo","handleChangeEntidadesInvestigados","nombre_entidad","selectAntecedentes","Array","isArray","selectInteresados","selectInvestigados","selectCargosInvestigados","selectEntidadesInvestigados","cargarValoresDeParametro","campoParametro","tempCampo","itemCampo","newParamsItem","itemCampoId","valor","console","log","newParams","columns","name","cell","sortable","width","cargarCampos","getGeneric","then","datos","error","getByDataGeneric","parametrosCampos","indexCampo","findIndex","Date","now","redirect","descargarArchivo","window","showSpinner","downloadBase64File","content_type","base_64","file_name","alert","global","Constants","TIPO_ALERTA","ERROR","contentType","base64Data","fileName","extension","linkSource","downloadLink","document","createElement","href","download","click","DATA_TABLE","SIN_DATOS_TABLE"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Herramientas/ActuacionParametrosPlantillaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport '../../Utils/Constants';\r\nimport { getUser } from '../../Utils/Common';\r\n\r\nfunction ActuacionParametrosPlantillaForm(props) {\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let id_etapa = from.idEtapa;\r\n    let fechaRegistro = from.fechaRegistro;\r\n    let fechaIngreso = from.fechaIngreso;\r\n    let dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaParametros, setListaParametros] = useState({ params: [] });\r\n    const [getListaCamposPorParametro, setListaCamposPorParametro] = useState({ data: [] });\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getInteresadosLista, setInteresadosLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [isCheckAll, setIsCheckAll] = useState(false);\r\n    const [isCheck, setIsCheck] = useState([]);\r\n    const [lang, setLang] = useState([]);\r\n    const [getParametrosCampos, setParametrosCampos] = useState();\r\n\r\n    const campos = [\r\n        { title: 'Antecedentes', value: null, type: \"Antecedentes\" },\r\n        { title: 'Dependencia', value: dependencia },\r\n        { title: 'Investigados (Nombre)', value: null, type: \"Investigados\" },\r\n        { title: 'Investigados (Cargo)', value: null, type: \"CargosInvestigados\" },\r\n        { title: 'Investigados (Entidad)', value: null, type: \"EntidadesInvestigados\" },\r\n        { title: 'Interesados', value: null, type: \"Interesados\" },\r\n        { title: 'Fecha de ingreso', value: fechaIngreso },\r\n        { title: 'Fecha de registro', value: fechaRegistro },\r\n        { title: 'Número de auto (generado despues de aprobación)', value: '${numero_de_auto}' },\r\n        { title: 'Número de radicado', value: radicado },\r\n        //{ id: 8, title: 'Campo de entrada por usuario', value: null },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            cargarParametros();\r\n            cargarAntecedentes();\r\n            cargarInteresados();\r\n            cargarEntidadesInvestigado();\r\n            //cargarCampos();\r\n        }\r\n        fetchData();\r\n    }, [props.id_mas_actuacion]);\r\n\r\n    const selectCampos = (parametro) => {\r\n        return (\r\n            campos.map((item, i) => {\r\n\r\n                var itemFilter = getListaCamposPorParametro.data.filter(x => x.parametro == parametro);\r\n\r\n                if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\r\n                    return (\r\n                        <option selected key={i} value={i}>{item.title}</option>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <option key={i} value={i}>{item.title}</option>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleChangeInteresados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getInteresadosLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setInteresadosLista(valorId);\r\n        let val = getInteresadosLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.sujeto_procesal_nombre} ${p.attributes.primer_apellido} ${p.attributes.segundo_apellido} ${p.attributes.primer_nombre} ${p.attributes.segundo_nombre}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n        if (checked) {\r\n            // push selected value in list\r\n            setLang(prev => [...prev, value]);\r\n        } else {\r\n            // remove unchecked value from the list\r\n            setLang(prev => prev.filter(x => x !== value));\r\n        }\r\n    }\r\n\r\n    const handleChangeAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.descripcion}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n        if (checked) {\r\n            // Se añade el valor en la lista\r\n            setLang(prev => [...prev, value]);\r\n        } else {\r\n            // Se quita el valor de la lista\r\n            setLang(prev => prev.filter(x => x !== value));\r\n        }\r\n    }\r\n\r\n    const handleChangeInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadesInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_investigado) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setEntidadesInvestigadoLista(valorId);\r\n        let val = getEntidadesInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_investigado}`;\r\n                var nombre = `${p.attributes.nombre_investigado}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n        if (checked) {\r\n            // Se añade el valor en la lista\r\n            setLang(prev => [...prev, value]);\r\n        } else {\r\n            // Se quita el valor de la lista\r\n            setLang(prev => prev.filter(x => x !== value));\r\n        }\r\n    }\r\n\r\n    const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getCargosInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.cargo) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getCargosInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.cargo}`;\r\n                var nombre = `${p.attributes.cargo}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n        if (checked) {\r\n            // Se añade el valor en la lista\r\n            setLang(prev => [...prev, value]);\r\n        } else {\r\n            // Se quita el valor de la lista\r\n            setLang(prev => prev.filter(x => x !== value));\r\n        }\r\n    }\r\n\r\n    const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_entidad) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getEntidadInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_entidad}`;\r\n                var nombre = `${p.attributes.nombre_entidad}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n        if (checked) {\r\n            // Se añade el valor en la lista\r\n            setLang(prev => [...prev, value]);\r\n        } else {\r\n            // Se quita el valor de la lista\r\n            setLang(prev => prev.filter(x => x !== value));\r\n        }\r\n    }\r\n\r\n    const selectAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n            return (\r\n                getAntecedentesLista.map((item, i) => {\r\n                    return (\r\n                        <div className=\"col-md-12\" key={'keyCheck' + item.id}>\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id={'check' + item.id}\r\n                                name={'check' + item.id}\r\n                                value={item.id}\r\n                                onChange={(e) => handleChangeAntecedentes(e, parametro, id_campo)}\r\n                                defaultChecked={item.checked} /> {item.attributes.descripcion}\r\n                        </div>\r\n                        // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const selectInteresados = (parametro, id_campo) => {\r\n        if (Array.isArray(getInteresadosLista)) {\r\n            return (\r\n                getInteresadosLista.map((item, i) => {\r\n                    var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\r\n                    return (\r\n                        <div className=\"col-md-12\" key={'keyCheck' + nombre}>\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id={'check' + nombre}\r\n                                name={'check' + nombre}\r\n                                value={item.id}\r\n                                onChange={(e) => handleChangeInteresados(e, parametro, id_campo)}\r\n                                defaultChecked={item.checked} /> {nombre}\r\n                        </div>\r\n                        // <option key={nombre} value={nombre}>{nombre}</option>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const selectInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadesInvestigadoLista)) {\r\n            return (\r\n                getEntidadesInvestigadoLista.map((item, i) => {\r\n                    var value = `${item.attributes.nombre_investigado}`;\r\n                    var nombre = `${item.attributes.nombre_investigado}`;\r\n\r\n                    if (nombre != \"null\") {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={nombre}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={nombre}\r\n                                    name={nombre}\r\n                                    value={nombre}\r\n                                    onChange={(e) => handleChangeInvestigados(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {nombre}\r\n                            </div>\r\n                            //<option key={value} value={value}>{nombre}</option>\r\n                        )\r\n                    }\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const selectCargosInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getCargosInvestigadoLista)) {\r\n            return (\r\n                getCargosInvestigadoLista.map((item, i) => {\r\n                    var value = `${item.attributes.cargo}`;\r\n                    var nombre = `${item.attributes.cargo}`;\r\n\r\n                    if (nombre != \"null\") {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={nombre}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={nombre}\r\n                                    name={nombre}\r\n                                    value={nombre}\r\n                                    onChange={(e) => handleChangeCargosInvestigados(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {nombre}\r\n                            </div>\r\n                            // <option key={value} value={value}>{nombre}</option>\r\n                        )\r\n                    }\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const selectEntidadesInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadInvestigadoLista)) {\r\n            return (\r\n                getEntidadInvestigadoLista.map((item, i) => {\r\n                    var value = `${item.attributes.nombre_entidad}`;\r\n                    var nombre = `${item.attributes.nombre_entidad}`;\r\n\r\n                    if (nombre != \"null\") {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={nombre}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={nombre}\r\n                                    name={nombre}\r\n                                    value={nombre}\r\n                                    onChange={(e) => handleChangeEntidadesInvestigados(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {nombre}\r\n                            </div>\r\n                            //<option key={value} value={value}>{nombre}</option>\r\n                        )\r\n                    }\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const cargarValoresDeParametro = (parametro) => {\r\n\r\n        var campoParametro = getListaCamposPorParametro.data.filter(item => {\r\n            return item.parametro == parametro;\r\n        });\r\n\r\n        var tempCampo = campoParametro[0];\r\n\r\n        if (tempCampo != undefined && campos[tempCampo.id_campo] != undefined) {\r\n            var itemCampo = campos[tempCampo.id_campo];\r\n            //tiene un valor por defecto\r\n\r\n            if (itemCampo.value != null) {\r\n\r\n                var newParamsItem = getListaCamposPorParametro.data.map(item => {\r\n                    if (item.parametro == parametro) {\r\n                        item.id_campo = tempCampo.id_campo;\r\n                        var itemCampoId = campos[tempCampo.id_campo];\r\n                        item.valor = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                // setListaCamposPorParametro({ data: newParams });\r\n\r\n                return (\r\n                    <>{itemCampo.value}</>\r\n                )\r\n            }\r\n            else if (itemCampo.type == \"Antecedentes\") {\r\n                return (\r\n                    // <select className=\"form-control\" id={`antece-${parametro}`} name={`antece-${parametro}`}\r\n                    //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\r\n                    //     <option value=\"\">Por favor seleccione</option>\r\n                    //     {selectAntecedentes()}\r\n                    // </select>\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {/* <div className=\"col-md-12\" key=\"checkPrincipal\">\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id=\"checkAll\"\r\n                                name=\"checkAll\"\r\n                                onChange={(e) => handleSelectAll(e)}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"example-checkbox-inline1\">Seleccionar todos</label>\r\n                        </div> */}\r\n                        {selectAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            }\r\n            else if (itemCampo.type == \"Interesados\") {\r\n                return (\r\n                    // <select className=\"form-control\" id={`inter-${parametro}`} name={`inter-${parametro}`}\r\n                    //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\r\n                    //     <option value=\"\">Por favor seleccione</option>\r\n                    //     {selectInteresados()}\r\n                    // </select>\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {/* <div className=\"col-md-12\" key=\"checkPrincipal\">\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id=\"checkAll\"\r\n                                name=\"checkAll\"\r\n                                onChange={(e) => handleSelectAll(e)}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"example-checkbox-inline1\">Seleccionar todos</label>\r\n                        </div> */}\r\n                        {selectInteresados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            }\r\n            else if (itemCampo.type == \"Investigados\") {\r\n                return (\r\n                    // <select className=\"form-control\" id={`ei-${parametro}`} name={`ei-${parametro}`}\r\n                    //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\r\n                    //     <option value=\"\">Por favor seleccione</option>\r\n                    //     {selectInvestigados()}\r\n                    // </select>\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {/* <div className=\"col-md-12\" key=\"checkPrincipal\">\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id=\"checkAll\"\r\n                                name=\"checkAll\"\r\n                                onChange={(e) => handleSelectAll(e)}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"example-checkbox-inline1\">Seleccionar todos</label>\r\n                        </div> */}\r\n                        {selectInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            }\r\n            else if (itemCampo.type == \"CargosInvestigados\") {\r\n                return (\r\n                    // <select className=\"form-control\" id={`ei-${parametro}`} name={`ei-${parametro}`}\r\n                    //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\r\n                    //     <option value=\"\">Por favor seleccione</option>\r\n                    //     {selectCargosInvestigados()}\r\n                    // </select>\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {/* <div className=\"col-md-12\" key=\"checkPrincipal\">\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id=\"checkAll\"\r\n                            name=\"checkAll\"\r\n                            onChange={(e) => handleSelectAll(e)}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"example-checkbox-inline1\">Seleccionar todos</label>\r\n                    </div> */}\r\n                        {selectCargosInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            }\r\n            else if (itemCampo.type == \"EntidadesInvestigados\") {\r\n                return (\r\n                    // <select className=\"form-control\" id={`ei-${parametro}`} name={`ei-${parametro}`}\r\n                    //     onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\r\n                    //     <option value=\"\">Por favor seleccione</option>\r\n                    //     {selectEntidadesInvestigados()}\r\n                    // </select>\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {/* <div className=\"col-md-12\" key=\"checkPrincipal\">\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id=\"checkAll\"\r\n                            name=\"checkAll\"\r\n                            onChange={(e) => handleSelectAll(e)}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"example-checkbox-inline1\">Seleccionar todos</label>\r\n                    </div> */}\r\n                        {selectEntidadesInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <label>Seleccione un campo</label>\r\n                )\r\n            }\r\n        }\r\n        return (<></>)\r\n    }\r\n\r\n    const selectChangeListaCampos = (parametro, id_campo, value) => {\r\n\r\n        console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\r\n\r\n        var newParams = getListaCamposPorParametro.data.map(item => {\r\n            if (item.parametro == parametro) {\r\n                item.id_campo = id_campo;\r\n                var itemCampo = campos[id_campo];\r\n                item.valor = (itemCampo.value != null) ? itemCampo.value : value;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setListaCamposPorParametro({ data: newParams });\r\n        //console.log(newParams);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Parametros de la plantilla',\r\n            cell: parametro => <div><strong>{parametro}</strong></div>,\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            name: 'Campo',\r\n            cell: parametro =>\r\n                <select className=\"form-control\" id={`id${parametro}`} name={`name${parametro}`}\r\n                    onChange={e => selectChangeListaCampos(parametro, e.target.value, \"\")}>\r\n                    <option value=\"\">Por favor seleccione</option>\r\n                    {selectCampos(parametro)}\r\n                </select>,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'Valor seleccionado',\r\n            width: \"60%\",\r\n            cell: parametro =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresDeParametro(parametro)}\r\n                    </div>\r\n                </div>\r\n        }\r\n    ];\r\n\r\n    const cargarCampos = () => {\r\n\r\n        GenericApi.getGeneric('parametro-campos').then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    console.log(\"Parametro-campos -> \", datos);\r\n                    setParametrosCampos(datos);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarParametros = () => {\r\n\r\n        setListaParametros(null);\r\n\r\n        console.log(\"getCampos -> \", getParametrosCampos);\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'mas_actuaciones',\r\n                \"attributes\": {\r\n                    \"id\": props.id_mas_actuacion\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + props.id_mas_actuacion, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaParametros(datos);\r\n\r\n                    // var parametrosCampos = datos.params.map((item, i) => {\r\n                    //     return { parametro: item, id_campo: \"\", valor: \"\" };\r\n                    // });\r\n\r\n                    var parametrosCampos = datos.params.map((item, i) => {\r\n\r\n                        // QUEDA PENDIENTE VALIDAR CON LOS DATOS DE LA TABLA MAS_PARAMETRO_CAMPOS\r\n                        var indexCampo = campos.findIndex(\r\n                            x => x.title == item ||\r\n                                (item == \"Hechos\" && x.title == \"Antecedentes\") ||\r\n                                (item == \"Radicación\" && x.title == \"Número de radicado\") ||\r\n                                (item == \"Investigado\" && x.title == \"Investigados (Nombre)\") ||\r\n                                (item == \"Cargo\" && x.title == \"Investigados (Cargo)\") ||\r\n                                (item == \"Entidad\" && x.title == \"Investigados (Entidad)\") ||\r\n                                (item == \"Quejoso\" && x.title == \"Interesados\") ||\r\n                                (item == \"Dependencia Origen\" && x.title == \"Dependencia\") ||\r\n                                (item == \"Delegada\" && x.title == \"Dependencia\") ||\r\n                                (item == \"Radicado\" && x.title == \"Número de radicado\") ||\r\n                                (item == \"Auto\" && x.title == \"Número de auto (generado despues de aprobación)\"));\r\n\r\n                        if (indexCampo >= 0) {\r\n                            return { parametro: item, id_campo: indexCampo, valor: \"\" };\r\n                        } else {\r\n                            return { parametro: item, id_campo: \"\", valor: \"\" };\r\n                        }\r\n                    });\r\n\r\n                    setListaCamposPorParametro({ data: parametrosCampos });\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarAntecedentes = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'antecedente',\r\n                \"attributes\": {\r\n                    \"antecedentes\": \"antecedentes\",\r\n                    \"descripcion\": \"descripcion\",\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"fecha_registro\": Date.now(),\r\n                    \"id_dependencia\": -1,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n        GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n\r\n                    setAntecedentesLista(parametrosCampos);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarInteresados = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"interesado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"tipo_documento\": \"1\",\r\n                    \"numero_documento\": \"1\",\r\n                    \"primer_nombre\": \"1\",\r\n                    \"segundo_nombre\": \"1\",\r\n                    \"primer_apellido\": \"1\",\r\n                    \"segundo_apellido\": \"1\",\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setInteresadosLista(parametrosCampos);\r\n                } else {\r\n                    setModalState({ title: \"Datos del interesado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarEntidadesInvestigado = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"entidad_investigado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": \"1\",\r\n                    \"requiere_registro\": true,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setEntidadesInvestigadoLista(parametrosCampos);\r\n                    setCargosInvestigadoLista(parametrosCampos);\r\n                    setEntidadInvestigadoLista(parametrosCampos);\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Entidades del investigado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const descargarArchivo = () => {\r\n        try {\r\n            window.showSpinner(true);\r\n\r\n            var params = getListaCamposPorParametro.data.map(item => {\r\n                return {\r\n                    \"param\": item.parametro,\r\n                    \"value\": item.valor\r\n                };\r\n            });\r\n            console.log(\"######params#####\");\r\n            console.log(params);\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"mas_actuaciones\",\r\n                    \"attributes\": {\r\n                        \"params\": params,\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + props.id_mas_actuacion, data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"docx\");\r\n                        window.showSpinner(false);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: \", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    function downloadBase64File(contentType, base64Data, fileName, extension) {\r\n        //console.log(\"Datos que recibo\", contentType, base64Data, fileName, extension);\r\n        const linkSource = `data:${contentType};base64,${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <ModalGen data={modalState} />\r\n            {getListaParametros != null ?\r\n                <>\r\n                    <div className='col-md-12'>\r\n                        <label>Parametros de la plantilla</label>\r\n                    </div>\r\n                    <div className='col-md-12 mt-2 mb-2'>\r\n                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                            columns={columns}\r\n                            data={getListaParametros.params}\r\n                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                            striped\r\n                        />\r\n                    </div>\r\n                    <div className='col-md-12 mt-2 mb-2'>\r\n                        <label htmlFor=\"documento_ruta\">Descargar documento pre-diligenciado con los valores seleccionados </label>\r\n                        <button type=\"button\" title='Descargar documento diligenciado' onClick={() => descargarArchivo()} className=\"btn btn-primary ml-2\"> <i className=\"fas fa-file-word\"></i></button>\r\n                    </div>\r\n                </>\r\n                :\r\n                <div className='col-md-12'>\r\n                    <label>Cargando parametros de la plantilla...</label>\r\n                </div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ActuacionParametrosPlantillaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}