{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Maestras\\\\UsuarioForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Autoform } from 'react-hook-form-auto';\nimport { UsuarioModel } from './Models/UsuarioModel';\nimport styles from 'rhfa-emergency-styles';\nimport 'rhfa-emergency-styles/dist/styles.css';\nimport Spinner from '../Utils/Spinner';\nimport ModalGen from '../Utils/Modals/ModalGeneric';\nimport GenericApi from '../Api/Services/GenericApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UsuarioForm() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [usuarioData, setUsuario] = useState({});\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  let submitButtonText = id == undefined ? 'Crear' : 'Actualizar';\n  let formRef;\n  useEffect(() => {\n    async function fetchData() {\n      if (id != undefined) {\n        window.showSpinner(true);\n        GenericApi.getByIdGeneric('usuario', id).then(datos => {\n          window.showSpinner(false); //init state values\n\n          if (!datos.error) {\n            Object.entries(datos.data.attributes).forEach(_ref => {\n              let [key, value] = _ref;\n              formRef.setValue(key, value);\n            });\n          }\n\n          return !datos.error ? setUsuario(datos.data.attributes) : window.showModal();\n        });\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const errors = error => {\n    console.log('errors');\n    console.log(error);\n  };\n\n  const submit = data => {\n    window.showSpinner(true);\n    var requestData = {\n      \"data\": {\n        \"type\": \"usuario\",\n        \"attributes\": data\n      }\n    };\n\n    if (id == undefined) {\n      GenericApi.addGeneric('usuario', requestData).then(datos => {\n        window.showSpinner(false);\n        if (!datos.error) setModalState({\n          title: \"Registro creado\",\n          message: \"Registro creado con exito\",\n          show: true,\n          redirect: \"/Usuario\"\n        });else setModalState({\n          title: \"Error\",\n          message: \"Error creando el registro\",\n          show: true\n        });\n      });\n    } else {\n      GenericApi.updateGeneric('usuario', id, requestData).then(datos => {\n        window.showSpinner(false);\n        if (!datos.error) setModalState({\n          title: \"Registro actualizado\",\n          message: \"Registro actualizado con exito\",\n          show: true,\n          redirect: \"/Usuario\"\n        });else setModalState({\n          title: \"Error\",\n          message: \"Error actualizando el registro\",\n          show: true\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Autoform, {\n      schema: UsuarioModel,\n      initialValues: usuarioData,\n      styles: styles,\n      submitButton: true,\n      submitButtonText: submitButtonText,\n      config: {\n        arrayMode: 'table',\n        horizontal: false\n      },\n      onSubmit: submit,\n      onErrors: errors,\n      ref: e => formRef = e\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 13\n  }, this);\n}\n\n_s(UsuarioForm, \"G1/VSAhO59mQN1D2qNX1HNkF8x4=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = UsuarioForm;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsuarioForm\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/UsuarioForm.js"],"names":["React","useEffect","useState","useParams","useNavigate","Autoform","UsuarioModel","styles","Spinner","ModalGen","GenericApi","UsuarioForm","navigate","id","usuarioData","setUsuario","modalState","setModalState","title","message","show","submitButtonText","undefined","formRef","fetchData","window","showSpinner","getByIdGeneric","then","datos","error","Object","entries","data","attributes","forEach","key","value","setValue","showModal","errors","console","log","submit","requestData","addGeneric","redirect","updateGeneric","arrayMode","horizontal","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Autoform } from 'react-hook-form-auto'\r\nimport { UsuarioModel } from './Models/UsuarioModel'\r\nimport styles from 'rhfa-emergency-styles'\r\nimport 'rhfa-emergency-styles/dist/styles.css'\r\nimport Spinner from '../Utils/Spinner';\r\nimport ModalGen from '../Utils/Modals/ModalGeneric';\r\nimport GenericApi from '../Api/Services/GenericApi';\r\n\r\n\r\nexport default function UsuarioForm() {\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    const [usuarioData, setUsuario] = useState({});\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    let submitButtonText = id == undefined ? 'Crear' : 'Actualizar';\r\n    let formRef;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if (id != undefined) {\r\n                window.showSpinner(true);\r\n                GenericApi.getByIdGeneric('usuario', id).then(\r\n                    datos => {\r\n                        window.showSpinner(false);\r\n                        //init state values\r\n                        if (!datos.error) {\r\n                            Object.entries(datos.data.attributes).forEach(([key, value]) => {\r\n                                formRef.setValue(key, value);\r\n                            });\r\n                        }\r\n                        return !datos.error ? setUsuario(datos.data.attributes) : window.showModal();\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const errors = (error) => {\r\n        console.log('errors');\r\n        console.log(error);\r\n    }\r\n\r\n    const submit = (data) => {\r\n        window.showSpinner(true);\r\n        var requestData = {\r\n            \"data\": {\r\n                \"type\": \"usuario\",\r\n                \"attributes\": data,\r\n            }\r\n        }\r\n        if (id == undefined) {\r\n            GenericApi.addGeneric('usuario', requestData).then(\r\n                datos => {\r\n                    window.showSpinner(false);\r\n                    if (!datos.error)\r\n                        setModalState({ title: \"Registro creado\", message: \"Registro creado con exito\", show: true, redirect:\"/Usuario\" });\r\n                    else\r\n                        setModalState({ title: \"Error\", message: \"Error creando el registro\", show: true });\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            GenericApi.updateGeneric('usuario', id, requestData).then(\r\n                datos => {\r\n                    window.showSpinner(false);\r\n                    if (!datos.error) \r\n                        setModalState({ title: \"Registro actualizado\", message: \"Registro actualizado con exito\", show: true, redirect:\"/Usuario\" });\r\n                    else\r\n                        setModalState({ title: \"Error\", message: \"Error actualizando el registro\", show: true });\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    return (<div>\r\n        <Spinner />\r\n        <ModalGen data={modalState} />\r\n        <Autoform\r\n            schema={UsuarioModel}\r\n            initialValues={usuarioData}\r\n            styles={styles}\r\n            submitButton={true}\r\n            submitButtonText={submitButtonText}\r\n            config={{ arrayMode: 'table', horizontal: false }}\r\n            onSubmit={submit}\r\n            onErrors={errors}\r\n            ref={e => formRef = e}\r\n        />\r\n    </div>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}