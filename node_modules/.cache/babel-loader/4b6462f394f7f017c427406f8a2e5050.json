{"ast":null,"code":"import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{ErrorMessage,Field,Form,Formik}from'formik';import React,{useEffect,useState}from'react';import{useParams}from\"react-router\";import InfoErrorApi from'../Utils/InfoErrorApi';import InfoExitoApi from'../Utils/InfoExitoApi';import ApiSamples from\"./../Api/Services/SamplesApi\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function DepartamentoFormEjemplo(){var _departamento$data,_departamento$data$at,_departamento$data2,_departamento$data2$a;var _useState=useState({data:{}}),_useState2=_slicedToArray(_useState,2),departamento=_useState2[0],setDepartamento=_useState2[1];var _useParams=useParams(),departamentoId=_useParams.departamentoId;useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(departamentoId){ApiSamples.getDepartamento(departamentoId).then(function(datos){if(!datos.error){establecerCampos(datos);}else{window.showModal(1);}});}case 1:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}console.log(\"Antes:\",departamento);fetchData();},[]);function establecerCampos(datos){setDepartamento(datos);}var enviarDatos=function enviarDatos(datos){var data={\"data\":{\"type\":departamento.data.type,\"attributes\":{\"nombre\":datos.nombre,\"codigo_dane\":datos.dane}}};if(departamentoId){ApiSamples.updateDepartamento(departamentoId,data).then(function(datos){if(!datos.error){establecerCampos(datos);window.showModal(2);}else{window.showModal(1);}});}else{data.data.type=\"departmentos\";ApiSamples.addDepartamento(data).then(function(datos){if(!datos.error){establecerCampos(datos);window.showModal(2);}else{window.showModal(1);}});}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(InfoErrorApi,{}),/*#__PURE__*/_jsx(InfoExitoApi,{}),/*#__PURE__*/_jsx(Formik,{initialValues:{nombre:(_departamento$data=departamento.data)!==null&&_departamento$data!==void 0&&(_departamento$data$at=_departamento$data.attributes)!==null&&_departamento$data$at!==void 0&&_departamento$data$at.nombre?departamento.data.attributes.nombre:'',dane:(_departamento$data2=departamento.data)!==null&&_departamento$data2!==void 0&&(_departamento$data2$a=_departamento$data2.attributes)!==null&&_departamento$data2$a!==void 0&&_departamento$data2$a.codigo_dane?departamento.data.attributes.codigo_dane:''},enableReinitialize:true,validate:function validate(valores){var errores={};if(!valores.nombre){errores.nombre='Debe ingresar un nombre';}if(!valores.dane){errores.dane='Debe ingresar un cÃ³digo DANE';}return errores;},onSubmit:function onSubmit(valores,_ref){var resetForm=_ref.resetForm;console.log(valores.nombre);console.log(valores.dane);enviarDatos(valores);resetForm();},children:function children(_ref2){var errors=_ref2.errors;return/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"block block-rounded block-bordered\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header block-header-default\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"block-title\",children:\"Registro Departamento\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"block-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row justify-content-center py-sm-3 py-md-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-sm-10 col-md-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"C\\xF3digo Dane\"}),/*#__PURE__*/_jsx(Field,{type:\"text\",id:\"dane\",name:\"dane\",className:\"form-control\",placeholder:\"C\\xF3digo DANE\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"dane\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.dane});}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Nombre\"}),/*#__PURE__*/_jsx(Field,{type:\"text\",id:\"nombre\",name:\"nombre\",className:\"form-control\",placeholder:\"Nombre\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"nombre\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.nombre});}})]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"block-content block-content-full block-content-sm bg-body-light text-right\",children:/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:\"btn btn-sm btn-success\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-check\"}),\" \",departamentoId?'Actualizar':'Registrar']})})]})});}})]});}export default DepartamentoFormEjemplo;","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/Samples/DepartamentoFormEjemplo.js"],"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","useParams","InfoErrorApi","InfoExitoApi","ApiSamples","DepartamentoFormEjemplo","data","departamento","setDepartamento","departamentoId","fetchData","getDepartamento","then","datos","error","establecerCampos","window","showModal","console","log","enviarDatos","type","nombre","dane","updateDepartamento","addDepartamento","attributes","codigo_dane","valores","errores","resetForm","errors"],"mappings":"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","sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport InfoExitoApi from '../Utils/InfoExitoApi';\r\nimport ApiSamples from \"./../Api/Services/SamplesApi\";\r\n\r\nfunction DepartamentoFormEjemplo() {\r\n\r\n    const [departamento, setDepartamento] = useState({ data: {} });\r\n\r\n    let { departamentoId } = useParams();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if(departamentoId){\r\n                ApiSamples.getDepartamento(departamentoId).then(\r\n                    datos => {\r\n                        if(!datos.error){\r\n                            establecerCampos(datos)\r\n                        }\r\n                        else{\r\n                            window.showModal(1)\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        console.log(\"Antes:\", departamento);\r\n        fetchData();\r\n    }, []);\r\n    \r\n    function establecerCampos(datos){\r\n        setDepartamento(datos);\r\n    }\r\n\r\n    const enviarDatos = (datos) => {\r\n        const data = {\r\n            \"data\" : {\r\n                \"type\": departamento.data.type,\r\n                \"attributes\": {\r\n                    \"nombre\": datos.nombre,\r\n                    \"codigo_dane\": datos.dane\r\n                }\r\n            }\r\n        }\r\n        if(departamentoId){\r\n            ApiSamples.updateDepartamento(departamentoId, data).then(\r\n                datos => {\r\n                    if(!datos.error){\r\n                        establecerCampos(datos)\r\n                        window.showModal(2)\r\n                    }\r\n                    else{\r\n                        window.showModal(1)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        else{            \r\n            data.data.type = \"departmentos\"\r\n            ApiSamples.addDepartamento(data).then(\r\n                datos => {\r\n                    if(!datos.error){\r\n                        establecerCampos(datos)\r\n                        window.showModal(2)\r\n                    }\r\n                    else{\r\n                        window.showModal(1)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n    \r\n    return(        \r\n        <div>\r\n            { <InfoErrorApi /> }\r\n            { <InfoExitoApi /> }\r\n            <Formik\r\n                initialValues={{\r\n                    nombre: (departamento.data?.attributes?.nombre ? departamento.data.attributes.nombre : ''),\r\n                    dane: (departamento.data?.attributes?.codigo_dane ? departamento.data.attributes.codigo_dane : '')\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    let errores = {}\r\n                    if(!valores.nombre){\r\n                        errores.nombre = 'Debe ingresar un nombre'\r\n                    }\r\n                    \r\n                    if(!valores.dane){\r\n                        errores.dane = 'Debe ingresar un cÃ³digo DANE'\r\n                    }\r\n                    return errores\r\n                }}\r\n                onSubmit={(valores, {resetForm}) => {\r\n                    console.log(valores.nombre);\r\n                    console.log(valores.dane);\r\n                    enviarDatos(valores);\r\n                    resetForm();\r\n                }}>\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"block block-rounded block-bordered\">\r\n                            <div className=\"block-header block-header-default\">\r\n                                <h3 className=\"block-title\">Registro Departamento</h3>\r\n                            </div>\r\n                            <div className=\"block-content\">\r\n                                <div className=\"row justify-content-center py-sm-3 py-md-5\">\r\n                                    <div className=\"col-sm-10 col-md-8\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>CÃ³digo Dane</label>\r\n                                            <Field type=\"text\" id=\"dane\" name=\"dane\" className=\"form-control\" placeholder=\"CÃ³digo DANE\" />\r\n                                            <ErrorMessage name=\"dane\" component={() => (<span className=\"text-danger\">{errors.dane}</span>)} />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Nombre</label>\r\n                                            <Field type=\"text\" id=\"nombre\" name=\"nombre\" className=\"form-control\" placeholder=\"Nombre\" />\r\n                                            <ErrorMessage name=\"nombre\" component={() => (<span className=\"text-danger\">{errors.nombre}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"block-content block-content-full block-content-sm bg-body-light text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-sm btn-success\">\r\n                                    <i className=\"fa fa-check\"></i> { departamentoId ? 'Actualizar' : 'Registrar' }\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>            \r\n        </div>\r\n    )\r\n\r\n  }\r\n\r\nexport default DepartamentoFormEjemplo;"]},"metadata":{},"sourceType":"module"}