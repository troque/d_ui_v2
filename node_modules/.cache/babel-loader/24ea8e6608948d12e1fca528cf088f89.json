{"ast":null,"code":"import axios from 'axios';\nimport { getToken, getUser, removeUserSession, setUserSession } from '../../../components/Utils/Common';\nconst baseUrl = process.env.REACT_APP_API_URL;\nconst headers = {\n  'Content-Type': 'application/vnd.api+json',\n  'Accept': 'application/vnd.api+json'\n};\n\nasync function getAllTiposOrigenRadicado() {\n  const url = baseUrl + \"mas-origen-radicado\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response)\n    return response.data;\n  }).catch(error => {\n    console.log(error);\n    return {\n      estado: false,\n      error: error.message\n    };\n  });\n}\n\nasync function getAllTiposProceso() {\n  const url = baseUrl + \"mas-tipo-proceso\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response)\n    return response.data;\n  }).catch(error => {\n    console.log(error);\n    return {\n      estado: false,\n      error: error.message\n    };\n  });\n}\n\nasync function getAllTiposDependenciaOrigen() {\n  const url = baseUrl + \"mas-dependencia-origen\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response)\n    return response.data;\n  }).catch(error => {\n    console.log(error);\n    return {\n      estado: false,\n      error: error.message\n    };\n  });\n}\n/**\r\n * Trae los tipos de expediente solicitados en la calsificación del radicado de la etapa Captura y reparto de las ramas del proceso.\r\n * @returns \r\n */\n\n\nasync function getAllTiposExpediente() {\n  const url = baseUrl + \"mas-tipo-expediente\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n/**\r\n * Trae los tipos de expediente solicitados en la calsificación del radicado de la etapa Captura y reparto de las ramas del proceso.\r\n * @returns \r\n */\n\n\nasync function getAllTiposDerechoPeticion() {\n  const url = baseUrl + \"mas-tipo-derecho-peticion\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllTerminosRespuesta() {\n  const url = baseUrl + \"mas-termino-respuesta\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllTiposQueja() {\n  const url = baseUrl + \"mas-tipo-queja\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllTiposDocumento() {\n  const url = baseUrl + \"tipo-documento\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllTiposEntidad() {\n  const url = baseUrl + \"tipo-entidad\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllTipoSujetoProcesal() {\n  const url = baseUrl + \"tipo-sujeto-procesal\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllLocalidad() {\n  const url = baseUrl + \"mas-localidad\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllSexo() {\n  const url = baseUrl + \"sexo\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllGenero() {\n  const url = baseUrl + \"genero\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllCiudadByDepartamento(data) {\n  const url = baseUrl + \"ciudad/ciudad-por-departamento\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.post(url, data, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllOrientacionSexual() {\n  const url = baseUrl + \"orientacion-sexual\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllDiasNoLaborales() {\n  const url = baseUrl + \"dias-no-laborales\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllVigencias() {\n  const url = baseUrl + \"vigencia\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllTipoInteresado() {\n  const url = baseUrl + \"tipo-interesado\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllEntidades() {\n  const url = baseUrl + \"entidades\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllTipoRespuesta() {\n  const url = baseUrl + \"tipo-respuesta\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllEntidadesPermitidasInteresado() {\n  const url = baseUrl + \"mas-entidad-permitida\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getParametroPorNombre(data) {\n  const url = baseUrl + \"parametro/parametro-nombre\";\n  const token = getToken();\n  headers['Authorization'] = `Bearer ${token}`;\n  console.log(data);\n  return await axios.post(url, data, {\n    headers: headers\n  }).then(response => {\n    //console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    //console.log(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nexport default {\n  getAllTiposOrigenRadicado,\n  getAllTiposProceso,\n  getAllTiposDependenciaOrigen,\n  getAllTiposExpediente,\n  getAllTiposDerechoPeticion,\n  getAllTerminosRespuesta,\n  getAllTiposQueja,\n  getAllTiposDocumento,\n  getAllCiudadByDepartamento,\n  getAllTiposEntidad,\n  getAllTipoSujetoProcesal,\n  getAllLocalidad,\n  getAllSexo,\n  getAllGenero,\n  getAllOrientacionSexual,\n  getAllDiasNoLaborales,\n  getAllVigencias,\n  getAllTipoInteresado,\n  getAllTipoRespuesta,\n  getAllEntidades,\n  getAllEntidadesPermitidasInteresado,\n  getParametroPorNombre\n};","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/Api/Services/ParametrosMasApi.js"],"names":["axios","getToken","getUser","removeUserSession","setUserSession","baseUrl","process","env","REACT_APP_API_URL","headers","getAllTiposOrigenRadicado","url","token","get","then","response","data","catch","error","console","log","estado","message","getAllTiposProceso","getAllTiposDependenciaOrigen","getAllTiposExpediente","getAllTiposDerechoPeticion","getAllTerminosRespuesta","getAllTiposQueja","getAllTiposDocumento","getAllTiposEntidad","getAllTipoSujetoProcesal","getAllLocalidad","getAllSexo","getAllGenero","getAllCiudadByDepartamento","post","getAllOrientacionSexual","getAllDiasNoLaborales","getAllVigencias","getAllTipoInteresado","getAllEntidades","getAllTipoRespuesta","getAllEntidadesPermitidasInteresado","getParametroPorNombre"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,iBAA5B,EAA+CC,cAA/C,QAAqE,kCAArE;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AAEA,MAAMC,OAAO,GAAG;AACZ,kBAAgB,0BADJ;AAEZ,YAAU;AAFE,CAAhB;;AAKA,eAAeC,yBAAf,GAA2C;AAEvC,QAAMC,GAAG,GAAGN,OAAO,GAAG,qBAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA,KAAK,CAACI;AAA9B,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAeC,kBAAf,GAAoC;AAEhC,QAAMZ,GAAG,GAAGN,OAAO,GAAG,kBAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA,KAAK,CAACI;AAA9B,KAAP;AACH,GAVQ,CAAb;AAWH;;AAGD,eAAeE,4BAAf,GAA8C;AAE1C,QAAMb,GAAG,GAAGN,OAAO,GAAG,wBAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA,KAAK,CAACI;AAA9B,KAAP;AACH,GAVQ,CAAb;AAWH;AAED;AACA;AACA;AACA;;;AACA,eAAeG,qBAAf,GAAuC;AAEnC,QAAMd,GAAG,GAAGN,OAAO,GAAG,qBAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;AAGD;AACA;AACA;AACA;;;AACA,eAAeQ,0BAAf,GAA4C;AAExC,QAAMf,GAAG,GAAGN,OAAO,GAAG,2BAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,IAArB;AACA,WAAOD,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAGD,eAAeS,uBAAf,GAAyC;AAErC,QAAMhB,GAAG,GAAGN,OAAO,GAAG,uBAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,IAArB;AACA,WAAOD,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAGD,eAAeU,gBAAf,GAAkC;AAE9B,QAAMjB,GAAG,GAAGN,OAAO,GAAG,gBAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,IAArB;AACA,WAAOD,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAeW,oBAAf,GAAsC;AAElC,QAAMlB,GAAG,GAAGN,OAAO,GAAG,gBAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAeY,kBAAf,GAAoC;AAEhC,QAAMnB,GAAG,GAAGN,OAAO,GAAG,cAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAea,wBAAf,GAA0C;AAEtC,QAAMpB,GAAG,GAAGN,OAAO,GAAG,sBAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAec,eAAf,GAAiC;AAE7B,QAAMrB,GAAG,GAAGN,OAAO,GAAG,eAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAee,UAAf,GAA4B;AAExB,QAAMtB,GAAG,GAAGN,OAAO,GAAG,MAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAegB,YAAf,GAA8B;AAE1B,QAAMvB,GAAG,GAAGN,OAAO,GAAG,QAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAGD,eAAeiB,0BAAf,CAA0CnB,IAA1C,EAAgD;AAE5C,QAAML,GAAG,GAAGN,OAAO,GAAG,gCAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACoC,IAAN,CAAWzB,GAAX,EAAgBK,IAAhB,EAAsB;AAC/BP,IAAAA,OAAO,EAAEA;AADsB,GAAtB,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAemB,uBAAf,GAAyC;AAErC,QAAM1B,GAAG,GAAGN,OAAO,GAAG,oBAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAeoB,qBAAf,GAAuC;AAEnC,QAAM3B,GAAG,GAAGN,OAAO,GAAG,mBAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAeqB,eAAf,GAAiC;AAE7B,QAAM5B,GAAG,GAAGN,OAAO,GAAG,UAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAesB,oBAAf,GAAsC;AAElC,QAAM7B,GAAG,GAAGN,OAAO,GAAG,iBAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAeuB,eAAf,GAAiC;AAE7B,QAAM9B,GAAG,GAAGN,OAAO,GAAG,WAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAewB,mBAAf,GAAqC;AAEjC,QAAM/B,GAAG,GAAGN,OAAO,GAAG,gBAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAeyB,mCAAf,GAAqD;AAEjD,QAAMhC,GAAG,GAAGN,OAAO,GAAG,uBAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AAEA,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AACxBF,IAAAA,OAAO,EAAEA;AADe,GAAf,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAe0B,qBAAf,CAAqC5B,IAArC,EAA2C;AAEvC,QAAML,GAAG,GAAGN,OAAO,GAAG,4BAAtB;AACA,QAAMO,KAAK,GAAGX,QAAQ,EAAtB;AACAQ,EAAAA,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASG,KAAM,EAA3C;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,SAAO,MAAMhB,KAAK,CAACoC,IAAN,CAAWzB,GAAX,EAAgBK,IAAhB,EAAsB;AAC/BP,IAAAA,OAAO,EAAEA;AADsB,GAAtB,EAGRK,IAHQ,CAGHC,QAAQ,IAAI;AACd;AACA,WAAOA,QAAQ,CAACC,IAAhB;AACH,GANQ,EAORC,KAPQ,CAOFC,KAAK,IAAI;AACZ;AACA,WAAO;AAAEG,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,KAAK,EAAEA;AAAxB,KAAP;AACH,GAVQ,CAAb;AAWH;;AAED,eAAe;AACXR,EAAAA,yBADW;AACgBa,EAAAA,kBADhB;AACoCC,EAAAA,4BADpC;AAEXC,EAAAA,qBAFW;AAEYC,EAAAA,0BAFZ;AAEwCC,EAAAA,uBAFxC;AAEiEC,EAAAA,gBAFjE;AAEmFC,EAAAA,oBAFnF;AAGXM,EAAAA,0BAHW;AAGiBL,EAAAA,kBAHjB;AAGqCC,EAAAA,wBAHrC;AAG+DC,EAAAA,eAH/D;AAGgFC,EAAAA,UAHhF;AAG4FC,EAAAA,YAH5F;AAIXG,EAAAA,uBAJW;AAIcC,EAAAA,qBAJd;AAIqCC,EAAAA,eAJrC;AAIsDC,EAAAA,oBAJtD;AAI4EE,EAAAA,mBAJ5E;AAIiGD,EAAAA,eAJjG;AAKXE,EAAAA,mCALW;AAK0BC,EAAAA;AAL1B,CAAf","sourcesContent":["import axios from 'axios'\r\nimport { getToken, getUser, removeUserSession, setUserSession } from '../../../components/Utils/Common';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst headers = {\r\n    'Content-Type': 'application/vnd.api+json',\r\n    'Accept': 'application/vnd.api+json'\r\n}\r\n\r\nasync function getAllTiposOrigenRadicado() {\r\n\r\n    const url = baseUrl + \"mas-origen-radicado\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response)\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return { estado: false, error: error.message }\r\n        });\r\n}\r\n\r\nasync function getAllTiposProceso() {\r\n\r\n    const url = baseUrl + \"mas-tipo-proceso\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response)\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return { estado: false, error: error.message }\r\n        });\r\n}\r\n\r\n\r\nasync function getAllTiposDependenciaOrigen() {\r\n\r\n    const url = baseUrl + \"mas-dependencia-origen\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response)\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return { estado: false, error: error.message }\r\n        });\r\n}\r\n\r\n/**\r\n * Trae los tipos de expediente solicitados en la calsificación del radicado de la etapa Captura y reparto de las ramas del proceso.\r\n * @returns \r\n */\r\nasync function getAllTiposExpediente() {\r\n\r\n    const url = baseUrl + \"mas-tipo-expediente\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\n\r\n/**\r\n * Trae los tipos de expediente solicitados en la calsificación del radicado de la etapa Captura y reparto de las ramas del proceso.\r\n * @returns \r\n */\r\nasync function getAllTiposDerechoPeticion() {\r\n\r\n    const url = baseUrl + \"mas-tipo-derecho-peticion\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\n\r\nasync function getAllTerminosRespuesta() {\r\n\r\n    const url = baseUrl + \"mas-termino-respuesta\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\n\r\nasync function getAllTiposQueja() {\r\n\r\n    const url = baseUrl + \"mas-tipo-queja\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllTiposDocumento() {\r\n\r\n    const url = baseUrl + \"tipo-documento\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllTiposEntidad() {\r\n\r\n    const url = baseUrl + \"tipo-entidad\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllTipoSujetoProcesal() {\r\n\r\n    const url = baseUrl + \"tipo-sujeto-procesal\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllLocalidad() {\r\n\r\n    const url = baseUrl + \"mas-localidad\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllSexo() {\r\n\r\n    const url = baseUrl + \"sexo\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllGenero() {\r\n\r\n    const url = baseUrl + \"genero\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\n\r\nasync function getAllCiudadByDepartamento(data) {\r\n\r\n    const url = baseUrl + \"ciudad/ciudad-por-departamento\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.post(url, data, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllOrientacionSexual() {\r\n\r\n    const url = baseUrl + \"orientacion-sexual\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllDiasNoLaborales() {\r\n\r\n    const url = baseUrl + \"dias-no-laborales\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllVigencias() {\r\n\r\n    const url = baseUrl + \"vigencia\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllTipoInteresado() {\r\n\r\n    const url = baseUrl + \"tipo-interesado\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllEntidades() {\r\n\r\n    const url = baseUrl + \"entidades\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllTipoRespuesta() {\r\n\r\n    const url = baseUrl + \"tipo-respuesta\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getAllEntidadesPermitidasInteresado() {\r\n\r\n    const url = baseUrl + \"mas-entidad-permitida\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nasync function getParametroPorNombre(data) {\r\n\r\n    const url = baseUrl + \"parametro/parametro-nombre\";\r\n    const token = getToken();\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n    console.log(data);\r\n    return await axios.post(url, data, {\r\n        headers: headers\r\n    })\r\n        .then(response => {\r\n            //console.log(response.data);\r\n            return response.data;\r\n        })\r\n        .catch(error => {\r\n            //console.log(error);\r\n            return { estado: false, error: error }\r\n        });\r\n}\r\n\r\nexport default {\r\n    getAllTiposOrigenRadicado, getAllTiposProceso, getAllTiposDependenciaOrigen,\r\n    getAllTiposExpediente, getAllTiposDerechoPeticion, getAllTerminosRespuesta, getAllTiposQueja, getAllTiposDocumento,\r\n    getAllCiudadByDepartamento, getAllTiposEntidad, getAllTipoSujetoProcesal, getAllLocalidad, getAllSexo, getAllGenero,\r\n    getAllOrientacionSexual, getAllDiasNoLaborales, getAllVigencias, getAllTipoInteresado, getAllTipoRespuesta, getAllEntidades,\r\n    getAllEntidadesPermitidasInteresado, getParametroPorNombre\r\n}\r\n"]},"metadata":{},"sourceType":"module"}