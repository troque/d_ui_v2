{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Herramientas\\\\ActuacionParametrosPlantillaForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport DataTable from 'react-data-table-component';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport '../../Utils/Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ActuacionParametrosPlantillaForm(props) {\n  _s();\n\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let id_etapa = from.idEtapa;\n  let fechaRegistro = from.fechaRegistro;\n  let fechaIngreso = from.fechaIngreso;\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getIdMasActuacion, setIdMasActuacion] = useState(props.id_mas_actuacion);\n  const [getListaParametros, setListaParametros] = useState({\n    params: []\n  });\n  const [getListaCamposPorParametro, setListaCamposPorParametro] = useState({\n    data: []\n  });\n  const [getAntecedentesLista, setAntecedentesLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getInteresadosLista, setInteresadosLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const campos = [{\n    title: 'Antecendentes',\n    value: null,\n    type: \"Antecedentes\"\n  }, {\n    title: 'Entidades del investigado',\n    value: null,\n    type: \"EntidadesInvestigados\"\n  }, {\n    title: 'Interesados',\n    value: null,\n    type: \"Interesados\"\n  }, {\n    title: 'Fecha de ingreso',\n    value: fechaIngreso\n  }, {\n    title: 'Fecha de registro',\n    value: fechaRegistro\n  }, {\n    title: 'Número de auto (generado despues de aprobación)',\n    value: '${numero_de_auto}'\n  }, {\n    title: 'Número de radicado',\n    value: radicado\n  } //{ id: 8, title: 'Campo de entrada por usuario', value: null },\n  ];\n  useEffect(() => {\n    async function fetchData() {\n      setIdMasActuacion(props.id_mas_actuacion);\n      cargarParametros();\n      cargarAntecedentes();\n      cargarInteresados();\n      cargarEntidadesInvestigado();\n    }\n\n    fetchData();\n  }, [props.id_mas_actuacion]);\n\n  const selectCampos = () => {\n    return campos.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i,\n        children: item.title\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectAntecedentes = () => {\n    if (Array.isArray(getAntecedentesLista)) {\n      return getAntecedentesLista.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.attributes.descripcion,\n          children: item.attributes.descripcion\n        }, item.attributes.descripcion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this);\n      });\n    }\n  };\n\n  const selectInteresados = () => {\n    if (Array.isArray(getInteresadosLista)) {\n      return getInteresadosLista.map((item, i) => {\n        var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: nombre,\n          children: nombre\n        }, nombre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this);\n      });\n    }\n  };\n\n  const selectEntidadesInvestigado = () => {\n    if (Array.isArray(getEntidadesInvestigadoLista)) {\n      return getEntidadesInvestigadoLista.map((item, i) => {\n        var nombre = `${item.attributes.nombre_investigado} - ${item.attributes.cargo} (${item.attributes.nombre_entidad})`;\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: nombre,\n          children: nombre\n        }, nombre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this);\n      });\n    }\n  };\n\n  const cargarValoresDeParametro = parametro => {\n    var campoParametro = getListaCamposPorParametro.data.filter(item => {\n      return item.parametro == parametro;\n    });\n    var tempCampo = campoParametro[0];\n\n    if (tempCampo != undefined && campos[tempCampo.id_campo] != undefined) {\n      var itemCampo = campos[tempCampo.id_campo]; //tiene un valor por defecto\n\n      if (itemCampo.value != null) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: itemCampo.value\n        }, void 0, false);\n      } else if (itemCampo.type == \"Antecedentes\") {\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: `antece-${parametro}`,\n          name: `antece-${parametro}`,\n          onChange: e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Por favor seleccione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), selectAntecedentes()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Interesados\") {\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: `inter-${parametro}`,\n          name: `inter-${parametro}`,\n          onChange: e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Por favor seleccione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), selectInteresados()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"EntidadesInvestigados\") {\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: `ei-${parametro}`,\n          name: `ei-${parametro}`,\n          onChange: e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Por favor seleccione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), selectEntidadesInvestigado()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Seleccione un campo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const selectChangeListaCampos = (parametro, id_campo, value) => {\n    //console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\n    var newParams = getListaCamposPorParametro.data.map(item => {\n      if (item.parametro == parametro) {\n        item.id_campo = id_campo;\n        var itemCampo = campos[id_campo];\n        item.valor = itemCampo.value != null ? itemCampo.value : value;\n      }\n\n      return item;\n    });\n    setListaCamposPorParametro({\n      data: newParams\n    }); //console.log(newParams);\n  };\n\n  const columns = [{\n    name: 'Parametros de la plantilla',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: parametro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 32\n    }, this),\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Campo',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      id: `id${parametro}`,\n      name: `name${parametro}`,\n      onChange: e => selectChangeListaCampos(parametro, e.target.value, \"\"),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Por favor seleccione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), selectCampos()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this),\n    sortable: false,\n    width: \"25%\"\n  }, {\n    name: 'Valor seleccionado',\n    width: \"60%\",\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: cargarValoresDeParametro(parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }, this)\n  }];\n\n  const cargarParametros = () => {\n    const data = {\n      \"data\": {\n        \"type\": 'mas_actuaciones',\n        \"attributes\": {\n          \"id\": getIdMasActuacion\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + getIdMasActuacion, data).then(datos => {\n      if (!datos.error) {\n        setListaParametros(datos);\n        var parametrosCampos = datos.params.map((item, i) => {\n          return {\n            parametro: item,\n            id_campo: \"\",\n            valor: \"\"\n          };\n        }); //console.log(parametrosCampos);\n\n        setListaCamposPorParametro({\n          data: parametrosCampos\n        });\n      }\n    });\n  };\n\n  const cargarAntecedentes = () => {\n    const data = {\n      \"data\": {\n        \"type\": 'antecedente',\n        \"attributes\": {\n          \"antecedentes\": \"antecedentes\",\n          \"descripcion\": \"descripcion\",\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"fecha_registro\": Date.now(),\n          \"id_dependencia\": -1,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        setAntecedentesLista(datos.data);\n      }\n    });\n  };\n\n  const cargarInteresados = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"interesado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"tipo_documento\": \"1\",\n          \"numero_documento\": \"1\",\n          \"primer_nombre\": \"1\",\n          \"segundo_nombre\": \"1\",\n          \"primer_apellido\": \"1\",\n          \"segundo_apellido\": \"1\",\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        setInteresadosLista(datos.data);\n      } else {\n        setModalState({\n          title: \"Datos del interesado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const cargarEntidadesInvestigado = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"entidad_investigado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": \"1\",\n          \"requiere_registro\": true,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        setEntidadesInvestigadoLista(datos.data);\n      } else {\n        setModalState({\n          title: \"Entidades del investigado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const descargarArchivo = () => {\n    try {\n      window.showSpinner(true);\n      var params = getListaCamposPorParametro.data.map(item => {\n        return {\n          \"param\": item.parametro,\n          \"value\": item.valor\n        };\n      });\n      console.log(\"######params#####\");\n      console.log(params);\n      const data = {\n        \"data\": {\n          \"type\": \"mas_actuaciones\",\n          \"attributes\": {\n            \"params\": params\n          }\n        }\n      };\n      GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + getIdMasActuacion, data).then(datos => {\n        if (!datos.error) {\n          downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"docx\");\n          window.showSpinner(false);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: \",\n            message: datos.error.toString(),\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function downloadBase64File(contentType, base64Data, fileName, extension) {\n    //console.log(\"Datos que recibo\", contentType, base64Data, fileName, extension);\n    const linkSource = `data:${contentType};base64,${base64Data}`;\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = linkSource;\n    downloadLink.download = fileName;\n    downloadLink.click();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Parametros de la plantilla\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 mt-2 mb-2\",\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n        columns: columns,\n        data: getListaParametros.params,\n        noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n        striped: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 mt-2 mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"documento_ruta\",\n        children: \"Descargar documento pre-diligenciado con los valores seleccionados \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        title: \"Descargar documento diligenciado\",\n        onClick: () => descargarArchivo(),\n        className: \"btn btn-primary ml-2\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-file-word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 149\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ActuacionParametrosPlantillaForm, \"64E3aXyQy1eqnpTffIUpq1K30Es=\", false, function () {\n  return [useLocation];\n});\n\n_c = ActuacionParametrosPlantillaForm;\nexport default ActuacionParametrosPlantillaForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActuacionParametrosPlantillaForm\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","Field","Form","Formik","DataTable","GenericApi","Spinner","ModalGen","ActuacionParametrosPlantillaForm","props","location","from","state","radicado","procesoDisciplinarioId","id_etapa","idEtapa","fechaRegistro","fechaIngreso","modalState","setModalState","title","message","show","getIdMasActuacion","setIdMasActuacion","id_mas_actuacion","getListaParametros","setListaParametros","params","getListaCamposPorParametro","setListaCamposPorParametro","data","getAntecedentesLista","setAntecedentesLista","links","meta","getInteresadosLista","setInteresadosLista","getEntidadesInvestigadoLista","setEntidadesInvestigadoLista","campos","value","type","fetchData","cargarParametros","cargarAntecedentes","cargarInteresados","cargarEntidadesInvestigado","selectCampos","map","item","i","selectAntecedentes","Array","isArray","attributes","descripcion","selectInteresados","nombre","sujeto_procesal_nombre","primer_apellido","segundo_apellido","primer_nombre","segundo_nombre","selectEntidadesInvestigado","nombre_investigado","cargo","nombre_entidad","cargarValoresDeParametro","parametro","campoParametro","filter","tempCampo","undefined","id_campo","itemCampo","e","selectChangeListaCampos","target","newParams","valor","columns","name","cell","sortable","width","getByDataGeneric","then","datos","error","parametrosCampos","Date","now","toString","redirect","descargarArchivo","window","showSpinner","console","log","downloadBase64File","content_type","base_64","file_name","alert","global","Constants","TIPO_ALERTA","ERROR","contentType","base64Data","fileName","extension","linkSource","downloadLink","document","createElement","href","download","click","DATA_TABLE","SIN_DATOS_TABLE"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Herramientas/ActuacionParametrosPlantillaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Field, Form, Formik } from 'formik';\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport '../../Utils/Constants';\r\n\r\nfunction ActuacionParametrosPlantillaForm(props) {\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let id_etapa = from.idEtapa;\r\n    let fechaRegistro = from.fechaRegistro;\r\n    let fechaIngreso = from.fechaIngreso;\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getIdMasActuacion, setIdMasActuacion] = useState(props.id_mas_actuacion);\r\n    const [getListaParametros, setListaParametros] = useState({ params: [] });\r\n    const [getListaCamposPorParametro, setListaCamposPorParametro] = useState({ data: [] });\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getInteresadosLista, setInteresadosLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const campos = [\r\n        { title: 'Antecendentes', value: null, type: \"Antecedentes\" },\r\n        { title: 'Entidades del investigado', value: null, type: \"EntidadesInvestigados\" },\r\n        { title: 'Interesados', value: null, type: \"Interesados\" },\r\n        { title: 'Fecha de ingreso', value: fechaIngreso },\r\n        { title: 'Fecha de registro', value: fechaRegistro },\r\n        { title: 'Número de auto (generado despues de aprobación)', value: '${numero_de_auto}' },\r\n        { title: 'Número de radicado', value: radicado },\r\n        //{ id: 8, title: 'Campo de entrada por usuario', value: null },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setIdMasActuacion(props.id_mas_actuacion);\r\n            cargarParametros();\r\n            cargarAntecedentes();\r\n            cargarInteresados();\r\n            cargarEntidadesInvestigado();\r\n        }\r\n        fetchData();\r\n    }, [props.id_mas_actuacion]);\r\n\r\n\r\n\r\n    const selectCampos = () => {\r\n        return (\r\n            campos.map((item, i) => {\r\n                return (\r\n                    <option key={i} value={i}>{item.title}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectAntecedentes = () => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n            return (\r\n                getAntecedentesLista.map((item, i) => {\r\n                    return (\r\n                        <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const selectInteresados = () => {\r\n        if (Array.isArray(getInteresadosLista)) {\r\n            return (\r\n                getInteresadosLista.map((item, i) => {\r\n                    var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\r\n                    return (\r\n                        <option key={nombre} value={nombre}>{nombre}</option>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const selectEntidadesInvestigado = () => {\r\n        if (Array.isArray(getEntidadesInvestigadoLista)) {\r\n            return (\r\n                getEntidadesInvestigadoLista.map((item, i) => {\r\n                    var nombre = `${item.attributes.nombre_investigado} - ${item.attributes.cargo} (${item.attributes.nombre_entidad})`;\r\n                    return (\r\n                        <option key={nombre} value={nombre}>{nombre}</option>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const cargarValoresDeParametro = (parametro) => {\r\n        var campoParametro = getListaCamposPorParametro.data.filter(item => {\r\n            return item.parametro == parametro;\r\n        });\r\n        var tempCampo = campoParametro[0];\r\n        if (tempCampo != undefined && campos[tempCampo.id_campo] != undefined) {\r\n            var itemCampo = campos[tempCampo.id_campo];\r\n            //tiene un valor por defecto\r\n            if (itemCampo.value != null) {\r\n                return (\r\n                    <>{itemCampo.value}</>\r\n                )\r\n            }\r\n            else if (itemCampo.type == \"Antecedentes\") {\r\n                return (\r\n                    <select className=\"form-control\" id={`antece-${parametro}`} name={`antece-${parametro}`}\r\n                        onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\r\n                        <option value=\"\">Por favor seleccione</option>\r\n                        {selectAntecedentes()}\r\n                    </select>\r\n                )\r\n            }\r\n            else if (itemCampo.type == \"Interesados\") {\r\n                return (\r\n                    <select className=\"form-control\" id={`inter-${parametro}`} name={`inter-${parametro}`}\r\n                        onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\r\n                        <option value=\"\">Por favor seleccione</option>\r\n                        {selectInteresados()}\r\n                    </select>\r\n                )\r\n            }\r\n            else if (itemCampo.type == \"EntidadesInvestigados\") {\r\n                return (\r\n                    <select className=\"form-control\" id={`ei-${parametro}`} name={`ei-${parametro}`}\r\n                        onChange={e => selectChangeListaCampos(parametro, tempCampo.id_campo, e.target.value)}>\r\n                        <option value=\"\">Por favor seleccione</option>\r\n                        {selectEntidadesInvestigado()}\r\n                    </select>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <label>Seleccione un campo</label>\r\n                )\r\n            }\r\n        }\r\n        return (<></>)\r\n    }\r\n\r\n    const selectChangeListaCampos = (parametro, id_campo, value) => {\r\n        //console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\r\n        var newParams = getListaCamposPorParametro.data.map(item => {\r\n            if (item.parametro == parametro) {\r\n                item.id_campo = id_campo;\r\n                var itemCampo = campos[id_campo];\r\n                item.valor = (itemCampo.value != null) ? itemCampo.value : value;\r\n            }\r\n            return item;\r\n        });\r\n        setListaCamposPorParametro({ data: newParams });\r\n        //console.log(newParams);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Parametros de la plantilla',\r\n            cell: parametro => <div><strong>{parametro}</strong></div>,\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            name: 'Campo',\r\n            cell: parametro =>\r\n                <select className=\"form-control\" id={`id${parametro}`} name={`name${parametro}`}\r\n                    onChange={e => selectChangeListaCampos(parametro, e.target.value, \"\")}>\r\n                    <option value=\"\">Por favor seleccione</option>\r\n                    {selectCampos()}\r\n                </select>,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'Valor seleccionado',\r\n            width: \"60%\",\r\n            cell: parametro =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresDeParametro(parametro)}\r\n                    </div>\r\n                </div>\r\n        }\r\n    ];\r\n\r\n\r\n    const cargarParametros = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'mas_actuaciones',\r\n                \"attributes\": {\r\n                    \"id\": getIdMasActuacion\r\n                }\r\n            }\r\n        }\r\n        GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + getIdMasActuacion, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaParametros(datos);\r\n                    var parametrosCampos = datos.params.map((item, i) => {\r\n                        return { parametro: item, id_campo: \"\", valor: \"\" };\r\n                    });\r\n                    //console.log(parametrosCampos);\r\n                    setListaCamposPorParametro({ data: parametrosCampos });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarAntecedentes = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'antecedente',\r\n                \"attributes\": {\r\n                    \"antecedentes\": \"antecedentes\",\r\n                    \"descripcion\": \"descripcion\",\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"fecha_registro\": Date.now(),\r\n                    \"id_dependencia\": -1,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n        GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setAntecedentesLista(datos.data);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarInteresados = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"interesado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"tipo_documento\": \"1\",\r\n                    \"numero_documento\": \"1\",\r\n                    \"primer_nombre\": \"1\",\r\n                    \"segundo_nombre\": \"1\",\r\n                    \"primer_apellido\": \"1\",\r\n                    \"segundo_apellido\": \"1\",\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setInteresadosLista(datos.data);\r\n                } else {\r\n                    setModalState({ title: \"Datos del interesado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const cargarEntidadesInvestigado = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"entidad_investigado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": \"1\",\r\n                    \"requiere_registro\": true,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setEntidadesInvestigadoLista(datos.data)\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Entidades del investigado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const descargarArchivo = () => {\r\n        try {\r\n            window.showSpinner(true);\r\n\r\n            var params = getListaCamposPorParametro.data.map(item => {\r\n                return {\r\n                    \"param\": item.parametro,\r\n                    \"value\": item.valor\r\n                };\r\n            });\r\n            console.log(\"######params#####\");\r\n            console.log(params);\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"mas_actuaciones\",\r\n                    \"attributes\": {\r\n                        \"params\": params,\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + getIdMasActuacion, data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"docx\");\r\n                        window.showSpinner(false);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: \", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    function downloadBase64File(contentType, base64Data, fileName, extension) {\r\n        //console.log(\"Datos que recibo\", contentType, base64Data, fileName, extension);\r\n        const linkSource = `data:${contentType};base64,${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <ModalGen data={modalState} />\r\n\r\n            <div className='col-md-12'>\r\n                <label>Parametros de la plantilla</label>\r\n            </div>\r\n            <div className='col-md-12 mt-2 mb-2'>\r\n                <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                    columns={columns}\r\n                    data={getListaParametros.params}\r\n                    noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                    striped\r\n                />\r\n            </div>\r\n            <div className='col-md-12 mt-2 mb-2'>\r\n                <label htmlFor=\"documento_ruta\">Descargar documento pre-diligenciado con los valores seleccionados </label>\r\n                <button type=\"button\" title='Descargar documento diligenciado' onClick={() => descargarArchivo()} className=\"btn btn-primary ml-2\"> <i className=\"fas fa-file-word\"></i></button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ActuacionParametrosPlantillaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}