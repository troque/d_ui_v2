{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\LogSistema\\\\LogEtapaLista.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useLocation } from 'react-router-dom';\nimport LogApi from '../Api/Services/LogApi';\nimport moment from 'moment';\nimport { Link } from \"react-router-dom\";\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LogEtapaLista() {\n  _s();\n\n  const [errorApi, setErrorApi] = useState('');\n  const [getSeach, setSeach] = useState('');\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const [getRespuestaLog, setRespuestaLog] = useState(false);\n  const [getLogLista, setLogLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [perPage, setPerPage] = useState(10);\n  const [pageActual, setPageActual] = useState(1);\n  const columns = [{\n    name: 'Etapa',\n    selector: log => log.attributes.etapa.nombre,\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Fecha',\n    cell: log => log.attributes.created_at,\n    sortable: true,\n    width: \"10%\"\n  }, {\n    name: 'Funcionario Registra',\n    cell: log => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [log.attributes.funcionario_registra.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 73\n      }, this), log.attributes.dependencia_origen.nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 26\n    }, this),\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Funcionario Actual',\n    cell: log => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [log.attributes.funcionario_actual.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 71\n      }, this), log.attributes.dep_funcionario_actual.nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 26\n    }, this),\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Descripción',\n    selector: log => log.attributes.descripcion,\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Estado Etapa',\n    selector: log => log.attributes.estado_etapa.nombre,\n    sortable: true,\n    width: \"15%\"\n  }]; ///////////////////////////////////////////////////////////\n  /////////////////// PARA LA BÚSQUEDA //////////////////////\n  ///////////////////////////////////////////////////////////\n\n  const [getLista, setLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getListaTotal, setListaTotal] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n\n  const handleSearch = event => {\n    try {\n      if (event.target.value.trim().trim() == \"\" || event.target.value.trim().length == 0) {\n        setLista(getListaTotal);\n      } else {\n        var filteredData = {\n          data: getListaTotal.data.filter(suggestion => suggestion.attributes.etapa.nombre.toLowerCase().includes(event.target.value.toLowerCase()))\n        };\n        setLista(filteredData);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  /* */\n\n\n  const handlePageChange = page => {\n    window.showSpinner(true);\n    setPageActual(page);\n    cargarLogProcesoDisciplinario(page, perPage, '1');\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    window.showSpinner(true);\n    setPerPage(newPerPage);\n    setPageActual(page);\n    cargarLogProcesoDisciplinario(page, newPerPage, '1');\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      cargarLogProcesoDisciplinario(1, 10, \"1\");\n    }\n\n    fetchData();\n  }, []);\n\n  const cargarLogProcesoDisciplinario = (page, perPage, estado) => {\n    const data = {\n      \"data\": {\n        \"type\": \"log_etapa\",\n        \"attributes\": {\n          \"descripcion\": \"descripcion\",\n          \"id_etapa\": \"fecha_registro\",\n          \"id_fase\": \"id_dependencia\",\n          \"id_proceso_disciplinario\": \"id_proceso_disciplinario\",\n          \"id_tipo_log\": \"id_tipo_log\",\n          \"id_estado\": \"id_estado\",\n          \"created_user\": \"created_user\",\n          \"id_dependencia_origen\": \"id_dependencia_origen\",\n          'per_page': perPage,\n          'current_page': page\n        }\n      }\n    };\n    LogApi.getLogEtapaProcesoDisciplinario(data, procesoDisciplinarioId).then(datos => !datos.error ? (setLogLista(datos), setRespuestaLog(true)) : window.showModal(1));\n  };\n\n  const listaLog = () => {\n    if (getLogLista.data != null && typeof getLogLista.data != 'undefined') {\n      return getLogLista.data.map((log, i) => {\n        return cargarLog(log, i);\n      });\n    } else {\n      return getLogLista.map((log, i) => {\n        return cargarLog(log, i);\n      });\n    }\n  };\n\n  const cargarLog = (log, i) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.etapa ? log.attributes.etapa.nombre : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [log.attributes.funcionario_registra ? log.attributes.funcionario_registra.name : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 112\n          }, this), log.attributes.dependencia_origen ? log.attributes.dependencia_origen.nombre : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [log.attributes.funcionario_actual ? log.attributes.funcionario_actual.name : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 108\n          }, this), log.attributes.dep_funcionario_actual ? log.attributes.dep_funcionario_actual.nombre : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: log.attributes.estado_etapa ? log.attributes.estado_etapa.nombre : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block block-themed\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"block-title\",\n            children: \"Log Proceso disciplinario :: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group \",\n                children: /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"text\",\n                  id: \"search\",\n                  value: getSeach,\n                  onChange: e => setSeach(e.target.value),\n                  onKeyPress: e => {\n                    e.key === 'Enter' && e.preventDefault();\n                  },\n                  name: \"search\",\n                  className: \"form-control border border-success\",\n                  placeholder: \"Buscar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12 mt-2 mb-2\",\n              children: /*#__PURE__*/_jsxDEV(DataTable, {\n                className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                columns: columns,\n                data: getLogLista.data.filter(suggestion => {\n                  if (getSeach === \"\") {\n                    return suggestion;\n                  } else if ((suggestion.attributes.descripcion + suggestion.attributes.nombre_completo + suggestion.attributes.nombre_dependencia + suggestion.attributes.fecha_creado + suggestion.attributes.etapa.nombre + suggestion.attributes.estado + suggestion.attributes.fecha_registro).toLowerCase().includes(getSeach.toLowerCase())) {\n                    return suggestion;\n                  }\n                }),\n                perPage: perPage,\n                page: pageActual,\n                pagination: true,\n                noDataComponent: \"Sin datos\",\n                paginationServer: true,\n                paginationTotalRows: getLogLista.meta ? getLogLista.meta.total : 1,\n                onChangePage: handlePageChange,\n                onChangeRowsPerPage: handlePerRowsChange,\n                defaultSortFieldId: \"Nombre\",\n                striped: true,\n                icon: true,\n                paginationComponentOptions: {\n                  rowsPerPageText: 'Filas por página'\n                },\n                defaultSortAsc: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(LogEtapaLista, \"Qy61QQS5U3PHbu7P+tj5DMXppJM=\", false, function () {\n  return [useLocation];\n});\n\n_c = LogEtapaLista;\nexport default LogEtapaLista;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogEtapaLista\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/LogSistema/LogEtapaLista.js"],"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","useLocation","LogApi","moment","Link","DataTable","LogEtapaLista","errorApi","setErrorApi","getSeach","setSeach","location","from","state","radicado","procesoDisciplinarioId","getRespuestaLog","setRespuestaLog","getLogLista","setLogLista","data","links","meta","perPage","setPerPage","pageActual","setPageActual","columns","name","selector","log","attributes","etapa","nombre","sortable","width","cell","created_at","funcionario_registra","dependencia_origen","funcionario_actual","dep_funcionario_actual","descripcion","estado_etapa","getLista","setLista","getListaTotal","setListaTotal","handleSearch","event","target","value","trim","length","filteredData","filter","suggestion","toLowerCase","includes","error","console","handlePageChange","page","window","showSpinner","cargarLogProcesoDisciplinario","handlePerRowsChange","newPerPage","fetchData","estado","getLogEtapaProcesoDisciplinario","then","datos","showModal","listaLog","map","i","cargarLog","e","key","preventDefault","nombre_completo","nombre_dependencia","fecha_creado","fecha_registro","total","rowsPerPageText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,QAAlD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AAGrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,QAAX,IAAuBd,QAAQ,CAAC,EAAD,CAArC;AACA,QAAMe,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAWD,QAAQ,CAACE,KAA1B;AACA,MAAIC,QAAQ,GAAGF,IAAI,CAACE,QAApB;AACA,MAAIC,sBAAsB,GAAGH,IAAI,CAACG,sBAAlC;AAEA,QAAM,CAACC,eAAD,EAAkBC,eAAlB,IAAqCrB,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAACsB,WAAD,EAAcC,WAAd,IAA6BvB,QAAQ,CAAC;AAAEwB,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAAD,CAA3C;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC6B,UAAD,EAAaC,aAAb,IAA8B9B,QAAQ,CAAC,CAAD,CAA5C;AAGA,QAAM+B,OAAO,GAAG,CAEZ;AACIC,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAeC,KAAf,CAAqBC,MAF1C;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAFY,EASZ;AACIP,IAAAA,IAAI,EAAE,OADV;AAEIQ,IAAAA,IAAI,EAAEN,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAeM,UAFhC;AAGIH,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,KAAK,EAAE;AAJX,GATY,EAgBZ;AACIP,IAAAA,IAAI,EAAE,sBADV;AAGIQ,IAAAA,IAAI,EAAEN,GAAG,iBAAI;AAAA,iBAAMA,GAAG,CAACC,UAAJ,CAAeO,oBAAf,CAAoCV,IAA1C,eAA+C;AAAA;AAAA;AAAA;AAAA,cAA/C,EACRE,GAAG,CAACC,UAAJ,CAAeQ,kBAAf,CAAkCN,MAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHjB;AAKIC,IAAAA,QAAQ,EAAE,IALd;AAMIC,IAAAA,KAAK,EAAE;AANX,GAhBY,EAyBZ;AACIP,IAAAA,IAAI,EAAE,oBADV;AAGIQ,IAAAA,IAAI,EAAEN,GAAG,iBAAI;AAAA,iBAAMA,GAAG,CAACC,UAAJ,CAAeS,kBAAf,CAAkCZ,IAAxC,eAA6C;AAAA;AAAA;AAAA;AAAA,cAA7C,EACRE,GAAG,CAACC,UAAJ,CAAeU,sBAAf,CAAsCR,MAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHjB;AAKIC,IAAAA,QAAQ,EAAE,IALd;AAMIC,IAAAA,KAAK,EAAE;AANX,GAzBY,EAkCZ;AACIP,IAAAA,IAAI,EAAE,aADV;AAEIC,IAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAeW,WAFpC;AAGIR,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAlCY,EAwCZ;AACIP,IAAAA,IAAI,EAAE,cADV;AAEIC,IAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAeY,YAAf,CAA4BV,MAFjD;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAxCY,CAAhB,CAjBqB,CAkErB;AACA;AACA;;AAEA,QAAM,CAACS,QAAD,EAAWC,QAAX,IAAuBjD,QAAQ,CAAC;AAAEwB,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAAD,CAArC;AACA,QAAM,CAACwB,aAAD,EAAgBC,aAAhB,IAAiCnD,QAAQ,CAAC;AAAEwB,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAAD,CAA/C;;AAEA,QAAM0B,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAI;AACA,UAAKA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BA,IAA1B,MAAoC,EAArC,IAA6CH,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,IAAoC,CAArF,EAAyF;AAErFR,QAAAA,QAAQ,CAACC,aAAD,CAAR;AACH,OAHD,MAIK;AACD,YAAIQ,YAAY,GAAG;AACflC,UAAAA,IAAI,EAAE0B,aAAa,CAAC1B,IAAd,CAAmBmC,MAAnB,CACFC,UAAU,IAAMA,UAAU,CAACzB,UAAX,CAAsBC,KAAtB,CAA4BC,MAA7B,CAAqCwB,WAArC,GAAmDC,QAAnD,CAA4DT,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBM,WAAnB,EAA5D,CADb;AADS,SAAnB;AAKAZ,QAAAA,QAAQ,CAACS,YAAD,CAAR;AACH;AACJ,KAbD,CAaE,OAAOK,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AAEJ,GAlBD;AAsBA;;;AAEA,QAAME,gBAAgB,GAAGC,IAAI,IAAI;AAC7BC,IAAAA,MAAM,CAACC,WAAP,CAAmB,IAAnB;AACAtC,IAAAA,aAAa,CAACoC,IAAD,CAAb;AACAG,IAAAA,6BAA6B,CAACH,IAAD,EAAOvC,OAAP,EAAgB,GAAhB,CAA7B;AACH,GAJD;;AAMA,QAAM2C,mBAAmB,GAAG,OAAOC,UAAP,EAAmBL,IAAnB,KAA4B;AACpDC,IAAAA,MAAM,CAACC,WAAP,CAAmB,IAAnB;AACAxC,IAAAA,UAAU,CAAC2C,UAAD,CAAV;AACAzC,IAAAA,aAAa,CAACoC,IAAD,CAAb;AACAG,IAAAA,6BAA6B,CAACH,IAAD,EAAOK,UAAP,EAAmB,GAAnB,CAA7B;AAEH,GAND;;AAUAxE,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeyE,SAAf,GAA2B;AAEvBH,MAAAA,6BAA6B,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,CAA7B;AAEH;;AACDG,IAAAA,SAAS;AACZ,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMH,6BAA6B,GAAG,CAACH,IAAD,EAAOvC,OAAP,EAAgB8C,MAAhB,KAA2B;AAE7D,UAAMjD,IAAI,GAAG;AACT,cAAQ;AACJ,gBAAQ,WADJ;AAEJ,sBAAc;AACV,yBAAe,aADL;AAEV,sBAAY,gBAFF;AAGV,qBAAW,gBAHD;AAIV,sCAA4B,0BAJlB;AAKV,yBAAe,aALL;AAMV,uBAAa,WANH;AAOV,0BAAgB,cAPN;AAQV,mCAAyB,uBARf;AASV,sBAAYG,OATF;AAUV,0BAAgBuC;AAVN;AAFV;AADC,KAAb;AAkBA5D,IAAAA,MAAM,CAACoE,+BAAP,CAAuClD,IAAvC,EAA6CL,sBAA7C,EAAqEwD,IAArE,CACIC,KAAK,IAAI,CAACA,KAAK,CAACb,KAAP,IAAgBxC,WAAW,CAACqD,KAAD,CAAX,EAAoBvD,eAAe,CAAC,IAAD,CAAnD,IAA6D8C,MAAM,CAACU,SAAP,CAAiB,CAAjB,CAD1E;AAMH,GA1BD;;AA4BA,QAAMC,QAAQ,GAAG,MAAM;AAEnB,QAAIxD,WAAW,CAACE,IAAZ,IAAoB,IAApB,IAA4B,OAAQF,WAAW,CAACE,IAApB,IAA6B,WAA7D,EAA0E;AACtE,aAEIF,WAAW,CAACE,IAAZ,CAAiBuD,GAAjB,CAAqB,CAAC7C,GAAD,EAAM8C,CAAN,KAAY;AAC7B,eACIC,SAAS,CAAC/C,GAAD,EAAM8C,CAAN,CADb;AAGH,OAJD,CAFJ;AAQH,KATD,MAUK;AACD,aAEI1D,WAAW,CAACyD,GAAZ,CAAgB,CAAC7C,GAAD,EAAM8C,CAAN,KAAY;AACxB,eACIC,SAAS,CAAC/C,GAAD,EAAM8C,CAAN,CADb;AAGH,OAJD,CAFJ;AAQH;AACJ,GAtBD;;AAwBA,QAAMC,SAAS,GAAG,CAAC/C,GAAD,EAAM8C,CAAN,KAAY;AAE1B,wBACI;AAAA,6BAEI;AAAA,gCACI;AAAA,oBACM9C,GAAG,CAACC,UAAJ,CAAeC,KAAf,GAAuBF,GAAG,CAACC,UAAJ,CAAeC,KAAf,CAAqBC,MAA5C,GAAqD;AAD3D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,oBACKH,GAAG,CAACC,UAAJ,CAAeM;AADpB;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAA,qBACMP,GAAG,CAACC,UAAJ,CAAeO,oBAAf,GAAsCR,GAAG,CAACC,UAAJ,CAAeO,oBAAf,CAAoCV,IAA1E,GAAiF,EADvF,eAC2F;AAAA;AAAA;AAAA;AAAA,kBAD3F,EAEME,GAAG,CAACC,UAAJ,CAAeQ,kBAAf,GAAoCT,GAAG,CAACC,UAAJ,CAAeQ,kBAAf,CAAkCN,MAAtE,GAA+E,EAFrF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAYI;AAAA,qBACMH,GAAG,CAACC,UAAJ,CAAeS,kBAAf,GAAoCV,GAAG,CAACC,UAAJ,CAAeS,kBAAf,CAAkCZ,IAAtE,GAA6E,EADnF,eACuF;AAAA;AAAA;AAAA;AAAA,kBADvF,EAEME,GAAG,CAACC,UAAJ,CAAeU,sBAAf,GAAwCX,GAAG,CAACC,UAAJ,CAAeU,sBAAf,CAAsCR,MAA9E,GAAuF,EAF7F;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAiBI;AAAA,oBACKH,GAAG,CAACC,UAAJ,CAAeW;AADpB;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAqBI;AAAA,oBACMZ,GAAG,CAACC,UAAJ,CAAeY,YAAf,GAA8Bb,GAAG,CAACC,UAAJ,CAAeY,YAAf,CAA4BV,MAA1D,GAAmE;AADzE;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,qBADJ;AAiCH,GAnCD;;AAsCA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCAEI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCAEI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,uCACI,QAAC,KAAD;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,EAAE,EAAC,QAAtB;AAA+B,kBAAA,KAAK,EAAExB,QAAtC;AAAgD,kBAAA,QAAQ,EAAEqE,CAAC,IAAIpE,QAAQ,CAACoE,CAAC,CAAC5B,MAAF,CAASC,KAAV,CAAvE;AAAyF,kBAAA,UAAU,EAAG2B,CAAD,IAAO;AAAEA,oBAAAA,CAAC,CAACC,GAAF,KAAU,OAAV,IAAqBD,CAAC,CAACE,cAAF,EAArB;AAA0C,mBAAxJ;AAA0J,kBAAA,IAAI,EAAC,QAA/J;AAAwK,kBAAA,SAAS,EAAC,oCAAlL;AAAuN,kBAAA,WAAW,EAAC;AAAnO;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAaI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCAEI;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,qCACI,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,oEAArB;AACI,gBAAA,OAAO,EAAErD,OADb;AAEI,gBAAA,IAAI,EAAET,WAAW,CAACE,IAAZ,CAAiBmC,MAAjB,CAAyBC,UAAD,IAAgB;AAC1C,sBAAI/C,QAAQ,KAAK,EAAjB,EAAqB;AACjB,2BAAO+C,UAAP;AACH,mBAFD,MAEO,IAEF,CAACA,UAAU,CAACzB,UAAX,CAAsBW,WAAtB,GACIc,UAAU,CAACzB,UAAX,CAAsBkD,eAD1B,GAC4CzB,UAAU,CAACzB,UAAX,CAAsBmD,kBADlE,GAEE1B,UAAU,CAACzB,UAAX,CAAsBoD,YAFxB,GAEuC3B,UAAU,CAACzB,UAAX,CAAsBC,KAAtB,CAA4BC,MAFnE,GAGEuB,UAAU,CAACzB,UAAX,CAAsBsC,MAHxB,GAGiCb,UAAU,CAACzB,UAAX,CAAsBqD,cAHxD,EAGwE3B,WAHxE,GAGsFC,QAHtF,CAG+FjD,QAAQ,CAACgD,WAAT,EAH/F,CAFE,EAOL;AACE,2BAAOD,UAAP;AACH;AACJ,iBAbK,CAFV;AAgBI,gBAAA,OAAO,EAAEjC,OAhBb;AAiBI,gBAAA,IAAI,EAAEE,UAjBV;AAkBI,gBAAA,UAAU,MAlBd;AAmBI,gBAAA,eAAe,EAAC,WAnBpB;AAoBI,gBAAA,gBAAgB,MApBpB;AAqBI,gBAAA,mBAAmB,EAAEP,WAAW,CAACI,IAAZ,GAAmBJ,WAAW,CAACI,IAAZ,CAAiB+D,KAApC,GAA4C,CArBrE;AAsBI,gBAAA,YAAY,EAAExB,gBAtBlB;AAuBI,gBAAA,mBAAmB,EAAEK,mBAvBzB;AAwBI,gBAAA,kBAAkB,EAAC,QAxBvB;AAyBI,gBAAA,OAAO,MAzBX;AA0BI,gBAAA,IAAI,MA1BR;AA2BI,gBAAA,0BAA0B,EAAE;AAAEoB,kBAAAA,eAAe,EAAE;AAAnB,iBA3BhC;AA4BI,gBAAA,cAAc,EAAE;AA5BpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA6DH;;GAjRQhF,a;UAKYL,W;;;KALZK,a;AAmRT,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useLocation } from 'react-router-dom'\r\nimport LogApi from '../Api/Services/LogApi';\r\nimport moment from 'moment';\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from 'react-data-table-component';\r\n\r\nfunction LogEtapaLista() {\r\n\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getSeach, setSeach] = useState('');\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n    const [getRespuestaLog, setRespuestaLog] = useState(false);\r\n    const [getLogLista, setLogLista] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const [perPage, setPerPage] = useState(10);\r\n    const [pageActual, setPageActual] = useState(1);\r\n\r\n\r\n    const columns = [\r\n\r\n        {\r\n            name: 'Etapa',\r\n            selector: log => log.attributes.etapa.nombre,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n\r\n        {\r\n            name: 'Fecha',\r\n            cell: log => log.attributes.created_at,\r\n            sortable: true,\r\n            width: \"10%\"\r\n        },\r\n\r\n        {\r\n            name: 'Funcionario Registra',\r\n\r\n            cell: log => <div>{log.attributes.funcionario_registra.name}<br />\r\n                {log.attributes.dependencia_origen.nombre}</div>,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n\r\n        {\r\n            name: 'Funcionario Actual',\r\n\r\n            cell: log => <div>{log.attributes.funcionario_actual.name}<br />\r\n                {log.attributes.dep_funcionario_actual.nombre}</div>,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n\r\n        {\r\n            name: 'Descripción',\r\n            selector: log => log.attributes.descripcion,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            name: 'Estado Etapa',\r\n            selector: log => log.attributes.estado_etapa.nombre,\r\n            sortable: true,\r\n            width: \"15%\",\r\n        }\r\n    ];\r\n\r\n\r\n    ///////////////////////////////////////////////////////////\r\n    /////////////////// PARA LA BÚSQUEDA //////////////////////\r\n    ///////////////////////////////////////////////////////////\r\n\r\n    const [getLista, setLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getListaTotal, setListaTotal] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const handleSearch = (event) => {\r\n        try {\r\n            if ((event.target.value.trim().trim() == \"\") || (event.target.value.trim().length == 0)) {\r\n\r\n                setLista(getListaTotal);\r\n            }\r\n            else {\r\n                var filteredData = {\r\n                    data: getListaTotal.data.filter(\r\n                        suggestion => ((suggestion.attributes.etapa.nombre).toLowerCase().includes(event.target.value.toLowerCase()))\r\n                    )\r\n                };\r\n                setLista(filteredData)\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    /* */\r\n\r\n    const handlePageChange = page => {\r\n        window.showSpinner(true);\r\n        setPageActual(page);\r\n        cargarLogProcesoDisciplinario(page, perPage, '1');\r\n    }\r\n\r\n    const handlePerRowsChange = async (newPerPage, page) => {\r\n        window.showSpinner(true);\r\n        setPerPage(newPerPage);\r\n        setPageActual(page);\r\n        cargarLogProcesoDisciplinario(page, newPerPage, '1');\r\n\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            cargarLogProcesoDisciplinario(1, 10, \"1\")\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const cargarLogProcesoDisciplinario = (page, perPage, estado) => {\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"log_etapa\",\r\n                \"attributes\": {\r\n                    \"descripcion\": \"descripcion\",\r\n                    \"id_etapa\": \"fecha_registro\",\r\n                    \"id_fase\": \"id_dependencia\",\r\n                    \"id_proceso_disciplinario\": \"id_proceso_disciplinario\",\r\n                    \"id_tipo_log\": \"id_tipo_log\",\r\n                    \"id_estado\": \"id_estado\",\r\n                    \"created_user\": \"created_user\",\r\n                    \"id_dependencia_origen\": \"id_dependencia_origen\",\r\n                    'per_page': perPage,\r\n                    'current_page': page\r\n                }\r\n            }\r\n        }\r\n\r\n        LogApi.getLogEtapaProcesoDisciplinario(data, procesoDisciplinarioId).then(\r\n            datos => !datos.error ? (setLogLista(datos), setRespuestaLog(true)) : window.showModal(1)\r\n        )\r\n\r\n\r\n\r\n    }\r\n\r\n    const listaLog = () => {\r\n\r\n        if (getLogLista.data != null && typeof (getLogLista.data) != 'undefined') {\r\n            return (\r\n\r\n                getLogLista.data.map((log, i) => {\r\n                    return (\r\n                        cargarLog(log, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                getLogLista.map((log, i) => {\r\n                    return (\r\n                        cargarLog(log, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    const cargarLog = (log, i) => {\r\n\r\n        return (\r\n            <>\r\n\r\n                <tr>\r\n                    <td>\r\n                        {(log.attributes.etapa ? log.attributes.etapa.nombre : \"\")}\r\n                    </td>\r\n                    <td>\r\n                        {log.attributes.created_at}\r\n                    </td>\r\n                    <td>\r\n                        {(log.attributes.funcionario_registra ? log.attributes.funcionario_registra.name : \"\")}<br />\r\n                        {(log.attributes.dependencia_origen ? log.attributes.dependencia_origen.nombre : \"\")}\r\n                    </td>\r\n\r\n                    <td>\r\n                        {(log.attributes.funcionario_actual ? log.attributes.funcionario_actual.name : \"\")}<br />\r\n                        {(log.attributes.dep_funcionario_actual ? log.attributes.dep_funcionario_actual.nombre : \"\")}\r\n                    </td>\r\n\r\n                    <td>\r\n                        {log.attributes.descripcion}\r\n                    </td>\r\n\r\n                    <td>\r\n                        {(log.attributes.estado_etapa ? log.attributes.estado_etapa.nombre : \"\")}\r\n                    </td>\r\n                </tr>\r\n\r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Formik>\r\n                <div className=\"block block-themed\">\r\n                    <div className=\"block-header\">\r\n                        <h3 className=\"block-title\">Log Proceso disciplinario :: </h3>\r\n                    </div>\r\n                    <div className=\"block-content\">\r\n\r\n                        <div className='row'>\r\n\r\n                            <div className='col-md-3'>\r\n                                <div className=\"form-group \">\r\n                                    <Field type=\"text\" id=\"search\" value={getSeach} onChange={e => setSeach(e.target.value)} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} name=\"search\" className=\"form-control border border-success\" placeholder=\"Buscar\" />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className='col-md-12'>\r\n\r\n                            <div className='col-md-12 mt-2 mb-2'>\r\n                                <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                    columns={columns}\r\n                                    data={getLogLista.data.filter((suggestion) => {\r\n                                        if (getSeach === \"\") {\r\n                                            return suggestion;\r\n                                        } else if (\r\n\r\n                                            ((suggestion.attributes.descripcion\r\n                                                + suggestion.attributes.nombre_completo + suggestion.attributes.nombre_dependencia +\r\n                                                suggestion.attributes.fecha_creado + suggestion.attributes.etapa.nombre +\r\n                                                suggestion.attributes.estado + suggestion.attributes.fecha_registro).toLowerCase().includes(getSeach.toLowerCase()))\r\n\r\n                                        ) {\r\n                                            return suggestion;\r\n                                        }\r\n                                    })}\r\n                                    perPage={perPage}\r\n                                    page={pageActual}\r\n                                    pagination\r\n                                    noDataComponent=\"Sin datos\"\r\n                                    paginationServer\r\n                                    paginationTotalRows={getLogLista.meta ? getLogLista.meta.total : 1}\r\n                                    onChangePage={handlePageChange}\r\n                                    onChangeRowsPerPage={handlePerRowsChange}\r\n                                    defaultSortFieldId=\"Nombre\"\r\n                                    striped\r\n                                    icon\r\n                                    paginationComponentOptions={{ rowsPerPageText: 'Filas por página' }}\r\n                                    defaultSortAsc={false}\r\n                                />\r\n                            </div>\r\n                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LogEtapaLista;"]},"metadata":{},"sourceType":"module"}