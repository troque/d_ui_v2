{"ast":null,"code":"/**\n * response.js\n *\n * Response class provides content decoding\n */\n\nvar http = require('http');\nvar Headers = require('./headers');\nvar Body = require('./body');\nmodule.exports = Response;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Response(body, opts) {\n  opts = opts || {};\n  this.url = opts.url;\n  this.status = opts.status || 200;\n  this.statusText = opts.statusText || http.STATUS_CODES[this.status];\n  this.headers = new Headers(opts.headers);\n  this.ok = this.status >= 200 && this.status < 300;\n  Body.call(this, body, opts);\n}\nResponse.prototype = Object.create(Body.prototype);\n\n/**\n * Clone this response\n *\n * @return  Response\n */\nResponse.prototype.clone = function () {\n  return new Response(this._clone(this), {\n    url: this.url,\n    status: this.status,\n    statusText: this.statusText,\n    headers: this.headers,\n    ok: this.ok\n  });\n};","map":{"version":3,"names":["http","require","Headers","Body","module","exports","Response","body","opts","url","status","statusText","STATUS_CODES","headers","ok","call","prototype","Object","create","clone","_clone"],"sources":["C:/w2d/personeria/personeria-ui/node_modules/node-fetch/lib/response.js"],"sourcesContent":["\n/**\n * response.js\n *\n * Response class provides content decoding\n */\n\nvar http = require('http');\nvar Headers = require('./headers');\nvar Body = require('./body');\n\nmodule.exports = Response;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Response(body, opts) {\n\n\topts = opts || {};\n\n\tthis.url = opts.url;\n\tthis.status = opts.status || 200;\n\tthis.statusText = opts.statusText || http.STATUS_CODES[this.status];\n\tthis.headers = new Headers(opts.headers);\n\tthis.ok = this.status >= 200 && this.status < 300;\n\n\tBody.call(this, body, opts);\n\n}\n\nResponse.prototype = Object.create(Body.prototype);\n\n/**\n * Clone this response\n *\n * @return  Response\n */\nResponse.prototype.clone = function() {\n\treturn new Response(this._clone(this), {\n\t\turl: this.url\n\t\t, status: this.status\n\t\t, statusText: this.statusText\n\t\t, headers: this.headers\n\t\t, ok: this.ok\n\t});\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;AAClC,IAAIE,IAAI,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAE5BG,MAAM,CAACC,OAAO,GAAGC,QAAQ;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQ,CAACC,IAAI,EAAEC,IAAI,EAAE;EAE7BA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EAEjB,IAAI,CAACC,GAAG,GAAGD,IAAI,CAACC,GAAG;EACnB,IAAI,CAACC,MAAM,GAAGF,IAAI,CAACE,MAAM,IAAI,GAAG;EAChC,IAAI,CAACC,UAAU,GAAGH,IAAI,CAACG,UAAU,IAAIX,IAAI,CAACY,YAAY,CAAC,IAAI,CAACF,MAAM,CAAC;EACnE,IAAI,CAACG,OAAO,GAAG,IAAIX,OAAO,CAACM,IAAI,CAACK,OAAO,CAAC;EACxC,IAAI,CAACC,EAAE,GAAG,IAAI,CAACJ,MAAM,IAAI,GAAG,IAAI,IAAI,CAACA,MAAM,GAAG,GAAG;EAEjDP,IAAI,CAACY,IAAI,CAAC,IAAI,EAAER,IAAI,EAAEC,IAAI,CAAC;AAE5B;AAEAF,QAAQ,CAACU,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACf,IAAI,CAACa,SAAS,CAAC;;AAElD;AACA;AACA;AACA;AACA;AACAV,QAAQ,CAACU,SAAS,CAACG,KAAK,GAAG,YAAW;EACrC,OAAO,IAAIb,QAAQ,CAAC,IAAI,CAACc,MAAM,CAAC,IAAI,CAAC,EAAE;IACtCX,GAAG,EAAE,IAAI,CAACA,GAAG;IACXC,MAAM,EAAE,IAAI,CAACA,MAAM;IACnBC,UAAU,EAAE,IAAI,CAACA,UAAU;IAC3BE,OAAO,EAAE,IAAI,CAACA,OAAO;IACrBC,EAAE,EAAE,IAAI,CAACA;EACZ,CAAC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}