{"ast":null,"code":"import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{ErrorMessage,Field,Form,Formik}from'formik';import{Link}from\"react-router-dom\";import'react-datetime/css/react-datetime.css';import'moment/locale/es';import{getUser}from'../../../components/Utils/Common';import{useLocation}from'react-router-dom';import DatePerson from\"../../DatePerson/DatePerson\";import'../../Utils/Constants';import ModalGen from'../../Utils/Modals/ModalGeneric';import GenericApi from'../../Api/Services/GenericApi';import Spinner from'../../Utils/Spinner';import{set}from'react-hook-form';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ClasificacionRadicado(props){var _useState=useState({title:\"\",message:\"\",show:false}),_useState2=_slicedToArray(_useState,2),getModalState=_useState2[0],setModalState=_useState2[1];var _useState3=useState({data:{}}),_useState4=_slicedToArray(_useState3,2),listaTipoExpediente=_useState4[0],setListaTipoExpediente=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),respuestaTipoExpediente=_useState6[0],setRespuestaTipoExpediente=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),selectedTipoExpediente=_useState8[0],setSelectedTipoExpediente=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),countTextArea=_useState10[0],setCountTextArea=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),getMaximoTextArea=_useState12[0],setMaximoTextArea=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),getMinimoTextArea=_useState14[0],setMinimoTextArea=_useState14[1];var _useState15=useState({data:{}}),_useState16=_slicedToArray(_useState15,2),listaTipoDerechoPeticion=_useState16[0],setListaDerechoPeticion=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),selectedTipoDerechoPeticion=_useState18[0],setSelectedDerechoPeticion=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),respuestaTipoDerechoPeticion=_useState20[0],setRespuestaDerechoPeticion=_useState20[1];var _useState21=useState({data:{}}),_useState22=_slicedToArray(_useState21,2),listaTipoRespuesta=_useState22[0],setListaTipoRespuesta=_useState22[1];var _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),selectedTipoRespuesta=_useState24[0],setSelectedTipoRespuesta=_useState24[1];var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),respuestaTipoRespuesta=_useState26[0],setRespuestaTipoRespuesta=_useState26[1];var _useState27=useState({data:{}}),_useState28=_slicedToArray(_useState27,2),listaTerminosRespuesta=_useState28[0],setListaTerminosRespuesta=_useState28[1];var _useState29=useState(\"\"),_useState30=_slicedToArray(_useState29,2),selectedTerminosRespuesta=_useState30[0],setSelectedTerminosRespuesta=_useState30[1];var _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),respuestaTerminosRespuesta=_useState32[0],setRespuestaTerminosRespuesta=_useState32[1];var _useState33=useState({data:{}}),_useState34=_slicedToArray(_useState33,2),listaTiposQueja=_useState34[0],setListaTiposQueja=_useState34[1];var _useState35=useState(\"\"),_useState36=_slicedToArray(_useState35,2),selectedTiposQueja=_useState36[0],setSelectedTiposQueja=_useState36[1];var _useState37=useState(false),_useState38=_slicedToArray(_useState37,2),respuestaTiposQueja=_useState38[0],setRespuestaTiposQueja=_useState38[1];var _useState39=useState(null),_useState40=_slicedToArray(_useState39,2),fechaTermino=_useState40[0],setFechaTermino=_useState40[1];var _useState41=useState([]),_useState42=_slicedToArray(_useState41,2),resultDiasNoLaborales=_useState42[0],setResultDiasNoLaborales=_useState42[1];var _useState43=useState(\"\"),_useState44=_slicedToArray(_useState43,2),getNombreUsuario=_useState44[0],setNombreUsuario=_useState44[1];var _useState45=useState(\"\"),_useState46=_slicedToArray(_useState45,2),getNombreRol=_useState46[0],setNombreRol=_useState46[1];var _useState47=useState(0),_useState48=_slicedToArray(_useState47,2),getAnosAtrasInvalidos=_useState48[0],setAnosAtrasInvalidos=_useState48[1];var _useState49=useState(\"\"),_useState50=_slicedToArray(_useState49,2),getAlerta=_useState50[0],setAlerta=_useState50[1];var _useState51=useState(\"\"),_useState52=_slicedToArray(_useState51,2),getMensajeAlerta=_useState52[0],setMensajeAlerta=_useState52[1];var _useState53=useState(''),_useState54=_slicedToArray(_useState53,2),getNombreProceso=_useState54[0],setNombreProceso=_useState54[1];var location=useLocation();var from=location.state.from;var procesoDisciplinarioId=from.procesoDisciplinarioId;var radicado=from.radicado;var id_etapa=from.id_etapa;/**\r\n     * Validación de los caracteres especiales en los campos de texto\r\n     * @param {*} str \r\n     * @returns \r\n     */function containsSpecialChars(str){var result=global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(function(specialChar){if(str.includes(specialChar)){return true;}return false;});return result;}/**\r\n     * Funcion principal\r\n     */useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setNombreUsuario(getUser().nombre);setNombreRol(getUser().roles);getApiTipoRespuesta();nombreProceso();case 4:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[]);var getApiTipoRespuesta=function getApiTipoRespuesta(){window.showSpinner(true);GenericApi.getGeneric(\"tipo-respuesta\").then(function(datos){if(!datos.error){setListaTipoRespuesta(datos);setRespuestaTipoRespuesta(true);getApiTipoExpediente();}else{setModalState({title:getNombreProceso+\" :: Clasificación del radicado\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);}});};var getApiTipoExpediente=function getApiTipoExpediente(){GenericApi.getGeneric(\"proceso-disciplinario/tipo-expdiente/\"+procesoDisciplinarioId).then(function(datos){if(!datos.error){setListaTipoExpediente(datos);setRespuestaTipoExpediente(true);getApiTipoDerechoPeticion();}else{setModalState({title:getNombreProceso+\" :: Clasificación del radicado\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);}});};var getApiTipoDerechoPeticion=function getApiTipoDerechoPeticion(){GenericApi.getGeneric(\"lista-tipo-derecho-peticion/\"+procesoDisciplinarioId).then(function(datos){if(!datos.error){setListaDerechoPeticion(datos);setRespuestaDerechoPeticion(true);getApiTerminosRespuesta();}else{setModalState({title:getNombreProceso+\" :: Clasificación del radicado\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);}});};var getApiTerminosRespuesta=function getApiTerminosRespuesta(){GenericApi.getGeneric(\"lista-terminos-respuesta/\"+procesoDisciplinarioId).then(function(datos){if(!datos.error){setListaTerminosRespuesta(datos);setRespuestaTerminosRespuesta(true);getApiTipoQueja();}else{setModalState({title:getNombreProceso+\" :: Clasificación del radicado\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);}});};var getApiTipoQueja=function getApiTipoQueja(){GenericApi.getGeneric(\"lista-tipo-queja/\"+procesoDisciplinarioId).then(function(datos){if(!datos.error){setListaTiposQueja(datos);setRespuestaTiposQueja(true);getApiDiasNoLaborales();}else{setModalState({title:getNombreProceso+\" :: Clasificación del radicado\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);}});};var getApiDiasNoLaborales=function getApiDiasNoLaborales(){GenericApi.getGeneric(\"dias-no-laborales?estado=1\").then(function(datos){if(!datos.error){var data=[];for(var i in datos.data){var date=datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];var result=new Date(date);result.setDate(result.getDate()+1);data.push(i,date);}setResultDiasNoLaborales(data);obtenerParametros();//console.log(resultDiasNoLaborales);\n}else{setModalState({title:getNombreProceso+\" :: Clasificación del radicado\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoForm',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);}});};/**\r\n     * Funcion que obtiene información de las parámetricas.\r\n     * Ejm: número máximo y mínimo de caracteres \r\n     */var obtenerParametros=function obtenerParametros(){try{var data={\"data\":{\"type\":'mas_parametro',\"attributes\":{\"nombre\":\"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"}}};//buscamos el parametro\nGenericApi.getByDataGeneric(\"parametro/parametro-nombre\",data).then(function(datos){if(!datos.error){if(datos[\"data\"].length>0){datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('limite_años_calendario');}).map(function(filteredName){return setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"]);});datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea');}).map(function(filteredName){return setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]);});datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea');}).map(function(filteredName){return setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]);});}}else{setModalState({title:getNombreProceso+\" :: Clasificación del radicado\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoForm',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}window.showSpinner(false);});}catch(error){// console.log(error);\nwindow.showSpinner(false);}};var nombreProceso=function nombreProceso(){GenericApi.getByIdGeneric(\"nombre-proceso\",procesoDisciplinarioId).then(function(datos){if(!datos.error){setNombreProceso(datos.data.attributes.nombre);}});};var disableCustomDt=function disableCustomDt(current){return!resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));};var selectChangeTipoRespuesta=function selectChangeTipoRespuesta(e){setSelectedTipoRespuesta(e);};var selectChangeTipoExpediente=function selectChangeTipoExpediente(e){setCountTextArea(0);setSelectedTipoExpediente(e);};var selectChangeTipoDerechoPeticion=function selectChangeTipoDerechoPeticion(tipo_expediente,e){setCountTextArea(0);setSelectedDerechoPeticion(e);// Se consume la api del mensaje\ngetApiMasTipoMensajesExpedientes(tipo_expediente,e);};var selectChangeTerminoRespuesta=function selectChangeTerminoRespuesta(e){setSelectedTerminosRespuesta(e);};var selectChangeTiposQueja=function selectChangeTiposQueja(e){setSelectedTiposQueja(e);};//Componetes\nvar selectTipoRespuesta=function selectTipoRespuesta(){return listaTipoRespuesta.data.map(function(tipo_respuesta,i){return/*#__PURE__*/_jsx(\"option\",{value:tipo_respuesta.id,children:tipo_respuesta.attributes.nombre},tipo_respuesta.id);});};var selectTipoExpediente=function selectTipoExpediente(){return listaTipoExpediente.data.map(function(expediente,i){return/*#__PURE__*/_jsx(\"option\",{value:expediente.id,children:expediente.attributes.nombre},expediente.id);});};var selectTipoDerechoPeticion=function selectTipoDerechoPeticion(){return listaTipoDerechoPeticion.data.map(function(derecho_peticion,i){return/*#__PURE__*/_jsx(\"option\",{value:derecho_peticion.id,children:derecho_peticion.attributes.nombre},derecho_peticion.id);});};var selectTerminosRespuesta=function selectTerminosRespuesta(){return listaTerminosRespuesta.data.map(function(termino_respuesta,i){return/*#__PURE__*/_jsx(\"option\",{value:termino_respuesta.id,children:termino_respuesta.attributes.nombre},termino_respuesta.id);});};var selectTiposQueja=function selectTiposQueja(){return listaTiposQueja.data.map(function(tipo_queja,i){return/*#__PURE__*/_jsx(\"option\",{value:tipo_queja.id,children:tipo_queja.attributes.nombre},tipo_queja.id);});};var enviarDatos=function enviarDatos(datos){window.showSpinner(true);var data;data={\"data\":{\"type\":\"clasificacion_radicado\",\"attributes\":{\"id_proceso_disciplinario\":props.getParametros.id_proceso_disciplinario,\"id_etapa\":props.getParametros.id_etapa,\"id_tipo_expediente\":selectedTipoExpediente,\"observaciones\":datos.observaciones!=null?datos.observaciones:null,\"id_tipo_queja\":datos.tipo_queja,\"id_termino_respuesta\":selectedTerminosRespuesta,\"fecha_termino\":datos.fechaTermino!=null?datos.fechaTermino:null,\"hora_termino\":datos.horasTermino!=null?datos.horasTermino:null,\"gestion_juridica\":datos.gestion_juridica==='true'?true:false,\"estado\":true,\"id_estado_reparto\":2,\"id_tipo_derecho_peticion\":datos.tipo_derecho_peticion,\"oficina_control_interno\":false,\"created_user\":getNombreUsuario,\"reclasificacion\":props.getParametros.reclasificacion}}};GenericApi.addGeneric(\"clasificacion-radicado\",data).then(function(datos){if(!datos.error){from.cambiaColorClasificacionRadicado=\"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";if(props.getParametros.tipo_clasificacion===global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION){if(datos.data.attributes.funcionario_actual.name===getNombreUsuario){setModalState({title:getNombreProceso+\" :: Clasificación del radicado\",message:\"El proceso disciplinario se asigna a: \"+datos.data.attributes.funcionario_actual.nombre+\" \"+datos.data.attributes.funcionario_actual.apellido,show:true,redirect:'/RamasProceso',from:{from:from}});}else{setModalState({title:getNombreProceso+\" :: Re-Clasificación del radicado\",message:\"El proceso disciplinario se asigna a: \"+datos.data.attributes.funcionario_actual.nombre+\" \"+datos.data.attributes.funcionario_actual.apellido,show:true,redirect:'/MisPendientes'});}}else if(props.getParametros.tipo_clasificacion===global.Constants.TIPO_CLASIFICACION.CLASIFICACION){setModalState({title:getNombreProceso+\" :: Clasificación del radicado\",message:\"Registro Exitoso\",show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.EXITO});}}else{setModalState({title:getNombreProceso+\" :: Clasificación del radicado\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoLista',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});window.showSpinner(false);};var handleCallbackFechaTermino=function handleCallbackFechaTermino(childData){try{setFechaTermino(childData);}catch(error){}};// COMPOENENTE TIPO EXPEDIENTE\nvar componenteTipoExpediente=function componenteTipoExpediente(tipo_expediente){// TIPO DE EXPEDIENTE = DERECHO DE PETICION\nif(tipo_expediente===global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"ingresoDerechoPeticion\",children:[\"Tipo de derecho de petici\\xF3n \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-control\",id:\"ingresoDerechoPeticion\",name:\"ingresoDerechoPeticion\",value:selectedTipoDerechoPeticion,onChange:function onChange(e){return selectChangeTipoDerechoPeticion(tipo_expediente,e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Por favor seleccione\"}),respuestaTipoDerechoPeticion?selectTipoDerechoPeticion():null]})]}),componenteTipoDerechoPeticion(tipo_expediente,selectedTipoDerechoPeticion)]});}// TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\nelse if(tipo_expediente===global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{tipo_queja:global.Constants.TIPO_QUEJA.EXTERNA},enableReinitialize:true,validate:function validate(valores){var errores={};return errores;},onSubmit:function onSubmit(valores,_ref){var resetForm=_ref.resetForm;enviarDatos(valores);},children:/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:\"Registrar\"}),/*#__PURE__*/_jsx(Link,{to:\"/ClasificacionRadicadoLista/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:\"Cancelar\"})})]})})})});}// TIPO DE EXPEDIENTE = QUEJA\nelse if(tipo_expediente===global.Constants.TIPOS_EXPEDIENTES.QUEJA){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{tipo_queja:''},enableReinitialize:true,validate:function validate(valores){var errores={};if(!valores.tipo_queja){errores.tipo_queja='Debe seleccionar un tipo de queja';}return errores;},onSubmit:function onSubmit(valores,_ref2){var resetForm=_ref2.resetForm;// console.log(valores);\nenviarDatos(valores);},children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"tipo_queja\",children:[\"Ingrese Tipo de Queja \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Field,{as:\"select\",className:\"form-control\",id:\"tipo_queja\",name:\"tipo_queja\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Por favor seleccione\"}),respuestaTiposQueja?selectTiposQueja():null]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:\"Registrar\"}),/*#__PURE__*/_jsx(Link,{to:\"/ClasificacionRadicadoLista/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:\"Cancelar\"})})]})]})})});}// TIPO DE EXPEDIENTE = TUTELA\nelse if(tipo_expediente===global.Constants.TIPOS_EXPEDIENTES.TUTELA){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"ingresoTipoRtaTutela\",children:[\"Ingrese termino de respuesta \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-control\",id:\"termino_rta\",name:\"termino_rta\",value:selectedTerminosRespuesta,onChange:function onChange(e){return selectChangeTerminoRespuesta(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"{selectedTerminosRespuesta}\",children:\"Por favor seleccione\"}),respuestaTerminosRespuesta?selectTerminosRespuesta():null]}),selectedTerminosRespuesta===global.Constants.TERMINOS_RESPUESTA.DIAS?componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS):'',selectedTerminosRespuesta===global.Constants.TERMINOS_RESPUESTA.HORAS?componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS):'']});}};// Metodo encargado de cargar el mensaje por el tipo de expediente\nvar getApiMasTipoMensajesExpedientes=function getApiMasTipoMensajesExpedientes(idTipoExpediente,idSubTipoExpediente){// Se inicializa la API\nGenericApi.getGeneric(\"mas_tipo_expediente_mensajes/\"+idTipoExpediente+\"/\"+idSubTipoExpediente).then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se captura la informacion en la posicion 0\nvar data=datos.data[0];// Se setea el mensaje \nsetMensajeAlerta(data.attributes.mensaje);}else{// Se setea el modal\nsetModalState({title:getNombreProceso+\" :: Clasificación del radicado\",message:datos.error.toString(),show:true,redirect:'/ClasificacionRadicadoForm',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});};// COMOPNENTE TIPO DERECHO DE PETICION\nvar componenteTipoDerechoPeticion=function componenteTipoDerechoPeticion(tipoExpediente,tipo_derecho_peticion){// TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\nif(tipo_derecho_peticion===global.Constants.DERECHOS_PETICION.COPIAS){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{observaciones:'',gestion_juridica:false,tipo_derecho_peticion:tipo_derecho_peticion},enableReinitialize:true,validate:function validate(valores){var errores={};setCountTextArea(valores.observaciones.length);if(!valores.observaciones){errores.observaciones='Debe diligenciar el campo observaciones';}else if(valores.observaciones.length<=getMinimoTextArea){errores.observaciones='Las observaciones deben tener almenos '+getMinimoTextArea+' caracteres';}if(valores.observaciones){if(containsSpecialChars(valores.observaciones))errores.observaciones='Tiene caracteres inválidos';}return errores;},onSubmit:function onSubmit(valores,_ref3){var resetForm=_ref3.resetForm;enviarDatos(valores);},children:function children(_ref4){var errors=_ref4.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-warning alert-dismissable\",role:\"alert\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"alert-heading font-size-h4 my-2\",children:\"Alerta\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:getMensajeAlerta})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Observaciones \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{as:\"textarea\",className:\"form-control\",id:\"observaciones\",name:\"observaciones\",rows:\"4\",placeholder:\"Escriba en este espacio las observaciones\",maxLength:getMaximoTextArea,minLength:getMinimoTextArea}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-primary\",children:[countTextArea,\" / \",getMaximoTextArea]})}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"observaciones\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.observaciones});}})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:\"Registrar\"}),/*#__PURE__*/_jsx(Link,{to:\"/ClasificacionRadicadoLista/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:\"Cancelar\"})})]})]});}})});}// TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\nelse if(tipo_derecho_peticion===global.Constants.DERECHOS_PETICION.GENERAL){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{observaciones:'',gestion_juridica:false,tipo_derecho_peticion:tipo_derecho_peticion},enableReinitialize:true,validate:function validate(valores){var errores={};setCountTextArea(valores.observaciones.length);if(!valores.observaciones){errores.observaciones='Debe diligenciar el campo observaciones';}else if(valores.observaciones.length<=getMinimoTextArea){errores.observaciones='Las observaciones deben tener almenos '+getMinimoTextArea+' caracteres';}if(valores.observaciones){if(containsSpecialChars(valores.observaciones))errores.observaciones='Tiene caracteres inválidos';}return errores;},onSubmit:function onSubmit(valores,_ref5){var resetForm=_ref5.resetForm;enviarDatos(valores);},children:function children(_ref6){var errors=_ref6.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-warning alert-dismissable\",role:\"alert\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"alert-heading font-size-h4 my-2\",children:\"Alerta\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:getMensajeAlerta})]}),/*#__PURE__*/_jsx(\"label\",{children:\"Observaciones\"}),\"  \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"}),/*#__PURE__*/_jsx(Field,{as:\"textarea\",className:\"form-control\",id:\"observaciones\",name:\"observaciones\",rows:\"4\",placeholder:\"Escriba en este espacio las observaciones\",maxLength:getMaximoTextArea,minLength:getMinimoTextArea}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-primary\",children:[countTextArea,\" / \",getMaximoTextArea]})}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"observaciones\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.observaciones});}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:\"Registrar\"}),/*#__PURE__*/_jsx(Link,{to:\"/ClasificacionRadicadoLista/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:\"Cancelar\"})})]})]});}})});}// TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\nelse if(tipo_derecho_peticion===global.Constants.DERECHOS_PETICION.ALERTA){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{observaciones:'',gestion_juridica:'',tipo_derecho_peticion:tipo_derecho_peticion},enableReinitialize:true,validate:function validate(valores){var errores={};setCountTextArea(valores.observaciones.length);if(!valores.observaciones){errores.observaciones='Debe diligenciar el campo observaciones';}else if(valores.observaciones.length<=getMinimoTextArea){errores.observaciones='Las observaciones deben tener almenos '+getMinimoTextArea+' caracteres';}if(valores.observaciones){if(containsSpecialChars(valores.observaciones))errores.observaciones='Tiene caracteres inválidos';}if(!valores.gestion_juridica){errores.gestion_juridica='Debe diligenciar el campo gestión juridica';}return errores;},onSubmit:function onSubmit(valores,_ref7){var resetForm=_ref7.resetForm;enviarDatos(valores);},children:function children(_ref8){var errors=_ref8.errors;return/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-warning alert-dismissable\",role:\"alert\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"alert-heading font-size-h4 my-2\",children:\"Alerta\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:getMensajeAlerta})]}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"ingresoTipoExpediente\",children:[\"Requiere gesti\\xF3n juridica \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Field,{as:\"select\",className:\"form-control\",id:\"gestion_juridica\",name:\"gestion_juridica\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Por favor seleccione\"}),/*#__PURE__*/_jsx(\"option\",{value:\"true\",children:\"Si\"}),/*#__PURE__*/_jsx(\"option\",{value:\"false\",children:\"No\"})]}),/*#__PURE__*/_jsx(\"label\",{children:\"Observaciones\"}),\"  \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"}),/*#__PURE__*/_jsx(Field,{as:\"textarea\",className:\"form-control\",id:\"observaciones\",name:\"observaciones\",rows:\"4\",placeholder:\"Escriba en este espacio las observaciones\",maxLength:getMaximoTextArea,minLength:getMinimoTextArea}),/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-primary\",children:[countTextArea,\" / \",getMaximoTextArea]})}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"observaciones\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.observaciones});}}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:\"Registrar\"}),/*#__PURE__*/_jsx(Link,{to:\"/ClasificacionRadicadoLista/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:\"Cancelar\"})})]})]})});}})});}};// COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\nvar componenteTerminosRespuesta=function componenteTerminosRespuesta(termino_respuesta){//TERMINO TUTELA = DIAS      \nif(termino_respuesta===global.Constants.TERMINOS_RESPUESTA.DIAS){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{termino_rta:termino_respuesta,horasTermino:null,fechaTermino:fechaTermino},enableReinitialize:true,validate:function validate(valores){var errores={};if(!valores.fechaTermino&&!fechaTermino){errores.fechaTermino='Debe seleccionar el termino de respuesta';}return errores;},onSubmit:function onSubmit(valores,_ref9){var resetForm=_ref9.resetForm;enviarDatos(valores);},children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Fecha para termino\"}),\"  \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"}),/*#__PURE__*/_jsx(DatePerson,{resultDiasNoLaborales:resultDiasNoLaborales,getAnosAtrasInvalidos:getAnosAtrasInvalidos,parentCallback:handleCallbackFechaTermino,id:\"fechaTermino\",name:\"fechaTermino\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:\"Registrar\"}),/*#__PURE__*/_jsx(Link,{to:\"/ClasificacionRadicadoLista/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:\"Cancelar\"})})]})]})})});}//TERMINO TUTELA = HORAS     \nelse if(termino_respuesta===global.Constants.TERMINOS_RESPUESTA.HORAS){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{termino_rta:termino_respuesta,horasTermino:'',fechaTermino:new Date()},enableReinitialize:true,validate:function validate(valores){var errores={};if(!valores.horasTermino){errores.horasTermino='Debe seleccionar el termino de respuesta';}return errores;},onSubmit:function onSubmit(valores,_ref10){var resetForm=_ref10.resetForm;enviarDatos(valores);},children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Horas para termino\"}),\"  \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"}),/*#__PURE__*/_jsx(Field,{type:\"number\",min:\"1\",max:\"23\",id:\"horasTermino\",name:\"horasTermino\",className:\"form-control\",placeholder:\"\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"block-content block-content-full text-right\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:\"Registrar\"})})]})})});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(ModalGen,{data:getModalState}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"ingresoTipoExpediente\",children:[\"Tipo de expediente \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-control\",id:\"ingresoTipoExpediente\",name:\"ingresoTipoExpediente\",value:selectedTipoExpediente,onChange:function onChange(e){return selectChangeTipoExpediente(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Por favor seleccione\"}),respuestaTipoExpediente?selectTipoExpediente():null]})]})})}),selectedTipoExpediente===global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION?componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION):'',selectedTipoExpediente===global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE?componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE):'',selectedTipoExpediente===global.Constants.TIPOS_EXPEDIENTES.QUEJA?componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA):'',selectedTipoExpediente===global.Constants.TIPOS_EXPEDIENTES.TUTELA?componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA):'']})]});}export default ClasificacionRadicado;","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","Link","getUser","useLocation","DatePerson","ModalGen","GenericApi","Spinner","set","ClasificacionRadicado","props","title","message","show","getModalState","setModalState","data","listaTipoExpediente","setListaTipoExpediente","respuestaTipoExpediente","setRespuestaTipoExpediente","selectedTipoExpediente","setSelectedTipoExpediente","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","listaTipoDerechoPeticion","setListaDerechoPeticion","selectedTipoDerechoPeticion","setSelectedDerechoPeticion","respuestaTipoDerechoPeticion","setRespuestaDerechoPeticion","listaTipoRespuesta","setListaTipoRespuesta","selectedTipoRespuesta","setSelectedTipoRespuesta","respuestaTipoRespuesta","setRespuestaTipoRespuesta","listaTerminosRespuesta","setListaTerminosRespuesta","selectedTerminosRespuesta","setSelectedTerminosRespuesta","respuestaTerminosRespuesta","setRespuestaTerminosRespuesta","listaTiposQueja","setListaTiposQueja","selectedTiposQueja","setSelectedTiposQueja","respuestaTiposQueja","setRespuestaTiposQueja","fechaTermino","setFechaTermino","resultDiasNoLaborales","setResultDiasNoLaborales","getNombreUsuario","setNombreUsuario","getNombreRol","setNombreRol","getAnosAtrasInvalidos","setAnosAtrasInvalidos","getAlerta","setAlerta","getMensajeAlerta","setMensajeAlerta","getNombreProceso","setNombreProceso","location","from","state","procesoDisciplinarioId","radicado","id_etapa","containsSpecialChars","str","result","global","Constants","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","fetchData","nombre","roles","getApiTipoRespuesta","nombreProceso","window","showSpinner","getGeneric","then","datos","error","getApiTipoExpediente","toString","redirect","alert","TIPO_ALERTA","ERROR","getApiTipoDerechoPeticion","getApiTerminosRespuesta","getApiTipoQueja","getApiDiasNoLaborales","i","date","Date","setDate","getDate","push","obtenerParametros","getByDataGeneric","length","filter","map","filteredName","getByIdGeneric","attributes","disableCustomDt","current","format","selectChangeTipoRespuesta","e","selectChangeTipoExpediente","selectChangeTipoDerechoPeticion","tipo_expediente","getApiMasTipoMensajesExpedientes","selectChangeTerminoRespuesta","selectChangeTiposQueja","selectTipoRespuesta","tipo_respuesta","id","selectTipoExpediente","expediente","selectTipoDerechoPeticion","derecho_peticion","selectTerminosRespuesta","termino_respuesta","selectTiposQueja","tipo_queja","enviarDatos","getParametros","id_proceso_disciplinario","observaciones","horasTermino","gestion_juridica","tipo_derecho_peticion","reclasificacion","addGeneric","cambiaColorClasificacionRadicado","tipo_clasificacion","TIPO_CLASIFICACION","VALIDAR_CLASIFICACION","funcionario_actual","name","apellido","CLASIFICACION","EXITO","handleCallbackFechaTermino","childData","componenteTipoExpediente","TIPOS_EXPEDIENTES","DERECHO_PETICION","target","value","componenteTipoDerechoPeticion","PODER_REFERENTE","TIPO_QUEJA","EXTERNA","valores","errores","resetForm","QUEJA","TUTELA","TERMINOS_RESPUESTA","DIAS","componenteTerminosRespuesta","HORAS","idTipoExpediente","idSubTipoExpediente","mensaje","tipoExpediente","DERECHOS_PETICION","COPIAS","errors","GENERAL","ALERTA","termino_rta"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ClasificacionRadicado/ClasificacionRadicado.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport 'moment/locale/es';\r\nimport { getUser } from '../../../components/Utils/Common';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DatePerson from \"../../DatePerson/DatePerson\";\r\nimport '../../Utils/Constants';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport { set } from 'react-hook-form';\r\n\r\nfunction ClasificacionRadicado(props) {\r\n\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n\r\n    const [listaTipoExpediente, setListaTipoExpediente] = useState({ data: {} });\r\n\r\n    const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\r\n    const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\r\n\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n\r\n    const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({ data: {} });\r\n    const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\r\n    const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\r\n\r\n    const [listaTipoRespuesta, setListaTipoRespuesta] = useState({ data: {} });\r\n    const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\r\n    const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\r\n\r\n    const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({ data: {} });\r\n    const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\r\n    const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\r\n\r\n    const [listaTiposQueja, setListaTiposQueja] = useState({ data: {} });\r\n    const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\r\n    const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\r\n\r\n    const [fechaTermino, setFechaTermino] = useState(null);\r\n    const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\r\n\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [getNombreRol, setNombreRol] = useState(\"\");\r\n    const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\r\n\r\n    const [getAlerta, setAlerta] = useState(\"\");\r\n    const [getMensajeAlerta, setMensajeAlerta] = useState(\"\");\r\n\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let radicado = from.radicado;\r\n    let id_etapa = from.id_etapa;\r\n\r\n    /**\r\n     * Validación de los caracteres especiales en los campos de texto\r\n     * @param {*} str \r\n     * @returns \r\n     */\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Funcion principal\r\n     */\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setNombreUsuario(getUser().nombre);\r\n            setNombreRol(getUser().roles);\r\n            getApiTipoRespuesta();\r\n            nombreProceso();\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const getApiTipoRespuesta = () => {\r\n        window.showSpinner(true);\r\n        GenericApi.getGeneric(\"tipo-respuesta\").then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaTipoRespuesta(datos);\r\n                    setRespuestaTipoRespuesta(true);\r\n                    getApiTipoExpediente();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiTipoExpediente = () => {\r\n        GenericApi.getGeneric(\"proceso-disciplinario/tipo-expdiente/\" + procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaTipoExpediente(datos);\r\n                    setRespuestaTipoExpediente(true);\r\n                    getApiTipoDerechoPeticion();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiTipoDerechoPeticion = () => {\r\n        GenericApi.getGeneric(\"lista-tipo-derecho-peticion/\" + procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaDerechoPeticion(datos);\r\n                    setRespuestaDerechoPeticion(true);\r\n                    getApiTerminosRespuesta();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiTerminosRespuesta = () => {\r\n        GenericApi.getGeneric(\"lista-terminos-respuesta/\" + procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaTerminosRespuesta(datos);\r\n                    setRespuestaTerminosRespuesta(true);\r\n                    getApiTipoQueja();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiTipoQueja = () => {\r\n        GenericApi.getGeneric(\"lista-tipo-queja/\" + procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaTiposQueja(datos);\r\n                    setRespuestaTiposQueja(true);\r\n                    getApiDiasNoLaborales();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiDiasNoLaborales = () => {\r\n        GenericApi.getGeneric(\"dias-no-laborales?estado=1\").then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var data = [];\r\n                    for (var i in datos.data) {\r\n                        var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\r\n                        var result = new Date(date);\r\n                        result.setDate(result.getDate() + 1);\r\n                        data.push(i, date);\r\n                    }\r\n\r\n                    setResultDiasNoLaborales(data);\r\n                    obtenerParametros()\r\n                    //console.log(resultDiasNoLaborales);\r\n                } else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Funcion que obtiene información de las parámetricas.\r\n     * Ejm: número máximo y mínimo de caracteres \r\n     */\r\n    const obtenerParametros = () => {\r\n        try {\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => (\r\n                                setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                    window.showSpinner(false);\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n            window.showSpinner(false);\r\n        }\r\n    }\r\n\r\n    const nombreProceso = () => {\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\",procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const disableCustomDt = current => {\r\n        return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));\r\n    }\r\n\r\n    let selectChangeTipoRespuesta = (e) => {\r\n        setSelectedTipoRespuesta(e);\r\n    }\r\n\r\n    let selectChangeTipoExpediente = (e) => {\r\n        setCountTextArea(0)\r\n        setSelectedTipoExpediente(e);\r\n    }\r\n\r\n    let selectChangeTipoDerechoPeticion = (tipo_expediente, e) => {\r\n        setCountTextArea(0)\r\n        setSelectedDerechoPeticion(e);\r\n\r\n        // Se consume la api del mensaje\r\n        getApiMasTipoMensajesExpedientes(tipo_expediente, e);\r\n    }\r\n\r\n    let selectChangeTerminoRespuesta = (e) => {\r\n        setSelectedTerminosRespuesta(e);\r\n    }\r\n\r\n    let selectChangeTiposQueja = (e) => {\r\n        setSelectedTiposQueja(e);\r\n    }\r\n\r\n    //Componetes\r\n\r\n    const selectTipoRespuesta = () => {\r\n        return (\r\n            listaTipoRespuesta.data.map((tipo_respuesta, i) => {\r\n                return (\r\n                    <option key={tipo_respuesta.id} value={tipo_respuesta.id}>{tipo_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTipoExpediente = () => {\r\n        return (\r\n            listaTipoExpediente.data.map((expediente, i) => {\r\n                return (\r\n                    <option key={expediente.id} value={expediente.id}>{expediente.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTipoDerechoPeticion = () => {\r\n        return (\r\n            listaTipoDerechoPeticion.data.map((derecho_peticion, i) => {\r\n\r\n                return (\r\n                    <option key={derecho_peticion.id} value={derecho_peticion.id}>{derecho_peticion.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTerminosRespuesta = () => {\r\n        return (\r\n            listaTerminosRespuesta.data.map((termino_respuesta, i) => {\r\n                return (\r\n                    <option key={termino_respuesta.id} value={termino_respuesta.id}>{termino_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTiposQueja = () => {\r\n        return (\r\n            listaTiposQueja.data.map((tipo_queja, i) => {\r\n                return (\r\n                    <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const enviarDatos = (datos) => {\r\n        window.showSpinner(true);\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                    \"id_etapa\": props.getParametros.id_etapa,\r\n                    \"id_tipo_expediente\": selectedTipoExpediente,\r\n                    \"observaciones\": (datos.observaciones != null ? datos.observaciones : null),\r\n                    \"id_tipo_queja\": datos.tipo_queja,\r\n                    \"id_termino_respuesta\": selectedTerminosRespuesta,\r\n                    \"fecha_termino\": (datos.fechaTermino != null ? datos.fechaTermino : null),\r\n                    \"hora_termino\": (datos.horasTermino != null ? datos.horasTermino : null),\r\n                    \"gestion_juridica\": (datos.gestion_juridica === 'true' ? true : false),\r\n                    \"estado\": true,\r\n                    \"id_estado_reparto\": 2,\r\n                    \"id_tipo_derecho_peticion\": datos.tipo_derecho_peticion,\r\n                    \"oficina_control_interno\": false,\r\n                    \"created_user\": getNombreUsuario,\r\n                    \"reclasificacion\": props.getParametros.reclasificacion,\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.addGeneric(\"clasificacion-radicado\", data).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    from.cambiaColorClasificacionRadicado = \"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";\r\n                \r\n                    if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION) {\r\n\r\n                        if (datos.data.attributes.funcionario_actual.name === getNombreUsuario) {\r\n                            setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: \"El proceso disciplinario se asigna a: \" + datos.data.attributes.funcionario_actual.nombre + \" \" + datos.data.attributes.funcionario_actual.apellido, show: true, redirect: '/RamasProceso', from: { from } });\r\n                        }\r\n                        else {\r\n                            setModalState({ title: getNombreProceso+\" :: Re-Clasificación del radicado\", message: \"El proceso disciplinario se asigna a: \" + datos.data.attributes.funcionario_actual.nombre + \" \" + datos.data.attributes.funcionario_actual.apellido, show: true, redirect: '/MisPendientes' });\r\n                        }\r\n                    }else if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.CLASIFICACION) {\r\n                        setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: \"Registro Exitoso\", show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                    }\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n\r\n            }\r\n        )\r\n        window.showSpinner(false);\r\n    }\r\n\r\n    const handleCallbackFechaTermino = (childData) => {\r\n        try {\r\n            setFechaTermino(childData)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // COMPOENENTE TIPO EXPEDIENTE\r\n    const componenteTipoExpediente = (tipo_expediente) => {\r\n\r\n        // TIPO DE EXPEDIENTE = DERECHO DE PETICION\r\n        if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) {\r\n            return (\r\n                <>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ingresoDerechoPeticion\">Tipo de derecho de petición <span className=\"text-danger\">*</span></label>\r\n                        <select className=\"form-control\" id=\"ingresoDerechoPeticion\" name=\"ingresoDerechoPeticion\"\r\n                            value={selectedTipoDerechoPeticion} onChange={e => selectChangeTipoDerechoPeticion(tipo_expediente, e.target.value)}>\r\n                            <option value=\"\">Por favor seleccione</option>\r\n                            {respuestaTipoDerechoPeticion ? selectTipoDerechoPeticion() : null}\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* Se ejecuta el componente */}\r\n                    {componenteTipoDerechoPeticion(tipo_expediente, selectedTipoDerechoPeticion)}\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: global.Constants.TIPO_QUEJA.EXTERNA\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = QUEJA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: '',\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.tipo_queja) {\r\n                                errores.tipo_queja = 'Debe seleccionar un tipo de queja'\r\n                            }\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            // console.log(valores);\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tipo_queja\">Ingrese Tipo de Queja <span className=\"text-danger\">*</span></label>\r\n\r\n                                <Field as=\"select\" className=\"form-control\" id=\"tipo_queja\" name=\"tipo_queja\">\r\n                                    <option value=\"\">Por favor seleccione</option>\r\n                                    {respuestaTiposQueja ? selectTiposQueja() : null}\r\n                                </Field>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = TUTELA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA) {\r\n            return (\r\n                <>\r\n                    <label htmlFor=\"ingresoTipoRtaTutela\">Ingrese termino de respuesta <span className=\"text-danger\">*</span></label>\r\n\r\n                    <select className=\"form-control\" id=\"termino_rta\" name=\"termino_rta\"\r\n                        value={selectedTerminosRespuesta}\r\n                        onChange={e => selectChangeTerminoRespuesta(e.target.value)}>\r\n                        <option value=\"{selectedTerminosRespuesta}\">Por favor seleccione</option>\r\n                        {respuestaTerminosRespuesta ? selectTerminosRespuesta() : null}\r\n                    </select>\r\n\r\n                    {/*DIAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.DIAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS) : ''}\r\n                    {/*HORAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.HORAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS) : ''}\r\n\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    // Metodo encargado de cargar el mensaje por el tipo de expediente\r\n    const getApiMasTipoMensajesExpedientes = (idTipoExpediente, idSubTipoExpediente) => {\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric(\"mas_tipo_expediente_mensajes/\" + idTipoExpediente + \"/\" + idSubTipoExpediente).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se captura la informacion en la posicion 0\r\n                    let data = datos.data[0];\r\n\r\n                    // Se setea el mensaje \r\n                    setMensajeAlerta(data.attributes.mensaje);\r\n                } else {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // COMOPNENTE TIPO DERECHO DE PETICION\r\n    const componenteTipoDerechoPeticion = (tipoExpediente, tipo_derecho_peticion) => {\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\r\n        if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.COPIAS) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: false,\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n\r\n\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n\r\n                            return errores\r\n                        }}\r\n\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{getMensajeAlerta}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Observaciones <span className=\"text-danger\">*</span></label>\r\n                                        <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                            placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                        <div className=\"text-right\">\r\n                                            <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                        </div>\r\n                                        <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"block-content block-content-full text-right\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n\r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.GENERAL) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: false,\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n                            return errores\r\n\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{getMensajeAlerta}</p>\r\n                                    </div>\r\n\r\n                                    <label>Observaciones</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                </div>\r\n\r\n                                <div className=\"block-content block-content-full text-right\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.ALERTA) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: '',\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n                            if (!valores.gestion_juridica) {\r\n                                errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{getMensajeAlerta}</p>\r\n                                    </div>\r\n\r\n                                    <label htmlFor=\"ingresoTipoExpediente\">Requiere gestión juridica <span className=\"text-danger\">*</span></label>\r\n                                    <Field as=\"select\" className=\"form-control\" id=\"gestion_juridica\" name=\"gestion_juridica\">\r\n                                        <option value=\"\">Por favor seleccione</option>\r\n                                        <option value=\"true\">Si</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </Field>\r\n\r\n                                    <label>Observaciones</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n\r\n                                    <div className=\"block-content block-content-full text-right\">\r\n                                        <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n                                        <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                            <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    // COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\r\n    const componenteTerminosRespuesta = (termino_respuesta) => {\r\n\r\n        //TERMINO TUTELA = DIAS      \r\n        if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: null,\r\n                            fechaTermino: fechaTermino\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.fechaTermino && !fechaTermino) {\r\n                                errores.fechaTermino = 'Debe seleccionar el termino de respuesta'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label>Fecha para termino</label>  <span className=\"text-danger\">*</span>\r\n\r\n                                {/*<DatePicker id=\"fechaTermino\" locale='es' name=\"fechaTermino\" dateFormat=\"DD/MM/YYYY\" closeOnSelect={true} placeholder=\"dd/mm/yyyy\" onChange={(date) => setFechaTermino(date)} timeFormat={false} isValidDate={disableCustomDt} />*/}\r\n                                <DatePerson resultDiasNoLaborales={resultDiasNoLaborales} getAnosAtrasInvalidos={getAnosAtrasInvalidos} parentCallback={handleCallbackFechaTermino} id=\"fechaTermino\" name=\"fechaTermino\" />\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n\r\n            )\r\n        }\r\n\r\n        //TERMINO TUTELA = HORAS     \r\n        else if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\r\n\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: '',\r\n                            fechaTermino: new Date(),\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.horasTermino) {\r\n                                errores.horasTermino = 'Debe seleccionar el termino de respuesta'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label>Horas para termino</label>  <span className=\"text-danger\">*</span>\r\n                                <Field type=\"number\" min=\"1\" max='23' id=\"horasTermino\" name=\"horasTermino\" className=\"form-control\" placeholder=\"\" />\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n\r\n            <div className=\"block-content\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"ingresoTipoExpediente\">Tipo de expediente <span className=\"text-danger\">*</span></label>\r\n                            <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                                value={selectedTipoExpediente} onChange={e => selectChangeTipoExpediente(e.target.value)}>\r\n                                <option value=\"\">Por favor seleccione</option>\r\n                                {respuestaTipoExpediente ? selectTipoExpediente() : null}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*DERECHO DE PETICION*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : ''}\r\n\r\n                {/*PODER REFERENTE A SOLIICTUD*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : ''}\r\n                {/*QUEJA*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : ''}\r\n                {/*TUTELA*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : ''}\r\n\r\n            </div>\r\n        </>\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default ClasificacionRadicado;"],"mappings":"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"},"metadata":{},"sourceType":"module"}