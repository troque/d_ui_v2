{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\LogSistema\\\\InfoRepartoAleatorio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport InfoErrorApi from '../Utils/InfoErrorApi';\nimport GenericApi from '../Api/Services/GenericApi';\nimport 'moment/locale/es';\nimport DataTable from 'react-data-table-component';\nimport ListaBotones from '../Utils/ListaBotones';\nimport '../Utils/Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InfoRepartoAleatorio() {\n  _s();\n\n  const [getRtaReparto, setRtaReparto] = useState(false);\n  const [getListaReparto, setListaReparto] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getErrorApi, setErrorApi] = useState('');\n  useEffect(() => {\n    async function fetchData() {\n      repartoAleatorio();\n    }\n\n    fetchData();\n  }, []);\n\n  const repartoAleatorio = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"log_proceso_disciplinario\",\n        \"attributes\": {\n          \"\": \"\"\n        }\n      }\n    };\n    console.log(\"DATA: \" + JSON.stringify(data));\n    GenericApi.getByDataGeneric('log-proceso-disciplinario/get-log-reparto-aleatorio', data).then(datos => {\n      if (!datos.error) {\n        console.log(\"DATOS: \" + datos);\n        console.log(\"DATOS: \" + datos[0]['nombre_funcionario']);\n        setListaReparto(datos);\n        setRtaReparto(true);\n        window.showSpinner(false);\n      } else {\n        setErrorApi(datos.error.toString());\n        window.showModal();\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  const listaClasificacionRadicado = () => {\n    return getListaReparto.map((clasificacion_radicado, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: clasificacion_radicado['nombre_funcionario']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: clasificacion_radicado['apellido_funcionario']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: clasificacion_radicado['dependencia']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: clasificacion_radicado['tipo_de_proceso']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block block-rounded block-bordered\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre Funcionario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Apellido Funcionario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Dependencia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tipo de proceso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sub tipo de proceso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Num Casos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: getRtaReparto ? listaClasificacionRadicado() : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InfoRepartoAleatorio, \"LEIOGRVDJdm9MkixRmnjY5ynN6g=\");\n\n_c = InfoRepartoAleatorio;\nexport default InfoRepartoAleatorio;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoRepartoAleatorio\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/LogSistema/InfoRepartoAleatorio.js"],"names":["React","useEffect","useState","Link","InfoErrorApi","GenericApi","DataTable","ListaBotones","InfoRepartoAleatorio","getRtaReparto","setRtaReparto","getListaReparto","setListaReparto","data","links","meta","getErrorApi","setErrorApi","fetchData","repartoAleatorio","console","log","JSON","stringify","getByDataGeneric","then","datos","error","window","showSpinner","toString","showModal","listaClasificacionRadicado","map","clasificacion_radicado","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport GenericApi from '../Api/Services/GenericApi';\r\nimport 'moment/locale/es';\r\nimport DataTable from 'react-data-table-component';\r\nimport ListaBotones from '../Utils/ListaBotones';\r\nimport '../Utils/Constants';\r\n\r\nfunction InfoRepartoAleatorio() {\r\n\r\n\r\n    const [getRtaReparto, setRtaReparto] = useState(false);\r\n    const [getListaReparto, setListaReparto] = useState({ data: [], links: [], meta: [] });\r\n    const [getErrorApi, setErrorApi] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            repartoAleatorio();\r\n         \r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const repartoAleatorio = () => {\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"log_proceso_disciplinario\",\r\n                \"attributes\": {\r\n                    \"\": \"\",\r\n                }\r\n            }\r\n        }\r\n        console.log(\"DATA: \"+JSON.stringify(data));\r\n        GenericApi.getByDataGeneric('log-proceso-disciplinario/get-log-reparto-aleatorio', data).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    console.log(\"DATOS: \"+datos)\r\n                    console.log(\"DATOS: \"+datos[0]['nombre_funcionario'])\r\n                    setListaReparto(datos)\r\n                    setRtaReparto(true)\r\n                    window.showSpinner(false);\r\n                }\r\n                else {\r\n                    setErrorApi(datos.error.toString())\r\n                    window.showModal()\r\n                    window.showSpinner(false);\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const listaClasificacionRadicado = () => {\r\n        return (\r\n\r\n                getListaReparto.map((clasificacion_radicado, i) => {\r\n                    return (\r\n                        <tr>\r\n                            <td>{i+1}</td>\r\n                            <td>{clasificacion_radicado['nombre_funcionario']}</td>\r\n                            <td>{clasificacion_radicado['apellido_funcionario']}</td>\r\n                            <td>{clasificacion_radicado['dependencia']}</td>\r\n                            <td>{clasificacion_radicado['tipo_de_proceso']}</td>\r\n                        </tr>\r\n                    )\r\n                })   \r\n            )\r\n    \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"block block-rounded block-bordered\">\r\n\r\n            <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text-center\">No.</th>\r\n                        <th>Nombre Funcionario</th>\r\n                        <th>Apellido Funcionario</th>\r\n                        <th>Dependencia</th>\r\n                        <th>Tipo de proceso</th>\r\n                        <th>Sub tipo de proceso</th>\r\n                        <th>Num Casos</th>\r\n                        <th>Total</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {getRtaReparto ? listaClasificacionRadicado() : null}\r\n                </tbody>\r\n            </table>\r\n                            \r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default InfoRepartoAleatorio;"]},"metadata":{},"sourceType":"module"}