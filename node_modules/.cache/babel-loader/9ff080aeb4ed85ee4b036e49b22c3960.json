{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ClasificacionRadicado\\\\ClasificacionRadicado.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { Link } from \"react-router-dom\";\nimport 'react-datetime/css/react-datetime.css';\nimport 'moment/locale/es';\nimport { getUser } from '../../../components/Utils/Common';\nimport { useLocation } from 'react-router-dom';\nimport DatePerson from \"../../DatePerson/DatePerson\";\nimport '../../Utils/Constants';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../../Utils/Spinner';\nimport { set } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ClasificacionRadicado(props) {\n  _s();\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [listaTipoExpediente, setListaTipoExpediente] = useState({\n    data: {}\n  });\n  const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\n  const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({\n    data: {}\n  });\n  const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\n  const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\n  const [listaTipoRespuesta, setListaTipoRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\n  const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\n  const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\n  const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\n  const [listaTiposQueja, setListaTiposQueja] = useState({\n    data: {}\n  });\n  const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\n  const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\n  const [fechaTermino, setFechaTermino] = useState(null);\n  const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\n  const [getNombreUsuario, setNombreUsuario] = useState(\"\");\n  const [getNombreRol, setNombreRol] = useState(\"\");\n  const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\n  const [getAlerta, setAlerta] = useState(\"\");\n  const [getMensajeAlerta, setMensajeAlerta] = useState(\"\");\n  const [getNombreProceso, setNombreProceso] = useState('');\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let radicado = from.radicado;\n  let id_etapa = from.id_etapa;\n\n  /**\r\n   * Validación de los caracteres especiales en los campos de texto\r\n   * @param {*} str \r\n   * @returns \r\n   */\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n\n  /**\r\n   * Funcion principal\r\n   */\n  useEffect(() => {\n    async function fetchData() {\n      setNombreUsuario(getUser().nombre);\n      setNombreRol(getUser().roles);\n      getApiTipoRespuesta();\n      nombreProceso();\n    }\n    fetchData();\n  }, []);\n  const getApiTipoRespuesta = () => {\n    window.showSpinner(true);\n    GenericApi.getGeneric(\"tipo-respuesta\").then(datos => {\n      if (!datos.error) {\n        setListaTipoRespuesta(datos);\n        setRespuestaTipoRespuesta(true);\n        getApiTipoExpediente();\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoLista',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false);\n      }\n    });\n  };\n  const getApiTipoExpediente = () => {\n    GenericApi.getGeneric(\"proceso-disciplinario/tipo-expdiente/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setListaTipoExpediente(datos);\n        setRespuestaTipoExpediente(true);\n        getApiTipoDerechoPeticion();\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoLista',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false);\n      }\n    });\n  };\n  const getApiTipoDerechoPeticion = () => {\n    GenericApi.getGeneric(\"lista-tipo-derecho-peticion/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setListaDerechoPeticion(datos);\n        setRespuestaDerechoPeticion(true);\n        getApiTerminosRespuesta();\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoLista',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false);\n      }\n    });\n  };\n  const getApiTerminosRespuesta = () => {\n    GenericApi.getGeneric(\"lista-terminos-respuesta/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setListaTerminosRespuesta(datos);\n        setRespuestaTerminosRespuesta(true);\n        getApiTipoQueja();\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoLista',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false);\n      }\n    });\n  };\n  const getApiTipoQueja = () => {\n    GenericApi.getGeneric(\"lista-tipo-queja/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setListaTiposQueja(datos);\n        setRespuestaTiposQueja(true);\n        getApiDiasNoLaborales();\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoLista',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false);\n      }\n    });\n  };\n  const getApiDiasNoLaborales = () => {\n    GenericApi.getGeneric(\"dias-no-laborales?estado=1\").then(datos => {\n      if (!datos.error) {\n        var data = [];\n        for (var i in datos.data) {\n          var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\n          var result = new Date(date);\n          result.setDate(result.getDate() + 1);\n          data.push(i, date);\n        }\n        setResultDiasNoLaborales(data);\n        obtenerParametros();\n        //console.log(resultDiasNoLaborales);\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoForm',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  /**\r\n   * Funcion que obtiene información de las parámetricas.\r\n   * Ejm: número máximo y mínimo de caracteres \r\n   */\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      };\n\n      //buscamos el parametro\n      GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          setModalState({\n            title: getNombreProceso + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoForm',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n        window.showSpinner(false);\n      });\n    } catch (error) {\n      // console.log(error);\n      window.showSpinner(false);\n    }\n  };\n  const nombreProceso = () => {\n    GenericApi.getByIdGeneric(\"nombre-proceso\", procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setNombreProceso(datos.data.attributes.nombre);\n      }\n    });\n  };\n  const disableCustomDt = current => {\n    return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));\n  };\n  let selectChangeTipoRespuesta = e => {\n    setSelectedTipoRespuesta(e);\n  };\n  let selectChangeTipoExpediente = e => {\n    setCountTextArea(0);\n    setSelectedTipoExpediente(e);\n  };\n  let selectChangeTipoDerechoPeticion = (tipo_expediente, e) => {\n    setCountTextArea(0);\n    setSelectedDerechoPeticion(e);\n\n    // Se consume la api del mensaje\n    getApiMasTipoMensajesExpedientes(tipo_expediente, e);\n  };\n  let selectChangeTerminoRespuesta = e => {\n    setSelectedTerminosRespuesta(e);\n  };\n  let selectChangeTiposQueja = e => {\n    setSelectedTiposQueja(e);\n  };\n\n  //Componetes\n\n  const selectTipoRespuesta = () => {\n    return listaTipoRespuesta.data.map((tipo_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: tipo_respuesta.id,\n        children: tipo_respuesta.attributes.nombre\n      }, tipo_respuesta.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this);\n    });\n  };\n  const selectTipoExpediente = () => {\n    return listaTipoExpediente.data.map((expediente, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: expediente.id,\n        children: expediente.attributes.nombre\n      }, expediente.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }, this);\n    });\n  };\n  const selectTipoDerechoPeticion = () => {\n    return listaTipoDerechoPeticion.data.map((derecho_peticion, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: derecho_peticion.id,\n        children: derecho_peticion.attributes.nombre\n      }, derecho_peticion.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }, this);\n    });\n  };\n  const selectTerminosRespuesta = () => {\n    return listaTerminosRespuesta.data.map((termino_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: termino_respuesta.id,\n        children: termino_respuesta.attributes.nombre\n      }, termino_respuesta.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }, this);\n    });\n  };\n  const selectTiposQueja = () => {\n    return listaTiposQueja.data.map((tipo_queja, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: tipo_queja.id,\n        children: tipo_queja.attributes.nombre\n      }, tipo_queja.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this);\n    });\n  };\n  const enviarDatos = datos => {\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"clasificacion_radicado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n          \"id_etapa\": props.getParametros.id_etapa,\n          \"id_tipo_expediente\": selectedTipoExpediente,\n          \"observaciones\": datos.observaciones != null ? datos.observaciones : null,\n          \"id_tipo_queja\": datos.tipo_queja,\n          \"id_termino_respuesta\": selectedTerminosRespuesta,\n          \"fecha_termino\": datos.fechaTermino != null ? datos.fechaTermino : null,\n          \"hora_termino\": datos.horasTermino != null ? datos.horasTermino : null,\n          \"gestion_juridica\": datos.gestion_juridica === 'true' ? true : false,\n          \"estado\": true,\n          \"id_estado_reparto\": 2,\n          \"id_tipo_derecho_peticion\": datos.tipo_derecho_peticion,\n          \"oficina_control_interno\": false,\n          \"created_user\": getNombreUsuario,\n          \"reclasificacion\": props.getParametros.reclasificacion\n        }\n      }\n    };\n    window.showSpinner(true);\n    GenericApi.addGeneric(\"clasificacion-radicado\", data).then(datos => {\n      if (!datos.error) {\n        from.cambiaColorClasificacionRadicado = \"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";\n        if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION) {\n          if (datos.data.attributes.funcionario_actual.name === getNombreUsuario) {\n            setModalState({\n              title: getNombreProceso + \" :: Clasificación del radicado\",\n              message: \"El proceso disciplinario se asigna a: \" + datos.data.attributes.funcionario_actual.nombre + \" \" + datos.data.attributes.funcionario_actual.apellido,\n              show: true,\n              redirect: '/RamasProceso',\n              from: {\n                from\n              }\n            });\n          } else {\n            setModalState({\n              title: getNombreProceso + \" :: Re-Clasificación del radicado\",\n              message: \"El proceso disciplinario se asigna a: \" + datos.data.attributes.funcionario_actual.nombre + \" \" + datos.data.attributes.funcionario_actual.apellido,\n              show: true,\n              redirect: '/MisPendientes'\n            });\n          }\n        } else if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.CLASIFICACION) {\n          setModalState({\n            title: getNombreProceso + \" :: Clasificación del radicado\",\n            message: \"Registro Exitoso\",\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.EXITO\n          });\n        }\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoLista',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n    window.showSpinner(false);\n  };\n  const handleCallbackFechaTermino = childData => {\n    try {\n      setFechaTermino(childData);\n    } catch (error) {}\n  };\n\n  // COMPOENENTE TIPO EXPEDIENTE\n  const componenteTipoExpediente = tipo_expediente => {\n    // TIPO DE EXPEDIENTE = DERECHO DE PETICION\n    if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ingresoDerechoPeticion\",\n            children: [\"Tipo de derecho de petici\\xF3n \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 93\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"ingresoDerechoPeticion\",\n            name: \"ingresoDerechoPeticion\",\n            value: selectedTipoDerechoPeticion,\n            onChange: e => selectChangeTipoDerechoPeticion(tipo_expediente, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Por favor seleccione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 29\n            }, this), respuestaTipoDerechoPeticion ? selectTipoDerechoPeticion() : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this), componenteTipoDerechoPeticion(tipo_expediente, selectedTipoDerechoPeticion)]\n      }, void 0, true);\n    }\n\n    // TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            tipo_queja: global.Constants.TIPO_QUEJA.EXTERNA\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            return errores;\n          },\n          onSubmit: (valores, _ref) => {\n            let {\n              resetForm\n            } = _ref;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: \"Registrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n\n    // TIPO DE EXPEDIENTE = QUEJA\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            tipo_queja: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            if (!valores.tipo_queja) {\n              errores.tipo_queja = 'Debe seleccionar un tipo de queja';\n            }\n            return errores;\n          },\n          onSubmit: (valores, _ref2) => {\n            let {\n              resetForm\n            } = _ref2;\n            // console.log(valores);\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"tipo_queja\",\n                children: [\"Ingrese Tipo de Queja \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 83\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: \"select\",\n                className: \"form-control\",\n                id: \"tipo_queja\",\n                name: \"tipo_queja\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Por favor seleccione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 37\n                }, this), respuestaTiposQueja ? selectTiposQueja() : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: \"Registrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n\n    // TIPO DE EXPEDIENTE = TUTELA\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ingresoTipoRtaTutela\",\n          children: [\"Ingrese termino de respuesta \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 88\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"termino_rta\",\n          name: \"termino_rta\",\n          value: selectedTerminosRespuesta,\n          onChange: e => selectChangeTerminoRespuesta(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"{selectedTerminosRespuesta}\",\n            children: \"Por favor seleccione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 25\n          }, this), respuestaTerminosRespuesta ? selectTerminosRespuesta() : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 21\n        }, this), selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.DIAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS) : '', selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.HORAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS) : '']\n      }, void 0, true);\n    }\n  };\n\n  // Metodo encargado de cargar el mensaje por el tipo de expediente\n  const getApiMasTipoMensajesExpedientes = (idTipoExpediente, idSubTipoExpediente) => {\n    // Se inicializa la API\n    GenericApi.getGeneric(\"mas_tipo_expediente_mensajes/\" + idTipoExpediente + \"/\" + idSubTipoExpediente).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se captura la informacion en la posicion 0\n        let data = datos.data[0];\n\n        // Se setea el mensaje \n        setMensajeAlerta(data.attributes.mensaje);\n      } else {\n        // Se setea el modal\n        setModalState({\n          title: getNombreProceso + \" :: Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoForm',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  // COMOPNENTE TIPO DERECHO DE PETICION\n  const componenteTipoDerechoPeticion = (tipoExpediente, tipo_derecho_peticion) => {\n    // TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\n    if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.COPIAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            gestion_juridica: false,\n            tipo_derecho_peticion: tipo_derecho_peticion\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n            return errores;\n          },\n          onSubmit: (valores, _ref3) => {\n            let {\n              resetForm\n            } = _ref3;\n            enviarDatos(valores);\n          },\n          children: _ref4 => {\n            let {\n              errors\n            } = _ref4;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: getMensajeAlerta\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Observaciones \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: \"*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 62\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    as: \"textarea\",\n                    className: \"form-control\",\n                    id: \"observaciones\",\n                    name: \"observaciones\",\n                    rows: \"4\",\n                    placeholder: \"Escriba en este espacio las observaciones\",\n                    maxLength: getMaximoTextArea,\n                    minLength: getMinimoTextArea\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 620,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-right\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-primary\",\n                      children: [countTextArea, \" / \", getMaximoTextArea]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 623,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 622,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"observaciones\",\n                    component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: errors.observaciones\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 625,\n                      columnNumber: 94\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 625,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-rounded btn-primary\",\n                  children: \"Registrar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/ClasificacionRadicadoLista/`,\n                  state: {\n                    from: from\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-rounded btn-outline-primary\",\n                    children: \"Cancelar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n\n    // TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\n    else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.GENERAL) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            gestion_juridica: false,\n            tipo_derecho_peticion: tipo_derecho_peticion\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n            return errores;\n          },\n          onSubmit: (valores, _ref5) => {\n            let {\n              resetForm\n            } = _ref5;\n            enviarDatos(valores);\n          },\n          children: _ref6 => {\n            let {\n              errors\n            } = _ref6;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: getMensajeAlerta\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Observaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 37\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"textarea\",\n                  className: \"form-control\",\n                  id: \"observaciones\",\n                  name: \"observaciones\",\n                  rows: \"4\",\n                  placeholder: \"Escriba en este espacio las observaciones\",\n                  maxLength: getMaximoTextArea,\n                  minLength: getMinimoTextArea\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-primary\",\n                    children: [countTextArea, \" / \", getMaximoTextArea]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 693,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"observaciones\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.observaciones\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 695,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-rounded btn-primary\",\n                  children: \"Registrar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/ClasificacionRadicadoLista/`,\n                  state: {\n                    from: from\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-rounded btn-outline-primary\",\n                    children: \"Cancelar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n\n    // TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\n    else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.ALERTA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            gestion_juridica: '',\n            tipo_derecho_peticion: tipo_derecho_peticion\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n            if (!valores.gestion_juridica) {\n              errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica';\n            }\n            return errores;\n          },\n          onSubmit: (valores, _ref7) => {\n            let {\n              resetForm\n            } = _ref7;\n            enviarDatos(valores);\n          },\n          children: _ref8 => {\n            let {\n              errors\n            } = _ref8;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 756,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: getMensajeAlerta\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 757,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 755,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"ingresoTipoExpediente\",\n                  children: [\"Requiere gesti\\xF3n juridica \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 760,\n                    columnNumber: 102\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"select\",\n                  className: \"form-control\",\n                  id: \"gestion_juridica\",\n                  name: \"gestion_juridica\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Por favor seleccione\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 762,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"true\",\n                    children: \"Si\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 763,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"false\",\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 764,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Observaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 37\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"textarea\",\n                  className: \"form-control\",\n                  id: \"observaciones\",\n                  name: \"observaciones\",\n                  rows: \"4\",\n                  placeholder: \"Escriba en este espacio las observaciones\",\n                  maxLength: getMaximoTextArea,\n                  minLength: getMinimoTextArea\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-primary\",\n                    children: [countTextArea, \" / \", getMaximoTextArea]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 771,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 770,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"observaciones\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.observaciones\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 773,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-content block-content-full text-right\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-rounded btn-primary\",\n                    children: \"Registrar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 776,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/ClasificacionRadicadoLista/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn btn-rounded btn-outline-primary\",\n                      children: \"Cancelar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 778,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 777,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 775,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  // COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\n  const componenteTerminosRespuesta = termino_respuesta => {\n    //TERMINO TUTELA = DIAS      \n    if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            termino_rta: termino_respuesta,\n            horasTermino: null,\n            fechaTermino: fechaTermino\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            if (!valores.fechaTermino && !fechaTermino) {\n              errores.fechaTermino = 'Debe seleccionar el termino de respuesta';\n            }\n            return errores;\n          },\n          onSubmit: (valores, _ref9) => {\n            let {\n              resetForm\n            } = _ref9;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Fecha para termino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 33\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(DatePerson, {\n                resultDiasNoLaborales: resultDiasNoLaborales,\n                getAnosAtrasInvalidos: getAnosAtrasInvalidos,\n                parentCallback: handleCallbackFechaTermino,\n                id: \"fechaTermino\",\n                name: \"fechaTermino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: \"Registrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 834,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 833,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n\n    //TERMINO TUTELA = HORAS     \n    else if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            termino_rta: termino_respuesta,\n            horasTermino: '',\n            fechaTermino: new Date()\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            if (!valores.horasTermino) {\n              errores.horasTermino = 'Debe seleccionar el termino de respuesta';\n            }\n            return errores;\n          },\n          onSubmit: (valores, _ref10) => {\n            let {\n              resetForm\n            } = _ref10;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Horas para termino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 33\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"number\",\n                min: \"1\",\n                max: \"23\",\n                id: \"horasTermino\",\n                name: \"horasTermino\",\n                className: \"form-control\",\n                placeholder: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 874,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: \"Registrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ingresoTipoExpediente\",\n              children: [\"Tipo de expediente \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 87\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"ingresoTipoExpediente\",\n              name: \"ingresoTipoExpediente\",\n              value: selectedTipoExpediente,\n              onChange: e => selectChangeTipoExpediente(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Por favor seleccione\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 33\n              }, this), respuestaTipoExpediente ? selectTipoExpediente() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 17\n      }, this), selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ClasificacionRadicado, \"3gAKYPZqpQ/2DyBTMAbQLnw5ob0=\", false, function () {\n  return [useLocation];\n});\n_c = ClasificacionRadicado;\nexport default ClasificacionRadicado;\nvar _c;\n$RefreshReg$(_c, \"ClasificacionRadicado\");","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","Link","getUser","useLocation","DatePerson","ModalGen","GenericApi","Spinner","set","ClasificacionRadicado","props","getModalState","setModalState","title","message","show","listaTipoExpediente","setListaTipoExpediente","data","respuestaTipoExpediente","setRespuestaTipoExpediente","selectedTipoExpediente","setSelectedTipoExpediente","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","listaTipoDerechoPeticion","setListaDerechoPeticion","selectedTipoDerechoPeticion","setSelectedDerechoPeticion","respuestaTipoDerechoPeticion","setRespuestaDerechoPeticion","listaTipoRespuesta","setListaTipoRespuesta","selectedTipoRespuesta","setSelectedTipoRespuesta","respuestaTipoRespuesta","setRespuestaTipoRespuesta","listaTerminosRespuesta","setListaTerminosRespuesta","selectedTerminosRespuesta","setSelectedTerminosRespuesta","respuestaTerminosRespuesta","setRespuestaTerminosRespuesta","listaTiposQueja","setListaTiposQueja","selectedTiposQueja","setSelectedTiposQueja","respuestaTiposQueja","setRespuestaTiposQueja","fechaTermino","setFechaTermino","resultDiasNoLaborales","setResultDiasNoLaborales","getNombreUsuario","setNombreUsuario","getNombreRol","setNombreRol","getAnosAtrasInvalidos","setAnosAtrasInvalidos","getAlerta","setAlerta","getMensajeAlerta","setMensajeAlerta","getNombreProceso","setNombreProceso","location","from","state","procesoDisciplinarioId","radicado","id_etapa","containsSpecialChars","str","result","global","Constants","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","fetchData","nombre","roles","getApiTipoRespuesta","nombreProceso","window","showSpinner","getGeneric","then","datos","error","getApiTipoExpediente","toString","redirect","alert","TIPO_ALERTA","ERROR","getApiTipoDerechoPeticion","getApiTerminosRespuesta","getApiTipoQueja","getApiDiasNoLaborales","i","date","Date","setDate","getDate","push","obtenerParametros","getByDataGeneric","length","filter","map","filteredName","getByIdGeneric","attributes","disableCustomDt","current","format","selectChangeTipoRespuesta","e","selectChangeTipoExpediente","selectChangeTipoDerechoPeticion","tipo_expediente","getApiMasTipoMensajesExpedientes","selectChangeTerminoRespuesta","selectChangeTiposQueja","selectTipoRespuesta","tipo_respuesta","id","selectTipoExpediente","expediente","selectTipoDerechoPeticion","derecho_peticion","selectTerminosRespuesta","termino_respuesta","selectTiposQueja","tipo_queja","enviarDatos","getParametros","id_proceso_disciplinario","observaciones","horasTermino","gestion_juridica","tipo_derecho_peticion","reclasificacion","addGeneric","cambiaColorClasificacionRadicado","tipo_clasificacion","TIPO_CLASIFICACION","VALIDAR_CLASIFICACION","funcionario_actual","name","apellido","CLASIFICACION","EXITO","handleCallbackFechaTermino","childData","componenteTipoExpediente","TIPOS_EXPEDIENTES","DERECHO_PETICION","target","value","componenteTipoDerechoPeticion","PODER_REFERENTE","TIPO_QUEJA","EXTERNA","valores","errores","resetForm","QUEJA","TUTELA","TERMINOS_RESPUESTA","DIAS","componenteTerminosRespuesta","HORAS","idTipoExpediente","idSubTipoExpediente","mensaje","tipoExpediente","DERECHOS_PETICION","COPIAS","errors","GENERAL","ALERTA","termino_rta"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ClasificacionRadicado/ClasificacionRadicado.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport 'moment/locale/es';\r\nimport { getUser } from '../../../components/Utils/Common';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DatePerson from \"../../DatePerson/DatePerson\";\r\nimport '../../Utils/Constants';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport { set } from 'react-hook-form';\r\n\r\nfunction ClasificacionRadicado(props) {\r\n\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n\r\n    const [listaTipoExpediente, setListaTipoExpediente] = useState({ data: {} });\r\n\r\n    const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\r\n    const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\r\n\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n\r\n    const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({ data: {} });\r\n    const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\r\n    const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\r\n\r\n    const [listaTipoRespuesta, setListaTipoRespuesta] = useState({ data: {} });\r\n    const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\r\n    const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\r\n\r\n    const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({ data: {} });\r\n    const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\r\n    const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\r\n\r\n    const [listaTiposQueja, setListaTiposQueja] = useState({ data: {} });\r\n    const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\r\n    const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\r\n\r\n    const [fechaTermino, setFechaTermino] = useState(null);\r\n    const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\r\n\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [getNombreRol, setNombreRol] = useState(\"\");\r\n    const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\r\n\r\n    const [getAlerta, setAlerta] = useState(\"\");\r\n    const [getMensajeAlerta, setMensajeAlerta] = useState(\"\");\r\n\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let radicado = from.radicado;\r\n    let id_etapa = from.id_etapa;\r\n\r\n    /**\r\n     * Validación de los caracteres especiales en los campos de texto\r\n     * @param {*} str \r\n     * @returns \r\n     */\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Funcion principal\r\n     */\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setNombreUsuario(getUser().nombre);\r\n            setNombreRol(getUser().roles);\r\n            getApiTipoRespuesta();\r\n            nombreProceso();\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const getApiTipoRespuesta = () => {\r\n        window.showSpinner(true);\r\n        GenericApi.getGeneric(\"tipo-respuesta\").then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaTipoRespuesta(datos);\r\n                    setRespuestaTipoRespuesta(true);\r\n                    getApiTipoExpediente();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiTipoExpediente = () => {\r\n        GenericApi.getGeneric(\"proceso-disciplinario/tipo-expdiente/\" + procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaTipoExpediente(datos);\r\n                    setRespuestaTipoExpediente(true);\r\n                    getApiTipoDerechoPeticion();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiTipoDerechoPeticion = () => {\r\n        GenericApi.getGeneric(\"lista-tipo-derecho-peticion/\" + procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaDerechoPeticion(datos);\r\n                    setRespuestaDerechoPeticion(true);\r\n                    getApiTerminosRespuesta();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiTerminosRespuesta = () => {\r\n        GenericApi.getGeneric(\"lista-terminos-respuesta/\" + procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaTerminosRespuesta(datos);\r\n                    setRespuestaTerminosRespuesta(true);\r\n                    getApiTipoQueja();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiTipoQueja = () => {\r\n        GenericApi.getGeneric(\"lista-tipo-queja/\" + procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaTiposQueja(datos);\r\n                    setRespuestaTiposQueja(true);\r\n                    getApiDiasNoLaborales();\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getApiDiasNoLaborales = () => {\r\n        GenericApi.getGeneric(\"dias-no-laborales?estado=1\").then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var data = [];\r\n                    for (var i in datos.data) {\r\n                        var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\r\n                        var result = new Date(date);\r\n                        result.setDate(result.getDate() + 1);\r\n                        data.push(i, date);\r\n                    }\r\n\r\n                    setResultDiasNoLaborales(data);\r\n                    obtenerParametros()\r\n                    //console.log(resultDiasNoLaborales);\r\n                } else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Funcion que obtiene información de las parámetricas.\r\n     * Ejm: número máximo y mínimo de caracteres \r\n     */\r\n    const obtenerParametros = () => {\r\n        try {\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => (\r\n                                setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                    window.showSpinner(false);\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n            window.showSpinner(false);\r\n        }\r\n    }\r\n\r\n    const nombreProceso = () => {\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\",procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const disableCustomDt = current => {\r\n        return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));\r\n    }\r\n\r\n    let selectChangeTipoRespuesta = (e) => {\r\n        setSelectedTipoRespuesta(e);\r\n    }\r\n\r\n    let selectChangeTipoExpediente = (e) => {\r\n        setCountTextArea(0)\r\n        setSelectedTipoExpediente(e);\r\n    }\r\n\r\n    let selectChangeTipoDerechoPeticion = (tipo_expediente, e) => {\r\n        setCountTextArea(0)\r\n        setSelectedDerechoPeticion(e);\r\n\r\n        // Se consume la api del mensaje\r\n        getApiMasTipoMensajesExpedientes(tipo_expediente, e);\r\n    }\r\n\r\n    let selectChangeTerminoRespuesta = (e) => {\r\n        setSelectedTerminosRespuesta(e);\r\n    }\r\n\r\n    let selectChangeTiposQueja = (e) => {\r\n        setSelectedTiposQueja(e);\r\n    }\r\n\r\n    //Componetes\r\n\r\n    const selectTipoRespuesta = () => {\r\n        return (\r\n            listaTipoRespuesta.data.map((tipo_respuesta, i) => {\r\n                return (\r\n                    <option key={tipo_respuesta.id} value={tipo_respuesta.id}>{tipo_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTipoExpediente = () => {\r\n        return (\r\n            listaTipoExpediente.data.map((expediente, i) => {\r\n                return (\r\n                    <option key={expediente.id} value={expediente.id}>{expediente.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTipoDerechoPeticion = () => {\r\n        return (\r\n            listaTipoDerechoPeticion.data.map((derecho_peticion, i) => {\r\n\r\n                return (\r\n                    <option key={derecho_peticion.id} value={derecho_peticion.id}>{derecho_peticion.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTerminosRespuesta = () => {\r\n        return (\r\n            listaTerminosRespuesta.data.map((termino_respuesta, i) => {\r\n                return (\r\n                    <option key={termino_respuesta.id} value={termino_respuesta.id}>{termino_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTiposQueja = () => {\r\n        return (\r\n            listaTiposQueja.data.map((tipo_queja, i) => {\r\n                return (\r\n                    <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const enviarDatos = (datos) => {\r\n        \r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                    \"id_etapa\": props.getParametros.id_etapa,\r\n                    \"id_tipo_expediente\": selectedTipoExpediente,\r\n                    \"observaciones\": (datos.observaciones != null ? datos.observaciones : null),\r\n                    \"id_tipo_queja\": datos.tipo_queja,\r\n                    \"id_termino_respuesta\": selectedTerminosRespuesta,\r\n                    \"fecha_termino\": (datos.fechaTermino != null ? datos.fechaTermino : null),\r\n                    \"hora_termino\": (datos.horasTermino != null ? datos.horasTermino : null),\r\n                    \"gestion_juridica\": (datos.gestion_juridica === 'true' ? true : false),\r\n                    \"estado\": true,\r\n                    \"id_estado_reparto\": 2,\r\n                    \"id_tipo_derecho_peticion\": datos.tipo_derecho_peticion,\r\n                    \"oficina_control_interno\": false,\r\n                    \"created_user\": getNombreUsuario,\r\n                    \"reclasificacion\": props.getParametros.reclasificacion,\r\n                }\r\n            }\r\n        }\r\n\r\n        window.showSpinner(true);\r\n\r\n        GenericApi.addGeneric(\"clasificacion-radicado\", data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    from.cambiaColorClasificacionRadicado = \"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";\r\n                \r\n                    if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION) {\r\n\r\n                        if (datos.data.attributes.funcionario_actual.name === getNombreUsuario) {\r\n                            setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: \"El proceso disciplinario se asigna a: \" + datos.data.attributes.funcionario_actual.nombre + \" \" + datos.data.attributes.funcionario_actual.apellido, show: true, redirect: '/RamasProceso', from: { from } });\r\n                        }\r\n                        else {\r\n                            setModalState({ title: getNombreProceso+\" :: Re-Clasificación del radicado\", message: \"El proceso disciplinario se asigna a: \" + datos.data.attributes.funcionario_actual.nombre + \" \" + datos.data.attributes.funcionario_actual.apellido, show: true, redirect: '/MisPendientes' });\r\n                        }\r\n                    }else if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.CLASIFICACION) {\r\n                        setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: \"Registro Exitoso\", show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                    }\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            } \r\n        )\r\n        \r\n        window.showSpinner(false);\r\n        \r\n    }\r\n\r\n    const handleCallbackFechaTermino = (childData) => {\r\n        try {\r\n            setFechaTermino(childData)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // COMPOENENTE TIPO EXPEDIENTE\r\n    const componenteTipoExpediente = (tipo_expediente) => {\r\n\r\n        // TIPO DE EXPEDIENTE = DERECHO DE PETICION\r\n        if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) {\r\n            return (\r\n                <>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ingresoDerechoPeticion\">Tipo de derecho de petición <span className=\"text-danger\">*</span></label>\r\n                        <select className=\"form-control\" id=\"ingresoDerechoPeticion\" name=\"ingresoDerechoPeticion\"\r\n                            value={selectedTipoDerechoPeticion} onChange={e => selectChangeTipoDerechoPeticion(tipo_expediente, e.target.value)}>\r\n                            <option value=\"\">Por favor seleccione</option>\r\n                            {respuestaTipoDerechoPeticion ? selectTipoDerechoPeticion() : null}\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* Se ejecuta el componente */}\r\n                    {componenteTipoDerechoPeticion(tipo_expediente, selectedTipoDerechoPeticion)}\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: global.Constants.TIPO_QUEJA.EXTERNA\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = QUEJA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: '',\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.tipo_queja) {\r\n                                errores.tipo_queja = 'Debe seleccionar un tipo de queja'\r\n                            }\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            // console.log(valores);\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tipo_queja\">Ingrese Tipo de Queja <span className=\"text-danger\">*</span></label>\r\n\r\n                                <Field as=\"select\" className=\"form-control\" id=\"tipo_queja\" name=\"tipo_queja\">\r\n                                    <option value=\"\">Por favor seleccione</option>\r\n                                    {respuestaTiposQueja ? selectTiposQueja() : null}\r\n                                </Field>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = TUTELA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA) {\r\n            return (\r\n                <>\r\n                    <label htmlFor=\"ingresoTipoRtaTutela\">Ingrese termino de respuesta <span className=\"text-danger\">*</span></label>\r\n\r\n                    <select className=\"form-control\" id=\"termino_rta\" name=\"termino_rta\"\r\n                        value={selectedTerminosRespuesta}\r\n                        onChange={e => selectChangeTerminoRespuesta(e.target.value)}>\r\n                        <option value=\"{selectedTerminosRespuesta}\">Por favor seleccione</option>\r\n                        {respuestaTerminosRespuesta ? selectTerminosRespuesta() : null}\r\n                    </select>\r\n\r\n                    {/*DIAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.DIAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS) : ''}\r\n                    {/*HORAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.HORAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS) : ''}\r\n\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    // Metodo encargado de cargar el mensaje por el tipo de expediente\r\n    const getApiMasTipoMensajesExpedientes = (idTipoExpediente, idSubTipoExpediente) => {\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric(\"mas_tipo_expediente_mensajes/\" + idTipoExpediente + \"/\" + idSubTipoExpediente).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se captura la informacion en la posicion 0\r\n                    let data = datos.data[0];\r\n\r\n                    // Se setea el mensaje \r\n                    setMensajeAlerta(data.attributes.mensaje);\r\n                } else {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: getNombreProceso+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // COMOPNENTE TIPO DERECHO DE PETICION\r\n    const componenteTipoDerechoPeticion = (tipoExpediente, tipo_derecho_peticion) => {\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\r\n        if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.COPIAS) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: false,\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n\r\n\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n\r\n                            return errores\r\n                        }}\r\n\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{getMensajeAlerta}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Observaciones <span className=\"text-danger\">*</span></label>\r\n                                        <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                            placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                        <div className=\"text-right\">\r\n                                            <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                        </div>\r\n                                        <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"block-content block-content-full text-right\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n\r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.GENERAL) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: false,\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n                            return errores\r\n\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{getMensajeAlerta}</p>\r\n                                    </div>\r\n\r\n                                    <label>Observaciones</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                </div>\r\n\r\n                                <div className=\"block-content block-content-full text-right\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.ALERTA) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: '',\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n                            if (!valores.gestion_juridica) {\r\n                                errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{getMensajeAlerta}</p>\r\n                                    </div>\r\n\r\n                                    <label htmlFor=\"ingresoTipoExpediente\">Requiere gestión juridica <span className=\"text-danger\">*</span></label>\r\n                                    <Field as=\"select\" className=\"form-control\" id=\"gestion_juridica\" name=\"gestion_juridica\">\r\n                                        <option value=\"\">Por favor seleccione</option>\r\n                                        <option value=\"true\">Si</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </Field>\r\n\r\n                                    <label>Observaciones</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n\r\n                                    <div className=\"block-content block-content-full text-right\">\r\n                                        <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n                                        <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                            <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    // COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\r\n    const componenteTerminosRespuesta = (termino_respuesta) => {\r\n\r\n        //TERMINO TUTELA = DIAS      \r\n        if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: null,\r\n                            fechaTermino: fechaTermino\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.fechaTermino && !fechaTermino) {\r\n                                errores.fechaTermino = 'Debe seleccionar el termino de respuesta'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label>Fecha para termino</label>  <span className=\"text-danger\">*</span>\r\n\r\n                                {/*<DatePicker id=\"fechaTermino\" locale='es' name=\"fechaTermino\" dateFormat=\"DD/MM/YYYY\" closeOnSelect={true} placeholder=\"dd/mm/yyyy\" onChange={(date) => setFechaTermino(date)} timeFormat={false} isValidDate={disableCustomDt} />*/}\r\n                                <DatePerson resultDiasNoLaborales={resultDiasNoLaborales} getAnosAtrasInvalidos={getAnosAtrasInvalidos} parentCallback={handleCallbackFechaTermino} id=\"fechaTermino\" name=\"fechaTermino\" />\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n\r\n            )\r\n        }\r\n\r\n        //TERMINO TUTELA = HORAS     \r\n        else if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\r\n\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: '',\r\n                            fechaTermino: new Date(),\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.horasTermino) {\r\n                                errores.horasTermino = 'Debe seleccionar el termino de respuesta'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label>Horas para termino</label>  <span className=\"text-danger\">*</span>\r\n                                <Field type=\"number\" min=\"1\" max='23' id=\"horasTermino\" name=\"horasTermino\" className=\"form-control\" placeholder=\"\" />\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n\r\n            <div className=\"block-content\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"ingresoTipoExpediente\">Tipo de expediente <span className=\"text-danger\">*</span></label>\r\n                            <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                                value={selectedTipoExpediente} onChange={e => selectChangeTipoExpediente(e.target.value)}>\r\n                                <option value=\"\">Por favor seleccione</option>\r\n                                {respuestaTipoExpediente ? selectTipoExpediente() : null}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*DERECHO DE PETICION*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : ''}\r\n\r\n                {/*PODER REFERENTE A SOLIICTUD*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : ''}\r\n                {/*QUEJA*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : ''}\r\n                {/*TUTELA*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : ''}\r\n\r\n            </div>\r\n        </>\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default ClasificacionRadicado;"],"mappings":"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"},"metadata":{},"sourceType":"module"}