{"ast":null,"code":"import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useLocation}from'react-router-dom';import DataTable from'react-data-table-component';import GenericApi from'../../Api/Services/GenericApi';import Spinner from'../../Utils/Spinner';import ModalGen from'../../Utils/Modals/ModalGeneric';import'../../Utils/Constants';import{getUser}from'../../Utils/Common';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function CaratulasParametrosPlantillaForm(props){var location=useLocation();var from=location.state.from;var caratulaId=props.caratulaId;var radicado=from.radicado;var procesoDisciplinarioId=from.procesoDisciplinarioId;var id_etapa=from.idEtapa;var fechaRegistro=from.fechaRegistro;var fechaIngreso=from.fechaIngreso;var dependencia=getUser().nombre_dependencia?getUser().nombre_dependencia.nombre:\"\";var registradoPor=from.registradoPor;var vigencia=from.vigencia;var generadoPor=getUser().nombre_completo?getUser().nombre_completo:\"\";var _useState=useState({title:\"\",message:\"\",show:false}),_useState2=_slicedToArray(_useState,2),modalState=_useState2[0],setModalState=_useState2[1];var _useState3=useState({params:[]}),_useState4=_slicedToArray(_useState3,2),getListaParametros=_useState4[0],setListaParametros=_useState4[1];var _useState5=useState({data:[]}),_useState6=_slicedToArray(_useState5,2),getListaCamposPorParametroTemporal=_useState6[0],setListaCamposPorParametroTemporal=_useState6[1];var _useState7=useState({data:[]}),_useState8=_slicedToArray(_useState7,2),getListaParametrosBaseDatos=_useState8[0],setListaParametrosBaseDatos=_useState8[1];//const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\nvar _useState9=useState({data:[],links:[],meta:[]}),_useState10=_slicedToArray(_useState9,2),getAntecedentesLista=_useState10[0],setAntecedentesLista=_useState10[1];var _useState11=useState({data:[],links:[],meta:[]}),_useState12=_slicedToArray(_useState11,2),getInteresadosLista=_useState12[0],setInteresadosLista=_useState12[1];var _useState13=useState({data:[],links:[],meta:[]}),_useState14=_slicedToArray(_useState13,2),getEntidadesInvestigadoLista=_useState14[0],setEntidadesInvestigadoLista=_useState14[1];var _useState15=useState({data:[],links:[],meta:[]}),_useState16=_slicedToArray(_useState15,2),getCargosInvestigadoLista=_useState16[0],setCargosInvestigadoLista=_useState16[1];var _useState17=useState({data:[],links:[],meta:[]}),_useState18=_slicedToArray(_useState17,2),getEntidadInvestigadoLista=_useState18[0],setEntidadInvestigadoLista=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),getParametrosCampos=_useState20[0],setParametrosCampos=_useState20[1];// const campos = [\n//     { title: \"N° Proceso\", value: radicado, type: \"N° Proceso\", check: false },\n//     { title: \"Sinproc\", value: radicado, type: \"Sinproc\", check: false },\n//     { title: 'Antecedentes', value: null, type: \"Antecedentes\", check: false },\n//     { title: 'Usuario', value: registradoPor, type: \"Usuario\", check: false },\n//     { title: 'Dependencia', value: dependencia, check: false },\n//     { title: 'Vigencia', value: vigencia, type: \"Vigencia\", check: false },\n//     { title: 'Fecha Registro', value: fechaRegistro, type: \"Fecha Registro\", check: false },\n//     { title: 'Fecha Ingreso', value: fechaIngreso, type: \"Fecha Ingreso\", check: false },\n//     { title: \"Generado\", value: generadoPor, type: \"Generado\", check: false },\n// ];\nuseEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:cargarTablaParametrosCaratula();case 1:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[props.id_mas_actuacion]);var selectCampos=function selectCampos(parametro){return getListaParametrosBaseDatos.map(function(item,i){var itemFilter=getListaCamposPorParametroTemporal.data.filter(function(x){return x.parametro==parametro;});if(itemFilter!=undefined&&itemFilter.length>0&&itemFilter[0].id_campo===i){return/*#__PURE__*/_jsx(\"option\",{selected:true,value:i,children:item.title},i);}else{return/*#__PURE__*/_jsx(\"option\",{value:i,children:item.title},i);}});};var handleChangeInteresados=function handleChangeInteresados(e,parametro,id_campo){var _e$target=e.target,value=_e$target.value,checked=_e$target.checked;var valorId=getInteresadosLista.map(function(item){if(value==item.id){item.checked=checked;}return item;});setInteresadosLista(valorId);var val=getInteresadosLista.map(function(p){if(p.checked==true){var nombre=\"\".concat(p.attributes.sujeto_procesal_nombre,\" \").concat(p.attributes.primer_apellido,\" \").concat(p.attributes.segundo_apellido,\" \").concat(p.attributes.primer_nombre,\" \").concat(p.attributes.segundo_nombre);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};function checkeoAutomaticoInteresados(parametro,id_campo){setInteresadosLista(getInteresadosLista);var nombre=\"\".concat(getInteresadosLista[0].attributes.sujeto_procesal_nombre,\" \").concat(getInteresadosLista[0].attributes.primer_apellido,\" \").concat(getInteresadosLista[0].attributes.segundo_apellido,\" \").concat(getInteresadosLista[0].attributes.primer_nombre,\" \").concat(getInteresadosLista[0].attributes.segundo_nombre);selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoAntecedentes(parametro,id_campo){setAntecedentesLista(getAntecedentesLista);var nombre=\"\".concat(getAntecedentesLista[0].attributes.descripcion);selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoInvestigadosNombre(parametro,id_campo){setEntidadInvestigadoLista(getEntidadesInvestigadoLista);var nombre=\"\".concat(getEntidadesInvestigadoLista[0].attributes.nombre_investigado);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoInvestigadosCargo(parametro,id_campo){setCargosInvestigadoLista(getCargosInvestigadoLista);var nombre=\"\".concat(getCargosInvestigadoLista[0].attributes.cargo);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}function checkeoAutomaticoInvestigadosEntidad(parametro,id_campo){setEntidadesInvestigadoLista(getEntidadInvestigadoLista);var nombre=\"\".concat(getEntidadInvestigadoLista[0].attributes.nombre_entidad);if(nombre==\"null\"){nombre=\"NO_APLICA\";}selectChangeListaCampos(parametro,id_campo,nombre);}var handleChangeAntecedentes=function handleChangeAntecedentes(e,parametro,id_campo){var _e$target2=e.target,value=_e$target2.value,checked=_e$target2.checked;var valorId=getAntecedentesLista.map(function(item){if(value==item.id){item.checked=checked;}return item;});setAntecedentesLista(valorId);var val=getAntecedentesLista.map(function(p){if(p.checked==true){var nombre=\"\".concat(p.attributes.descripcion);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeInvestigados=function handleChangeInvestigados(e,parametro,id_campo){var _e$target3=e.target,value=_e$target3.value,checked=_e$target3.checked;var valorId=getEntidadesInvestigadoLista.map(function(item){if(value==item.attributes.nombre_investigado){item.checked=checked;}return item;});setEntidadesInvestigadoLista(valorId);var val=getEntidadesInvestigadoLista.map(function(p){if(p.checked==true){var value=\"\".concat(p.attributes.nombre_investigado);var nombre=\"\".concat(p.attributes.nombre_investigado);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeCargosInvestigados=function handleChangeCargosInvestigados(e,parametro,id_campo){var _e$target4=e.target,value=_e$target4.value,checked=_e$target4.checked;var valorId=getCargosInvestigadoLista.map(function(item){if(value==item.attributes.cargo){item.checked=checked;}return item;});setCargosInvestigadoLista(valorId);var val=getCargosInvestigadoLista.map(function(p){if(p.checked==true){var value=\"\".concat(p.attributes.cargo);var nombre=\"\".concat(p.attributes.cargo);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var handleChangeEntidadesInvestigados=function handleChangeEntidadesInvestigados(e,parametro,id_campo){var _e$target5=e.target,value=_e$target5.value,checked=_e$target5.checked;var valorId=getEntidadInvestigadoLista.map(function(item){if(value==item.attributes.nombre_entidad){item.checked=checked;}return item;});setCargosInvestigadoLista(valorId);var val=getEntidadInvestigadoLista.map(function(p){if(p.checked==true){var value=\"\".concat(p.attributes.nombre_entidad);var nombre=\"\".concat(p.attributes.nombre_entidad);return nombre;}}).filter(function(x){return x!=undefined;});selectChangeListaCampos(parametro,id_campo,val.toString());};var selectAntecedentes=function selectAntecedentes(parametro,id_campo){if(Array.isArray(getAntecedentesLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getAntecedentesLista&&getAntecedentesLista.length==1){checkeoAutomaticoAntecedentes(parametro,id_campo);return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getAntecedentesLista[0].id,name:'check'+getAntecedentesLista[0].id,value:getAntecedentesLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",getAntecedentesLista[0].attributes.descripcion]},'keyCheck'+getAntecedentesLista[0].id);}else if(getAntecedentesLista.length>1){return getAntecedentesLista.map(function(item,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+item.id,name:'check'+item.id,value:item.id,onChange:function onChange(e){return handleChangeAntecedentes(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",item.attributes.descripcion]},'keyCheck'+item.id)// <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n;});}}};var selectInteresados=function selectInteresados(parametro,id_campo){if(Array.isArray(getInteresadosLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getInteresadosLista&&getInteresadosLista.length==1){checkeoAutomaticoInteresados(parametro,id_campo);var nombre=\"\".concat(getInteresadosLista[0].attributes.sujeto_procesal_nombre,\" \").concat(getInteresadosLista[0].attributes.primer_apellido,\" \").concat(getInteresadosLista[0].attributes.segundo_apellido,\" \").concat(getInteresadosLista[0].attributes.primer_nombre,\" \").concat(getInteresadosLista[0].attributes.segundo_nombre);return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getInteresadosLista[0].id,name:'check'+getInteresadosLista[0].id,value:getInteresadosLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",nombre]},'keyCheck'+getInteresadosLista[0].id);}else if(getInteresadosLista.length>1){return getInteresadosLista.map(function(item,i){var nombre=\"\".concat(item.attributes.sujeto_procesal_nombre,\" \").concat(item.attributes.primer_apellido,\" \").concat(item.attributes.segundo_apellido,\" \").concat(item.attributes.primer_nombre,\" \").concat(item.attributes.segundo_nombre);return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+nombre,name:'check'+nombre,value:item.id,onChange:function onChange(e){return handleChangeInteresados(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",nombre]},'keyCheck'+nombre)// <option key={nombre} value={nombre}>{nombre}</option>\n;});}}};var selectInvestigados=function selectInvestigados(parametro,id_campo){if(Array.isArray(getEntidadesInvestigadoLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getEntidadesInvestigadoLista&&getEntidadesInvestigadoLista.length==1){checkeoAutomaticoInvestigadosNombre(parametro,id_campo);var nombre=\"\".concat(getEntidadesInvestigadoLista[0].attributes.nombre_investigado);if(nombre==\"null\"){nombre=\"NO_APLICA\";}return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getEntidadesInvestigadoLista[0].id,name:'check'+getEntidadesInvestigadoLista[0].id,value:getEntidadesInvestigadoLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",nombre]},'keyCheck'+getEntidadesInvestigadoLista[0].id);}else if(getEntidadesInvestigadoLista.length>1){return getEntidadesInvestigadoLista.map(function(item,i){var value=\"\".concat(item.attributes.nombre_investigado);var nombre=\"\".concat(item.attributes.nombre_investigado);if(nombre!=\"null\"){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:nombre,name:nombre,value:nombre,onChange:function onChange(e){return handleChangeInvestigados(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",nombre]},nombre)//<option key={value} value={value}>{nombre}</option>\n;}});}}};var selectCargosInvestigados=function selectCargosInvestigados(parametro,id_campo){if(Array.isArray(getCargosInvestigadoLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getCargosInvestigadoLista&&getCargosInvestigadoLista.length==1){checkeoAutomaticoInvestigadosCargo(parametro,id_campo);var nombre=\"\".concat(getCargosInvestigadoLista[0].attributes.cargo);if(nombre==\"null\"){nombre=\"NO_APLICA\";}return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getCargosInvestigadoLista[0].id,name:'check'+getCargosInvestigadoLista[0].id,value:getCargosInvestigadoLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",nombre]},'keyCheck'+getCargosInvestigadoLista[0].id);}else if(getCargosInvestigadoLista.length>1){return getCargosInvestigadoLista.map(function(item,i){var value=\"\".concat(item.attributes.cargo);var nombre=\"\".concat(item.attributes.cargo);if(nombre!=\"null\"){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:nombre,name:nombre,value:nombre,onChange:function onChange(e){return handleChangeCargosInvestigados(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",nombre]},nombre)// <option key={value} value={value}>{nombre}</option>\n;}});}}};var selectEntidadesInvestigados=function selectEntidadesInvestigados(parametro,id_campo){if(Array.isArray(getEntidadInvestigadoLista)){// Se valida que sea un array la lista y que su longitud sea igual a 1\nif(getEntidadInvestigadoLista&&getEntidadInvestigadoLista.length==1){checkeoAutomaticoInvestigadosEntidad(parametro,id_campo);var nombre=\"\".concat(getEntidadInvestigadoLista[0].attributes.nombre_entidad);if(nombre==\"null\"){nombre=\"NO_APLICA\";}return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+getEntidadInvestigadoLista[0].id,name:'check'+getEntidadInvestigadoLista[0].id,value:getEntidadInvestigadoLista[0].id//onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n,defaultChecked:true,disabled:true}),\" \",nombre]},'keyCheck'+getEntidadInvestigadoLista[0].id);}else if(getEntidadInvestigadoLista.length>1){return getEntidadInvestigadoLista.map(function(item,i){var value=\"\".concat(item.attributes.nombre_entidad);var nombre=\"\".concat(item.attributes.nombre_entidad);if(nombre!=\"null\"){return/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:nombre,name:nombre,value:nombre,onChange:function onChange(e){return handleChangeEntidadesInvestigados(e,parametro,id_campo);},defaultChecked:item.checked}),\" \",nombre]},nombre)//<option key={value} value={value}>{nombre}</option>\n;}});}}};var cargarValoresDeParametro=function cargarValoresDeParametro(parametro){var arrayOtherElements=[\"Dependencia Origen\",\"Delegada\",\"Radicado\",\"Radicación\",\"Auto\"];var campoParametro=getListaCamposPorParametroTemporal.data.filter(function(item){return item.parametro==parametro;});var tempCampo=campoParametro[0];if(tempCampo!=undefined&&getListaParametrosBaseDatos[tempCampo.id_campo]!=undefined){var itemCampo=getListaParametrosBaseDatos[tempCampo.id_campo];// Tiene un valor por defecto\nif(itemCampo.value!=null){// Se asigna el valor a la lista temporal\nvar newParamsItem=getListaCamposPorParametroTemporal.data.map(function(item){if(item.parametro==parametro){item.id_campo=tempCampo.id_campo;var itemCampoId=getListaParametrosBaseDatos[tempCampo.id_campo];item.valor=itemCampoId.value!=null?itemCampoId.value:\"\";item.valorTemporal=itemCampoId.value!=null?itemCampoId.value:\"\";}return item;});// Se deshabilita cuando es sinproc o dependencia\nvar validarElemento=document.getElementById('id'+itemCampo.title);if(validarElemento&&!validarElemento.hasAttribute(\"disabled\")){validarElemento.setAttribute(\"disabled\",\"true\");}return/*#__PURE__*/_jsx(_Fragment,{children:itemCampo.value});}else if(itemCampo.type==\"Antecedentes\"){var validarElemento=document.getElementById('id'+tempCampo.parametro);if(validarElemento&&!validarElemento.hasAttribute(\"disabled\")){validarElemento.setAttribute(\"disabled\",\"true\");}return/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:selectAntecedentes(parametro,tempCampo.id_campo)});}else{var validarElemento=document.getElementById('id'+itemCampo.title);if(validarElemento&&!validarElemento.hasAttribute(\"disabled\")){validarElemento.setAttribute(\"disabled\",\"true\");}return/*#__PURE__*/_jsx(\"label\",{children:\"Campo Inactivo\"});}}// let idLabelParametro = 'idValorSeleccionado' + tempCampo.parametro;\nreturn/*#__PURE__*/_jsx(\"label\",{children:\" El campo debe estar dentro de la lista parametrizable para asignarle un valor\"});};var cargarCheckParametro=function cargarCheckParametro(parametro){return/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:'check'+parametro+'1',name:'check'+parametro+'1',value:parametro+'1',onChange:function onChange(e){return handleChangeStatus(e,parametro);}})},'keyCheck'+parametro+'1');};var handleChangeStatus=function handleChangeStatus(e,parametro){// Se captura el elemento enviado por parametros\nvar itemFilter=getListaCamposPorParametroTemporal.data.filter(function(x){return x.parametro==parametro;});// Se valida si esta checkeado\nif(e.target.checked){// Se devuelve el valor a vacio\nvar newParams=getListaCamposPorParametroTemporal.data.map(function(item){// Se valida que el item recorrido sea igual al parametro checkeado\nif(item.parametro==parametro){// Se captura el id del campo\nitem.id_campo=itemFilter[0].id_campo;var itemCampo=getListaParametrosBaseDatos[itemFilter[0].id_campo];// Se redefine el valor del item a vacio\nitem.valor=\"\";item.valorTemporal=itemCampo.value!=null?itemCampo.value:itemFilter[0].value;}// Se retorna el item\nreturn item;});}else{// Se devuelve el valor a vacio\nvar newParams=getListaCamposPorParametroTemporal.data.map(function(item){// Se valida que el item recorrido sea igual al parametro checkeado\nif(item.parametro==parametro){// Se captura el id del campo\nitem.id_campo=itemFilter[0].id_campo;var itemCampo=getListaParametrosBaseDatos[itemFilter[0].id_campo];// Se redefine el valor del item a su valor original\nitem.valor=item.valorTemporal;item.valorTemporal=itemCampo.value!=null?itemCampo.value:itemFilter[0].value;}// Se retorna el item\nreturn item;});}};var selectChangeListaCampos=function selectChangeListaCampos(parametro,id_campo,value){// console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\nvar newParams=getListaCamposPorParametroTemporal.data.map(function(item){if(item.parametro==parametro){item.id_campo=id_campo;var itemCampo=getListaParametrosBaseDatos[id_campo];item.valor=itemCampo.value!=null?itemCampo.value:value;item.valorTemporal=itemCampo.value!=null?itemCampo.value:value;}return item;});//setListaCamposPorParametroDefinitiva({ data: newParams });\n};var columns=[{name:'PARÁMETROS',cell:function cell(parametro){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"strong\",{children:parametro})});},sortable:true,width:\"20%\"},{name:'NOMBRE DEL CAMPO',cell:function cell(parametro){return/*#__PURE__*/_jsxs(\"select\",{className:\"form-control\",id:\"id\".concat(parametro),name:\"name\".concat(parametro),onChange:function onChange(e){return selectChangeListaCampos(parametro,e.target.value,\"\");},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Por favor seleccione\"}),selectCampos(parametro)]});},sortable:false,width:\"25%\"},{name:'VALOR DEL CAMPO SELECCIONADO',width:\"50%\",cell:function cell(parametro){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:cargarValoresDeParametro(parametro)})});}}// {\n//     name: 'Activar/Inactivar',\n//     width: \"10%\",\n//     cell: parametro =>\n//         <div className='row'>\n//             <div className='col'>\n//                 {cargarCheckParametro(parametro)}\n//             </div>\n//         </div>\n// }\n];// Metodo encargado de cargar los parametros generales de la plantilla de la BD\nvar cargarTablaParametrosCaratula=function cargarTablaParametrosCaratula(){// Se inicializa el array\nvar array=[];// Se inicializa la API\nGenericApi.getGeneric('parametro_campos_caratula').then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se recorre el array para insertar los valores necesarios\nfor(var index=0;index<datos.data.length;index++){// Se captura los datos por posicion\nvar element=datos.data[index].attributes;var title=element.nombre_campo;var estado=element.estado==\"1\"?true:false;var type=element.type;var value=validarValueParametros(type,estado);// Se añade el dato al array general\narray.push({title:title,value:value,type:type,check:estado});}// Se setea la respuesta en la constante\nsetListaParametrosBaseDatos(array);// Se generan la lista de parametros del documento\ncargarParametros(array);}});};// Metodo encargado de retorna el valor por el elemento\nvar validarValueParametros=function validarValueParametros(element,estado){// Se inicializa la variable\nvar valor;// Se valida por el elemento\nif(element==\"Sinproc\"&&estado){valor=radicado;}else if(element==\"Usuario\"&&estado){valor=registradoPor;}else if(element==\"Dependencia\"&&estado){valor=dependencia;}else if(element==\"Vigencia\"&&estado){valor=vigencia;}else if(element==\"Fecha Registro\"&&estado){valor=fechaRegistro;}else if(element==\"Fecha Ingreso\"&&estado){valor=fechaIngreso;}else if(element==\"Generado\"&&estado){valor=generadoPor;}// Se retorna el valor\nreturn valor;};// Metodo encargado de cargar la lista de parametros de la plantilla\nvar cargarParametros=function cargarParametros(listaParametrosBaseDatos){// Se setea el array en null\nsetListaParametros(null);// Se inicializa la data\nvar data={\"data\":{\"type\":'caratulas',\"attributes\":{\"id\":caratulaId}}};// Se inicializa la API que carga la lisata de parametros de la plantilla\nGenericApi.getByDataGeneric('caratulas/parametros-plantilla/'+caratulaId,data).then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se setea la lista\nsetListaParametros(datos);// Se recorre el array de datos\nvar parametrosCampos=datos.params.map(function(item,i){// Se ejecuta una busqueda del elemento\nvar indexCampo=listaParametrosBaseDatos.findIndex(function(x){return x.title==item;});if(indexCampo>=0){return{parametro:item,id_campo:indexCampo,valor:\"\"};}else{return{parametro:item,id_campo:\"\",valor:\"\"};}});setListaCamposPorParametroTemporal({data:parametrosCampos});// Se cargan los antecedentes, interesados y entidades del investigado\ncargarEntidadesInvestigado();cargarAntecedentes();cargarInteresados();}});};var cargarAntecedentes=function cargarAntecedentes(){var data={\"data\":{\"type\":'antecedente',\"attributes\":{\"antecedentes\":\"antecedentes\",\"descripcion\":\"descripcion\",\"id_proceso_disciplinario\":procesoDisciplinarioId,\"fecha_registro\":Date.now(),\"id_dependencia\":-1,\"estado\":\"1\",'per_page':100,'current_page':1}}};GenericApi.getByDataGeneric('antecedentes/get-antecedentes/'+procesoDisciplinarioId,data).then(function(datos){if(!datos.error){var parametrosCampos=datos.data.map(function(item){item.checked=false;return item;});setAntecedentesLista(parametrosCampos);}});};var cargarInteresados=function cargarInteresados(){var data={\"data\":{\"type\":\"interesado\",\"attributes\":{\"id_proceso_disciplinario\":procesoDisciplinarioId,\"tipo_documento\":\"1\",\"numero_documento\":\"1\",\"primer_nombre\":\"1\",\"segundo_nombre\":\"1\",\"primer_apellido\":\"1\",\"segundo_apellido\":\"1\",\"estado\":\"1\",'per_page':100,'current_page':1}}};GenericApi.getByDataGeneric('datos-interesado/datos-interesado/'+procesoDisciplinarioId,data).then(function(datos){if(!datos.error){var parametrosCampos=datos.data.map(function(item){item.checked=false;return item;});setInteresadosLista(parametrosCampos);}else{setModalState({title:\"Datos del interesado\",message:datos.error.toString(),show:true,redirect:null,from:{from:from}});}});};var cargarEntidadesInvestigado=function cargarEntidadesInvestigado(){var data={\"data\":{\"type\":\"entidad_investigado\",\"attributes\":{\"id_proceso_disciplinario\":procesoDisciplinarioId,\"id_etapa\":\"1\",\"requiere_registro\":true,\"estado\":\"1\",'per_page':100,'current_page':1}}};GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\"+procesoDisciplinarioId,data).then(function(datos){if(!datos.error){var parametrosCampos=datos.data.map(function(item){var nombreInvestigado=item.attributes.nombre_investigado;var cargoInvestigado=item.attributes.cargo;var entidadInvestigado=item.attributes.nombre_entidad;if(nombreInvestigado==null){item.attributes.nombre_investigado=\"NO_APLICA\";}if(cargoInvestigado==null){item.attributes.cargo=\"NO_APLICA\";}if(entidadInvestigado==null){item.attributes.nombre_entidad=\"NO_APLICA\";}item.checked=false;return item;});setEntidadesInvestigadoLista(parametrosCampos);setCargosInvestigadoLista(parametrosCampos);setEntidadInvestigadoLista(parametrosCampos);}else{setModalState({title:\"Entidades del investigado\",message:datos.error.toString(),show:true,redirect:null,from:{from:from}});}});};var descargarArchivo=function descargarArchivo(){try{window.showSpinner(true);var params=getListaCamposPorParametroTemporal.data.map(function(item){return{\"param\":item.parametro,\"value\":item.valor};});// console.log(\"######params#####\");\n// console.log(params);\nvar data={\"data\":{\"type\":\"caratulas\",\"attributes\":{\"params\":params}}};GenericApi.getByDataGeneric('caratulas/plantilla-diligenciada/'+caratulaId,data).then(function(datos){window.showSpinner(false);if(!datos.error){downloadBase64File(datos.content_type,datos.base_64,datos.file_name,\"pdf\");}else{setModalState({title:\"SINPROC No \"+radicado+\" :: \",message:datos.error.toString(),show:true,redirect:null,from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});}catch(error){console.error(error);}};function downloadBase64File(contentType,base64Data,fileName){var linkSource=\"data:\".concat(contentType,\";base64,\").concat(base64Data);var downloadLink=document.createElement(\"a\");downloadLink.href=linkSource;downloadLink.download=fileName;downloadLink.click();}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(ModalGen,{data:modalState}),getListaParametros!=null?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(\"label\",{children:\"PAR\\xC1METROS DE LA PLANTILLA\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-2 mb-2\",children:/*#__PURE__*/_jsx(DataTable,{className:\"table table-bordered table-striped table-vcenter js-dataTable-full\",columns:columns,data:getListaParametros.params,noDataComponent:global.Constants.DATA_TABLE.SIN_DATOS_TABLE,striped:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-4 mb-2 text-center\",children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",onClick:function onClick(){return descargarArchivo();},className:\"btn btn-rounded btn-primary\",title:\"Descargar\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-file-pdf\"}),\" Descargar car\\xE1tula\"]})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(\"label\",{children:\"Cargando parametros de la plantilla...\"})})]});}export default CaratulasParametrosPlantillaForm;","map":{"version":3,"names":["React","useEffect","useState","useLocation","DataTable","GenericApi","Spinner","ModalGen","getUser","CaratulasParametrosPlantillaForm","props","location","from","state","caratulaId","radicado","procesoDisciplinarioId","id_etapa","idEtapa","fechaRegistro","fechaIngreso","dependencia","nombre_dependencia","nombre","registradoPor","vigencia","generadoPor","nombre_completo","title","message","show","modalState","setModalState","params","getListaParametros","setListaParametros","data","getListaCamposPorParametroTemporal","setListaCamposPorParametroTemporal","getListaParametrosBaseDatos","setListaParametrosBaseDatos","links","meta","getAntecedentesLista","setAntecedentesLista","getInteresadosLista","setInteresadosLista","getEntidadesInvestigadoLista","setEntidadesInvestigadoLista","getCargosInvestigadoLista","setCargosInvestigadoLista","getEntidadInvestigadoLista","setEntidadInvestigadoLista","getParametrosCampos","setParametrosCampos","fetchData","cargarTablaParametrosCaratula","id_mas_actuacion","selectCampos","parametro","map","item","i","itemFilter","filter","x","undefined","length","id_campo","handleChangeInteresados","e","target","value","checked","valorId","id","val","p","attributes","sujeto_procesal_nombre","primer_apellido","segundo_apellido","primer_nombre","segundo_nombre","selectChangeListaCampos","toString","checkeoAutomaticoInteresados","checkeoAutomaticoAntecedentes","descripcion","checkeoAutomaticoInvestigadosNombre","nombre_investigado","checkeoAutomaticoInvestigadosCargo","cargo","checkeoAutomaticoInvestigadosEntidad","nombre_entidad","handleChangeAntecedentes","handleChangeInvestigados","handleChangeCargosInvestigados","handleChangeEntidadesInvestigados","selectAntecedentes","Array","isArray","selectInteresados","selectInvestigados","selectCargosInvestigados","selectEntidadesInvestigados","cargarValoresDeParametro","arrayOtherElements","campoParametro","tempCampo","itemCampo","newParamsItem","itemCampoId","valor","valorTemporal","validarElemento","document","getElementById","hasAttribute","setAttribute","type","cargarCheckParametro","handleChangeStatus","newParams","columns","name","cell","sortable","width","array","getGeneric","then","datos","error","index","element","nombre_campo","estado","validarValueParametros","push","check","cargarParametros","listaParametrosBaseDatos","getByDataGeneric","parametrosCampos","indexCampo","findIndex","cargarEntidadesInvestigado","cargarAntecedentes","cargarInteresados","Date","now","redirect","nombreInvestigado","cargoInvestigado","entidadInvestigado","descargarArchivo","window","showSpinner","downloadBase64File","content_type","base_64","file_name","alert","global","Constants","TIPO_ALERTA","ERROR","console","contentType","base64Data","fileName","linkSource","downloadLink","createElement","href","download","click","DATA_TABLE","SIN_DATOS_TABLE"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Herramientas/CaratulasParametrosPlantillaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport '../../Utils/Constants';\r\nimport { getUser } from '../../Utils/Common';\r\n\r\nfunction CaratulasParametrosPlantillaForm(props) {\r\n\r\n    const location = useLocation()\r\n    const { from } = location.state;\r\n    const caratulaId = props.caratulaId;\r\n    const radicado = from.radicado;\r\n    const procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    const id_etapa = from.idEtapa;\r\n    const fechaRegistro = from.fechaRegistro;\r\n    const fechaIngreso = from.fechaIngreso;\r\n    const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\r\n    const registradoPor = from.registradoPor;\r\n    const vigencia = from.vigencia;\r\n    const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaParametros, setListaParametros] = useState({ params: [] });\r\n    const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({ data: [] });\r\n    const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({ data: [] });\r\n    //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getInteresadosLista, setInteresadosLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getParametrosCampos, setParametrosCampos] = useState();\r\n\r\n    // const campos = [\r\n    //     { title: \"N° Proceso\", value: radicado, type: \"N° Proceso\", check: false },\r\n    //     { title: \"Sinproc\", value: radicado, type: \"Sinproc\", check: false },\r\n    //     { title: 'Antecedentes', value: null, type: \"Antecedentes\", check: false },\r\n    //     { title: 'Usuario', value: registradoPor, type: \"Usuario\", check: false },\r\n    //     { title: 'Dependencia', value: dependencia, check: false },\r\n    //     { title: 'Vigencia', value: vigencia, type: \"Vigencia\", check: false },\r\n    //     { title: 'Fecha Registro', value: fechaRegistro, type: \"Fecha Registro\", check: false },\r\n    //     { title: 'Fecha Ingreso', value: fechaIngreso, type: \"Fecha Ingreso\", check: false },\r\n    //     { title: \"Generado\", value: generadoPor, type: \"Generado\", check: false },\r\n    // ];\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            cargarTablaParametrosCaratula();\r\n        }\r\n        fetchData();\r\n    }, [props.id_mas_actuacion]);\r\n\r\n    const selectCampos = (parametro) => {\r\n\r\n        return (\r\n            getListaParametrosBaseDatos.map((item, i) => {\r\n\r\n                var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n                if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\r\n                    return (\r\n                        <option selected key={i} value={i}>{item.title}</option>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <option key={i} value={i}>{item.title}</option>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleChangeInteresados = (e, parametro, id_campo) => {\r\n\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getInteresadosLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setInteresadosLista(valorId);\r\n        let val = getInteresadosLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.sujeto_procesal_nombre} ${p.attributes.primer_apellido} ${p.attributes.segundo_apellido} ${p.attributes.primer_nombre} ${p.attributes.segundo_nombre}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n    }\r\n\r\n    function checkeoAutomaticoInteresados(parametro, id_campo) {\r\n        setInteresadosLista(getInteresadosLista);\r\n        var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\r\n        setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\r\n        var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\r\n        setCargosInvestigadoLista(getCargosInvestigadoLista);\r\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\r\n        setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\r\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    const handleChangeAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.descripcion}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadesInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_investigado) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setEntidadesInvestigadoLista(valorId);\r\n        let val = getEntidadesInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_investigado}`;\r\n                var nombre = `${p.attributes.nombre_investigado}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getCargosInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.cargo) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getCargosInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.cargo}`;\r\n                var nombre = `${p.attributes.cargo}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_entidad) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getEntidadInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_entidad}`;\r\n                var nombre = `${p.attributes.nombre_entidad}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const selectAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].id}\r\n                            name={'check' + getAntecedentesLista[0].id}\r\n                            value={getAntecedentesLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.descripcion}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.id}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.id}\r\n                                    name={'check' + item.id}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.descripcion}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInteresados = (parametro, id_campo) => {\r\n        if (Array.isArray(getInteresadosLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getInteresadosLista && getInteresadosLista.length == 1) {\r\n                checkeoAutomaticoInteresados(parametro, id_campo);\r\n                var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getInteresadosLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getInteresadosLista[0].id}\r\n                            name={'check' + getInteresadosLista[0].id}\r\n                            value={getInteresadosLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getInteresadosLista.length > 1) {\r\n                return (\r\n                    getInteresadosLista.map((item, i) => {\r\n                        var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + nombre}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + nombre}\r\n                                    name={'check' + nombre}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeInteresados(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {nombre}\r\n                            </div>\r\n                            // <option key={nombre} value={nombre}>{nombre}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadesInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\r\n                let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadesInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            value={getEntidadesInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadesInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadesInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_investigado}`;\r\n                        var nombre = `${item.attributes.nombre_investigado}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectCargosInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getCargosInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\r\n                var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getCargosInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getCargosInvestigadoLista[0].id}\r\n                            name={'check' + getCargosInvestigadoLista[0].id}\r\n                            value={getCargosInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getCargosInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getCargosInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.cargo}`;\r\n                        var nombre = `${item.attributes.cargo}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeCargosInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                // <option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectEntidadesInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\r\n                var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadInvestigadoLista[0].id}\r\n                            value={getEntidadInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_entidad}`;\r\n                        var nombre = `${item.attributes.nombre_entidad}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeEntidadesInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const cargarValoresDeParametro = (parametro) => {\r\n\r\n        const arrayOtherElements = [\r\n            \"Dependencia Origen\",\r\n            \"Delegada\",\r\n            \"Radicado\",\r\n            \"Radicación\",\r\n            \"Auto\"\r\n        ];\r\n\r\n        var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\r\n            return item.parametro == parametro;\r\n        });\r\n\r\n        var tempCampo = campoParametro[0];\r\n\r\n        if (tempCampo != undefined && getListaParametrosBaseDatos[tempCampo.id_campo] != undefined) {\r\n            var itemCampo = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n\r\n            // Tiene un valor por defecto\r\n            if (itemCampo.value != null) {\r\n\r\n                // Se asigna el valor a la lista temporal\r\n                var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\r\n                    if (item.parametro == parametro) {\r\n                        item.id_campo = tempCampo.id_campo;\r\n                        var itemCampoId = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n                        item.valor = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                        item.valorTemporal = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                // Se deshabilita cuando es sinproc o dependencia\r\n                var validarElemento = document.getElementById('id' + itemCampo.title);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <>{itemCampo.value}</>\r\n                )\r\n            } else if (itemCampo.type == \"Antecedentes\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else {\r\n                var validarElemento = document.getElementById('id' + itemCampo.title);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <label>Campo Inactivo</label>\r\n                )\r\n            }\r\n        }\r\n\r\n        // let idLabelParametro = 'idValorSeleccionado' + tempCampo.parametro;\r\n\r\n        return (<label> El campo debe estar dentro de la lista parametrizable para asignarle un valor</label >)\r\n\r\n    }\r\n\r\n    const cargarCheckParametro = (parametro) => {\r\n\r\n        return (\r\n            <div className=\"col-md-12\" key={'keyCheck' + parametro + '1'} >\r\n                <input type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    id={'check' + parametro + '1'}\r\n                    name={'check' + parametro + '1'}\r\n                    value={parametro + '1'}\r\n                    onChange={(e) => handleChangeStatus(e, parametro)}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n\r\n    const handleChangeStatus = (e, parametro) => {\r\n\r\n        // Se captura el elemento enviado por parametros\r\n        var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n        // Se valida si esta checkeado\r\n        if (e.target.checked) {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a vacio\r\n                    item.valor = \"\";\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n\r\n\r\n        } else {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a su valor original\r\n                    item.valor = item.valorTemporal;\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n        }\r\n    }\r\n\r\n    const selectChangeListaCampos = (parametro, id_campo, value) => {\r\n\r\n        // console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\r\n\r\n        var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n            if (item.parametro == parametro) {\r\n                item.id_campo = id_campo;\r\n                var itemCampo = getListaParametrosBaseDatos[id_campo];\r\n\r\n                item.valor = (itemCampo.value != null) ? itemCampo.value : value;\r\n                item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : value;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        //setListaCamposPorParametroDefinitiva({ data: newParams });\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'PARÁMETROS',\r\n            cell: parametro => <div><strong>{parametro}</strong></div>,\r\n            sortable: true,\r\n            width: \"20%\",\r\n        },\r\n        {\r\n            name: 'NOMBRE DEL CAMPO',\r\n            cell: parametro =>\r\n                <select className=\"form-control\" id={`id${parametro}`} name={`name${parametro}`}\r\n                    onChange={e => selectChangeListaCampos(parametro, e.target.value, \"\")}>\r\n                    <option value=\"\">Por favor seleccione</option>\r\n                    {selectCampos(parametro)}\r\n                </select>,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'VALOR DEL CAMPO SELECCIONADO',\r\n            width: \"50%\",\r\n            cell: parametro =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresDeParametro(parametro)}\r\n                    </div>\r\n                </div>,\r\n        },\r\n        // {\r\n        //     name: 'Activar/Inactivar',\r\n        //     width: \"10%\",\r\n        //     cell: parametro =>\r\n        //         <div className='row'>\r\n        //             <div className='col'>\r\n        //                 {cargarCheckParametro(parametro)}\r\n        //             </div>\r\n        //         </div>\r\n        // }\r\n    ];\r\n\r\n    // Metodo encargado de cargar los parametros generales de la plantilla de la BD\r\n    const cargarTablaParametrosCaratula = () => {\r\n\r\n        // Se inicializa el array\r\n        var array = [];\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('parametro_campos_caratula').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se recorre el array para insertar los valores necesarios\r\n                    for (let index = 0; index < datos.data.length; index++) {\r\n\r\n                        // Se captura los datos por posicion\r\n                        const element = datos.data[index].attributes;\r\n                        const title = element.nombre_campo;\r\n                        const estado = element.estado == \"1\" ? true : false;\r\n                        const type = element.type;\r\n                        const value = validarValueParametros(type, estado);\r\n\r\n                        // Se añade el dato al array general\r\n                        array.push({ title: title, value: value, type: type, check: estado });\r\n                    }\r\n\r\n                    // Se setea la respuesta en la constante\r\n                    setListaParametrosBaseDatos(array);\r\n\r\n                    // Se generan la lista de parametros del documento\r\n                    cargarParametros(array);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de retorna el valor por el elemento\r\n    const validarValueParametros = (element, estado) => {\r\n\r\n        // Se inicializa la variable\r\n        let valor;\r\n\r\n        // Se valida por el elemento\r\n        if (element == \"Sinproc\" && estado) {\r\n            valor = radicado;\r\n        } else if (element == \"Usuario\" && estado) {\r\n            valor = registradoPor;\r\n        } else if (element == \"Dependencia\" && estado) {\r\n            valor = dependencia;\r\n        } else if (element == \"Vigencia\" && estado) {\r\n            valor = vigencia;\r\n        } else if (element == \"Fecha Registro\" && estado) {\r\n            valor = fechaRegistro;\r\n        } else if (element == \"Fecha Ingreso\" && estado) {\r\n            valor = fechaIngreso;\r\n        } else if (element == \"Generado\" && estado) {\r\n            valor = generadoPor;\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return valor;\r\n    }\r\n\r\n    // Metodo encargado de cargar la lista de parametros de la plantilla\r\n    const cargarParametros = (listaParametrosBaseDatos) => {\r\n\r\n        // Se setea el array en null\r\n        setListaParametros(null);\r\n\r\n        // Se inicializa la data\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'caratulas',\r\n                \"attributes\": {\r\n                    \"id\": caratulaId\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se inicializa la API que carga la lisata de parametros de la plantilla\r\n        GenericApi.getByDataGeneric('caratulas/parametros-plantilla/' + caratulaId, data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea la lista\r\n                    setListaParametros(datos);\r\n\r\n                    // Se recorre el array de datos\r\n                    var parametrosCampos = datos.params.map((item, i) => {\r\n\r\n                        // Se ejecuta una busqueda del elemento\r\n                        var indexCampo = listaParametrosBaseDatos.findIndex(\r\n                            x =>\r\n                                x.title == item);\r\n\r\n                        if (indexCampo >= 0) {\r\n                            return { parametro: item, id_campo: indexCampo, valor: \"\" };\r\n                        } else {\r\n                            return { parametro: item, id_campo: \"\", valor: \"\" };\r\n                        }\r\n                    });\r\n\r\n                    setListaCamposPorParametroTemporal({ data: parametrosCampos });\r\n\r\n                    // Se cargan los antecedentes, interesados y entidades del investigado\r\n                    cargarEntidadesInvestigado();\r\n                    cargarAntecedentes();\r\n                    cargarInteresados();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarAntecedentes = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'antecedente',\r\n                \"attributes\": {\r\n                    \"antecedentes\": \"antecedentes\",\r\n                    \"descripcion\": \"descripcion\",\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"fecha_registro\": Date.now(),\r\n                    \"id_dependencia\": -1,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n        GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n\r\n                    setAntecedentesLista(parametrosCampos);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarInteresados = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"interesado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"tipo_documento\": \"1\",\r\n                    \"numero_documento\": \"1\",\r\n                    \"primer_nombre\": \"1\",\r\n                    \"segundo_nombre\": \"1\",\r\n                    \"primer_apellido\": \"1\",\r\n                    \"segundo_apellido\": \"1\",\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setInteresadosLista(parametrosCampos);\r\n                } else {\r\n                    setModalState({ title: \"Datos del interesado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarEntidadesInvestigado = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"entidad_investigado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": \"1\",\r\n                    \"requiere_registro\": true,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n\r\n                        var nombreInvestigado = item.attributes.nombre_investigado;\r\n                        var cargoInvestigado = item.attributes.cargo;\r\n                        var entidadInvestigado = item.attributes.nombre_entidad;\r\n\r\n                        if (nombreInvestigado == null) {\r\n                            item.attributes.nombre_investigado = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (cargoInvestigado == null) {\r\n                            item.attributes.cargo = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (entidadInvestigado == null) {\r\n                            item.attributes.nombre_entidad = \"NO_APLICA\";\r\n                        }\r\n\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setEntidadesInvestigadoLista(parametrosCampos);\r\n                    setCargosInvestigadoLista(parametrosCampos);\r\n                    setEntidadInvestigadoLista(parametrosCampos);\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Entidades del investigado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const descargarArchivo = () => {\r\n        try {\r\n            window.showSpinner(true);\r\n\r\n            var params = getListaCamposPorParametroTemporal.data.map(item => {\r\n                return {\r\n                    \"param\": item.parametro,\r\n                    \"value\": item.valor\r\n                };\r\n            });\r\n            // console.log(\"######params#####\");\r\n            // console.log(params);\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"caratulas\",\r\n                    \"attributes\": {\r\n                        \"params\": params,\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.getByDataGeneric('caratulas/plantilla-diligenciada/' + caratulaId, data).then(\r\n                datos => {\r\n                    window.showSpinner(false);\r\n                    if (!datos.error) {\r\n                        downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"pdf\");\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: \", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    function downloadBase64File(contentType, base64Data, fileName) {\r\n        const linkSource = `data:${contentType};base64,${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <ModalGen data={modalState} />\r\n            {getListaParametros != null ?\r\n                <>\r\n                    <div className='col-md-12'>\r\n                        <label>PARÁMETROS DE LA PLANTILLA</label>\r\n                    </div>\r\n                    <div className='col-md-12 mt-2 mb-2'>\r\n                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                            columns={columns}\r\n                            data={getListaParametros.params}\r\n                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                            striped\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='col-md-12 mt-4 mb-2 text-center'>\r\n                        <button type=\"button\" onClick={() => descargarArchivo()} className=\"btn btn-rounded btn-primary\" title='Descargar'><i className=\"fas fa-file-pdf\"></i> Descargar carátula</button>\r\n                    </div>\r\n                </>\r\n                :\r\n                <div className='col-md-12'>\r\n                    <label>Cargando parametros de la plantilla...</label>\r\n                </div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CaratulasParametrosPlantillaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}