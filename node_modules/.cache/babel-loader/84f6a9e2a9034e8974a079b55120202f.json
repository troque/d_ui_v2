{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ClasificacionRadicado\\\\ClasificacionRadicado.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { Navigate } from \"react-router-dom\";\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\nimport ClasificacionRadicadoApi from '../../Api/Services/ClasificacionRadicadoApi';\nimport { Link } from \"react-router-dom\";\nimport 'react-datetime/css/react-datetime.css';\nimport 'moment/locale/es';\nimport { getUser } from '../../../components/Utils/Common';\nimport { useLocation } from 'react-router-dom';\nimport DatePerson from \"../../DatePerson/DatePerson\";\nimport '../../Utils/Constants';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ClasificacionRadicado(props) {\n  _s();\n\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [listaTipoExpediente, setListaTipoExpediente] = useState({\n    data: {}\n  });\n  const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\n  const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({\n    data: {}\n  });\n  const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\n  const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\n  const [listaTipoRespuesta, setListaTipoRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\n  const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\n  const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\n  const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\n  const [listaTiposQueja, setListaTiposQueja] = useState({\n    data: {}\n  });\n  const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\n  const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\n  const [fechaTermino, setFechaTermino] = useState(null);\n  const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\n  const [getNombreUsuario, setNombreUsuario] = useState(\"\");\n  const [getNombreRol, setNombreRol] = useState(\"\");\n  const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  /**\r\n   * Validación de los caracteres especiales en los campos de texto\r\n   * @param {*} str \r\n   * @returns \r\n   */\n\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n  /**\r\n   * Funcion principal\r\n   */\n\n\n  useEffect(() => {\n    async function fetchData() {\n      //window.showSpinner(true);\n      setNombreUsuario(getUser().nombre);\n      setNombreRol(getUser().roles);\n      GenericApi.getGeneric(\"tipo-respuesta\").then(datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1));\n      GenericApi.getGeneric(\"mas-tipo-expediente\").then(datos => {\n        if (!datos.error) {\n          setListaTipoExpediente(datos);\n          setRespuestaTipoExpediente(true);\n        } else {\n          window.showModal(1);\n        }\n      });\n      GenericApi.getGeneric(\"mas-tipo-derecho-peticion\").then(datos => {\n        if (!datos.error) {\n          if (from.subTipoExpediente) {\n            if (from.subTipoExpediente.id_tipo_derecho_peticion) {\n              datos.data = datos.data.filter(x => x[\"id\"] != from.subTipoExpediente.id_tipo_derecho_peticion);\n            }\n          }\n\n          setListaDerechoPeticion(datos);\n          setRespuestaDerechoPeticion(true);\n        } else {\n          window.showModal(1);\n        }\n      });\n      GenericApi.getGeneric(\"mas-termino-respuesta\").then(datos => {\n        if (!datos.error) {\n          if (from.subTipoExpediente) {\n            if (from.subTipoExpediente.id_termino_respuesta) {\n              datos.data = datos.data.filter(x => x[\"id\"] != from.subTipoExpediente.id_termino_respuesta);\n            }\n          }\n\n          setListaTerminosRespuesta(datos);\n          setRespuestaTerminosRespuesta(true);\n        } else {\n          window.showModal(1);\n        }\n      });\n      GenericApi.getGeneric(\"mas-tipo-queja\").then(datos => {\n        if (!datos.error) {\n          setListaTiposQueja(datos);\n          setRespuestaTiposQueja(true);\n        } else {\n          window.showModal(1);\n        }\n      });\n      setResultDiasNoLaborales([]);\n      ParametrosMasApi.getAllDiasNoLaborales().then(datos => {\n        if (!datos.error) {\n          var data = [];\n\n          for (var i in datos.data) {\n            var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\n            var result = new Date(date);\n            result.setDate(result.getDate() + 1);\n            data.push(i, date);\n          }\n\n          setResultDiasNoLaborales(data); //console.log(resultDiasNoLaborales);\n        } else {\n          window.showModal(1);\n        }\n      });\n      obtenerParametros();\n    }\n\n    fetchData();\n  }, []);\n  /**\r\n   * Funcion que obtiene información de las parámetricas.\r\n   * Ejm: número máximo y mínimo de carácteres \r\n   */\n\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      }; //buscamos el parametro\n\n      ParametrosMasApi.getParametroPorNombre(data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          window.showModal(1);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const disableCustomDt = current => {\n    return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));\n  };\n\n  let selectChangeTipoRespuesta = e => {\n    setSelectedTipoRespuesta(e);\n  };\n\n  let selectChangeTipoExpediente = e => {\n    setCountTextArea(0);\n    setSelectedTipoExpediente(e);\n  };\n\n  let selectChangeTipoDerechoPeticion = e => {\n    setCountTextArea(0);\n    setSelectedDerechoPeticion(e);\n  };\n\n  let selectChangeTerminoRespuesta = e => {\n    setSelectedTerminosRespuesta(e);\n  };\n\n  let selectChangeTiposQueja = e => {\n    setSelectedTiposQueja(e);\n  }; //Componetes\n\n\n  const selectTipoRespuesta = () => {\n    return listaTipoRespuesta.data.map((tipo_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: tipo_respuesta.id,\n        children: tipo_respuesta.attributes.nombre\n      }, tipo_respuesta.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTipoExpediente = () => {\n    return listaTipoExpediente.data.map((expediente, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: expediente.id,\n        children: expediente.attributes.nombre\n      }, expediente.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTipoDerechoPeticion = () => {\n    return listaTipoDerechoPeticion.data.map((derecho_peticion, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: derecho_peticion.id,\n        children: derecho_peticion.attributes.nombre\n      }, derecho_peticion.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTerminosRespuesta = () => {\n    return listaTerminosRespuesta.data.map((termino_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: termino_respuesta.id,\n        children: termino_respuesta.attributes.nombre\n      }, termino_respuesta.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTiposQueja = () => {\n    return listaTiposQueja.data.map((tipo_queja, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: tipo_queja.id,\n        children: tipo_queja.attributes.nombre\n      }, tipo_queja.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTiposQuejaExterna = () => {\n    return listaTiposQueja.data.map((tipo_queja, i) => {\n      if (from.subTipoExpediente) {\n        if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_EXTERNA && from.subTipoExpediente.id_tipo_expediente != selectedTipoExpediente) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tipo_queja.id,\n            children: tipo_queja.attributes.nombre\n          }, tipo_queja.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this);\n        }\n      } else {\n        if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_EXTERNA) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tipo_queja.id,\n            children: tipo_queja.attributes.nombre\n          }, tipo_queja.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this);\n        }\n      }\n    });\n  };\n\n  const selectTiposQuejaInterna = () => {\n    return listaTiposQueja.data.map((tipo_queja, i) => {\n      if (from.subTipoExpediente) {\n        if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_INTERNA && from.subTipoExpediente.id_tipo_expediente != selectedTipoExpediente) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tipo_queja.id,\n            children: tipo_queja.attributes.nombre\n          }, tipo_queja.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }, this);\n        }\n      } else {\n        if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_INTERNA) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tipo_queja.id,\n            children: tipo_queja.attributes.nombre\n          }, tipo_queja.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 29\n          }, this);\n        }\n      }\n    });\n  };\n\n  const alertaPorTipoDerechoPeticion = i => {\n    return listaTipoDerechoPeticion.data[i - 1].attributes.observacion;\n  };\n\n  const enviarDatosControlInterno = datos => {\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"clasificacion_radicado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n          \"id_etapa\": props.getParametros.id_etapa,\n          \"id_tipo_expediente\": datos.selectedTipoExpediente,\n          \"observaciones\": null,\n          \"id_tipo_queja\": datos.tipo_queja,\n          \"id_termino_respuesta\": null,\n          \"fecha_termino\": null,\n          \"hora_termino\": null,\n          \"gestion_juridica\": false,\n          \"estado\": true,\n          \"id_estado_reparto\": 2,\n          \"id_derecho_peticion\": null,\n          \"oficina_control_interno\": true,\n          \"created_user\": getNombreUsuario,\n          \"reclasificacion\": props.getParametros.reclasificacion\n        }\n      }\n    };\n    ClasificacionRadicadoApi.addClasificacionRadicado(data).then(datos => {\n      if (!datos.error) {} else {\n        setModalState({\n          title: \"Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoLista',\n          from: {\n            from\n          }\n        });\n      }\n\n      window.showSpinner(false);\n    });\n  };\n\n  const enviarDatos = datos => {\n    window.showSpinner(true);\n    let data; //TIPO EXPEDIENTE => DERECHO DE PETICION => COPIAS \n\n    if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION && selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.COPIAS) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": datos.observaciones,\n            \"id_tipo_queja\": null,\n            \"id_termino_respuesta\": null,\n            \"fecha_termino\": null,\n            \"hora_termino\": null,\n            \"gestion_juridica\": false,\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": selectedTipoDerechoPeticion,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    } //TIPO EXPEDIENTE => DERECHO DE PETICION => GENERAL     \n    else if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION && selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.GENERAL) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": datos.observaciones,\n            \"id_tipo_queja\": null,\n            \"id_termino_respuesta\": null,\n            \"fecha_termino\": null,\n            \"hora_termino\": null,\n            \"gestion_juridica\": datos.gestion_juridica === 'true',\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": selectedTipoDerechoPeticion,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    } //TIPO EXPEDIENTE => DERECHO DE PETICION => DERECHO DE PETICION => ALERTA CONTROL POLITICO\n    else if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION && selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.ALERTA) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": datos.observaciones,\n            \"id_tipo_queja\": null,\n            \"id_termino_respuesta\": null,\n            \"fecha_termino\": null,\n            \"hora_termino\": null,\n            \"gestion_juridica\": datos.gestion_juridica === 'true',\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": selectedTipoDerechoPeticion,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    } //TIPO EXPEDIENTE => PODER REFERENTE A SOLICITUD\n\n\n    if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": null,\n            \"id_tipo_queja\": datos.tipo_queja,\n            \"id_termino_respuesta\": null,\n            \"fecha_termino\": null,\n            \"hora_termino\": null,\n            \"gestion_juridica\": false,\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": null,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    } //TIPO EXPEDIENTE => QUEJA\n\n\n    if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": null,\n            \"id_tipo_queja\": datos.tipo_queja,\n            \"id_termino_respuesta\": null,\n            \"fecha_termino\": null,\n            \"hora_termino\": null,\n            \"gestion_juridica\": false,\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": null,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    } //TIPO EXPEDIENTE => TUTELA => TERMINO RESPUESTA = DIAS\n\n\n    if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA && datos.termino_rta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": null,\n            \"id_tipo_queja\": null,\n            \"id_termino_respuesta\": selectedTerminosRespuesta,\n            \"fecha_termino\": datos.fechaTermino ? datos.fechaTermino : fechaTermino,\n            \"hora_termino\": null,\n            \"gestion_juridica\": false,\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": null,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    } //TIPO EXPEDIENTE => TUTELA => TERMINO RESPUESTA = HORAS\n    else if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA && datos.termino_rta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\n      data = {\n        \"data\": {\n          \"type\": \"clasificacion_radicado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n            \"id_etapa\": props.getParametros.id_etapa,\n            \"id_tipo_expediente\": selectedTipoExpediente,\n            \"observaciones\": null,\n            \"id_tipo_queja\": null,\n            \"id_termino_respuesta\": selectedTerminosRespuesta,\n            \"fecha_termino\": new Date(),\n            \"hora_termino\": datos.horasTermino,\n            \"gestion_juridica\": false,\n            \"estado\": true,\n            \"id_estado_reparto\": 2,\n            \"id_tipo_derecho_peticion\": null,\n            \"oficina_control_interno\": false,\n            \"created_user\": getNombreUsuario,\n            \"reclasificacion\": props.getParametros.reclasificacion\n          }\n        }\n      };\n    }\n\n    console.log(\"DATA 4\");\n    console.log(JSON.stringify(data));\n    console.log(\"DATA 4\");\n    ClasificacionRadicadoApi.addClasificacionRadicado(data).then(datos => {\n      if (!datos.error) {\n        from.cambiaColorClasificacionRadicado = \"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";\n\n        if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION) {\n          setModalState({\n            title: \"Reclasifiación del expediente\",\n            message: \"El proceso disciplinario se asigna a: \" + datos.data.attributes.funcionario_actual.nombre + \" \" + datos.data.attributes.funcionario_actual.apellido,\n            show: true,\n            redirect: '/MisPendientes'\n          });\n        } else if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.CLASIFICACION) {\n          setModalState({\n            title: \"Clasificación del radicado\",\n            message: \"Registro Exitoso\",\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            }\n          });\n        }\n      } else {\n        setModalState({\n          title: \"Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoLista',\n          from: {\n            from\n          }\n        });\n      }\n\n      window.showSpinner(false);\n    });\n  }; // COMPONENTE CONFIRMACION OFICINA DE CONTROL INTERNO DISCIPLINARIO\n\n\n  const componenteTipoRespuesta = tipo_respuesta => {\n    // CONFIRMACION OFICINA DE CONTRO INTERNO = SI\n    if (tipo_respuesta === global.Constants.TIPO_RESPUESTA.SI) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            selectedTipoExpediente: 3,\n            tipo_queja: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.tipo_queja) {\n              errores.tipo_queja = 'Debe seleccionar un tipo de queja';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref) => {\n            let {\n              resetForm\n            } = _ref;\n            enviarDatosControlInterno(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"tipo_queja\",\n                children: [\"Ingrese Tipo de Queja \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 83\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: \"select\",\n                className: \"form-control\",\n                id: \"tipo_queja\",\n                name: \"tipo_queja\",\n                children: /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Por favor seleccione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-window-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 665,\n                    columnNumber: 86\n                  }, this), \" Cancelar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } /// CONFIRMACION TIPO DE CLASIFICADO = NO\n    else if (tipo_respuesta === global.Constants.TIPO_RESPUESTA.NO) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ingresoTipoExpediente\",\n            children: [\"Tipo de expediente \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 83\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"ingresoTipoExpediente\",\n            name: \"ingresoTipoExpediente\",\n            value: selectedTipoExpediente,\n            onChange: e => selectChangeTipoExpediente(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Por favor seleccione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 29\n            }, this), respuestaTipoExpediente ? selectTipoExpediente() : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 21\n        }, this), selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : '']\n      }, void 0, true);\n    }\n  }; // COMPOENENTE TIPO EXPEDIENTE\n\n\n  const componenteTipoExpediente = tipo_expediente => {\n    // TIPO DE EXPEDIENTE = DERECHO DE PETICION\n    if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ingresoDerechoPeticion\",\n            children: [\"Tipo de derecho de petici\\xF3n \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 93\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"ingresoDerechoPeticion\",\n            name: \"ingresoDerechoPeticion\",\n            value: selectedTipoDerechoPeticion,\n            onChange: e => selectChangeTipoDerechoPeticion(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Por favor seleccione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 29\n            }, this), respuestaTipoDerechoPeticion ? selectTipoDerechoPeticion() : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 21\n        }, this), selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.COPIAS ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.COPIAS) : '', selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.GENERAL ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.GENERAL) : '', selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.ALERTA ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.ALERTA) : '']\n      }, void 0, true);\n    } // TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            tipo_queja: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.tipo_queja) {\n              errores.tipo_queja = 'Debe seleccionar un tipo de queja';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref2) => {\n            let {\n              resetForm\n            } = _ref2;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"tipo_queja\",\n                children: [\"Ingrese Tipo de Queja \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 756,\n                  columnNumber: 83\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: \"select\",\n                className: \"form-control\",\n                id: \"tipo_queja\",\n                name: \"tipo_queja\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Por favor seleccione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 37\n                }, this), respuestaTiposQueja ? selectTiposQuejaExterna() : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-window-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 769,\n                    columnNumber: 86\n                  }, this), \" Cancelar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } // TIPO DE EXPEDIENTE = QUEJA\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            tipo_queja: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.tipo_queja) {\n              errores.tipo_queja = 'Debe seleccionar un tipo de queja';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref3) => {\n            let {\n              resetForm\n            } = _ref3;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"tipo_queja\",\n                children: [\"Ingrese Tipo de Queja \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 805,\n                  columnNumber: 83\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: \"select\",\n                className: \"form-control\",\n                id: \"tipo_queja\",\n                name: \"tipo_queja\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Por favor seleccione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 808,\n                  columnNumber: 37\n                }, this), respuestaTiposQueja ? selectTiposQuejaExterna() : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 84\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-window-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 86\n                  }, this), \" Cancelar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } // TIPO DE EXPEDIENTE = TUTELA\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ingresoTipoRtaTutela\",\n          children: [\"Ingrese termino de respuesta \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 88\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"termino_rta\",\n          name: \"termino_rta\",\n          value: selectedTerminosRespuesta,\n          onChange: e => selectChangeTerminoRespuesta(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"{selectedTerminosRespuesta}\",\n            children: \"Por favor seleccione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 25\n          }, this), respuestaTerminosRespuesta ? selectTerminosRespuesta() : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 21\n        }, this), selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.DIAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS) : '', selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.HORAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS) : '']\n      }, void 0, true);\n    }\n  }; // COMOPNENTE TIPO DERECHO DE PETICION\n\n\n  const componenteTipoDerechoPeticion = tipo_derecho_peticion => {\n    // TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\n    if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.COPIAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            tipo_derecho_peticion: tipo_derecho_peticion\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref4) => {\n            let {\n              resetForm\n            } = _ref4;\n            enviarDatos(valores);\n          },\n          children: _ref5 => {\n            let {\n              errors\n            } = _ref5;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 899,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: alertaPorTipoDerechoPeticion(tipo_derecho_peticion)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 900,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 898,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Observaciones\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 904,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    as: \"textarea\",\n                    className: \"form-control\",\n                    id: \"observaciones\",\n                    name: \"observaciones\",\n                    rows: \"4\",\n                    placeholder: \"Escriba en este espacio las observaciones\",\n                    maxLength: getMaximoTextArea,\n                    minLength: getMinimoTextArea\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 905,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-right\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-primary\",\n                      children: [countTextArea, \" / \", getMaximoTextArea]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 908,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 907,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"observaciones\",\n                    component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: errors.observaciones\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 910,\n                      columnNumber: 94\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 910,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 916,\n                    columnNumber: 87\n                  }, this), \" Registrar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 916,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/ClasificacionRadicadoLista/`,\n                  state: {\n                    from: from\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-window-close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 919,\n                      columnNumber: 90\n                    }, this), \" Cancelar\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 919,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 918,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 914,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } // TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\n    else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.GENERAL) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            gestion_juridica: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n\n            if (!valores.gestion_juridica) {\n              errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref6) => {\n            let {\n              resetForm\n            } = _ref6;\n            enviarDatos(valores);\n          },\n          children: _ref7 => {\n            let {\n              errors\n            } = _ref7;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 972,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: alertaPorTipoDerechoPeticion(tipo_derecho_peticion)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 973,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 971,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"ingresoTipoExpediente\",\n                  children: [\"Requiere gesti\\xF3n juridica \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 976,\n                    columnNumber: 102\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 976,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"select\",\n                  className: \"form-control\",\n                  id: \"gestion_juridica\",\n                  name: \"gestion_juridica\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Por favor seleccione\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 978,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"true\",\n                    children: \"Si\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 979,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"false\",\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 980,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 977,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Observaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 983,\n                  columnNumber: 37\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 983,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"textarea\",\n                  className: \"form-control\",\n                  id: \"observaciones\",\n                  name: \"observaciones\",\n                  rows: \"4\",\n                  placeholder: \"Escriba en este espacio las observaciones\",\n                  maxLength: getMaximoTextArea,\n                  minLength: getMinimoTextArea\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 984,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-primary\",\n                    children: [countTextArea, \" / \", getMaximoTextArea]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 987,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 986,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"observaciones\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.observaciones\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 989,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 989,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 994,\n                    columnNumber: 87\n                  }, this), \" Registrar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 994,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/ClasificacionRadicadoLista/`,\n                  state: {\n                    from: from\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-window-close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 996,\n                      columnNumber: 90\n                    }, this), \" Cancelar\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 996,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 995,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 992,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 967,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } // TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\n    else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.ALERTA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            gestion_juridica: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n\n            if (!valores.gestion_juridica) {\n              errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref8) => {\n            let {\n              resetForm\n            } = _ref8;\n            enviarDatos(valores);\n          },\n          children: _ref9 => {\n            let {\n              errors\n            } = _ref9;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1049,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: alertaPorTipoDerechoPeticion(tipo_derecho_peticion)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1050,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1048,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"ingresoTipoExpediente\",\n                  children: [\"Requiere gesti\\xF3n juridica \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1053,\n                    columnNumber: 102\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1053,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"select\",\n                  className: \"form-control\",\n                  id: \"gestion_juridica\",\n                  name: \"gestion_juridica\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Por favor seleccione\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1055,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"true\",\n                    children: \"Si\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1056,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"false\",\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1057,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1054,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Observaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1061,\n                  columnNumber: 37\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1061,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"textarea\",\n                  className: \"form-control\",\n                  id: \"observaciones\",\n                  name: \"observaciones\",\n                  rows: \"4\",\n                  placeholder: \"Escriba en este espacio las observaciones\",\n                  maxLength: getMaximoTextArea,\n                  minLength: getMinimoTextArea\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1062,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-primary\",\n                    children: [countTextArea, \" / \", getMaximoTextArea]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1065,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1064,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"observaciones\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.observaciones\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1067,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1067,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-content block-content-full text-right\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1070,\n                      columnNumber: 91\n                    }, this), \" Registrar\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1070,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/ClasificacionRadicadoLista/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn btn-danger\",\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fas fa-window-close\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1072,\n                        columnNumber: 94\n                      }, this), \" Cancelar\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1072,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1071,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1069,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1046,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1044,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  const handleCallbackFechaTermino = childData => {\n    try {\n      setFechaTermino(childData);\n    } catch (error) {}\n  }; // COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\n\n\n  const componenteTerminosRespuesta = termino_respuesta => {\n    //TERMINO TUTELA = DIAS      \n    if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            termino_rta: termino_respuesta,\n            horasTermino: '',\n            fechaTermino: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.fechaTermino && !fechaTermino) {\n              errores.fechaTermino = 'Debe seleccionar el termino de respuesta';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref10) => {\n            let {\n              resetForm\n            } = _ref10;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Fecha para termino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1128,\n                columnNumber: 33\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1128,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(DatePerson, {\n                resultDiasNoLaborales: resultDiasNoLaborales,\n                getAnosAtrasInvalidos: getAnosAtrasInvalidos,\n                parentCallback: handleCallbackFechaTermino,\n                id: \"fechaTermino\",\n                name: \"fechaTermino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1131,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1136,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-window-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1138,\n                    columnNumber: 86\n                  }, this), \" Cancelar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1138,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1137,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } //TERMINO TUTELA = HORAS     \n    else if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            termino_rta: termino_respuesta,\n            horasTermino: '',\n            fechaTermino: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.horasTermino) {\n              errores.horasTermino = 'Debe seleccionar el termino de respuesta';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref11) => {\n            let {\n              resetForm\n            } = _ref11;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Horas para termino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1179,\n                columnNumber: 33\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1179,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"number\",\n                min: \"1\",\n                max: \"23\",\n                id: \"horasTermino\",\n                name: \"horasTermino\",\n                className: \"form-control\",\n                placeholder: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1180,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1184,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1184,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1183,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ingresoTipoExpediente\",\n              children: [\"Tipo de expediente \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1207,\n                columnNumber: 91\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1207,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"ingresoTipoExpediente\",\n              name: \"ingresoTipoExpediente\",\n              value: selectedTipoExpediente,\n              onChange: e => selectChangeTipoExpediente(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Por favor seleccione\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1210,\n                columnNumber: 37\n              }, this), respuestaTipoExpediente ? selectTipoExpediente() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1208,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 21\n      }, this), selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1202,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClasificacionRadicado, \"8QKBXJEEV2tTiYMwWl/Cj9A1uH4=\", false, function () {\n  return [useLocation];\n});\n\n_c = ClasificacionRadicado;\nexport default ClasificacionRadicado;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClasificacionRadicado\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ClasificacionRadicado/ClasificacionRadicado.js"],"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","Navigate","ParametrosMasApi","ClasificacionRadicadoApi","Link","getUser","useLocation","DatePerson","ModalGen","GenericApi","ClasificacionRadicado","props","modalState","setModalState","title","message","show","listaTipoExpediente","setListaTipoExpediente","data","respuestaTipoExpediente","setRespuestaTipoExpediente","selectedTipoExpediente","setSelectedTipoExpediente","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","listaTipoDerechoPeticion","setListaDerechoPeticion","selectedTipoDerechoPeticion","setSelectedDerechoPeticion","respuestaTipoDerechoPeticion","setRespuestaDerechoPeticion","listaTipoRespuesta","setListaTipoRespuesta","selectedTipoRespuesta","setSelectedTipoRespuesta","respuestaTipoRespuesta","setRespuestaTipoRespuesta","listaTerminosRespuesta","setListaTerminosRespuesta","selectedTerminosRespuesta","setSelectedTerminosRespuesta","respuestaTerminosRespuesta","setRespuestaTerminosRespuesta","listaTiposQueja","setListaTiposQueja","selectedTiposQueja","setSelectedTiposQueja","respuestaTiposQueja","setRespuestaTiposQueja","fechaTermino","setFechaTermino","resultDiasNoLaborales","setResultDiasNoLaborales","getNombreUsuario","setNombreUsuario","getNombreRol","setNombreRol","getAnosAtrasInvalidos","setAnosAtrasInvalidos","location","from","state","containsSpecialChars","str","result","global","Constants","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","fetchData","nombre","roles","getGeneric","then","datos","error","window","showModal","subTipoExpediente","id_tipo_derecho_peticion","filter","x","id_termino_respuesta","getAllDiasNoLaborales","i","date","Date","setDate","getDate","push","obtenerParametros","getParametroPorNombre","length","map","filteredName","console","log","disableCustomDt","current","format","selectChangeTipoRespuesta","e","selectChangeTipoExpediente","selectChangeTipoDerechoPeticion","selectChangeTerminoRespuesta","selectChangeTiposQueja","selectTipoRespuesta","tipo_respuesta","id","attributes","selectTipoExpediente","expediente","selectTipoDerechoPeticion","derecho_peticion","selectTerminosRespuesta","termino_respuesta","selectTiposQueja","tipo_queja","selectTiposQuejaExterna","CLASIFICACION_RADICADO","TIPO_QUEJA_EXTERNA","id_tipo_expediente","selectTiposQuejaInterna","TIPO_QUEJA_INTERNA","alertaPorTipoDerechoPeticion","observacion","enviarDatosControlInterno","showSpinner","getParametros","id_proceso_disciplinario","id_etapa","reclasificacion","addClasificacionRadicado","toString","redirect","enviarDatos","TIPOS_EXPEDIENTES","DERECHO_PETICION","DERECHOS_PETICION","COPIAS","observaciones","GENERAL","gestion_juridica","ALERTA","PODER_REFERENTE","QUEJA","TUTELA","termino_rta","TERMINOS_RESPUESTA","DIAS","HORAS","horasTermino","JSON","stringify","cambiaColorClasificacionRadicado","tipo_clasificacion","TIPO_CLASIFICACION","VALIDAR_CLASIFICACION","funcionario_actual","apellido","CLASIFICACION","componenteTipoRespuesta","TIPO_RESPUESTA","SI","valores","errores","resetForm","NO","target","value","componenteTipoExpediente","tipo_expediente","componenteTipoDerechoPeticion","componenteTerminosRespuesta","tipo_derecho_peticion","errors","handleCallbackFechaTermino","childData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\r\nimport ClasificacionRadicadoApi from '../../Api/Services/ClasificacionRadicadoApi';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport 'moment/locale/es';\r\nimport { getUser } from '../../../components/Utils/Common';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DatePerson from \"../../DatePerson/DatePerson\";\r\nimport '../../Utils/Constants';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\n\r\nfunction ClasificacionRadicado (props){\r\n    \r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n\r\n    const [listaTipoExpediente, setListaTipoExpediente] = useState({ data: {} });\r\n\r\n    const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\r\n    const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\r\n\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n\r\n    const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({ data: {} });\r\n    const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\r\n    const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\r\n\r\n    const [listaTipoRespuesta, setListaTipoRespuesta] = useState({ data: {} });\r\n    const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\r\n    const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\r\n\r\n    const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({ data: {} });\r\n    const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\r\n    const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\r\n\r\n    const [listaTiposQueja, setListaTiposQueja] = useState({ data: {} });\r\n    const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\r\n    const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\r\n\r\n    const [fechaTermino, setFechaTermino] = useState(null);\r\n    const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\r\n\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [getNombreRol, setNombreRol] = useState(\"\");\r\n    const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n\r\n    /**\r\n     * Validación de los caracteres especiales en los campos de texto\r\n     * @param {*} str \r\n     * @returns \r\n     */\r\n    function containsSpecialChars(str) {\r\n        \r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Funcion principal\r\n     */\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            //window.showSpinner(true);\r\n            setNombreUsuario(getUser().nombre);\r\n            setNombreRol(getUser().roles);\r\n\r\n            GenericApi.getGeneric(\"tipo-respuesta\").then(\r\n                datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1)\r\n            )\r\n \r\n            GenericApi.getGeneric(\"mas-tipo-expediente\").then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setListaTipoExpediente(datos);\r\n                        setRespuestaTipoExpediente(true);\r\n                    }\r\n                    else {\r\n                        window.showModal(1);\r\n                    }\r\n                }\r\n            )\r\n\r\n            GenericApi.getGeneric(\"mas-tipo-derecho-peticion\").then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (from.subTipoExpediente) {\r\n                            if (from.subTipoExpediente.id_tipo_derecho_peticion) {\r\n                                datos.data = (datos.data.filter(x => x[\"id\"] != from.subTipoExpediente.id_tipo_derecho_peticion))\r\n                            }\r\n                        }\r\n\r\n                        setListaDerechoPeticion(datos);\r\n                        setRespuestaDerechoPeticion(true);\r\n                    }\r\n                    else {\r\n                        window.showModal(1)\r\n                    }\r\n                }\r\n            )\r\n\r\n            GenericApi.getGeneric(\"mas-termino-respuesta\").then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (from.subTipoExpediente) {\r\n                            if (from.subTipoExpediente.id_termino_respuesta) {\r\n                                datos.data = (datos.data.filter(x => x[\"id\"] != from.subTipoExpediente.id_termino_respuesta))\r\n                            }\r\n                        }\r\n\r\n                        setListaTerminosRespuesta(datos);\r\n                        setRespuestaTerminosRespuesta(true);\r\n                    }\r\n                    else {\r\n                        window.showModal(1)\r\n                    }\r\n                }\r\n            )\r\n\r\n            GenericApi.getGeneric(\"mas-tipo-queja\").then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        setListaTiposQueja(datos);\r\n                        setRespuestaTiposQueja(true);\r\n                    }\r\n                    else {\r\n                        window.showModal(1)\r\n                    }\r\n                }\r\n            )\r\n\r\n            setResultDiasNoLaborales([]);\r\n            ParametrosMasApi.getAllDiasNoLaborales().then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        var data = [];\r\n                        for (var i in datos.data) {\r\n                            var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\r\n                            var result = new Date(date);\r\n                            result.setDate(result.getDate() + 1);\r\n                            data.push(i, date);\r\n                        }\r\n\r\n                        setResultDiasNoLaborales(data);\r\n                        //console.log(resultDiasNoLaborales);\r\n                    } else {\r\n                        window.showModal(1);\r\n                    }\r\n\r\n                }\r\n\r\n            )\r\n\r\n            obtenerParametros();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    /**\r\n     * Funcion que obtiene información de las parámetricas.\r\n     * Ejm: número máximo y mínimo de carácteres \r\n     */\r\n    const obtenerParametros = () => {\r\n        try {\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            ParametrosMasApi.getParametroPorNombre(data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => (\r\n                                setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        window.showModal(1);\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const disableCustomDt = current => {\r\n        return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));\r\n    }\r\n\r\n\r\n    let selectChangeTipoRespuesta = (e) => {\r\n        setSelectedTipoRespuesta(e);\r\n    }\r\n\r\n    let selectChangeTipoExpediente = (e) => {\r\n        setCountTextArea(0)\r\n        setSelectedTipoExpediente(e);\r\n    }\r\n\r\n    let selectChangeTipoDerechoPeticion = (e) => {\r\n        setCountTextArea(0)\r\n        setSelectedDerechoPeticion(e);\r\n    }\r\n\r\n    let selectChangeTerminoRespuesta = (e) => {\r\n        setSelectedTerminosRespuesta(e);\r\n    }\r\n\r\n    let selectChangeTiposQueja = (e) => {\r\n        setSelectedTiposQueja(e);\r\n    }\r\n\r\n       //Componetes\r\n\r\n       const selectTipoRespuesta = () => {\r\n        return (\r\n            listaTipoRespuesta.data.map((tipo_respuesta, i) => {\r\n                return (\r\n                    <option key={tipo_respuesta.id} value={tipo_respuesta.id}>{tipo_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTipoExpediente = () => {\r\n        return (\r\n            listaTipoExpediente.data.map((expediente, i) => {\r\n                return (\r\n                    <option key={expediente.id} value={expediente.id}>{expediente.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTipoDerechoPeticion = () => {\r\n        return (\r\n            listaTipoDerechoPeticion.data.map((derecho_peticion, i) => {\r\n                return (\r\n                    <option key={derecho_peticion.id} value={derecho_peticion.id}>{derecho_peticion.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTerminosRespuesta = () => {\r\n        return (\r\n            listaTerminosRespuesta.data.map((termino_respuesta, i) => {\r\n                return (\r\n                    <option key={termino_respuesta.id} value={termino_respuesta.id}>{termino_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTiposQueja = () => {\r\n        return (\r\n            listaTiposQueja.data.map((tipo_queja, i) => {\r\n                return (\r\n                    <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTiposQuejaExterna = () => {\r\n        return (\r\n            listaTiposQueja.data.map((tipo_queja, i) => {\r\n                if (from.subTipoExpediente) {\r\n\r\n                    if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_EXTERNA && from.subTipoExpediente.id_tipo_expediente != selectedTipoExpediente) {\r\n                        return (\r\n                            <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                        )\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_EXTERNA) {\r\n                        return (\r\n                            <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                        )\r\n                    }\r\n                }\r\n\r\n\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTiposQuejaInterna = () => {\r\n        return (\r\n            listaTiposQueja.data.map((tipo_queja, i) => {\r\n                if (from.subTipoExpediente) {\r\n                    if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_INTERNA && from.subTipoExpediente.id_tipo_expediente != selectedTipoExpediente) {\r\n                        return (\r\n                            <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                        )\r\n                    }\r\n                }\r\n                else{\r\n                    if (tipo_queja.id == global.Constants.CLASIFICACION_RADICADO.TIPO_QUEJA_INTERNA) {\r\n                        return (\r\n                            <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                        )\r\n                    }\r\n                }\r\n                \r\n\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    const alertaPorTipoDerechoPeticion = (i) => {\r\n        return (\r\n            listaTipoDerechoPeticion.data[i - 1].attributes.observacion\r\n        )\r\n    }\r\n\r\n\r\n    const enviarDatosControlInterno = (datos) => {\r\n\r\n        window.showSpinner(true);\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                    \"id_etapa\": props.getParametros.id_etapa,\r\n                    \"id_tipo_expediente\": datos.selectedTipoExpediente,\r\n                    \"observaciones\": null,\r\n                    \"id_tipo_queja\": datos.tipo_queja,\r\n                    \"id_termino_respuesta\": null,\r\n                    \"fecha_termino\": null,\r\n                    \"hora_termino\": null,\r\n                    \"gestion_juridica\": false,\r\n                    \"estado\": true,\r\n                    \"id_estado_reparto\": 2,\r\n                    \"id_derecho_peticion\": null,\r\n                    \"oficina_control_interno\": true,\r\n                    \"created_user\": getNombreUsuario,\r\n                    \"reclasificacion\": props.getParametros.reclasificacion,\r\n                }\r\n            }\r\n        }\r\n\r\n        ClasificacionRadicadoApi.addClasificacionRadicado(data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from} });\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n\r\n    const enviarDatos = (datos) => {\r\n        window.showSpinner(true);\r\n        let data;\r\n\r\n        //TIPO EXPEDIENTE => DERECHO DE PETICION => COPIAS \r\n        if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION \r\n            && selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.COPIAS) {\r\n\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": datos.observaciones,\r\n                        \"id_tipo_queja\": null,\r\n                        \"id_termino_respuesta\": null,\r\n                        \"fecha_termino\": null,\r\n                        \"hora_termino\": null,\r\n                        \"gestion_juridica\": false,\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": selectedTipoDerechoPeticion,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //TIPO EXPEDIENTE => DERECHO DE PETICION => GENERAL     \r\n        else if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION  \r\n            && selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.GENERAL ) {\r\n\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": datos.observaciones,\r\n                        \"id_tipo_queja\": null,\r\n                        \"id_termino_respuesta\": null,\r\n                        \"fecha_termino\": null,\r\n                        \"hora_termino\": null,\r\n                        \"gestion_juridica\": (datos.gestion_juridica === 'true'),\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": selectedTipoDerechoPeticion,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //TIPO EXPEDIENTE => DERECHO DE PETICION => DERECHO DE PETICION => ALERTA CONTROL POLITICO\r\n        else if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION  \r\n            && selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.ALERTA) {\r\n\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\":props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": datos.observaciones,\r\n                        \"id_tipo_queja\": null,\r\n                        \"id_termino_respuesta\": null,\r\n                        \"fecha_termino\": null,\r\n                        \"hora_termino\": null,\r\n                        \"gestion_juridica\": (datos.gestion_juridica === 'true'),\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": selectedTipoDerechoPeticion,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //TIPO EXPEDIENTE => PODER REFERENTE A SOLICITUD\r\n        if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ) {\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\":props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": null,\r\n                        \"id_tipo_queja\": datos.tipo_queja,\r\n                        \"id_termino_respuesta\": null,\r\n                        \"fecha_termino\": null,\r\n                        \"hora_termino\": null,\r\n                        \"gestion_juridica\": false,\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": null,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //TIPO EXPEDIENTE => QUEJA\r\n        if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\r\n\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": null,\r\n                        \"id_tipo_queja\": datos.tipo_queja,\r\n                        \"id_termino_respuesta\": null,\r\n                        \"fecha_termino\": null,\r\n                        \"hora_termino\": null,\r\n                        \"gestion_juridica\": false,\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": null,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //TIPO EXPEDIENTE => TUTELA => TERMINO RESPUESTA = DIAS\r\n        if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA \r\n            && datos.termino_rta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": null,\r\n                        \"id_tipo_queja\": null,\r\n                        \"id_termino_respuesta\": selectedTerminosRespuesta,\r\n                        \"fecha_termino\": datos.fechaTermino ? datos.fechaTermino : fechaTermino,\r\n                        \"hora_termino\": null,\r\n                        \"gestion_juridica\": false,\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": null,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //TIPO EXPEDIENTE => TUTELA => TERMINO RESPUESTA = HORAS\r\n        else if (selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA \r\n            && datos.termino_rta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\r\n            data = {\r\n                \"data\": {\r\n                    \"type\": \"clasificacion_radicado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                        \"id_etapa\": props.getParametros.id_etapa,\r\n                        \"id_tipo_expediente\": selectedTipoExpediente,\r\n                        \"observaciones\": null,\r\n                        \"id_tipo_queja\": null,\r\n                        \"id_termino_respuesta\": selectedTerminosRespuesta,\r\n                        \"fecha_termino\": new Date(),\r\n                        \"hora_termino\": datos.horasTermino,\r\n                        \"gestion_juridica\": false,\r\n                        \"estado\": true,\r\n                        \"id_estado_reparto\": 2,\r\n                        \"id_tipo_derecho_peticion\": null,\r\n                        \"oficina_control_interno\": false,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"reclasificacion\": props.getParametros.reclasificacion,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(\"DATA 4\");\r\n        console.log(JSON.stringify(data));\r\n        console.log(\"DATA 4\");\r\n\r\n        ClasificacionRadicadoApi.addClasificacionRadicado(data).then(\r\n\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    from.cambiaColorClasificacionRadicado = \"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";\r\n               \r\n                    if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION){   \r\n       \r\n                        setModalState({ title: \"Reclasifiación del expediente\", message: \"El proceso disciplinario se asigna a: \"+datos.data.attributes.funcionario_actual.nombre +\" \"+ datos.data.attributes.funcionario_actual.apellido, show: true, redirect: '/MisPendientes' });\r\n                    }\r\n\r\n                    else if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.CLASIFICACION){\r\n                        setModalState({ title: \"Clasificación del radicado\", message: \"Registro Exitoso\", show: true, redirect: '/ClasificacionRadicadoLista', from: {from} });\r\n                    }  \r\n                }\r\n                else {\r\n                    setModalState({ title: \"Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from} });\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    // COMPONENTE CONFIRMACION OFICINA DE CONTROL INTERNO DISCIPLINARIO\r\n    const componenteTipoRespuesta = (tipo_respuesta) => {\r\n\r\n        // CONFIRMACION OFICINA DE CONTRO INTERNO = SI\r\n        if (tipo_respuesta === global.Constants.TIPO_RESPUESTA.SI) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            selectedTipoExpediente: 3,\r\n                            tipo_queja: '',\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.tipo_queja) {\r\n                                errores.tipo_queja = 'Debe seleccionar un tipo de queja'\r\n                            }\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatosControlInterno(valores);\r\n                        }}\r\n                    >\r\n                        \r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tipo_queja\">Ingrese Tipo de Queja <span className=\"text-danger\">*</span></label>\r\n\r\n                                <Field as=\"select\" className=\"form-control\" id=\"tipo_queja\" name=\"tipo_queja\">\r\n                                    <option value=\"\">Por favor seleccione</option>\r\n                                    {/*respuestaTiposQueja ? selectTiposQueja() : null*/}\r\n\r\n                                </Field>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        /// CONFIRMACION TIPO DE CLASIFICADO = NO\r\n        else if (tipo_respuesta === global.Constants.TIPO_RESPUESTA.NO) {\r\n            return (\r\n                <>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ingresoTipoExpediente\">Tipo de expediente <span className=\"text-danger\">*</span></label>\r\n                        <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                            value={selectedTipoExpediente} onChange={e => selectChangeTipoExpediente(e.target.value)}>\r\n                            <option value=\"\">Por favor seleccione</option>\r\n                            {respuestaTipoExpediente ? selectTipoExpediente() : null}\r\n                        </select>\r\n                    </div>\r\n\r\n\r\n                    {/*DERECHO DE PETICION*/}\r\n                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : ''}\r\n                    {/*PODER REFERENTE A SOLIICTUD*/}\r\n                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : ''}\r\n                    {/*QUEJA*/}\r\n                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : ''}\r\n                    {/*TUTELA*/}\r\n                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : ''}\r\n\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    // COMPOENENTE TIPO EXPEDIENTE\r\n    const componenteTipoExpediente = (tipo_expediente) => {\r\n\r\n        // TIPO DE EXPEDIENTE = DERECHO DE PETICION\r\n        if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) {\r\n            return (\r\n                <>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ingresoDerechoPeticion\">Tipo de derecho de petición <span className=\"text-danger\">*</span></label>\r\n                        <select className=\"form-control\" id=\"ingresoDerechoPeticion\" name=\"ingresoDerechoPeticion\"\r\n                            value={selectedTipoDerechoPeticion} onChange={e => selectChangeTipoDerechoPeticion(e.target.value)}>\r\n                            <option value=\"\">Por favor seleccione</option>\r\n                            {respuestaTipoDerechoPeticion ? selectTipoDerechoPeticion() : null}\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/*COPIAS*/}\r\n                    {selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.COPIAS ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.COPIAS) : ''}\r\n                    {/*GENERAL*/}\r\n                    {selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.GENERAL ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.GENERAL) : ''}\r\n                    {/*ALERTA CONTROL POLITICO*/}\r\n                    {selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.ALERTA ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.ALERTA) : ''}\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: '',\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.tipo_queja) {\r\n                                errores.tipo_queja = 'Debe seleccionar un tipo de queja'\r\n                            }\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tipo_queja\">Ingrese Tipo de Queja <span className=\"text-danger\">*</span></label>\r\n\r\n                                <Field as=\"select\" className=\"form-control\" id=\"tipo_queja\" name=\"tipo_queja\">\r\n                                    <option value=\"\">Por favor seleccione</option>\r\n                                    {respuestaTiposQueja ? selectTiposQuejaExterna() : null}\r\n                                </Field>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = QUEJA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: '',\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.tipo_queja) {\r\n                                errores.tipo_queja = 'Debe seleccionar un tipo de queja'\r\n                            }\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tipo_queja\">Ingrese Tipo de Queja <span className=\"text-danger\">*</span></label>\r\n\r\n                                <Field as=\"select\" className=\"form-control\" id=\"tipo_queja\" name=\"tipo_queja\">\r\n                                    <option value=\"\">Por favor seleccione</option>\r\n                                    {respuestaTiposQueja ? selectTiposQuejaExterna() : null}\r\n                                </Field>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary\"> <i className=\"fas fa-save\"></i> Registrar</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = TUTELA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA) {\r\n            return (\r\n                <>\r\n                    <label htmlFor=\"ingresoTipoRtaTutela\">Ingrese termino de respuesta <span className=\"text-danger\">*</span></label>\r\n\r\n                    <select className=\"form-control\" id=\"termino_rta\" name=\"termino_rta\"\r\n                        value={selectedTerminosRespuesta}\r\n                        onChange={e => selectChangeTerminoRespuesta(e.target.value)}>\r\n                        <option value=\"{selectedTerminosRespuesta}\">Por favor seleccione</option>\r\n                        {respuestaTerminosRespuesta ? selectTerminosRespuesta() : null}\r\n                    </select>\r\n\r\n                    {/*DIAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.DIAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS) : ''}\r\n                    {/*HORAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.HORAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS) : ''}\r\n\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    // COMOPNENTE TIPO DERECHO DE PETICION\r\n    const componenteTipoDerechoPeticion = (tipo_derecho_peticion) => {\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\r\n        if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.COPIAS) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n\r\n\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n\r\n                            return errores\r\n                        }}\r\n\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{alertaPorTipoDerechoPeticion(tipo_derecho_peticion)}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Observaciones</label>\r\n                                        <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                            placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                        <div className=\"text-right\">\r\n                                            <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                        </div>\r\n                                        <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"block-content block-content-full text-right\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                    \r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.GENERAL) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: ''\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n\r\n                            if (!valores.gestion_juridica) {\r\n                                errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{alertaPorTipoDerechoPeticion(tipo_derecho_peticion)}</p>\r\n                                    </div>\r\n\r\n                                    <label htmlFor=\"ingresoTipoExpediente\">Requiere gestión juridica <span className=\"text-danger\">*</span></label>\r\n                                    <Field as=\"select\" className=\"form-control\" id=\"gestion_juridica\" name=\"gestion_juridica\">\r\n                                        <option value=\"\">Por favor seleccione</option>\r\n                                        <option value=\"true\">Si</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </Field>\r\n\r\n                                    <label>Observaciones</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                </div>\r\n\r\n                                <div className=\"block-content block-content-full text-right\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.ALERTA) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: ''\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n                            if (!valores.gestion_juridica) {\r\n                                errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{alertaPorTipoDerechoPeticion(tipo_derecho_peticion)}</p>\r\n                                    </div>\r\n\r\n                                    <label htmlFor=\"ingresoTipoExpediente\">Requiere gestión juridica <span className=\"text-danger\">*</span></label>\r\n                                    <Field as=\"select\" className=\"form-control\" id=\"gestion_juridica\" name=\"gestion_juridica\">\r\n                                        <option value=\"\">Por favor seleccione</option>\r\n                                        <option value=\"true\">Si</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </Field>\r\n\r\n\r\n                                    <label>Observaciones</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n\r\n                                    <div className=\"block-content block-content-full text-right\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                        <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                            <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    const handleCallbackFechaTermino = (childData) => {\r\n        try {\r\n            setFechaTermino(childData)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\r\n    const componenteTerminosRespuesta = (termino_respuesta) => {\r\n\r\n        //TERMINO TUTELA = DIAS      \r\n        if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: '',\r\n                            fechaTermino: ''\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.fechaTermino && !fechaTermino) {\r\n                                errores.fechaTermino = 'Debe seleccionar el termino de respuesta'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label>Fecha para termino</label>  <span className=\"text-danger\">*</span>\r\n\r\n                                {/*<DatePicker id=\"fechaTermino\" locale='es' name=\"fechaTermino\" dateFormat=\"DD/MM/YYYY\" closeOnSelect={true} placeholder=\"dd/mm/yyyy\" onChange={(date) => setFechaTermino(date)} timeFormat={false} isValidDate={disableCustomDt} />*/}\r\n                                <DatePerson resultDiasNoLaborales={resultDiasNoLaborales} getAnosAtrasInvalidos={getAnosAtrasInvalidos} parentCallback={handleCallbackFechaTermino} id=\"fechaTermino\" name=\"fechaTermino\" />\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n\r\n            )\r\n        }\r\n\r\n        //TERMINO TUTELA = HORAS     \r\n        else if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\r\n\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: '',\r\n                            fechaTermino: ''\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.horasTermino) {\r\n                                errores.horasTermino = 'Debe seleccionar el termino de respuesta'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label>Horas para termino</label>  <span className=\"text-danger\">*</span>\r\n                                <Field type=\"number\" min=\"1\" max='23' id=\"horasTermino\" name=\"horasTermino\" className=\"form-control\" placeholder=\"\" />\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n    };\r\n\r\n    \r\n        return (\r\n            <>\r\n\r\n            {<ModalGen data={modalState} />}\r\n\r\n                <div className=\"block-content\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"ingresoTipoExpediente\">Tipo de expediente <span className=\"text-danger\">*</span></label>\r\n                                <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                                    value={selectedTipoExpediente} onChange={e => selectChangeTipoExpediente(e.target.value)}>\r\n                                    <option value=\"\">Por favor seleccione</option>\r\n                                    {respuestaTipoExpediente ? selectTipoExpediente() : null}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/*DERECHO DE PETICION*/}\r\n                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : ''}\r\n                    {/*PODER REFERENTE A SOLIICTUD*/}\r\n                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : ''}\r\n                    {/*QUEJA*/}\r\n                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : ''}\r\n                    {/*TUTELA*/}\r\n                    {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : ''}\r\n\r\n                </div>\r\n            </>\r\n                        \r\n               \r\n        );\r\n \r\n    \r\n}\r\n\r\nexport default ClasificacionRadicado;"]},"metadata":{},"sourceType":"module"}