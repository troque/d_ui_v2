{"ast":null,"code":"import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{ErrorMessage,Field,Form,Formik}from'formik';import Spinner from'../Utils/Spinner';import{Link}from\"react-router-dom\";import GenericApi from'../Api/Services/GenericApi';import{useLocation}from'react-router-dom';import'../Utils/Constants';import ModalGen from'../Utils/Modals/ModalGeneric';import InfoErrorApi from'../Utils/InfoErrorApi';import Select from'react-select';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ParametroCamposCaratulaForm(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),getMinimoTextArea=_useState2[0],setMinimoTextArea=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),getMaximoTextArea=_useState4[0],setMaximoTextArea=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),errorApi=_useState6[0],setErrorApi=_useState6[1];var _useState7=useState({title:\"\",message:\"\",show:false}),_useState8=_slicedToArray(_useState7,2),getModalState=_useState8[0],setModalState=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),countTextArea=_useState10[0],setCountTextArea=_useState10[1];// Constantes para cargar los valores\nvar _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),getNombreParametro=_useState12[0],setNombreParametro=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),getValorParametro=_useState14[0],setValorParametro=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),getArrayEstados=_useState16[0],setArrayEstados=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),getMensajeErrorNombreParametro=_useState18[0],setMensajeErrorNombreParametro=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),getMensajeErrorValorParametro=_useState20[0],setMensajeErrorValorParametro=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),getMensajeErrorEstado=_useState22[0],setMensajeErrorEstado=_useState22[1];var getListaEstados=[{value:'1',label:'ACTIVO'},{value:'0',label:'INACTIVO'}];var getListaValorParametro=[{value:'Sinproc',label:'No de SINPROC'},{value:'Antecedentes',label:'LISTADO DE ANTECEDENTES'},{value:'Usuario',label:'NOMBRE DE USUARIO'},{value:'Dependencia',label:'DEPENDENCIA REGISTRO'},{value:'Vigencia',label:'VIGENCIA'},{value:'Fecha Registro',label:'FECHA DE REGISTRO'},{value:'Fecha Ingreso',label:'FECHA DE INGRESO'},{value:'Generado',label:'USUARIO ACTUAL'}];var location=useLocation();var from=location.state.from;useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Se habilita el cargando\nwindow.showSpinner(true);// Se carga la api de parametros permitidos\nobtenerParametros();if(from!=null){// Se carga el nombre del parametro\nsetNombreParametro(from.attributes.nombre_campo);// Se carga los tipos de valores por parametro\nvalidarValorParametro(from.attributes.type);// Se carga el estado\nif(from.attributes.estado==1){// Se setea el valor del estado\nsetArrayEstados({label:'Activo',value:from.attributes.estado});}else{// Se setea el valor del estado\nsetArrayEstados({label:'Inactivo',value:from.attributes.estado});}// Se deshabilita el cargando\nwindow.showSpinner(false);}else{// Se carga los tipos de expediente por mensajes\ncargarParametroCamposCaratula();}case 3:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[]);// Metodo encargado de cargar el formulario para registrar un parametro\nvar cargarParametroCamposCaratula=function cargarParametroCamposCaratula(){// Se deshabilita el cargando\nwindow.showSpinner(false);};// Metodo encargado de retornar el valor del parametro\nvar validarValorParametro=function validarValorParametro(parametro){// Se recorre el array de los parametros\nfor(var index=0;index<getListaValorParametro.length;index++){// Se captura el elemento por posicion\nvar element=getListaValorParametro[index];// Se valida que donde exista el parametro se retorna el label y el valor\nif(parametro==element.value){// Se setean los valores\nsetValorParametro({value:parametro,label:element.label});}}};// Metodo encargado de registrar los valores\nvar enviarDatos=function enviarDatos(valores){// Se inicializa el array\nvar data;// Se validan los campos\nif(!getNombreParametro){// Se setea el valor\nsetMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO);// Se retorna el error\nreturn false;}else if(getNombreParametro){// Se valida que contenga caracteres invalidos\nif(containsSpecialChars(getNombreParametro)){// Se setea el valor\nsetMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS);// Se retorna\nreturn false;}else{// Se setea el valor\nsetMensajeErrorNombreParametro('');}}// Se valida que tenga el minimo de caracteres ingresados\nif(getNombreParametro.length<=2){// Se setea el valor\nsetMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES+' 2');// Se retorna el error\nreturn false;}else{// Se setea el valor\nsetMensajeErrorNombreParametro('');}// Se valida que el valor del parametro sea diferente de null\nif(!getValorParametro.value){// Se setea el mensaje de error\nsetMensajeErrorValorParametro(global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO);// Se retorna el error\nreturn false;}else{// Se setea el mensaje de error\nsetMensajeErrorValorParametro(\"\");}// Se valida que el valor del parametro sea diferente de null\nif(!getArrayEstados.value){// Se setea el mensaje de error\nsetMensajeErrorEstado(global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO);// Se retorna el error\nreturn;}else{// Se setea el mensaje de error\nsetMensajeErrorEstado(\"\");}// Se inicializa el array a enviar por post\ndata={\"data\":{\"type\":\"parametro_campos_caratula\",\"attributes\":{\"nombre_campo\":getNombreParametro,\"type\":getValorParametro.value,\"estado\":getArrayEstados.value}}};// Se utiliza el cargando\nwindow.showSpinner(true);// Se inicializa la API\nGenericApi.addGeneric('parametro_campos_caratula',data).then(function(datos){// Se utiliza el cargando\nwindow.showSpinner(false);// Se valida que no haya error\nif(!datos.error){setModalState({title:\"ADMINSITRACIÓN :: CARÁTULA\",message:global.Constants.MENSAJES_MODAL.EXITOSO,show:true,redirect:'/ParametroCamposCaratula',alert:global.Constants.TIPO_ALERTA.EXITO});}else{setModalState({title:\"ADMINSITRACIÓN :: CARÁTULA\",message:datos.error.toString(),show:true,alert:global.Constants.TIPO_ALERTA.ERROR});}});};// Metodo encargado de actualizar los valores \nvar actualizarDatos=function actualizarDatos(valores){// Se inicializa el valor del id\nvar id=from.id;// Se inicializa el array\nvar data;// Se validan los campos\nif(!getNombreParametro){// Se setea el valor\nsetMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO);// Se retorna el error\nreturn false;}else if(getNombreParametro){// Se valida que contenga caracteres invalidos\nif(containsSpecialChars(getNombreParametro)){// Se setea el valor\nsetMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS);// Se retorna\nreturn false;}else{// Se setea el valor\nsetMensajeErrorNombreParametro('');}}// Se valida que tenga el minimo de caracteres ingresados\nif(getNombreParametro.length<3){// Se setea el valor\nsetMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES+' 3');// Se retorna el error\nreturn false;}else{// Se setea el valor\nsetMensajeErrorNombreParametro('');}// Se inicializa el array a enviar por post\ndata={\"data\":{\"type\":\"parametro_campos_caratula\",\"attributes\":{\"nombre_campo\":getNombreParametro,\"type\":getValorParametro.value,\"estado\":getArrayEstados.value}}};// Se utiliza el cargando\nwindow.showSpinner(true);GenericApi.updateGeneric('parametro_campos_caratula',id,data).then(function(datos){// Se deshabilita el cargando\nwindow.showSpinner(false);// Se valida que no haya error\nif(!datos.error){setModalState({title:\"ADMINSITRACIÓN :: CARÁTULA\",message:global.Constants.MENSAJES_MODAL.EXITOSO,show:true,redirect:'/ParametroCamposCaratula',alert:global.Constants.TIPO_ALERTA.EXITO});}else{setModalState({title:\"ADMINSITRACIÓN :: CARÁTULA\",message:datos.errors[0].detail,show:true,alert:global.Constants.TIPO_ALERTA.ERROR});}});};// Metodo encargado de validar el maximo de caracteres por input\nvar obtenerParametros=function obtenerParametros(){try{var data={\"data\":{\"type\":'mas_parametro',\"attributes\":{\"nombre\":\"minimo_caracteres_textarea|maximo_caracteres_textarea\"}}};// Buscamos el parametro\nGenericApi.getByDataGeneric(\"parametro/parametro-nombre\",data).then(function(datos){if(!datos.error){if(datos[\"data\"].length>0){datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea');}).map(function(filteredName){return setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]);});datos[\"data\"].filter(function(data){return data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea');}).map(function(filteredName){return setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]);});}}else{setModalState({title:\"ADMINSITRACIÓN :: CARÁTULA\",message:datos.error.toString(),show:true,alert:global.Constants.TIPO_ALERTA.ERROR});}});}catch(error){// console.log(error);\n}};// Metodo encargado de validar que no se ingresen caracteres invalidos\nfunction containsSpecialChars(str){var result=global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(function(specialChar){if(str.includes(specialChar)){return true;}return false;});return result;}// Metodo encargado de setear el valor del parametro\nvar changeParametro=function changeParametro(e){// Se setea el valor escrito a la constante\nif(e.target.value===''||global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(e.target.value)&&e.target.value.length<=255){setNombreParametro(e.target.value);}};// Metodo encargado de cambiar el valor del parametro\nvar selectChangeParametro=function selectChangeParametro(v){// Se setea el valor a la constante\nsetValorParametro(v);};// Metodo encargado de setear el valor del estado\nvar selectChangeEstados=function selectChangeEstados(v){// Se carga el tipo de estado en el array del select\nsetArrayEstados(v);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(InfoErrorApi,{error:errorApi}),/*#__PURE__*/_jsx(ModalGen,{data:getModalState}),/*#__PURE__*/_jsx(Formik,{initialValues:{nombreParametro:''},enableReinitialize:true,validate:function validate(valores){},onSubmit:function onSubmit(valores,_ref){var resetForm=_ref.resetForm;if(from!=null){actualizarDatos(valores);}else{enviarDatos(valores);}},children:function children(_ref2){var errors=_ref2.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"w2d_block\",children:/*#__PURE__*/_jsx(\"nav\",{\"aria-label\":\"breadcrumb\",children:/*#__PURE__*/_jsxs(\"ol\",{className:\"breadcrumb breadcrumb-alt push\",children:[/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/ParametroCamposCaratula\",children:/*#__PURE__*/_jsx(\"small\",{children:\"Lista de par\\xE1metros de car\\xE1tula\"})})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsxs(\"small\",{children:[from!=null?'Actualizar':'Crear',\" par\\xE1metros de car\\xE1tula\"]})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block block-rounded block-bordered\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"block-title\",children:\"ADMINISTRACI\\xD3N :: CAR\\xC1TULA :: PAR\\xC1METROS DE CAR\\xC1TULA\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row text-right w2d-enter\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(Link,{to:'/ParametroCamposCaratula',title:\"Regresar\",children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-primary\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-backward\"}),\" \"]})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-primary\",role:\"alert\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Nota: \"})}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"1.\"}),\" El nombre del par\\xE1metro debe ser igual al establecido en el documento de word.\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"2.\"}),\" El nombre del par\\xE1metro no debe ser ingresado con los car\\xE1cteres especiales.\"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"nombreParametro\",children:[\"NOMBRE DEL PAR\\xC1METRO\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{as:\"input\",type:\"text\",className:\"form-control\",id:\"nombreParametro\",name:\"nombreParametro\",value:getNombreParametro,onChange:changeParametro}),getMensajeErrorNombreParametro?/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:getMensajeErrorNombreParametro}):null]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"valorParametro\",children:[\"VALOR DEL PAR\\xC1METRO\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),getValorParametro?/*#__PURE__*/_jsx(Select,{id:\"valorParametro\",name:\"valorParametro\",isMulti:false,value:getValorParametro,placeholder:global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION,noOptionsMessage:function noOptionsMessage(){return\"Sin datos\";},options:getListaValorParametro.map(function(e){return{label:e.label,value:e.value};}),onChange:function onChange(e){return selectChangeParametro(e);}}):null,getMensajeErrorValorParametro?/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:getMensajeErrorValorParametro}):null]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"estado\",children:[\"ESTADO\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),getArrayEstados?/*#__PURE__*/_jsx(Select,{id:\"estado\",name:\"estado\",isMulti:false,value:getArrayEstados,placeholder:global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION,noOptionsMessage:function noOptionsMessage(){return\"Sin datos\";},options:getListaEstados.map(function(e){return{label:e.label,value:e.value};}),onChange:function onChange(e){return selectChangeEstados(e);}}):null,getMensajeErrorEstado?/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:getMensajeErrorEstado}):null]})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right bg-light\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:from!=null?global.Constants.BOTON_NOMBRE.ACTUALIZAR:global.Constants.BOTON_NOMBRE.REGISTRAR}),/*#__PURE__*/_jsx(Link,{to:'/ParametroCamposCaratula',className:\"font-size-h5 font-w600\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:global.Constants.BOTON_NOMBRE.CANCELAR})})]})]})]});}})]});}export default ParametroCamposCaratulaForm;","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","Spinner","Link","GenericApi","useLocation","ModalGen","InfoErrorApi","Select","ParametroCamposCaratulaForm","getMinimoTextArea","setMinimoTextArea","getMaximoTextArea","setMaximoTextArea","errorApi","setErrorApi","title","message","show","getModalState","setModalState","countTextArea","setCountTextArea","getNombreParametro","setNombreParametro","getValorParametro","setValorParametro","getArrayEstados","setArrayEstados","getMensajeErrorNombreParametro","setMensajeErrorNombreParametro","getMensajeErrorValorParametro","setMensajeErrorValorParametro","getMensajeErrorEstado","setMensajeErrorEstado","getListaEstados","value","label","getListaValorParametro","location","from","state","fetchData","window","showSpinner","obtenerParametros","attributes","nombre_campo","validarValorParametro","type","estado","cargarParametroCamposCaratula","parametro","index","length","element","enviarDatos","valores","data","global","Constants","MENSAJE_ERROR","CAMPO_OBLIGATORIO","containsSpecialChars","ERROR_FORMATO_CARACTERES_INVALIDOS","ERROR_FORMATO_CARACTERES","addGeneric","then","datos","error","MENSAJES_MODAL","EXITOSO","redirect","alert","TIPO_ALERTA","EXITO","toString","ERROR","actualizarDatos","id","updateGeneric","errors","detail","getByDataGeneric","filter","includes","map","filteredName","str","result","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","changeParametro","e","target","formatOnlyLettersWhitAccent","test","selectChangeParametro","v","selectChangeEstados","nombreParametro","resetForm","MENSAJE_INFORMATIVO","SELECCIONE_UNA_OPCION","BOTON_NOMBRE","ACTUALIZAR","REGISTRAR","CANCELAR"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/ParametroCamposCaratulaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport Spinner from '../Utils/Spinner';\r\nimport { Link } from \"react-router-dom\";\r\nimport GenericApi from '../Api/Services/GenericApi';\r\nimport { useLocation } from 'react-router-dom';\r\nimport '../Utils/Constants';\r\nimport ModalGen from '../Utils/Modals/ModalGeneric';\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport Select from 'react-select';\r\n\r\nfunction ParametroCamposCaratulaForm() {\r\n\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n\r\n    // Constantes para cargar los valores\r\n    const [getNombreParametro, setNombreParametro] = useState(\"\");\r\n    const [getValorParametro, setValorParametro] = useState([]);\r\n\r\n    const [getArrayEstados, setArrayEstados] = useState([]);\r\n\r\n    const [getMensajeErrorNombreParametro, setMensajeErrorNombreParametro] = useState(\"\");\r\n    const [getMensajeErrorValorParametro, setMensajeErrorValorParametro] = useState(\"\");\r\n    const [getMensajeErrorEstado, setMensajeErrorEstado] = useState(\"\");\r\n\r\n    const getListaEstados =\r\n        [\r\n            { value: '1', label: 'ACTIVO' },\r\n            { value: '0', label: 'INACTIVO' }\r\n        ];\r\n\r\n    const getListaValorParametro =\r\n        [\r\n            { value: 'Sinproc', label: 'No de SINPROC'},\r\n            { value: 'Antecedentes', label: 'LISTADO DE ANTECEDENTES'},\r\n            { value: 'Usuario', label: 'NOMBRE DE USUARIO' },\r\n            { value: 'Dependencia', label: 'DEPENDENCIA REGISTRO'},\r\n            { value: 'Vigencia', label: 'VIGENCIA' },\r\n            { value: 'Fecha Registro', label: 'FECHA DE REGISTRO'},\r\n            { value: 'Fecha Ingreso', label: 'FECHA DE INGRESO'},\r\n            { value: 'Generado', label: 'USUARIO ACTUAL'}\r\n        ];\r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            // Se habilita el cargando\r\n            window.showSpinner(true);\r\n\r\n            // Se carga la api de parametros permitidos\r\n            obtenerParametros();\r\n\r\n            if (from != null) {\r\n\r\n                // Se carga el nombre del parametro\r\n                setNombreParametro(from.attributes.nombre_campo);\r\n\r\n                // Se carga los tipos de valores por parametro\r\n                validarValorParametro(from.attributes.type);\r\n\r\n                // Se carga el estado\r\n                if (from.attributes.estado == 1) {\r\n\r\n                    // Se setea el valor del estado\r\n                    setArrayEstados({ label: 'Activo', value: from.attributes.estado });\r\n                } else {\r\n\r\n                    // Se setea el valor del estado\r\n                    setArrayEstados({ label: 'Inactivo', value: from.attributes.estado });\r\n                }\r\n\r\n                // Se deshabilita el cargando\r\n                window.showSpinner(false);\r\n            } else {\r\n\r\n                // Se carga los tipos de expediente por mensajes\r\n                cargarParametroCamposCaratula();\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Metodo encargado de cargar el formulario para registrar un parametro\r\n    const cargarParametroCamposCaratula = () => {\r\n\r\n        // Se deshabilita el cargando\r\n        window.showSpinner(false);\r\n    }\r\n\r\n    // Metodo encargado de retornar el valor del parametro\r\n    const validarValorParametro = (parametro) => {\r\n\r\n        // Se recorre el array de los parametros\r\n        for (let index = 0; index < getListaValorParametro.length; index++) {\r\n\r\n            // Se captura el elemento por posicion\r\n            const element = getListaValorParametro[index];\r\n\r\n            // Se valida que donde exista el parametro se retorna el label y el valor\r\n            if (parametro == element.value) {\r\n\r\n                // Se setean los valores\r\n                setValorParametro({ value: parametro, label: element.label });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // Metodo encargado de registrar los valores\r\n    const enviarDatos = (valores) => {\r\n\r\n        // Se inicializa el array\r\n        let data;\r\n\r\n        // Se validan los campos\r\n        if (!getNombreParametro) {\r\n\r\n            // Se setea el valor\r\n            setMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO);\r\n\r\n            // Se retorna el error\r\n            return false;\r\n        } else if (getNombreParametro) {\r\n\r\n            // Se valida que contenga caracteres invalidos\r\n            if (containsSpecialChars(getNombreParametro)) {\r\n\r\n                // Se setea el valor\r\n                setMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS);\r\n\r\n                // Se retorna\r\n                return false;\r\n            } else {\r\n\r\n                // Se setea el valor\r\n                setMensajeErrorNombreParametro('');\r\n            }\r\n        }\r\n\r\n        // Se valida que tenga el minimo de caracteres ingresados\r\n        if (getNombreParametro.length <= 2) {\r\n\r\n            // Se setea el valor\r\n            setMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES + ' 2');\r\n\r\n            // Se retorna el error\r\n            return false;\r\n        } else {\r\n\r\n            // Se setea el valor\r\n            setMensajeErrorNombreParametro('');\r\n        }\r\n\r\n        // Se valida que el valor del parametro sea diferente de null\r\n        if (!getValorParametro.value) {\r\n\r\n            // Se setea el mensaje de error\r\n            setMensajeErrorValorParametro(global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO);\r\n\r\n            // Se retorna el error\r\n            return false;\r\n        } else {\r\n\r\n            // Se setea el mensaje de error\r\n            setMensajeErrorValorParametro(\"\");\r\n        }\r\n\r\n        // Se valida que el valor del parametro sea diferente de null\r\n        if (!getArrayEstados.value) {\r\n\r\n            // Se setea el mensaje de error\r\n            setMensajeErrorEstado(global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO);\r\n\r\n            // Se retorna el error\r\n            return;\r\n        } else {\r\n\r\n            // Se setea el mensaje de error\r\n            setMensajeErrorEstado(\"\");\r\n        }\r\n\r\n        // Se inicializa el array a enviar por post\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"parametro_campos_caratula\",\r\n                \"attributes\": {\r\n                    \"nombre_campo\": getNombreParametro,\r\n                    \"type\": getValorParametro.value,\r\n                    \"estado\": getArrayEstados.value\r\n                }\r\n            }\r\n        };\r\n\r\n        // Se utiliza el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa la API\r\n        GenericApi.addGeneric('parametro_campos_caratula', data).then(\r\n            datos => {\r\n\r\n                // Se utiliza el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"ADMINSITRACIÓN :: CARÁTULA\", message: global.Constants.MENSAJES_MODAL.EXITOSO , show: true, redirect: '/ParametroCamposCaratula', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n                    setModalState({ title: \"ADMINSITRACIÓN :: CARÁTULA\", message: datos.error.toString(), show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de actualizar los valores \r\n    const actualizarDatos = (valores) => {\r\n\r\n        // Se inicializa el valor del id\r\n        const id = from.id;\r\n\r\n        // Se inicializa el array\r\n        let data;\r\n\r\n        // Se validan los campos\r\n        if (!getNombreParametro) {\r\n\r\n            // Se setea el valor\r\n            setMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO);\r\n\r\n            // Se retorna el error\r\n            return false;\r\n        } else if (getNombreParametro) {\r\n\r\n            // Se valida que contenga caracteres invalidos\r\n            if (containsSpecialChars(getNombreParametro)) {\r\n\r\n                // Se setea el valor\r\n                setMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS);\r\n\r\n                // Se retorna\r\n                return false;\r\n            } else {\r\n\r\n                // Se setea el valor\r\n                setMensajeErrorNombreParametro('');\r\n            }\r\n        }\r\n\r\n        // Se valida que tenga el minimo de caracteres ingresados\r\n        if (getNombreParametro.length < 3) {\r\n\r\n            // Se setea el valor\r\n            setMensajeErrorNombreParametro(global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES + ' 3');\r\n\r\n            // Se retorna el error\r\n            return false;\r\n        } else {\r\n\r\n            // Se setea el valor\r\n            setMensajeErrorNombreParametro('');\r\n        }\r\n\r\n        // Se inicializa el array a enviar por post\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"parametro_campos_caratula\",\r\n                \"attributes\": {\r\n                    \"nombre_campo\": getNombreParametro,\r\n                    \"type\": getValorParametro.value,\r\n                    \"estado\": getArrayEstados.value\r\n                }\r\n            }\r\n        };\r\n\r\n        // Se utiliza el cargando\r\n        window.showSpinner(true);\r\n\r\n        GenericApi.updateGeneric('parametro_campos_caratula', id, data).then(\r\n            datos => {\r\n\r\n                // Se deshabilita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"ADMINSITRACIÓN :: CARÁTULA\", message: global.Constants.MENSAJES_MODAL.EXITOSO , show: true, redirect: '/ParametroCamposCaratula', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n                    setModalState({ title: \"ADMINSITRACIÓN :: CARÁTULA\", message: datos.errors[0].detail, show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de validar el maximo de caracteres por input\r\n    const obtenerParametros = () => {\r\n        try {\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (datos[\"data\"].length > 0) {\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: \"ADMINSITRACIÓN :: CARÁTULA\", message: datos.error.toString(), show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de validar que no se ingresen caracteres invalidos\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    // Metodo encargado de setear el valor del parametro\r\n    const changeParametro = (e) => {\r\n\r\n        // Se setea el valor escrito a la constante\r\n        \r\n        if (e.target.value === '' || \r\n        (global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(e.target.value) && \r\n        e.target.value.length <= 255)) {\r\n            setNombreParametro(e.target.value);\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de cambiar el valor del parametro\r\n    const selectChangeParametro = (v) => {\r\n\r\n        // Se setea el valor a la constante\r\n        setValorParametro(v)\r\n    }\r\n\r\n    // Metodo encargado de setear el valor del estado\r\n    const selectChangeEstados = (v) => {\r\n\r\n        // Se carga el tipo de estado en el array del select\r\n        setArrayEstados(v);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<InfoErrorApi error={errorApi} />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    nombreParametro: '',\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n\r\n                    if (from != null) {\r\n                        actualizarDatos(valores);\r\n                    } else {\r\n                        enviarDatos(valores);\r\n                    }\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/ParametroCamposCaratula`}><small>Lista de parámetros de carátula</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <small>{from != null ? 'Actualizar' : 'Crear'} parámetros de carátula</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"block block-rounded block-bordered\">\r\n                            <div className=\"block block-themed\">\r\n\r\n                                <div className=\"block-header\">\r\n                                    <h3 className=\"block-title\">ADMINISTRACIÓN :: CARÁTULA :: PARÁMETROS DE CARÁTULA</h3>\r\n                                </div>\r\n                                <div className=\"block-content\">\r\n\r\n                                    <div className=\"row text-right w2d-enter\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <Link to={'/ParametroCamposCaratula'} title='Regresar'>\r\n                                                <button type=\"button\" className=\"btn btn-primary\"><i className=\"fas fa-backward\"></i> </button>\r\n                                            </Link>                                            \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"col-md-12\">\r\n\r\n                                            <div className=\"alert alert-primary\" role=\"alert\">\r\n                                                <p className=\"mb-0\"><strong>Nota: </strong></p>\r\n                                                <p className=\"mb-0\"><strong>1.</strong> El nombre del parámetro debe ser igual al establecido en el documento de word.</p>\r\n                                                <p className=\"mb-0\"><strong>2.</strong> El nombre del parámetro no debe ser ingresado con los carácteres especiales.</p> \r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"nombreParametro\">NOMBRE DEL PARÁMETRO<span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"input\" type=\"text\" className=\"form-control\" id=\"nombreParametro\" name=\"nombreParametro\" value={getNombreParametro} onChange={changeParametro}></Field>\r\n                                                {getMensajeErrorNombreParametro ?\r\n                                                    <span className=\"text-danger\">{getMensajeErrorNombreParametro}</span>\r\n                                                    : null}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"valorParametro\">VALOR DEL PARÁMETRO<span className=\"text-danger\">*</span></label>\r\n                                                {(getValorParametro) ?\r\n                                                    <Select\r\n                                                        id='valorParametro'\r\n                                                        name='valorParametro'\r\n                                                        isMulti={false}\r\n                                                        value={getValorParametro}\r\n                                                        placeholder={global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}\r\n                                                        noOptionsMessage={() => \"Sin datos\"}\r\n                                                        options={getListaValorParametro.map(e =>\r\n                                                            ({ label: e.label, value: e.value })\r\n                                                        )}\r\n                                                        onChange={(e) => selectChangeParametro(e)}\r\n                                                    />\r\n                                                    : null}\r\n                                                {getMensajeErrorValorParametro ?\r\n                                                    <span className=\"text-danger\">{getMensajeErrorValorParametro}</span>\r\n                                                    : null}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"estado\">ESTADO<span className=\"text-danger\">*</span></label>\r\n                                                {(getArrayEstados) ?\r\n                                                    <Select\r\n                                                        id='estado'\r\n                                                        name='estado'\r\n                                                        isMulti={false}\r\n                                                        value={getArrayEstados}\r\n                                                        placeholder={global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}\r\n                                                        noOptionsMessage={() => \"Sin datos\"}\r\n                                                        options={getListaEstados.map(e =>\r\n                                                            ({ label: e.label, value: e.value })\r\n                                                        )}\r\n                                                        onChange={(e) => selectChangeEstados(e)}\r\n                                                    />\r\n                                                    : null}\r\n                                                {getMensajeErrorEstado ?\r\n                                                    <span className=\"text-danger\">{getMensajeErrorEstado}</span>\r\n                                                    : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right bg-light\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\" >\r\n                                    {from != null ? global.Constants.BOTON_NOMBRE.ACTUALIZAR : global.Constants.BOTON_NOMBRE.REGISTRAR}\r\n                                </button>\r\n                                <Link to={'/ParametroCamposCaratula'} className=\"font-size-h5 font-w600\" >\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\" >{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ParametroCamposCaratulaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}