{"ast":null,"code":"\"use strict\";\n\n/**\n * PageBreaks\n */\nvar _classCallCheck = require(\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar PageBreaks = /*#__PURE__*/function () {\n  function PageBreaks(node) {\n    _classCallCheck(this, PageBreaks);\n    this._node = node;\n  }\n\n  /**\n   * add page-breaks by row/column id\n   * @param {number} id - row/column id (rowNumber/colNumber)\n   * @return {PageBreaks} the page-breaks\n   */\n  _createClass(PageBreaks, [{\n    key: \"add\",\n    value: function add(id) {\n      this._node.children.push({\n        name: \"brk\",\n        children: [],\n        attributes: {\n          id: id,\n          max: 16383,\n          man: 1\n        }\n      });\n      this._node.attributes.count++;\n      this._node.attributes.manualBreakCount++;\n      return this;\n    }\n\n    /**\n     * remove page-breaks by index\n     * @param {number} index - index of list\n     * @return {PageBreaks} the page-breaks\n     */\n  }, {\n    key: \"remove\",\n    value: function remove(index) {\n      var brk = this._node.children[index];\n      if (brk) {\n        this._node.children.splice(index, 1);\n        this._node.attributes.count--;\n        if (brk.man) {\n          this._node.attributes.manualBreakCount--;\n        }\n      }\n      return this;\n    }\n\n    /**\n     * get count of the page-breaks\n     * @return {number} the page-breaks' count\n     */\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._node.attributes.count;\n    }\n\n    /**\n     * get list of page-breaks\n     * @return {Array} list of the page-breaks\n     */\n  }, {\n    key: \"list\",\n    get: function get() {\n      return this._node.children.map(function (brk) {\n        return {\n          id: brk.id,\n          isManual: !!brk.man\n        };\n      });\n    }\n  }]);\n  return PageBreaks;\n}();\nmodule.exports = PageBreaks;","map":{"version":3,"names":["PageBreaks","node","_node","id","children","push","name","attributes","max","man","count","manualBreakCount","index","brk","splice","map","isManual","module","exports"],"sources":["C:/w2d/personeria/personeria-ui/node_modules/xlsx-populate/lib/PageBreaks.js"],"sourcesContent":["\"use strict\";\n\n/**\n * PageBreaks\n */\nclass PageBreaks {\n    constructor(node) {\n        this._node = node;\n    }\n\n    /**\n     * add page-breaks by row/column id\n     * @param {number} id - row/column id (rowNumber/colNumber)\n     * @return {PageBreaks} the page-breaks\n     */\n    add(id) {\n        this._node.children.push({\n            name: \"brk\",\n            children: [],\n            attributes: {\n                id,\n                max: 16383,\n                man: 1\n            }\n        });\n        this._node.attributes.count++;\n        this._node.attributes.manualBreakCount++;\n\n        return this;\n    }\n\n    /**\n     * remove page-breaks by index\n     * @param {number} index - index of list\n     * @return {PageBreaks} the page-breaks\n     */\n    remove(index) {\n        const brk = this._node.children[index];\n        if (brk) {\n            this._node.children.splice(index, 1);\n            this._node.attributes.count--;\n            if (brk.man) {\n                this._node.attributes.manualBreakCount--;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * get count of the page-breaks\n     * @return {number} the page-breaks' count\n     */\n    get count() {\n        return this._node.attributes.count;\n    }\n\n    /**\n     * get list of page-breaks\n     * @return {Array} list of the page-breaks\n     */\n    get list() {\n        return this._node.children.map(brk => ({\n            id: brk.id,\n            isManual: !!brk.man\n        }));\n    }\n}\n\nmodule.exports = PageBreaks;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AAFA;AAAA;AAAA,IAGMA,UAAU;EACZ,oBAAYC,IAAI,EAAE;IAAA;IACd,IAAI,CAACC,KAAK,GAAGD,IAAI;EACrB;;EAEA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,aAAIE,EAAE,EAAE;MACJ,IAAI,CAACD,KAAK,CAACE,QAAQ,CAACC,IAAI,CAAC;QACrBC,IAAI,EAAE,KAAK;QACXF,QAAQ,EAAE,EAAE;QACZG,UAAU,EAAE;UACRJ,EAAE,EAAFA,EAAE;UACFK,GAAG,EAAE,KAAK;UACVC,GAAG,EAAE;QACT;MACJ,CAAC,CAAC;MACF,IAAI,CAACP,KAAK,CAACK,UAAU,CAACG,KAAK,EAAE;MAC7B,IAAI,CAACR,KAAK,CAACK,UAAU,CAACI,gBAAgB,EAAE;MAExC,OAAO,IAAI;IACf;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,gBAAOC,KAAK,EAAE;MACV,IAAMC,GAAG,GAAG,IAAI,CAACX,KAAK,CAACE,QAAQ,CAACQ,KAAK,CAAC;MACtC,IAAIC,GAAG,EAAE;QACL,IAAI,CAACX,KAAK,CAACE,QAAQ,CAACU,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;QACpC,IAAI,CAACV,KAAK,CAACK,UAAU,CAACG,KAAK,EAAE;QAC7B,IAAIG,GAAG,CAACJ,GAAG,EAAE;UACT,IAAI,CAACP,KAAK,CAACK,UAAU,CAACI,gBAAgB,EAAE;QAC5C;MACJ;MAEA,OAAO,IAAI;IACf;;IAEA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,KAIA,eAAY;MACR,OAAO,IAAI,CAACT,KAAK,CAACK,UAAU,CAACG,KAAK;IACtC;;IAEA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,KAIA,eAAW;MACP,OAAO,IAAI,CAACR,KAAK,CAACE,QAAQ,CAACW,GAAG,CAAC,UAAAF,GAAG;QAAA,OAAK;UACnCV,EAAE,EAAEU,GAAG,CAACV,EAAE;UACVa,QAAQ,EAAE,CAAC,CAACH,GAAG,CAACJ;QACpB,CAAC;MAAA,CAAC,CAAC;IACP;EAAC;EAAA;AAAA;AAGLQ,MAAM,CAACC,OAAO,GAAGlB,UAAU"},"metadata":{},"sourceType":"script"}