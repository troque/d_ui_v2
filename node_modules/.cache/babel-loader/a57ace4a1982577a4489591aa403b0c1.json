{"ast":null,"code":"import _toConsumableArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import'rhfa-emergency-styles/dist/styles.css';import Spinner from'../Utils/Spinner';import{ErrorMessage,Field,Form,Formik}from'formik';import{Link}from\"react-router-dom\";import InfoErrorApi from'../Utils/InfoErrorApi';import InfoExitoApi from'../Utils/InfoExitoApi';import GenericApi from'../Api/Services/GenericApi';import ModalGen from'../Utils/Modals/ModalGeneric';import{Navigate}from\"react-router-dom\";import ModalCoincidenciasUsuarios from'../Utils/Modals/ModalCoincidenciasUsuarios';import'../Utils/Constants';import Select from'react-select';// Se inicializa la clase\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function UsuarioForm(){// Se inicializan las constantes\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),errorApi=_useState2[0],setErrorApi=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),getNombre=_useState4[0],setNombre=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),getApellido=_useState6[0],setApeliido=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),getUser=_useState8[0],setUser=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),getEmail=_useState10[0],setEmail=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),getIdDependencia=_useState12[0],setIdDependencia=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),getEstado=_useState14[0],setEstado=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isRedirect=_useState16[0],setIsRedirect=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),rolesAsociados=_useState18[0],setRolesAsociados=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),tipoExpAsociados=_useState20[0],setTipoExpAsociados=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),getRespuestaTipoExpediente=_useState22[0],setRespuestaTipoExpediente=_useState22[1];var _useState23=useState({data:{}}),_useState24=_slicedToArray(_useState23,2),listaDependenciaOrigen=_useState24[0],setListaDependenciaOrigen=_useState24[1];var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),respuestaDependenciaOrigen=_useState26[0],setDependenciaOrigen=_useState26[1];var _useState27=useState({data:{}}),_useState28=_slicedToArray(_useState27,2),getListaRoles=_useState28[0],setListaRoles=_useState28[1];var _useState29=useState(false),_useState30=_slicedToArray(_useState29,2),getRespuestaRoles=_useState30[0],setRespuestaRoles=_useState30[1];var _useState31=useState({data:{}}),_useState32=_slicedToArray(_useState31,2),listaTipoDerechoPeticion=_useState32[0],setListaDerechoPeticion=_useState32[1];var _useState33=useState(false),_useState34=_slicedToArray(_useState33,2),respuestaTipoDerechoPeticion=_useState34[0],setRespuestaDerechoPeticion=_useState34[1];var _useState35=useState({data:{}}),_useState36=_slicedToArray(_useState35,2),listaTipoProcesoDisciplinario=_useState36[0],setListaProcesoDisciplinario=_useState36[1];var _useState37=useState(false),_useState38=_slicedToArray(_useState37,2),respuestaProcesoDisciplinario=_useState38[0],setRespuestaProcesoDisciplinario=_useState38[1];var _useState39=useState({data:{}}),_useState40=_slicedToArray(_useState39,2),listaTiposQueja=_useState40[0],setListaTiposQueja=_useState40[1];var _useState41=useState(false),_useState42=_slicedToArray(_useState41,2),respuestaTiposQueja=_useState42[0],setRespuestaTiposQueja=_useState42[1];var _useState43=useState({data:{}}),_useState44=_slicedToArray(_useState43,2),listaTerminosRespuesta=_useState44[0],setListaTerminosRespuesta=_useState44[1];var _useState45=useState(false),_useState46=_slicedToArray(_useState45,2),respuestaTerminosRespuesta=_useState46[0],setRespuestaTerminosRespuesta=_useState46[1];var _useState47=useState({data:{}}),_useState48=_slicedToArray(_useState47,2),getTiposExpedientes=_useState48[0],setTiposExpedientes=_useState48[1];var _useState49=useState(''),_useState50=_slicedToArray(_useState49,2),getReparto=_useState50[0],setReparto=_useState50[1];var _useState51=useState(''),_useState52=_slicedToArray(_useState51,2),getIdDependenciaSecretariaComun=_useState52[0],setIdDependenciaSecretariaComun=_useState52[1];var _useState53=useState({data:{}}),_useState54=_slicedToArray(_useState53,2),listaGruposTrabajo=_useState54[0],setListaGruposTrabajo=_useState54[1];var _useState55=useState(''),_useState56=_slicedToArray(_useState55,2),getGrupoTrabajoSeleccionado=_useState56[0],setGrupoTrabajoSeleccionado=_useState56[1];var _useState57=useState(''),_useState58=_slicedToArray(_useState57,2),getIdGrupoTrabajo=_useState58[0],setIdGrupoTrabajo=_useState58[1];var _useState59=useState(false),_useState60=_slicedToArray(_useState59,2),respuestaGrupoTrabajo=_useState60[0],setRespuestaGrupoTrabajo=_useState60[1];var _useState61=useState([]),_useState62=_slicedToArray(_useState61,2),getListaGruposSeleccionadas=_useState62[0],setListaGruposSeleccionadas=_useState62[1];var _useState63=useState(\"\"),_useState64=_slicedToArray(_useState63,2),getErrorGrupos=_useState64[0],setErrorGrupos=_useState64[1];var _useState65=useState({title:\"\",message:\"\",show:false}),_useState66=_slicedToArray(_useState65,2),getModalState=_useState66[0],setModalState=_useState66[1];var _useState67=useState(false),_useState68=_slicedToArray(_useState67,2),getValidarSecretariaComun=_useState68[0],setValidarSecretariaComun=_useState68[1];/**\r\n     * Método encargado de cargar la configuracion de la clase\r\n     */useEffect(function(){window.showSpinner(true);// Inicia el spinner        \nfunction fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Se llama la funcion del metodo           \ngetAllDependenciaOrigen();// Se cargan las dependencias origen\ncase 1:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}window.showSpinner(false);// Finaliza el spinner        \nfetchData();// Se llama la funcion asincrona\n},[]);/**\r\n     * Método encargdo de cargar las dependencias registradas\r\n     */var getAllDependenciaOrigen=function getAllDependenciaOrigen(){GenericApi.getByIdGeneric('mas-dependencia-filtrado',global.Constants.ACCESO_DEPENDENCIA.CREAR_USUARIO).then(// Se consume la api para traer las depedencias a estado registrar\n// Se incializa la variable de respuesta\nfunction(datos){if(!datos.error){// Se válida que no haya error\nsetListaDependenciaOrigen(datos);// Se setean los datos\nsetDependenciaOrigen(true);// Se redeclara la variable en true\ngetllRoles();// Se llama el metodo para cargar los roles\n}else{// Se lanza el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/Usuario/Add',alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);// Finaliza el spinner   \n}});};/**\r\n     * Método encargado de cargar los roles\r\n     */var getllRoles=function getllRoles(){GenericApi.getAllGeneric('role').then(// Se consume la api para traer los roles\nfunction(datos){// Se incializa la variable de respuesta\nif(!datos.error){// Se valida que no haya error\nsetListaRoles(datos);// Se setean los datos\nsetRespuestaRoles(true);// Se redeclara la variable en true\ncargarTiposExpedientes();// Se llama el metodo para cargar los tipos de expediente\n}else{// Se lanza el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/Usuario/Add',alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);// Finaliza el spinner\n}});};/**\r\n     * Método encargado de cargar los tipos de expediente\r\n     */var cargarTiposExpedientes=function cargarTiposExpedientes(){GenericApi.getAllGeneric('mas-tipo-expediente').then(// Se consume la api para traer los roles\nfunction(datos){// Se incializa la variable de respuesta\nif(!datos.error){// Se valida que no haya error\nsetTiposExpedientes(datos);// Se setean los datos                    \nsetRespuestaTipoExpediente(true);// Se redeclara la variable en true\ncargarTiposDerechoPeticion();// Se llama el metodo para cargar los tipos de derecho de peticion\n}else{// Se lanza el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/Usuario/Add',alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);// Finaliza el spinner\n}});};/**\r\n     * Método encargado de cargar los tipos de derecho peticion\r\n     */var cargarTiposDerechoPeticion=function cargarTiposDerechoPeticion(){GenericApi.getAllGeneric('mas-tipo-derecho-peticion').then(// Se consume la api para traer los tipos de derecho peticion\nfunction(datos){// Se incializa la variable de respuesta\nif(!datos.error){// Se valida que no haya error\nsetListaDerechoPeticion(datos);// Se setean los datos\nsetRespuestaDerechoPeticion(true);// Se redeclara la variable en true\ncargarTiposQueja();// Se llama el metodo para cargar los tipos de queja\n}else{// Se lanza el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/Usuario/Add',alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);// Finaliza el spinner\n}});};/**\r\n     * Método encagrado de cargar los tipos de queja\r\n     */var cargarTiposQueja=function cargarTiposQueja(){GenericApi.getAllGeneric('mas-tipo-queja').then(// Se consume la api para traer los tipos de queja\nfunction(datos){// Se incializa la variable de respuesta\nif(!datos.error){// Se valida que no haya error\nsetListaTiposQueja(datos);// Se setean los datos\nsetRespuestaTiposQueja(true);// Se redeclara la variable en true\nsetListaProcesoDisciplinario(datos);// Se setean los datos\nsetRespuestaProcesoDisciplinario(true);// Se redeclara la variable en true\ncargarTerminoRespuesta();// Se llama el metodo para cargar los tipos de respuesta\n}else{// Se lanza el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/Usuario/Add',alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);// Finaliza el spinner\n}});};/**\r\n     * Método encargado de cargar los terminos de respuesta\r\n     */var cargarTerminoRespuesta=function cargarTerminoRespuesta(){// Se consume la API\nGenericApi.getAllGeneric('mas-termino-respuesta').then(function(datos){// Se incializa la variable de respuesta\nif(!datos.error){// Se valida que no haya error\nsetListaTerminosRespuesta(datos);// Se setean los datos\nsetRespuestaTerminosRespuesta(true);// Se redeclara la variable en true\ncargarIdDependenciaSecretariaComun();// Se llama el metodo para cargar el id de secretaria comun\n}else{// Se lanza el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/Usuario/Add',alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);// Finaliza el spinner\n}});};/**\r\n     * Método encargado de cargar el id de secretaria comun\r\n     */var cargarIdDependenciaSecretariaComun=function cargarIdDependenciaSecretariaComun(){// Se inicializa la variable\nvar data={\"data\":{\"type\":'mas_parametro',\"attributes\":{\"nombre\":\"id_dependencia_secretaria_comun\"}}};// Se consume la API\nGenericApi.getByDataGeneric(\"parametro/parametro-nombre\",data).then(// Se incializa la variable de respuesta\nfunction(datos){if(!datos.error){// Se valida que no haya error\nsetIdDependenciaSecretariaComun(datos.data[0].attributes.valor);// Se setea el valor del id\ncargarGruposDeTrabajo();// Se llama el metodo para cargar los grupos de trabajo\n}else{// Se lanza el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/Usuario/Add',alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);// Finaliza el spinner\n}});};/**\r\n     * Método encargado de cargar los grupos de trabajo\r\n     */var cargarGruposDeTrabajo=function cargarGruposDeTrabajo(){// Se consume la API\nGenericApi.getGeneric(\"mas_grupo_trabajo\").then(function(datos){// Se incializa la variable de respuesta\nif(!datos.error){// Se valida que no haya error\nsetListaGruposTrabajo(datos);// Se setea los datos\nsetRespuestaGrupoTrabajo(true);// Se setea la respuesta en true\n}else{setModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/Usuario/Add',alert:global.Constants.TIPO_ALERTA.ERROR});window.showSpinner(false);// Finaliza el spinner  \n}});};/**\r\n     * Método encargado de setear el valor el cambiar\r\n     * @param {*} event \r\n     */var handleInputChange=function handleInputChange(event){// Se capturan el input y valor correspondiente\nvar target=event.target;var value=target.type==='checkbox'?target.checked:target.value;var name=target.name;if(name==\"nombre\"){// Se valida cuando es nombre\nsetNombre(value);// Se setea el valor\n}if(name==\"apellido\"){// Se valida cuando es apellido\nsetApeliido(value);// Se setea el valor\n}if(name==\"correo\"){// Se valida cuando es correo\nsetEmail(value);// Se setea el valor\n}if(name==\"dependencia\"){// Se valida cuando es dependencia\nsetIdDependencia(value);// Se setea el valor\nvalidarSecretariaComun(value);// Se llama el metodo encargado de validar si la dependencia tiene accceso a Secretaria Comun\n}if(name==\"estado\"){// Se valida cuando es estado            \nsetEstado(value);// Se setea el valor\n}if(name==\"user\"){// Se valida cuando es user\nsetUser(value);// Se setea el valor\n}if(name==\"reparto\"){// Se valida cuando es reparto\nsetReparto(value);// Se setea el valor\n}if(name==\"grupoTrabajo\"){// Se valida cuando es grupoTrabajo\nsetIdGrupoTrabajo(value);// Se setea el valor\n}};/**\r\n     * Metodo encargado de cambiar el valor en los grupos de trabajo\r\n     * @param {*} v \r\n     */var selectChangeGrupo=function selectChangeGrupo(v){if(v!=null){// Se valida que es diferente de null\nsetListaGruposSeleccionadas(v);// Se setea el valor seleccionado\n}else{setErrorGrupos('Campo requerido');// Se setea el mensaje de error de los grupos\n}};/**\r\n     * Método encargado de validar si la dependencia tiene activo el permiso de secretaria comun\r\n     * @param {*} idDependencia \r\n     */var validarSecretariaComun=function validarSecretariaComun(idDependencia){window.showSpinner(true);// Se usa el cargando\n// Se consume la API\nGenericApi.getGeneric(\"mas-dependencia-configuracion/\"+idDependencia).then(function(datos){// Se inicializa la variable de respuesta\nif(!datos.error){// Se valida que no haya error\nsetValidarSecretariaComun(true);// Se redeclara la variable en true\n}else{setValidarSecretariaComun(false);// Se redeclara la variable en true\n}window.showSpinner(false);// Se quita el cargando\n});};/**\r\n     * Método encargado de cargar las dependencias de origen\r\n     * @returns \r\n     */var selectDependenciaOrigen=function selectDependenciaOrigen(){// Se retorna\nreturn listaDependenciaOrigen.data.map(function(dependencia,i){// Se recorre el array\nreturn/*#__PURE__*/_jsx(\"option\",{value:dependencia.id,children:dependencia.attributes.nombre},dependencia.id)// Se retorna el select por posicion\n;});};var mostrarModalDirectorio=function mostrarModalDirectorio(){// Metodo encargado de mostrar el modal del directorio\nwindow.showModalCoincidenciasUsuario();// Se llama el modal\n};/**\r\n     *  Método encargado de retorna la buscqueda del modal\r\n     * @param {*} childData \r\n     */var handleCallback=function handleCallback(childData){try{// Se inicializa el trycatch\nif(childData!=null){// Se valida que la data sea diferente de null\n// Se setean los valores\nsetNombre(childData.nombre);setApeliido(childData.apellido);setEmail(childData.email);setUser(childData.name);}}catch(error){}};// Metodo encargado de enviar los datos al backend\nvar enviarDatos=function enviarDatos(){window.showSpinner(true);// Se usa el cargando\nvar data;// Se inicializa la data\n// Se redeclara la variable con la informacion a enviar\ndata={\"data\":{\"type\":\"usuario\",\"attributes\":{\"nombre\":getNombre?getNombre:\"\",\"apellido\":getApellido?getApellido:\"\",\"name\":getUser?getUser:\"\",\"email\":getEmail?getEmail:\"\",\"id_dependencia\":getIdDependencia?getIdDependencia:\"\",\"id_mas_grupo_trabajo_secretaria_comun\":getListaGruposSeleccionadas?getListaGruposSeleccionadas:\"\",\"roles\":rolesAsociados,\"expedientes\":tipoExpAsociados,\"estado\":getEstado?getEstado:\"\",\"reparto_habilitado\":getReparto?getReparto:\"\"}}};// Se consume la API\nGenericApi.addGeneric('usuario',data).then(function(datos){// Se inicializa la variable de respuesta\nif(!datos.error){// Se valida que no haya error\nsetIsRedirect(true);// Se setea el valor en true                    \nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:global.Constants.MENSAJES_MODAL.EXITOSO,show:true,redirect:'/Usuario',alert:global.Constants.TIPO_ALERTA.EXITO});}else{// Se muestra el mensaje de error\nsetModalState({title:\"ADMINISTRACIÓN :: USUARIOS\",message:datos.error.toString(),show:true,redirect:'/Usuario/Add',alert:global.Constants.TIPO_ALERTA.ERROR});}// Se quita el cargando\nwindow.showSpinner(false);});};// Metodo encargado de agregar el check\nvar agregarCheck=function agregarCheck(e,rolId){// Se valida que sea true el check\nif(e==true){// Se añade al array el valor\nsetRolesAsociados(function(oldArray){return[].concat(_toConsumableArray(oldArray),[rolId]);});}else{// Se busca el indice con el id\nvar index=rolesAsociados.indexOf(rolId);// Se valida que se encuentre en el array\nif(index!==-1){// Se quita del array de roles\nrolesAsociados.splice(index,1);}}};// Metodo encargado de agregar el check de tipos de expediente\nvar agregarCheckTipoExp=function agregarCheckTipoExp(e,extId,subExpid){// Se valida que sea true el check\nif(e==true){// Se añade al array el valor\nsetTipoExpAsociados(function(oldArray){return[].concat(_toConsumableArray(oldArray),[extId+\"|\"+subExpid]);});}else{// Se busca el indice con el id\nvar index=tipoExpAsociados.indexOf(extId+\"|\"+subExpid);// Se valida que se encuentre en el array\nif(index!==-1){// Se quita del array de roles\ntipoExpAsociados.splice(index,1);}}};// Metodo encargado de listar los roles\nvar listarRoles=function listarRoles(){// Se retorna\nreturn(// Se recorre el array\ngetListaRoles.data.map(function(rol,i){// Se retorna cada columna por posicion\nreturn/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(e){return agregarCheck(e.target.checked,rol.id);},className:\"custom-control-input\",id:rol.id,name:rol.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:rol.id})]})}),/*#__PURE__*/_jsx(\"td\",{children:rol.attributes.nombre.toUpperCase()})]},rol.id+1);}));};// Metodo encargado de listar los tippos de expediente asociados\nvar listarTiposExpedientessociados=function listarTiposExpedientessociados(){// Se retorna\nreturn/*#__PURE__*/ (// Se carga el html\n_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:// Se recorre el array\ngetTiposExpedientes.data.map(function(tipoExp,i){// Se retorna el html ppr posicion\nreturn/*#__PURE__*/_jsx(\"div\",{id:\"accordion\",role:\"tablist\",\"aria-multiselectable\":\"true\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"block block-rounded mb-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header block-header-default\",role:\"tab\",id:\"accordion_h1\",children:/*#__PURE__*/_jsxs(\"a\",{className:\"font-w600\",\"data-toggle\":\"collapse\",\"data-parent\":\"#accordion\",href:\"#accordion_q1\",\"aria-expanded\":\"true\",\"aria-controls\":\"accordion_q1\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-folder\"}),\" \",tipoExp.attributes.nombre,\" \"]})}),/*#__PURE__*/_jsx(\"div\",{id:\"accordion_q1\",className:\"show\",role:\"tabpanel\",\"aria-labelledby\":\"accordion_h1\",\"data-parent\":\"#accordion\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"block-content\",children:[tipoExp.id==='1'&&respuestaTipoDerechoPeticion?componenteTipoExpedienteDerecho():'',tipoExp.id==='2'&&respuestaTiposQueja?componenteTipoExpedienteReferente():'',tipoExp.id==='3'&&respuestaTiposQueja?componenteTipoExpedienteQueja():'',tipoExp.id==='4'&&respuestaTerminosRespuesta?componenteTipoExpedienteTutela():'',tipoExp.id==='5'&&respuestaProcesoDisciplinario?componenteTipoExpedienteProcesoDisciplinario():'']})})]})},tipoExp.id);})})}));};// Tipo expediente - Derecho Peticion\nvar componenteTipoExpedienteDerecho=function componenteTipoExpedienteDerecho(){return listaTipoDerechoPeticion.data.map(function(derecho,i){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:/*#__PURE__*/_jsx(_Fragment,{children:tipoExpAsociados.indexOf(('1|'+derecho.id).toString())>-1?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{defaultChecked:true,type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'1',derecho.id);},className:\"custom-control-input\",id:'derecho'+derecho.id,name:'derecho'+derecho.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'derecho'+derecho.id})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'1',derecho.id);},className:\"custom-control-input\",id:'derecho'+derecho.id,name:'derecho'+derecho.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'derecho'+derecho.id})]})})})}),/*#__PURE__*/_jsx(\"td\",{children:derecho.attributes.nombre})]},derecho.id+1);});};// Tipo expediente - Poder Referente\nvar componenteTipoExpedienteReferente=function componenteTipoExpedienteReferente(){return listaTiposQueja.data.map(function(quejaDef,i){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'2',quejaDef.id);},className:\"custom-control-input\",id:'quejaDef'+quejaDef.id,name:'quejaDef'+quejaDef.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'quejaDef'+quejaDef.id})]})})}),/*#__PURE__*/_jsx(\"td\",{children:quejaDef.attributes.nombre})]},quejaDef.id+1);});};// Tipo expediente - Queja\nvar componenteTipoExpedienteQueja=function componenteTipoExpedienteQueja(){return listaTiposQueja.data.map(function(queja,i){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'3',queja.id);},className:\"custom-control-input\",id:'queja'+queja.id,name:'queja'+queja.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'queja'+queja.id})]})})}),/*#__PURE__*/_jsx(\"td\",{children:queja.attributes.nombre})]},queja.id+1);});};// Tipo expediente - Tutela\nvar componenteTipoExpedienteTutela=function componenteTipoExpedienteTutela(){return listaTerminosRespuesta.data.map(function(termino,i){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'4',termino.id);},className:\"custom-control-input\",id:'termino'+termino.id,name:'termino'+termino.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'termino'+termino.id})]})})}),/*#__PURE__*/_jsx(\"td\",{children:termino.attributes.nombre})]},termino.id+1);});};// Tipo expediente - Proceso Disciplinario\nvar componenteTipoExpedienteProcesoDisciplinario=function componenteTipoExpedienteProcesoDisciplinario(){return listaTiposQueja.data.map(function(proceso,i){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mb-2\",children:/*#__PURE__*/_jsx(_Fragment,{children:tipoExpAsociados.indexOf(('5|'+proceso.id).toString())>-1?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{defaultChecked:true,type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'5',proceso.id);},className:\"custom-control-input\",id:'proceso'+proceso.id,name:'proceso'+proceso.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'proceso'+proceso.id})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(e){return agregarCheckTipoExp(e.target.checked,'5',proceso.id);},className:\"custom-control-input\",id:'proceso'+proceso.id,name:'termino'+proceso.id}),/*#__PURE__*/_jsx(\"label\",{className:\"custom-control-label\",htmlFor:'proceso'+proceso.id})]})})})}),/*#__PURE__*/_jsx(\"td\",{children:proceso.attributes.nombre})]},proceso.id+1);});};var componentFormularioUsuario=function componentFormularioUsuario(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ModalCoincidenciasUsuarios,{parentCallback:handleCallback}),/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(Formik,{initialValues:{nombre:'',apellido:'',correo:'',dependencia:'',roles:'',tipoExpediente:'',estado:'',user:'',reparto:''},enableReinitialize:true,validate:function validate(valores){var errores={};if(!getUser){errores.user=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(!getNombre){errores.nombre=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(!getApellido){errores.apellido=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(!getEmail){errores.correo=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(!getIdDependencia){errores.dependencia=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(rolesAsociados.length==''){errores.roles=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(getEstado==''){errores.estado=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}if(!getReparto){errores.reparto=global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;}return errores;},onSubmit:function onSubmit(valores,_ref){var resetForm=_ref.resetForm;enviarDatos();},children:function children(_ref2){var _listaGruposTrabajo$d;var errors=_ref2.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"block-title\",children:\"ADMINISTRACI\\xD3N :: USUARIOS\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"row text-right w2d-enter\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(Link,{to:'/Usuario',title:\"Regresar\",children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-primary\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-backward\"}),\" \"]})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"block-content text-center\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-primary\",onClick:function onClick(){return mostrarModalDirectorio();},children:\"BUSCAR USUARIO\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"block-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"nombre\",children:[\"NOMBRES \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{disabled:true,value:getNombre,type:\"text\",id:\"nombre\",name:\"nombre\",className:\"form-control\",placeholder:\"Nombre\",onChange:handleInputChange})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"apellido\",children:[\"APELLIDOS \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{disabled:true,value:getApellido,type:\"text\",id:\"apellido\",name:\"apellido\",className:\"form-control\",placeholder:\"Apellido\",onChange:handleInputChange})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"user\",children:[\"USUARIO \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{disabled:true,value:getUser,onChange:handleInputChange,type:\"text\",id:\"user\",name:\"user\",className:\"form-control\",placeholder:\"Usuario\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"correo\",children:[\"CORREO \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsx(Field,{disabled:true,value:getEmail,type:\"text\",id:\"correo\",name:\"correo\",onChange:handleInputChange,className:\"form-control\",placeholder:\"Correo\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"dependencia\",children:[\"DEPENDENCIA \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Field,{as:\"select\",value:getIdDependencia,onChange:handleInputChange,className:\"form-control\",id:\"dependencia\",name:\"dependencia\",placeholder:\"Dependencia\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}),respuestaDependenciaOrigen?selectDependenciaOrigen():null]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"dependencia\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.dependencia});}})]})}),getValidarSecretariaComun?/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"dependencgrupoTrabajoia\",children:[\"GRUPOS DE TRABAJO\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),respuestaGrupoTrabajo&&listaGruposTrabajo.data.length>0?/*#__PURE__*/_jsx(Select,{id:\"grupoTrabajo\",name:\"grupoTrabajo\",isMulti:true,value:getListaGruposSeleccionadas,placeholder:\"Selecciona\",noOptionsMessage:function noOptionsMessage(){return\"Sin datos\";},options:listaGruposTrabajo===null||listaGruposTrabajo===void 0?void 0:(_listaGruposTrabajo$d=listaGruposTrabajo.data)===null||_listaGruposTrabajo$d===void 0?void 0:_listaGruposTrabajo$d.map(function(e){return{label:e.attributes.nombre,value:e.id};}),onChange:function onChange(e){return selectChangeGrupo(e);}}):null,/*#__PURE__*/_jsx(ErrorMessage,{name:\"grupoTrabajo\",component:function component(){return/*#__PURE__*/_jsxs(\"span\",{className:\"text-danger\",children:[errors.grupoTrabajo,\" \",getErrorGrupos]});}})]})}):setIdGrupoTrabajo(''),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"estado\",children:[\"ESTADO \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Field,{as:\"select\",value:getEstado,onChange:handleInputChange,className:\"form-control\",id:\"estado\",name:\"estado\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"ACTIVO\"}),/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"INACTIVO\"})]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"estado\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.estado});}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"reparto\",children:[\"HABILITADO PARA REPARTO\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(Field,{as:\"select\",value:getReparto,onChange:handleInputChange,className:\"form-control\",id:\"reparto\",name:\"reparto\",placeholder:\"Habilitado para reparto\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",selected:true,children:\"SI\"}),/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"NO\"})]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"reparto\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.reparto});}})]})})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"block-title\",children:\"ASIGNACI\\xD3N DE ROLES\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"block-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"label\",{children:[\"DEBE SELECCIONAR AL MENOS UN ROL\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered table-striped table-vcenter js-dataTable-full\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{width:\"50px\"},children:\"SELECCIONAR\"}),/*#__PURE__*/_jsx(\"th\",{children:\"NOMBRE DE ROL\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:getRespuestaRoles?listarRoles():null})]})}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"roles\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.roles});}})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"block-title\",children:\"TIPOS DE EXPEDIENTES QUE EL USUARIO PUEDE GESTIONAR\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"block-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(ErrorMessage,{name:\"tipoExpediente\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.tipoExpediente});}})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:getRespuestaTipoExpediente?listarTiposExpedientessociados():null})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right bg-light\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:global.Constants.BOTON_NOMBRE.REGISTRAR}),/*#__PURE__*/_jsx(Link,{to:'/Usuario',className:\"font-size-h5 font-w600\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:global.Constants.BOTON_NOMBRE.CANCELAR})})]})]})]});}})]});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(ModalGen,{data:getModalState}),/*#__PURE__*/_jsx(\"div\",{className:\"w2d_block let\",children:/*#__PURE__*/_jsx(\"nav\",{\"aria-label\":\"breadcrumb\",children:/*#__PURE__*/_jsxs(\"ol\",{className:\"breadcrumb breadcrumb-alt push\",children:[/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Administraci\\xF3n\"})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Perfiles\"})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/Usuario\",children:/*#__PURE__*/_jsx(\"small\",{children:\"Lista de usuarios\"})})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(\"small\",{children:\" Crear usuario\"})]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:componentFormularioUsuario()})]});}export default UsuarioForm;","map":{"version":3,"names":["React","useEffect","useState","Spinner","ErrorMessage","Field","Form","Formik","Link","InfoErrorApi","InfoExitoApi","GenericApi","ModalGen","Navigate","ModalCoincidenciasUsuarios","Select","UsuarioForm","errorApi","setErrorApi","getNombre","setNombre","getApellido","setApeliido","getUser","setUser","getEmail","setEmail","getIdDependencia","setIdDependencia","getEstado","setEstado","isRedirect","setIsRedirect","rolesAsociados","setRolesAsociados","tipoExpAsociados","setTipoExpAsociados","getRespuestaTipoExpediente","setRespuestaTipoExpediente","data","listaDependenciaOrigen","setListaDependenciaOrigen","respuestaDependenciaOrigen","setDependenciaOrigen","getListaRoles","setListaRoles","getRespuestaRoles","setRespuestaRoles","listaTipoDerechoPeticion","setListaDerechoPeticion","respuestaTipoDerechoPeticion","setRespuestaDerechoPeticion","listaTipoProcesoDisciplinario","setListaProcesoDisciplinario","respuestaProcesoDisciplinario","setRespuestaProcesoDisciplinario","listaTiposQueja","setListaTiposQueja","respuestaTiposQueja","setRespuestaTiposQueja","listaTerminosRespuesta","setListaTerminosRespuesta","respuestaTerminosRespuesta","setRespuestaTerminosRespuesta","getTiposExpedientes","setTiposExpedientes","getReparto","setReparto","getIdDependenciaSecretariaComun","setIdDependenciaSecretariaComun","listaGruposTrabajo","setListaGruposTrabajo","getGrupoTrabajoSeleccionado","setGrupoTrabajoSeleccionado","getIdGrupoTrabajo","setIdGrupoTrabajo","respuestaGrupoTrabajo","setRespuestaGrupoTrabajo","getListaGruposSeleccionadas","setListaGruposSeleccionadas","getErrorGrupos","setErrorGrupos","title","message","show","getModalState","setModalState","getValidarSecretariaComun","setValidarSecretariaComun","window","showSpinner","fetchData","getAllDependenciaOrigen","getByIdGeneric","global","Constants","ACCESO_DEPENDENCIA","CREAR_USUARIO","then","datos","error","getllRoles","toString","redirect","alert","TIPO_ALERTA","ERROR","getAllGeneric","cargarTiposExpedientes","cargarTiposDerechoPeticion","cargarTiposQueja","cargarTerminoRespuesta","cargarIdDependenciaSecretariaComun","getByDataGeneric","attributes","valor","cargarGruposDeTrabajo","getGeneric","handleInputChange","event","target","value","type","checked","name","validarSecretariaComun","selectChangeGrupo","v","idDependencia","selectDependenciaOrigen","map","dependencia","i","id","nombre","mostrarModalDirectorio","showModalCoincidenciasUsuario","handleCallback","childData","apellido","email","enviarDatos","addGeneric","MENSAJES_MODAL","EXITOSO","EXITO","agregarCheck","e","rolId","oldArray","index","indexOf","splice","agregarCheckTipoExp","extId","subExpid","listarRoles","rol","toUpperCase","listarTiposExpedientessociados","tipoExp","componenteTipoExpedienteDerecho","componenteTipoExpedienteReferente","componenteTipoExpedienteQueja","componenteTipoExpedienteTutela","componenteTipoExpedienteProcesoDisciplinario","derecho","quejaDef","queja","termino","proceso","componentFormularioUsuario","correo","roles","tipoExpediente","estado","user","reparto","valores","errores","MENSAJE_ERROR","CAMPO_OBLIGATORIO","length","resetForm","errors","MENSAJE_INFORMATIVO","SELECCIONE_UNA_OPCION","label","grupoTrabajo","width","BOTON_NOMBRE","REGISTRAR","CANCELAR"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/UsuarioForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport 'rhfa-emergency-styles/dist/styles.css'\r\nimport Spinner from '../Utils/Spinner';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Link, } from \"react-router-dom\";\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport InfoExitoApi from '../Utils/InfoExitoApi';\r\nimport GenericApi from '../Api/Services/GenericApi';\r\nimport ModalGen from '../Utils/Modals/ModalGeneric';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport ModalCoincidenciasUsuarios from '../Utils/Modals/ModalCoincidenciasUsuarios';\r\nimport '../Utils/Constants';\r\nimport Select from 'react-select';\r\n\r\n// Se inicializa la clase\r\nfunction UsuarioForm() {\r\n\r\n    // Se inicializan las constantes\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getNombre, setNombre] = useState('');\r\n    const [getApellido, setApeliido] = useState('');\r\n    const [getUser, setUser] = useState('');\r\n    const [getEmail, setEmail] = useState('');\r\n    const [getIdDependencia, setIdDependencia] = useState('');\r\n    const [getEstado, setEstado] = useState('');\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n    const [rolesAsociados, setRolesAsociados] = useState([]);\r\n    const [tipoExpAsociados, setTipoExpAsociados] = useState([]);\r\n    const [getRespuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\r\n    const [listaDependenciaOrigen, setListaDependenciaOrigen] = useState({ data: {} });\r\n    const [respuestaDependenciaOrigen, setDependenciaOrigen] = useState(false);\r\n    const [getListaRoles, setListaRoles] = useState({ data: {} });\r\n    const [getRespuestaRoles, setRespuestaRoles] = useState(false);\r\n\r\n    const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({ data: {} });\r\n    const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\r\n\r\n    const [listaTipoProcesoDisciplinario, setListaProcesoDisciplinario] = useState({ data: {} });\r\n    const [respuestaProcesoDisciplinario, setRespuestaProcesoDisciplinario] = useState(false);\r\n\r\n    const [listaTiposQueja, setListaTiposQueja] = useState({ data: {} });\r\n    const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\r\n\r\n    const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({ data: {} });\r\n    const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\r\n\r\n    const [getTiposExpedientes, setTiposExpedientes] = useState({ data: {} });\r\n    const [getReparto, setReparto] = useState('');\r\n    const [getIdDependenciaSecretariaComun, setIdDependenciaSecretariaComun] = useState('');\r\n    const [listaGruposTrabajo, setListaGruposTrabajo] = useState({ data: {} });\r\n    const [getGrupoTrabajoSeleccionado, setGrupoTrabajoSeleccionado] = useState('');\r\n    const [getIdGrupoTrabajo, setIdGrupoTrabajo] = useState('');\r\n    const [respuestaGrupoTrabajo, setRespuestaGrupoTrabajo] = useState(false);\r\n    const [getListaGruposSeleccionadas, setListaGruposSeleccionadas] = useState([]);\r\n    const [getErrorGrupos, setErrorGrupos] = useState(\"\");\r\n\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getValidarSecretariaComun, setValidarSecretariaComun] = useState(false);\r\n\r\n\r\n    /**\r\n     * Método encargado de cargar la configuracion de la clase\r\n     */\r\n    useEffect(() => {\r\n        window.showSpinner(true);// Inicia el spinner        \r\n        async function fetchData() {// Se llama la funcion del metodo           \r\n            getAllDependenciaOrigen();  // Se cargan las dependencias origen\r\n        }\r\n        window.showSpinner(false);// Finaliza el spinner        \r\n        fetchData();// Se llama la funcion asincrona\r\n    }, []);\r\n\r\n\r\n    /**\r\n     * Método encargdo de cargar las dependencias registradas\r\n     */\r\n    const getAllDependenciaOrigen = () => {\r\n\r\n        GenericApi.getByIdGeneric('mas-dependencia-filtrado', global.Constants.ACCESO_DEPENDENCIA.CREAR_USUARIO).then(// Se consume la api para traer las depedencias a estado registrar\r\n\r\n            // Se incializa la variable de respuesta\r\n            datos => {\r\n\r\n                if (!datos.error) { // Se válida que no haya error\r\n\r\n                    setListaDependenciaOrigen(datos);// Se setean los datos\r\n                    setDependenciaOrigen(true); // Se redeclara la variable en true\r\n                    getllRoles(); // Se llama el metodo para cargar los roles\r\n\r\n                }\r\n                else {\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner   \r\n                }\r\n            }\r\n\r\n\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de cargar los roles\r\n     */\r\n    const getllRoles = () => {\r\n\r\n        GenericApi.getAllGeneric('role').then(// Se consume la api para traer los roles\r\n\r\n            datos => { // Se incializa la variable de respuesta\r\n\r\n                if (!datos.error) {  // Se valida que no haya error\r\n                    setListaRoles(datos); // Se setean los datos\r\n                    setRespuestaRoles(true); // Se redeclara la variable en true\r\n                    cargarTiposExpedientes();  // Se llama el metodo para cargar los tipos de expediente\r\n                }\r\n                else {\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de cargar los tipos de expediente\r\n     */\r\n    const cargarTiposExpedientes = () => {\r\n\r\n        GenericApi.getAllGeneric('mas-tipo-expediente').then( // Se consume la api para traer los roles\r\n\r\n            datos => { // Se incializa la variable de respuesta\r\n\r\n                if (!datos.error) { // Se valida que no haya error\r\n                    setTiposExpedientes(datos); // Se setean los datos                    \r\n                    setRespuestaTipoExpediente(true); // Se redeclara la variable en true\r\n                    cargarTiposDerechoPeticion(); // Se llama el metodo para cargar los tipos de derecho de peticion\r\n\r\n                } else {\r\n\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de cargar los tipos de derecho peticion\r\n     */\r\n\r\n    const cargarTiposDerechoPeticion = () => {\r\n\r\n        GenericApi.getAllGeneric('mas-tipo-derecho-peticion').then(// Se consume la api para traer los tipos de derecho peticion\r\n\r\n\r\n            datos => { // Se incializa la variable de respuesta\r\n\r\n                if (!datos.error) { // Se valida que no haya error\r\n\r\n                    setListaDerechoPeticion(datos); // Se setean los datos\r\n                    setRespuestaDerechoPeticion(true); // Se redeclara la variable en true\r\n                    cargarTiposQueja();// Se llama el metodo para cargar los tipos de queja\r\n\r\n                } else {\r\n\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encagrado de cargar los tipos de queja\r\n     */\r\n    const cargarTiposQueja = () => {\r\n\r\n        GenericApi.getAllGeneric('mas-tipo-queja').then( // Se consume la api para traer los tipos de queja\r\n\r\n            datos => { // Se incializa la variable de respuesta\r\n\r\n                if (!datos.error) { // Se valida que no haya error\r\n\r\n                    setListaTiposQueja(datos); // Se setean los datos\r\n                    setRespuestaTiposQueja(true); // Se redeclara la variable en true\r\n\r\n                    setListaProcesoDisciplinario(datos); // Se setean los datos\r\n                    setRespuestaProcesoDisciplinario(true); // Se redeclara la variable en true\r\n\r\n                    cargarTerminoRespuesta();// Se llama el metodo para cargar los tipos de respuesta\r\n\r\n                } else {\r\n\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de cargar los terminos de respuesta\r\n     */\r\n    const cargarTerminoRespuesta = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric('mas-termino-respuesta').then(\r\n\r\n            datos => {// Se incializa la variable de respuesta\r\n\r\n                if (!datos.error) {// Se valida que no haya error\r\n\r\n                    setListaTerminosRespuesta(datos);// Se setean los datos\r\n                    setRespuestaTerminosRespuesta(true);// Se redeclara la variable en true\r\n                    cargarIdDependenciaSecretariaComun();// Se llama el metodo para cargar el id de secretaria comun\r\n                } else {\r\n\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de cargar el id de secretaria comun\r\n     */\r\n    const cargarIdDependenciaSecretariaComun = () => {\r\n\r\n        // Se inicializa la variable\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'mas_parametro',\r\n                \"attributes\": {\r\n                    \"nombre\": \"id_dependencia_secretaria_comun\"\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se consume la API\r\n        GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n\r\n            // Se incializa la variable de respuesta\r\n            datos => {\r\n\r\n                if (!datos.error) { // Se valida que no haya error\r\n\r\n                    setIdDependenciaSecretariaComun(datos.data[0].attributes.valor); // Se setea el valor del id\r\n                    cargarGruposDeTrabajo(); // Se llama el metodo para cargar los grupos de trabajo\r\n\r\n                } else {\r\n                    // Se lanza el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    /**\r\n     * Método encargado de cargar los grupos de trabajo\r\n     */\r\n    const cargarGruposDeTrabajo = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getGeneric(\"mas_grupo_trabajo\").then(\r\n\r\n            datos => {// Se incializa la variable de respuesta\r\n\r\n                if (!datos.error) {// Se valida que no haya error\r\n\r\n                    setListaGruposTrabajo(datos);// Se setea los datos\r\n                    setRespuestaGrupoTrabajo(true);// Se setea la respuesta en true\r\n                }\r\n                else {\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);// Finaliza el spinner  \r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de setear el valor el cambiar\r\n     * @param {*} event \r\n     */\r\n    const handleInputChange = (event) => {\r\n\r\n        // Se capturan el input y valor correspondiente\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if (name == \"nombre\") {// Se valida cuando es nombre\r\n            setNombre(value); // Se setea el valor\r\n        }\r\n\r\n        if (name == \"apellido\") { // Se valida cuando es apellido\r\n            setApeliido(value);// Se setea el valor\r\n        }\r\n\r\n        if (name == \"correo\") { // Se valida cuando es correo\r\n            setEmail(value);  // Se setea el valor\r\n        }\r\n\r\n        if (name == \"dependencia\") {  // Se valida cuando es dependencia\r\n\r\n            setIdDependencia(value);  // Se setea el valor\r\n            validarSecretariaComun(value); // Se llama el metodo encargado de validar si la dependencia tiene accceso a Secretaria Comun\r\n        }\r\n\r\n        if (name == \"estado\") {  // Se valida cuando es estado            \r\n            setEstado(value); // Se setea el valor\r\n        }\r\n\r\n        if (name == \"user\") { // Se valida cuando es user\r\n            setUser(value); // Se setea el valor\r\n        }\r\n\r\n        if (name == \"reparto\") {  // Se valida cuando es reparto\r\n            setReparto(value); // Se setea el valor\r\n        }\r\n\r\n        if (name == \"grupoTrabajo\") { // Se valida cuando es grupoTrabajo\r\n            setIdGrupoTrabajo(value); // Se setea el valor\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de cambiar el valor en los grupos de trabajo\r\n     * @param {*} v \r\n     */\r\n    const selectChangeGrupo = (v) => {\r\n\r\n        if (v != null) { // Se valida que es diferente de null\r\n            setListaGruposSeleccionadas(v); // Se setea el valor seleccionado\r\n        } else {\r\n            setErrorGrupos('Campo requerido'); // Se setea el mensaje de error de los grupos\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Método encargado de validar si la dependencia tiene activo el permiso de secretaria comun\r\n     * @param {*} idDependencia \r\n     */\r\n    const validarSecretariaComun = (idDependencia) => {\r\n\r\n        window.showSpinner(true); // Se usa el cargando\r\n\r\n        // Se consume la API\r\n        GenericApi.getGeneric(\"mas-dependencia-configuracion/\" + idDependencia).then(\r\n\r\n            datos => { // Se inicializa la variable de respuesta\r\n\r\n\r\n                if (!datos.error) { // Se valida que no haya error\r\n                    setValidarSecretariaComun(true); // Se redeclara la variable en true\r\n                } else {\r\n                    setValidarSecretariaComun(false); // Se redeclara la variable en true\r\n                }\r\n\r\n                window.showSpinner(false); // Se quita el cargando\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Método encargado de cargar las dependencias de origen\r\n     * @returns \r\n     */\r\n    const selectDependenciaOrigen = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            listaDependenciaOrigen.data.map((dependencia, i) => { // Se recorre el array\r\n                return (\r\n                    <option key={dependencia.id} value={dependencia.id}>{dependencia.attributes.nombre}</option>  // Se retorna el select por posicion\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const mostrarModalDirectorio = () => { // Metodo encargado de mostrar el modal del directorio\r\n        window.showModalCoincidenciasUsuario();  // Se llama el modal\r\n    }\r\n\r\n\r\n    /**\r\n     *  Método encargado de retorna la buscqueda del modal\r\n     * @param {*} childData \r\n     */\r\n    const handleCallback = (childData) => {\r\n\r\n        try { // Se inicializa el trycatch\r\n\r\n            if (childData != null) { // Se valida que la data sea diferente de null\r\n\r\n                // Se setean los valores\r\n                setNombre(childData.nombre);\r\n                setApeliido(childData.apellido);\r\n                setEmail(childData.email);\r\n                setUser(childData.name);\r\n            }\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de enviar los datos al backend\r\n    const enviarDatos = () => {\r\n\r\n        window.showSpinner(true); // Se usa el cargando\r\n        let data; // Se inicializa la data\r\n\r\n        // Se redeclara la variable con la informacion a enviar\r\n        data = {\r\n\r\n            \"data\": {\r\n                \"type\": \"usuario\",\r\n                \"attributes\": {\r\n                    \"nombre\": getNombre ? getNombre : \"\",\r\n                    \"apellido\": getApellido ? getApellido : \"\",\r\n                    \"name\": getUser ? getUser : \"\",\r\n                    \"email\": getEmail ? getEmail : \"\",\r\n                    \"id_dependencia\": getIdDependencia ? getIdDependencia : \"\",\r\n                    \"id_mas_grupo_trabajo_secretaria_comun\": getListaGruposSeleccionadas ? getListaGruposSeleccionadas : \"\",\r\n                    \"roles\": rolesAsociados,\r\n                    \"expedientes\": tipoExpAsociados,\r\n                    \"estado\": getEstado ? getEstado : \"\",\r\n                    \"reparto_habilitado\": getReparto ? getReparto : \"\",\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se consume la API\r\n        GenericApi.addGeneric('usuario', data).then(\r\n\r\n            datos => { // Se inicializa la variable de respuesta\r\n\r\n                if (!datos.error) { // Se valida que no haya error\r\n\r\n                    setIsRedirect(true); // Se setea el valor en true                    \r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: global.Constants.MENSAJES_MODAL.EXITOSO, show: true, redirect: '/Usuario', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n\r\n                } else {\r\n                    // Se muestra el mensaje de error\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: USUARIOS\", message: datos.error.toString(), show: true, redirect: '/Usuario/Add', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de agregar el check\r\n    const agregarCheck = (e, rolId) => {\r\n\r\n        // Se valida que sea true el check\r\n        if (e == true) {\r\n\r\n            // Se añade al array el valor\r\n            setRolesAsociados(oldArray => [...oldArray, rolId]);\r\n        } else {\r\n\r\n            // Se busca el indice con el id\r\n            var index = rolesAsociados.indexOf(rolId);\r\n\r\n            // Se valida que se encuentre en el array\r\n            if (index !== -1) {\r\n\r\n                // Se quita del array de roles\r\n                rolesAsociados.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de agregar el check de tipos de expediente\r\n    const agregarCheckTipoExp = (e, extId, subExpid) => {\r\n\r\n        // Se valida que sea true el check\r\n        if (e == true) {\r\n\r\n            // Se añade al array el valor\r\n            setTipoExpAsociados(oldArray => [...oldArray, (extId + \"|\" + subExpid)]);\r\n        } else {\r\n\r\n            // Se busca el indice con el id\r\n            var index = tipoExpAsociados.indexOf((extId + \"|\" + subExpid));\r\n\r\n            // Se valida que se encuentre en el array\r\n            if (index !== -1) {\r\n\r\n                // Se quita del array de roles\r\n                tipoExpAsociados.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de listar los roles\r\n    const listarRoles = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array\r\n            getListaRoles.data.map((rol, i) => {\r\n\r\n                // Se retorna cada columna por posicion\r\n                return (\r\n                    <tr key={(rol.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <input type=\"checkbox\" onChange={e => agregarCheck(e.target.checked, rol.id)} className=\"custom-control-input\" id={rol.id} name={rol.id} />\r\n                                <label className=\"custom-control-label\" htmlFor={rol.id}></label>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {rol.attributes.nombre.toUpperCase()}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de listar los tippos de expediente asociados\r\n    const listarTiposExpedientessociados = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se carga el html\r\n            <div className='row'>\r\n                <div className=\"col-md-12\">\r\n                    {\r\n                        // Se recorre el array\r\n                        getTiposExpedientes.data.map((tipoExp, i) => {\r\n\r\n                            // Se retorna el html ppr posicion\r\n                            return (\r\n                                <div key={tipoExp.id} id=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\r\n                                    <div className=\"block block-rounded mb-1\">\r\n                                        <div className=\"block-header block-header-default\" role=\"tab\" id=\"accordion_h1\">\r\n                                            <a className=\"font-w600\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#accordion_q1\" aria-expanded=\"true\" aria-controls=\"accordion_q1\"><i className=\"fas fa-folder\" /> {tipoExp.attributes.nombre} </a>\r\n                                        </div>\r\n                                        <div id=\"accordion_q1\" className=\"show\" role=\"tabpanel\" aria-labelledby=\"accordion_h1\" data-parent=\"#accordion\">\r\n                                            <div className=\"block-content\">\r\n                                                {/*DERECHO DE PETICION*/}\r\n                                                {tipoExp.id === '1' && respuestaTipoDerechoPeticion ? componenteTipoExpedienteDerecho() : ''}\r\n                                                {/*PODER REFERENTE A SOLIICTUD*/}\r\n                                                {tipoExp.id === '2' && respuestaTiposQueja ? componenteTipoExpedienteReferente() : ''}\r\n                                                {/*QUEJA*/}\r\n                                                {tipoExp.id === '3' && respuestaTiposQueja ? componenteTipoExpedienteQueja() : ''}\r\n                                                {/*TUTELA*/}\r\n                                                {tipoExp.id === '4' && respuestaTerminosRespuesta ? componenteTipoExpedienteTutela() : ''}\r\n                                                {/*PROCESO DISCIPLINARIO*/}\r\n                                                {tipoExp.id === '5' && respuestaProcesoDisciplinario ? componenteTipoExpedienteProcesoDisciplinario() : ''}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div >\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Tipo expediente - Derecho Peticion\r\n    const componenteTipoExpedienteDerecho = () => {\r\n        return (\r\n\r\n            listaTipoDerechoPeticion.data.map((derecho, i) => {\r\n                return (\r\n                    <tr key={(derecho.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n\r\n                                        (tipoExpAsociados.indexOf(('1|' + derecho.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '1', derecho.id)} className=\"custom-control-input\" id={'derecho' + derecho.id} name={'derecho' + derecho.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'derecho' + derecho.id}></label>\r\n                                            </div>\r\n\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '1', derecho.id)} className=\"custom-control-input\" id={'derecho' + derecho.id} name={'derecho' + derecho.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'derecho' + derecho.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {derecho.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n\r\n\r\n        )\r\n    }\r\n\r\n    // Tipo expediente - Poder Referente\r\n    const componenteTipoExpedienteReferente = () => {\r\n        return (\r\n\r\n            listaTiposQueja.data.map((quejaDef, i) => {\r\n                return (\r\n                    <tr key={(quejaDef.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <div>\r\n                                    <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '2', quejaDef.id)} className=\"custom-control-input\" id={'quejaDef' + quejaDef.id} name={'quejaDef' + quejaDef.id} />\r\n                                    <label className=\"custom-control-label\" htmlFor={'quejaDef' + quejaDef.id}></label>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {quejaDef.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n\r\n\r\n        )\r\n    }\r\n\r\n    // Tipo expediente - Queja\r\n    const componenteTipoExpedienteQueja = () => {\r\n        return (\r\n\r\n            listaTiposQueja.data.map((queja, i) => {\r\n                return (\r\n                    <tr key={(queja.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <div>\r\n                                    <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '3', queja.id)} className=\"custom-control-input\" id={'queja' + queja.id} name={'queja' + queja.id} />\r\n                                    <label className=\"custom-control-label\" htmlFor={'queja' + queja.id}></label>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {queja.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n\r\n\r\n        )\r\n    }\r\n\r\n    // Tipo expediente - Tutela\r\n    const componenteTipoExpedienteTutela = () => {\r\n        return (\r\n            listaTerminosRespuesta.data.map((termino, i) => {\r\n                return (\r\n                    <tr key={(termino.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n\r\n                                <div>\r\n                                    <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '4', termino.id)} className=\"custom-control-input\" id={'termino' + termino.id} name={'termino' + termino.id} />\r\n                                    <label className=\"custom-control-label\" htmlFor={'termino' + termino.id}></label>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {termino.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // Tipo expediente - Proceso Disciplinario\r\n    const componenteTipoExpedienteProcesoDisciplinario = () => {\r\n        return (\r\n            listaTiposQueja.data.map((proceso, i) => {\r\n                return (\r\n                    <tr key={(proceso.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (tipoExpAsociados.indexOf(('5|' + proceso.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '5', proceso.id)} className=\"custom-control-input\" id={'proceso' + proceso.id} name={'proceso' + proceso.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'proceso' + proceso.id}></label>\r\n                                            </div>\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '5', proceso.id)} className=\"custom-control-input\" id={'proceso' + proceso.id} name={'termino' + proceso.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'proceso' + proceso.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {proceso.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const componentFormularioUsuario = () => {\r\n        return (\r\n            <>\r\n                {<ModalCoincidenciasUsuarios parentCallback={handleCallback} />}\r\n                <Spinner />\r\n                <Formik\r\n                    initialValues={{\r\n                        nombre: '',\r\n                        apellido: '',\r\n                        correo: '',\r\n                        dependencia: '',\r\n                        roles: '',\r\n                        tipoExpediente: '',\r\n                        estado: '',\r\n                        user: '',\r\n                        reparto: '',\r\n\r\n                    }}\r\n                    enableReinitialize\r\n                    validate={(valores) => {\r\n\r\n                        let errores = {}\r\n\r\n                        if (!getUser) {\r\n                            errores.user = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getNombre) {\r\n                            errores.nombre = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getApellido) {\r\n                            errores.apellido = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getEmail) {\r\n                            errores.correo = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getIdDependencia) {\r\n                            errores.dependencia = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (rolesAsociados.length == '') {\r\n                            errores.roles = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (getEstado == '') {\r\n                            errores.estado = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getReparto) {\r\n                            errores.reparto = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        return errores\r\n                    }}\r\n                    onSubmit={(valores, { resetForm }) => {\r\n                        enviarDatos();\r\n                    }}\r\n                >\r\n                    {({ errors }) => (\r\n                        <Form>\r\n                            <div className=\"block block-themed\">\r\n                                <div className=\"block-header\">\r\n                                    <h3 className=\"block-title\">ADMINISTRACIÓN :: USUARIOS</h3>\r\n                                </div>\r\n\r\n                                <div className=\"row text-right w2d-enter\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <Link to={'/Usuario'} title='Regresar'>\r\n                                            <button type=\"button\" className=\"btn btn-primary\"><i className=\"fas fa-backward\"></i> </button>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"block-content text-center\">\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-primary\" onClick={() => mostrarModalDirectorio()}>\r\n                                        BUSCAR USUARIO\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"block-content\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor='nombre'>NOMBRES <span className=\"text-danger\">*</span></label>\r\n                                                <Field disabled value={getNombre} type=\"text\" id=\"nombre\" name=\"nombre\" className=\"form-control\" placeholder=\"Nombre\"\r\n                                                    onChange={handleInputChange} />\r\n                                                {/*<ErrorMessage name=\"nombre\" component={() => (<span className=\"text-danger\">{errors.nombre}</span>)} />*/}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor='apellido'>APELLIDOS <span className=\"text-danger\">*</span></label>\r\n                                                <Field disabled value={getApellido} type=\"text\" id=\"apellido\" name=\"apellido\" className=\"form-control\" placeholder=\"Apellido\"\r\n                                                    onChange={handleInputChange} />\r\n                                                {/*<ErrorMessage name=\"apellido\" component={() => (<span className=\"text-danger\">{errors.apellido}</span>)} />*/}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor='user'>USUARIO <span className=\"text-danger\">*</span></label>\r\n                                                <Field disabled value={getUser} onChange={handleInputChange} type=\"text\" id=\"user\" name=\"user\" className=\"form-control\" placeholder=\"Usuario\" />\r\n                                                {/*<ErrorMessage name=\"user\" component={() => (<span className=\"text-danger\">{errors.user}</span>)} />*/}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor='correo'>CORREO <span className=\"text-danger\">*</span></label>\r\n                                                <Field disabled value={getEmail} type=\"text\" id=\"correo\" name=\"correo\"\r\n                                                    onChange={handleInputChange} className=\"form-control\" placeholder=\"Correo\" />\r\n                                                {/*<ErrorMessage name=\"correo\" component={() => (<span className=\"text-danger\">{errors.correo}</span>)} />*/}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"dependencia\">DEPENDENCIA <span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"select\" value={getIdDependencia} onChange={handleInputChange} className=\"form-control\" id=\"dependencia\" name=\"dependencia\" placeholder=\"Dependencia\">\r\n                                                    <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                    {respuestaDependenciaOrigen ? selectDependenciaOrigen() : null}\r\n                                                </Field>\r\n                                                <ErrorMessage name=\"dependencia\" component={() => (<span className=\"text-danger\">{errors.dependencia}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        {getValidarSecretariaComun ?\r\n                                            (\r\n                                                <div className=\"col-md-6\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"dependencgrupoTrabajoia\">GRUPOS DE TRABAJO<span className=\"text-danger\">*</span></label>\r\n\r\n                                                        {respuestaGrupoTrabajo && listaGruposTrabajo.data.length > 0 ?\r\n                                                            <Select\r\n                                                                id='grupoTrabajo'\r\n                                                                name='grupoTrabajo'\r\n                                                                isMulti={true}\r\n                                                                value={getListaGruposSeleccionadas}\r\n                                                                placeholder=\"Selecciona\"\r\n                                                                noOptionsMessage={() => \"Sin datos\"}\r\n                                                                options={listaGruposTrabajo?.data?.map(e =>\r\n                                                                    ({ label: e.attributes.nombre, value: e.id }))}\r\n                                                                onChange={(e) => selectChangeGrupo(e)}\r\n                                                            />\r\n                                                            : null}\r\n                                                        <ErrorMessage name=\"grupoTrabajo\" component={() => (<span className=\"text-danger\">{errors.grupoTrabajo} {getErrorGrupos}</span>)} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                            :\r\n                                            setIdGrupoTrabajo('')\r\n                                        }\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"estado\">ESTADO <span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"select\" value={getEstado} onChange={handleInputChange} className=\"form-control\" id=\"estado\" name=\"estado\">\r\n                                                    <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                    <option value=\"1\">ACTIVO</option>\r\n                                                    <option value=\"0\">INACTIVO</option>\r\n                                                </Field>\r\n                                                <ErrorMessage name=\"estado\" component={() => (<span className=\"text-danger\">{errors.estado}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"reparto\">HABILITADO PARA REPARTO<span className=\"text-danger\">*</span></label>\r\n                                                <Field as=\"select\" value={getReparto} onChange={handleInputChange} className=\"form-control\" id=\"reparto\" name=\"reparto\" placeholder=\"Habilitado para reparto\">\r\n                                                    <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                    <option value=\"1\" selected>SI</option>\r\n                                                    <option value=\"0\">NO</option>\r\n                                                </Field>\r\n                                                <ErrorMessage name=\"reparto\" component={() => (<span className=\"text-danger\">{errors.reparto}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"block block-themed\">\r\n                                <div className=\"block-header\">\r\n                                    <h3 className=\"block-title\">ASIGNACIÓN DE ROLES</h3>\r\n                                </div>\r\n                                <div className=\"block-content\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <label >DEBE SELECCIONAR AL MENOS UN ROL<span className=\"text-danger\">*</span></label>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th style={{ width: \"50px\" }}>SELECCIONAR</th>\r\n                                                        <th>NOMBRE DE ROL</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody >\r\n                                                    {getRespuestaRoles ? listarRoles() : null}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        <ErrorMessage name=\"roles\" component={() => (<span className=\"text-danger\">{errors.roles}</span>)} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"block block-themed\">\r\n                                <div className=\"block-header\">\r\n                                    <h3 className=\"block-title\">TIPOS DE EXPEDIENTES QUE EL USUARIO PUEDE GESTIONAR</h3>\r\n                                </div>\r\n                                <div className=\"block-content\">\r\n                                    <div className=\"row\" >\r\n                                        <div className=\"col-md-12\">\r\n                                            <ErrorMessage name=\"tipoExpediente\" component={() => (<span className=\"text-danger\">{errors.tipoExpediente}</span>)} />\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            {getRespuestaTipoExpediente ? listarTiposExpedientessociados() : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right bg-light\">\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">{global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n                                    <Link to={'/Usuario'} className=\"font-size-h5 font-w600\" >\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <div className=\"w2d_block let\">\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                        <li className=\"breadcrumb-item\"> <small>Administración</small></li>\r\n                        <li className=\"breadcrumb-item\"> <small>Perfiles</small></li>\r\n                        <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/Usuario`}><small>Lista de usuarios</small></Link></li>\r\n                        <li className=\"breadcrumb-item\"> <small> Crear usuario</small></li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n                {componentFormularioUsuario()}\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default UsuarioForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}