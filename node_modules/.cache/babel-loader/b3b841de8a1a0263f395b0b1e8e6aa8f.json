{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ClasificacionRadicado\\\\ClasificacionRadicadoLista.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport ClasificacionRadicadoApi from '../../Api/Services/ClasificacionRadicadoApi';\nimport Spinner from '../../Utils/Spinner';\nimport { Navigate } from \"react-router-dom\";\nimport CierreEtapaApi from '../../Api/Services/CierreEtapaApi';\nimport { useLocation } from 'react-router-dom';\nimport { hasAccess } from '../../../components/Utils/Common';\nimport ListaBotones from '../../Utils/ListaBotones';\nimport DataTable from 'react-data-table-component';\nimport '../../Utils/Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ClasificacionRadicadoLista() {\n  _s();\n\n  const [errorApi, setErrorApi] = useState('');\n  const [estadoEtapaCapturaReparto, setEstadoEtapaCapturaReparto] = useState(false);\n  const [getEstadoLista, setEstadoLista] = useState('');\n  const [getSeach, setSeach] = useState('');\n  const paganationPerPages = process.env.PAGINATION_PER_PAGE;\n  const [perPage, setPerPage] = useState(process.env.PAGINATION_PER_PAGE);\n  const [pageActual, setPageActual] = useState(1);\n  const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const columns = [{\n    name: 'Etapa',\n    selector: clasificacion_radicado => 'PENDIENTE',\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Tipo de expediente',\n    cell: clasificacion_radicado => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", clasificacion_radicado.attributes.expediente.nombre, \" \", clasificacion_radicado.attributes.expediente.id === parseInt(global.Constants.TIPOS_EXPEDIENTES.QUEJA) || clasificacion_radicado.attributes.expediente.id === parseInt(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) ? clasificacion_radicado.attributes.tipo_queja.nombre : null, clasificacion_radicado.attributes.expediente.id === parseInt(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) ? clasificacion_radicado.attributes.tipo_derecho_peticion.nombre : null, clasificacion_radicado.attributes.expediente.id === parseInt(global.Constants.TIPOS_EXPEDIENTES.TUTELA) ? clasificacion_radicado.attributes.fecha_termino : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), clasificacion_radicado.attributes.expediente.id === parseInt(global.Constants.TIPOS_EXPEDIENTES.TUTELA) ? \" (\" + (clasificacion_radicado.attributes.hora_termino != null ? clasificacion_radicado.attributes.hora_termino : \"0\") + \") horas\" : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        title: clasificacion_radicado.attributes.observaciones,\n        children: clasificacion_radicado.attributes.observaciones ? clasificacion_radicado.attributes.observaciones.length > global.Constants.TEXT_AREA.CANTIDAD_MINIMA_DESCRIPCION ? clasificacion_radicado.attributes.observaciones.substring(0, global.Constants.TEXT_AREA.CANTIDAD_MINIMA_DESCRIPCION) + \"...\" : clasificacion_radicado.attributes.observaciones : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 45\n    }, this),\n    selector: clasificacion_radicado => clasificacion_radicado.attributes.expediente.nombre,\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Registrado En',\n    selector: clasificacion_radicado => 'PENDIENTE',\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Registrado por',\n    cell: clasificacion_radicado => clasificacion_radicado.attributes.nombre_completo,\n    selector: clasificacion_radicado => clasificacion_radicado.attributes.nombre_completo,\n    sortable: true\n  }, {\n    name: 'Fecha de registro',\n    selector: clasificacion_radicado => clasificacion_radicado.attributes.created_at,\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Estado',\n    selector: clasificacion_radicado => clasificacion_radicado.attributes.estado == \"1\" ? 'Activo' : 'Inactivo',\n    sortable: true\n  }, {\n    name: 'Termino',\n    selector: clasificacion_radicado => 'Ver Normatividad',\n    sortable: true\n  }];\n  const [getRoutes, setRoutes] = useState({\n    id_etapa: global.Constants.ETAPAS.CAPTURA_REPARTO,\n    id_fase: global.Constants.FASES.CLASIFICACION,\n    crear_registro: \"/ClasificacionRadicadoForm\",\n    consultar_registros: \"/ClasificacionRadicadoLista\",\n    adjuntar_documento: \"/SoporteRadicadoForm\",\n    repositorio_documentos: \"/SoporteRadicadoLista\",\n    modulo: \"CR_ClasificacionRadicado\",\n    funcionalidad_crear: \"Crear\",\n    funcionalidad_consultar: \"Consultar\",\n    muestra_atras: true\n  });\n\n  const redirectToRoutes = () => {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/ClasificacionRadicadoLista/`,\n      state: {\n        from: from\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 16\n    }, this);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      setEstadoLista(\"Activos\");\n      cargarClasificaciones(1, paganationPerPages, '1'); // VALIDA CIERRE DE ETAPA EVALUACION\n\n      const dataCierreEtapa = {\n        \"data\": {\n          \"type\": \"cerrar_etapa\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": procesoDisciplinarioId,\n            \"id_etapa\": global.Constants.ETAPAS.CAPTURA_REPARTO,\n            \"id_delegada\": \"id_delegada\",\n            \"id_funcionario\": \"id_funcionario\"\n          }\n        }\n      };\n      CierreEtapaApi.getCierreEtapaByIdProcesoDisciplinario(dataCierreEtapa).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            setEstadoEtapaCapturaReparto(true);\n          }\n        } else {\n          setErrorApi(datos.error.toString());\n          window.showModal(1);\n        }\n      });\n    }\n\n    fetchData();\n  }, []);\n\n  const cargarClasificaciones = (page, perPage, estado) => {\n    const data = {\n      \"data\": {\n        \"type\": \"clasificacion_radicado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": global.Constants.ETAPAS.CAPTURA_REPARTO,\n          \"id_tipo_expediente\": \"1\",\n          \"estado\": estado,\n          'per_page': perPage,\n          'current_page': page\n        }\n      }\n    };\n    console.log(JSON.stringify(data));\n\n    if (hasAccess('CR_ClasificacionRadicado', 'Consultar')) {\n      ClasificacionRadicadoApi.getAllClasificacionRadicadoByIdProDisciplinario(data, procesoDisciplinarioId).then(datos => {\n        if (!datos.error) {\n          setClasificacionRadicadoLista(datos);\n\n          if (datos.data.length > 0) {\n            from.subTipoExpediente = datos.data[0][\"attributes\"];\n          }\n\n          window.showSpinner(false);\n        } else {\n          setErrorApi(datos.error.toString());\n          window.showSpinner(false);\n          window.showModal();\n        }\n      });\n    } else {\n      window.showSpinner(false);\n    }\n  };\n\n  const handlePageChange = page => {\n    //window.showSpinner(true);\n    setPageActual(page); //cargarClasificaciones(page, perPage, (getEstadoLista == \"Inactivos\" ? '0' : \"1\"));\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    //window.showSpinner(true);\n    setPerPage(newPerPage);\n    setPageActual(page); //cargarClasificaciones(page, newPerPage, (getEstadoLista == \"Inactivos\" ? '0' : \"1\"));\n  };\n\n  const handleCallback = childData => {\n    try {\n      window.showSpinner(true);\n      setEstadoLista(childData == global.Constants.ESTADOS.INACTIVO ? \"Inactivos\" : \"Activos\");\n      cargarClasificaciones(1, paganationPerPages, childData);\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-rounded block-bordered\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: /*#__PURE__*/_jsxDEV(\"nav\", {\n                \"aria-label\": \"breadcrumb\",\n                children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                  className: \"breadcrumb breadcrumb-alt push\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    class: \"breadcrumb-item\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                      underline: \"hover\",\n                      className: \"text-dark\",\n                      to: `/MisPendientes`,\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: \"Mis Pendientes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 138\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 70\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    class: \"breadcrumb-item\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                      underline: \"hover\",\n                      className: \"text-dark\",\n                      to: `/RamasProceso/`,\n                      state: {\n                        from: from\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: \"Ramas del proceso\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 161\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 70\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    class: \"breadcrumb-item\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Clasificacion Radicado Lista\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 70\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block block-themed\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"block-title\",\n              children: [\"SINPROC No \", radicado, \" :: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Consultar lista de Clasificaci\\xF3n del radicado \", getEstadoLista]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 82\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group \",\n                    children: /*#__PURE__*/_jsxDEV(Field, {\n                      type: \"text\",\n                      id: \"search\",\n                      name: \"search\",\n                      value: getSeach,\n                      onChange: e => setSeach(e.target.value),\n                      onKeyPress: e => {\n                        e.key === 'Enter' && e.preventDefault();\n                      },\n                      className: \"form-control border border-success\",\n                      placeholder: \"Buscar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ListaBotones, {\n                  getRoutes: getRoutes,\n                  from: from,\n                  parentCallback: handleCallback,\n                  id: \"botonesNavegacion\",\n                  name: \"botonesNavegacion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this), hasAccess('CR_ClasificacionRadicado', 'Consultar') ? /*#__PURE__*/_jsxDEV(DataTable, {\n                className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                columns: columns,\n                data: clasificacionRadicadoLista.data.filter(suggestion => {\n                  if (getSeach === \"\") {\n                    return suggestion;\n                  } else if ((suggestion.attributes.created_at + suggestion.attributes.estado + suggestion.attributes.observaciones + suggestion.attributes.nombre_completo + ((suggestion.attributes.expediente ? suggestion.attributes.expediente.nombre : \"\") + \" \" + (suggestion.attributes.tipo_queja ? suggestion.attributes.tipo_queja.nombre : \"\")) + (suggestion.attributes.tipo_derecho_peticion ? suggestion.attributes.tipo_derecho_peticion.nombre : \"\") + (suggestion.attributes.fecha_termino ? suggestion.attributes.fecha_termino : \"\") + (suggestion.attributes.hora_termino ? suggestion.attributes.hora_termino : \"\")).toLowerCase().includes(getSeach.toLowerCase())) {\n                    return suggestion;\n                  }\n                }),\n                perPage: perPage,\n                page: pageActual,\n                pagination: true,\n                noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n                paginationTotalRows: clasificacionRadicadoLista.data.length,\n                onChangePage: handlePageChange,\n                onChangeRowsPerPage: handlePerRowsChange,\n                defaultSortFieldId: \"Nombre\",\n                striped: true,\n                paginationComponentOptions: {\n                  rowsPerPageText: global.Constants.DATA_TABLE.FILTRO_POR_PAGINA\n                },\n                defaultSortAsc: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 41\n              }, this) : null]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClasificacionRadicadoLista, \"vAv0HOZPT7RucBFsTEJ1RY9UMRA=\", false, function () {\n  return [useLocation];\n});\n\n_c = ClasificacionRadicadoLista;\nexport default ClasificacionRadicadoLista;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClasificacionRadicadoLista\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ClasificacionRadicado/ClasificacionRadicadoLista.js"],"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","Link","ClasificacionRadicadoApi","Spinner","Navigate","CierreEtapaApi","useLocation","hasAccess","ListaBotones","DataTable","ClasificacionRadicadoLista","errorApi","setErrorApi","estadoEtapaCapturaReparto","setEstadoEtapaCapturaReparto","getEstadoLista","setEstadoLista","getSeach","setSeach","paganationPerPages","process","env","PAGINATION_PER_PAGE","perPage","setPerPage","pageActual","setPageActual","clasificacionRadicadoLista","setClasificacionRadicadoLista","data","links","meta","location","from","state","radicado","procesoDisciplinarioId","columns","name","selector","clasificacion_radicado","sortable","width","cell","attributes","expediente","nombre","id","parseInt","global","Constants","TIPOS_EXPEDIENTES","QUEJA","PODER_REFERENTE","tipo_queja","DERECHO_PETICION","tipo_derecho_peticion","TUTELA","fecha_termino","hora_termino","observaciones","length","TEXT_AREA","CANTIDAD_MINIMA_DESCRIPCION","substring","nombre_completo","created_at","estado","getRoutes","setRoutes","id_etapa","ETAPAS","CAPTURA_REPARTO","id_fase","FASES","CLASIFICACION","crear_registro","consultar_registros","adjuntar_documento","repositorio_documentos","modulo","funcionalidad_crear","funcionalidad_consultar","muestra_atras","redirectToRoutes","fetchData","window","showSpinner","cargarClasificaciones","dataCierreEtapa","getCierreEtapaByIdProcesoDisciplinario","then","datos","error","toString","showModal","page","console","log","JSON","stringify","getAllClasificacionRadicadoByIdProDisciplinario","subTipoExpediente","handlePageChange","handlePerRowsChange","newPerPage","handleCallback","childData","ESTADOS","INACTIVO","e","target","value","key","preventDefault","filter","suggestion","toLowerCase","includes","DATA_TABLE","SIN_DATOS_TABLE","rowsPerPageText","FILTRO_POR_PAGINA"],"mappings":"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","sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport ClasificacionRadicadoApi from '../../Api/Services/ClasificacionRadicadoApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport CierreEtapaApi from '../../Api/Services/CierreEtapaApi';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { hasAccess } from '../../../components/Utils/Common';\r\nimport ListaBotones from '../../Utils/ListaBotones';\r\nimport DataTable from 'react-data-table-component';\r\nimport '../../Utils/Constants';\r\n\r\nfunction ClasificacionRadicadoLista() {\r\n\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [estadoEtapaCapturaReparto, setEstadoEtapaCapturaReparto] = useState(false);\r\n    const [getEstadoLista, setEstadoLista] = useState('');\r\n    const [getSeach, setSeach] = useState('');\r\n    const paganationPerPages = process.env.PAGINATION_PER_PAGE;\r\n    const [perPage, setPerPage] = useState(process.env.PAGINATION_PER_PAGE);\r\n    const [pageActual, setPageActual] = useState(1);\r\n    const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Etapa',\r\n            selector: clasificacion_radicado => 'PENDIENTE',\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n\r\n        {\r\n            name: 'Tipo de expediente',\r\n            cell: clasificacion_radicado => <div> {clasificacion_radicado.attributes.expediente.nombre} {clasificacion_radicado.attributes.expediente.id === parseInt(global.Constants.TIPOS_EXPEDIENTES.QUEJA) || clasificacion_radicado.attributes.expediente.id === parseInt(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) ? clasificacion_radicado.attributes.tipo_queja.nombre : null}\r\n                {clasificacion_radicado.attributes.expediente.id === parseInt(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) ? clasificacion_radicado.attributes.tipo_derecho_peticion.nombre : null}\r\n                {clasificacion_radicado.attributes.expediente.id === parseInt(global.Constants.TIPOS_EXPEDIENTES.TUTELA) ? clasificacion_radicado.attributes.fecha_termino : null}\r\n                <br />{clasificacion_radicado.attributes.expediente.id === parseInt(global.Constants.TIPOS_EXPEDIENTES.TUTELA) ? \" (\" + ((clasificacion_radicado.attributes.hora_termino)!=null?(clasificacion_radicado.attributes.hora_termino)\r\n                :(\"0\")) + \") horas\" : null}\r\n                <br /><div title={clasificacion_radicado.attributes.observaciones}>{clasificacion_radicado.attributes.observaciones?\r\n                (clasificacion_radicado.attributes.observaciones.length > global.Constants.TEXT_AREA.CANTIDAD_MINIMA_DESCRIPCION \r\n                    ? clasificacion_radicado.attributes.observaciones.substring(0, global.Constants.TEXT_AREA.CANTIDAD_MINIMA_DESCRIPCION)+\"...\":clasificacion_radicado.attributes.observaciones):\"\"}</div></div>,\r\n\r\n            selector: clasificacion_radicado => clasificacion_radicado.attributes.expediente.nombre,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            name: 'Registrado En',\r\n            selector: clasificacion_radicado => 'PENDIENTE',\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n\r\n        {\r\n            name: 'Registrado por',\r\n            cell: clasificacion_radicado => clasificacion_radicado.attributes.nombre_completo,\r\n            selector: clasificacion_radicado => clasificacion_radicado.attributes.nombre_completo,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Fecha de registro',\r\n            selector: clasificacion_radicado => clasificacion_radicado.attributes.created_at,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            name: 'Estado',\r\n            selector: clasificacion_radicado => (clasificacion_radicado.attributes.estado == \"1\" ? 'Activo' : 'Inactivo'),\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Termino',\r\n            selector: clasificacion_radicado => 'Ver Normatividad',\r\n            sortable: true,\r\n        },\r\n    ];\r\n\r\n\r\n    const [getRoutes, setRoutes] = useState({\r\n        id_etapa: global.Constants.ETAPAS.CAPTURA_REPARTO,\r\n        id_fase: global.Constants.FASES.CLASIFICACION,\r\n        crear_registro: \"/ClasificacionRadicadoForm\",\r\n        consultar_registros: \"/ClasificacionRadicadoLista\",\r\n        adjuntar_documento: \"/SoporteRadicadoForm\",\r\n        repositorio_documentos: \"/SoporteRadicadoLista\",\r\n        modulo: \"CR_ClasificacionRadicado\",\r\n        funcionalidad_crear: \"Crear\",\r\n        funcionalidad_consultar: \"Consultar\",\r\n        muestra_atras: true\r\n    });\r\n\r\n\r\n    const redirectToRoutes = () => {\r\n        return <Navigate to={`/ClasificacionRadicadoLista/`} state={{ from: from }} />;\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            setEstadoLista(\"Activos\")\r\n            cargarClasificaciones(1, paganationPerPages, '1');\r\n\r\n            // VALIDA CIERRE DE ETAPA EVALUACION\r\n            const dataCierreEtapa = {\r\n\r\n                \"data\": {\r\n                    \"type\": \"cerrar_etapa\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                        \"id_etapa\": global.Constants.ETAPAS.CAPTURA_REPARTO,\r\n                        \"id_delegada\": \"id_delegada\",\r\n                        \"id_funcionario\": \"id_funcionario\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            CierreEtapaApi.getCierreEtapaByIdProcesoDisciplinario(dataCierreEtapa).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (datos[\"data\"].length > 0) {\r\n                            setEstadoEtapaCapturaReparto(true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        setErrorApi(datos.error.toString())\r\n                        window.showModal(1)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const cargarClasificaciones = (page, perPage, estado) => {\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": global.Constants.ETAPAS.CAPTURA_REPARTO,\r\n                    \"id_tipo_expediente\": \"1\",\r\n                    \"estado\": estado,\r\n                    'per_page': perPage,\r\n                    'current_page': page\r\n                }\r\n            }\r\n        }\r\n        console.log(JSON.stringify(data));\r\n\r\n        if (hasAccess('CR_ClasificacionRadicado', 'Consultar')) {\r\n            ClasificacionRadicadoApi.getAllClasificacionRadicadoByIdProDisciplinario(data, procesoDisciplinarioId).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setClasificacionRadicadoLista(datos)\r\n\r\n                        if (datos.data.length > 0) {\r\n                            from.subTipoExpediente = datos.data[0][\"attributes\"];\r\n                        }\r\n                        window.showSpinner(false);\r\n                    }\r\n                    else {\r\n                        setErrorApi(datos.error.toString())\r\n                        window.showSpinner(false);\r\n                        window.showModal()\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            window.showSpinner(false)\r\n        }\r\n    }\r\n\r\n    const handlePageChange = page => {\r\n        //window.showSpinner(true);\r\n        setPageActual(page);\r\n        //cargarClasificaciones(page, perPage, (getEstadoLista == \"Inactivos\" ? '0' : \"1\"));\r\n    }\r\n\r\n    const handlePerRowsChange = async (newPerPage, page) => {\r\n        //window.showSpinner(true);\r\n        setPerPage(newPerPage);\r\n        setPageActual(page);\r\n        //cargarClasificaciones(page, newPerPage, (getEstadoLista == \"Inactivos\" ? '0' : \"1\"));\r\n\r\n    }\r\n\r\n    const handleCallback = (childData) => {\r\n        try {\r\n            window.showSpinner(true);\r\n            setEstadoLista(childData == global.Constants.ESTADOS.INACTIVO ? \"Inactivos\" : \"Activos\")\r\n            cargarClasificaciones(1, paganationPerPages, childData);\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <Formik>\r\n                <Form>\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"block block-rounded block-bordered\">\r\n                            <div className=\"block-content\">\r\n                                <nav aria-label=\"breadcrumb\">\r\n                                    <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                        <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                        <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                        <li class=\"breadcrumb-item\"> <small>Clasificacion Radicado Lista</small></li>\r\n                                    </ol>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"block block-themed\">\r\n                        <div className=\"block-header\">\r\n                            <h3 className=\"block-title\">SINPROC No {radicado} :: <strong>Consultar lista de Clasificación del radicado {getEstadoLista}</strong></h3>\r\n                        </div>\r\n\r\n                        <div className=\"block-content\">\r\n                            <>\r\n\r\n\r\n                                <div className='row'>\r\n\r\n                                    <div className='col-md-3'>\r\n                                        <div className=\"form-group \">\r\n                                            <Field type=\"text\" id=\"search\" name=\"search\" value={getSeach} onChange={e => setSeach(e.target.value)} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} className=\"form-control border border-success\" placeholder=\"Buscar\" />\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <ListaBotones getRoutes={getRoutes} from={from} parentCallback={handleCallback} id=\"botonesNavegacion\" name=\"botonesNavegacion\" />\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                                {\r\n                                    (hasAccess('CR_ClasificacionRadicado', 'Consultar')) ? (\r\n\r\n                                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                            columns={columns}\r\n                                            data={clasificacionRadicadoLista.data.filter((suggestion) => {\r\n                                                if (getSeach === \"\") {\r\n                                                    return suggestion;\r\n                                                } else if (\r\n\r\n                                                    ((\r\n                                                        suggestion.attributes.created_at + suggestion.attributes.estado\r\n                                                        + suggestion.attributes.observaciones\r\n                                                        + suggestion.attributes.nombre_completo\r\n                                                        + ((suggestion.attributes.expediente ? suggestion.attributes.expediente.nombre : \"\") + \" \" + (suggestion.attributes.tipo_queja ? suggestion.attributes.tipo_queja.nombre : \"\"))\r\n                                                        + (suggestion.attributes.tipo_derecho_peticion ? suggestion.attributes.tipo_derecho_peticion.nombre : \"\")\r\n                                                        + (suggestion.attributes.fecha_termino ? suggestion.attributes.fecha_termino : \"\")\r\n                                                        + (suggestion.attributes.hora_termino ? suggestion.attributes.hora_termino : \"\")).toLowerCase().includes(getSeach.toLowerCase()))\r\n\r\n                                                ) {\r\n                                                    return suggestion;\r\n                                                }\r\n                                            })}\r\n                                            perPage={perPage}\r\n                                            page={pageActual}\r\n                                            pagination\r\n                                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                                            paginationTotalRows={clasificacionRadicadoLista.data.length}\r\n                                            onChangePage={handlePageChange}\r\n                                            onChangeRowsPerPage={handlePerRowsChange}\r\n                                            defaultSortFieldId=\"Nombre\"\r\n                                            striped\r\n                                            paginationComponentOptions={{ rowsPerPageText: global.Constants.DATA_TABLE.FILTRO_POR_PAGINA }}\r\n                                            defaultSortAsc={false}\r\n                                        />\r\n                                    ) : null\r\n                                }\r\n                            </>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\nexport default ClasificacionRadicadoLista;\r\n"]},"metadata":{},"sourceType":"module"}