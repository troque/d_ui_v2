{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\SoporteRadicado\\\\SoporteRadicadoForm.js\",\n  _s = $RefreshSig$();\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\nimport InfoExitoApi from '../../Utils/InfoExitoApi';\nimport { Link } from \"react-router-dom\";\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport DocumentoSiriusApi from '../../Api/Services/DocumentoSiriusApi';\nimport { Navigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport { getUser } from '../../../components/Utils/Common';\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\nimport InfoExitoApiTextsCustom from '../../Utils/InfoExitoApiTextsCustom';\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SoporteRadicadoForm() {\n  _s();\n  const [errorApi, setErrorApi] = useState('');\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let vigencia = from.vigencia;\n  let id_etapa = from.id_etapa;\n  let id_fase = from.id_fase;\n  let es_soporte = from.es_soporte;\n  const [getHabilitarBoton, setHabilitarBoton] = useState(false);\n  const {\n    control,\n    fileInput,\n    handleSubmit\n  } = useForm();\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: 'folios'\n  });\n  const [isRedirect, setIsRedirect] = useState(false);\n  const [getErrorRedirect, setErrorRedirect] = useState(false);\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getNombreUsuario, setNombreUsuario] = useState(\"\");\n  const [getFormatosApi, setFormatosApi] = useState();\n  const [getFaseApi, setFaseApi] = useState({\n    attributes: null\n  });\n  const [exitoApiTextsCustom, setExitoApiTextsCustom] = useState({\n    titulo: null,\n    cuerpo: null,\n    boton: null\n  });\n  const [getPesoTotalArchivos, setPesoTotalArchivos] = useState(0);\n  const [getListNombresArchivos, setListNombresArchivos] = useState({\n    attributes: null\n  });\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getNombreProceso, setNombreProceso] = useState('');\n  const [getDescripcion, setDescripcion] = useState('');\n  const [getRepuestaDescripcion, setRepuestaDescripcion] = useState(false);\n\n  // Metodo principal de la clase\n  useEffect(() => {\n    // Metodo encargado de cargar la informacion principal de la clase\n    async function fetchData() {\n      // Se usa el cargando\n      window.showSpinner(true);\n\n      // Se llama el metodo\n      getActivarFaseSoportesRadicado();\n    }\n\n    // Se llama el metodo\n    fetchData();\n  }, []);\n\n  // Metodo encargado de activar las fases de soporte del radicado\n  const getActivarFaseSoportesRadicado = () => {\n    // Se consume la API\n    GenericApi.getGeneric('activar-soporte-radicado/' + procesoDisciplinarioId).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida cuando hay error\n      if (datos.error) {\n        // Se setea el modal\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/RamasProceso/',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      } else {\n        // Se setea el nombre del usuario logeado\n        setNombreUsuario(getUser().nombre);\n\n        // Se cargan los documentos\n        getNombresDocumentos();\n      }\n    });\n  };\n\n  // Metodo encargado de cargar los documentos del proceso disciplinario\n  const getNombresDocumentos = () => {\n    // Se consume la API\n    DocumentoSiriusApi.getNombresDocumentacionSiriusByIdProDisciplinario(procesoDisciplinarioId).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setea los nombres de los documentos\n        setListNombresArchivos(datos);\n\n        // Se llama el metodo de fases\n        getFase();\n      } else {\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/RamasProceso/',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  // Metodo encargado de cargar las fases\n  const getFase = () => {\n    // Se consume la API\n    ParametrosMasApi.getFaseById(id_fase).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setea los valores\n        setFaseApi(datos.data);\n\n        // Se llama el metodo de formatos\n        getFormatos();\n      } else {\n        // Se setea el modal\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/RamasProceso/',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se quita el cargando\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  // Metodo encargado de cargar los formatos\n  const getFormatos = () => {\n    // Se consume la API\n    ParametrosMasApi.getFormatos().then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setea los valores\n        setFormatosApi(datos.data);\n\n        // Se llama el metodo de parametros\n        obtenerParametros();\n      } else {\n        // Se setea el modal\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/RamasProceso/',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se quita el cargando\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  // Metodo encargado de traer los parametros del sistema\n  const obtenerParametros = () => {\n    // Se usa el trycatch\n    try {\n      // Se inicializa la variable con la data\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      };\n\n      // Se consume la API\n      ParametrosMasApi.getParametroPorNombre(data).then(\n      // Se inicializa la variable de respuesta\n      datos => {\n        // Se valida cuando no hay error\n        if (!datos.error) {\n          // Se valida que haya informacion\n          if (datos[\"data\"].length > 0) {\n            // Se busca y filta el valor minimo de caracteres\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName =>\n            // Se busca y filta el valor minimo de caracteres\n            setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n\n            // Se busca y filta el valor maximo de caracteres\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName =>\n            // Se busca y filta el valor maximo de caracteres\n            setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n\n          // Se llama el metodo de los procesos\n          nombreProceso();\n        } else {\n          // Se setea el modal de error\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/RamasProceso/',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      // console.log(error);\n    }\n  };\n\n  // Metodo encargado de cargar los nombres de los procesos\n  const nombreProceso = () => {\n    // Se consume la API\n    GenericApi.getByIdGeneric(\"nombre-proceso\", procesoDisciplinarioId).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida cuando no hay error\n      if (!datos.error) {\n        // Se setea la data\n        setNombreProceso(datos.data.attributes.nombre);\n      }\n\n      // Se quita el cargando\n      window.showSpinner(false);\n    });\n  };\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n  const [inputListArchivos, setInputListArchivos] = useState([{\n    folios: \"\",\n    archivo: {},\n    filebase64: \"\",\n    size: 0,\n    id_mas_formato: null\n  }]);\n\n  /*Funciones*/\n  // handle input change\n  const handleInputChangeFolios = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...inputListArchivos];\n    list[index][name] = value;\n    setInputListArchivos(list);\n  };\n  function primerArchivoPdf(list) {\n    const extensionList = getFileExtension(list[0].archivo.name);\n    if (extensionList != 'pdf') {\n      setModalState({\n        title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n        message: 'EL PRIMER ARCHIVO SELECCIONADO DEBE SER .PDF',\n        show: true,\n        redirect: null,\n        from: {\n          from\n        },\n        alert: global.Constants.TIPO_ALERTA.ERROR\n      });\n      window.showModal(1);\n      setHabilitarBoton(false);\n    } else {\n      setHabilitarBoton(true);\n    }\n  }\n  const handleInputChangeArchivos = (e, index) => {\n    const {\n      name,\n      files\n    } = e.target;\n    if (files.length > 0) {\n      const extension = getFileExtension(files[0].name);\n      const resultado = getFormatosApi.filter(datos => datos.attributes.nombre == extension);\n      if (resultado.length > 0) {\n        const list = [...inputListArchivos];\n        list[index][name] = files[0];\n        primerArchivoPdf(list);\n        if (files[0]) {\n          list[index][name] = files[0];\n        } else {\n          list[index][name] = '';\n          list[index].filebase64 = '';\n          list[index].size = 0;\n          list[index].id_mas_formato = null;\n          setInputListArchivos(list);\n        }\n        //Conversion a Base64\n        Array.from(e.target.files).forEach(archivo => {\n          var reader = new FileReader();\n          reader.readAsDataURL(archivo);\n          reader.onload = function () {\n            var arrayAuxiliar = [];\n            var base64 = reader.result;\n            arrayAuxiliar = base64.split(',');\n            list[index].filebase64 = arrayAuxiliar[1];\n            list[index].id_mas_formato = resultado[0].id;\n            setInputListArchivos(list);\n          };\n        });\n        obtenerPesoTotalArchivos(list);\n        compararNombresArchivos(list);\n      } else {\n        // Se setea el mensaje de error\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n          message: global.Constants.MENSAJE_ERROR.ERROR_FORMATO_DOCUMENTO,\n          show: true,\n          redirect: null,\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se retorna en false\n        return false;\n      }\n    } else {\n      const list = [...inputListArchivos];\n      list[index][name] = '';\n      list[index].filebase64 = '';\n      list[index].size = 0;\n      list[index].id_mas_formato = null;\n      setInputListArchivos(list);\n      obtenerPesoTotalArchivos(list);\n      compararNombresArchivos(list);\n    }\n  };\n\n  // handle click event of the Remove button\n  const handleRemoveClick = index => {\n    const list = [...inputListArchivos];\n    list.splice(index, 1);\n    setInputListArchivos(list);\n    obtenerPesoTotalArchivos(list);\n    primerArchivoPdf(list);\n  };\n\n  // handle click event of the Add button\n  const handleAddClick = () => {\n    setInputListArchivos([...inputListArchivos, {\n      folios: \"\",\n      archivo: {},\n      filebase64: \"\",\n      size: 0,\n      id_mas_formato: null\n    }]);\n  };\n  function getFileExtension(filename) {\n    return filename.slice((filename.lastIndexOf(\".\") - 1 >>> 0) + 2);\n  }\n  function compararNombresArchivos(list) {\n    let existe = false;\n    let nombre = \"\";\n    if (getListNombresArchivos.data.length > 0) {\n      list.forEach((archivo, index) => {\n        let nombre_servidor = getListNombresArchivos.data.find(dato => dato.attributes.nombre_archivo == archivo.archivo.name);\n        if (nombre_servidor) {\n          nombre = nombre_servidor.attributes.nombre_archivo;\n          existe = true;\n          return;\n        }\n      });\n      if (existe) {\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n          message: global.Constants.MENSAJE_ERROR.ERROR_FORMATO_NOMBRE_DOCUMENTO + \" - \" + nombre,\n          show: true,\n          redirect: null,\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    }\n  }\n  function obtenerPesoTotalArchivos(list) {\n    let peso = 0;\n    list.forEach((archivo, index) => {\n      if (archivo.archivo.size) {\n        peso += archivo.archivo.size;\n      }\n    });\n    if (peso > 15000000) {\n      setModalState({\n        title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n        message: global.Constants.MENSAJE_ERROR.ERROR_PESO_DOCUMENTO,\n        show: true,\n        redirect: null,\n        from: {\n          from\n        },\n        alert: global.Constants.TIPO_ALERTA.ERROR\n      });\n    }\n    setPesoTotalArchivos(peso);\n  }\n  function formatBytes(bytes) {\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    if (bytes === undefined) return '0 Bytes';\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return Math.round(parseFloat((bytes / Math.pow(k, i)).toFixed(dm), 1)) + ' ' + sizes[i];\n  }\n\n  // Metodo encargado de enviar los valores\n  const handleOnSubmit = valores => {\n    // Se usa el cargando\n    window.showSpinner(true);\n\n    // Se inicializa la variable en false\n    let band = false;\n\n    // Se recorre la el array en posicion i\n    for (let i = 0; i < inputListArchivos.length - 1; i++) {\n      // Se recorre la el array en posicion j\n      for (let j = i + 1; j < inputListArchivos.length; j++) {\n        // Se validan que no existan archivos con el mismo nombre\n        if (inputListArchivos[i].archivo.name === inputListArchivos[j].archivo.name) {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n            message: global.Constants.MENSAJE_ERROR.ERROR_NOMBRE_DOCUMENTO,\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n          band = true;\n        }\n      }\n    }\n\n    // Se valida que no exista nombre repertido en el sistema\n    let nombre = \"\";\n    let existe = false;\n\n    // Se valida que haya un listado de nombres en el array\n    if (getListNombresArchivos.data.length > 0) {\n      // Se recorre el array en i\n      for (let i = 0; i < inputListArchivos.length; i++) {\n        // Se captura el nombres del documento y\n        let nombre_servidor = getListNombresArchivos.data.find(dato =>\n        // Se retorna el listado de nombre del archivo\n        dato.attributes.nombre_archivo == inputListArchivos[i].archivo.name);\n\n        // Se valida que si existe\n        if (nombre_servidor) {\n          // Se setea los valores\n          nombre = nombre_servidor.attributes.nombre_archivo;\n          existe = true;\n          band = true;\n        }\n\n        // Se valida que si existe\n        if (existe) {\n          // Se quita el cargando\n          window.showSpinner(false);\n\n          // Se setea el mensaje de error\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n            message: global.Constants.MENSAJE_ERROR.ERROR_FORMATO_NOMBRE_DOCUMENTO + \" \" + nombre,\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n\n          // Se suma una a la longitud de i\n          i = inputListArchivos.length + 1;\n        }\n      }\n    }\n\n    // Se recorre el array de archivos\n    for (let i = 0; i < inputListArchivos.length; i++) {\n      // Se consultan las extensiones por cada archivo\n      const extension = getFileExtension(inputListArchivos[i].archivo.name);\n\n      // Se recorre el array de las extensiones permitidas y se filtra por la extension de archivo\n      const resultado = getFormatosApi.filter(datos => datos.attributes.nombre == extension);\n\n      // Se valida que la extension sea valida\n      if (resultado.length <= 0) {\n        // Se quita el cargando\n        window.showSpinner(false);\n\n        // Se setea el modal de error\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n          message: global.Constants.MENSAJE_ERROR.ERROR_FORMATO_DOCUMENTO,\n          show: true,\n          redirect: null,\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se redeclara la variable\n        band = true;\n      }\n    }\n\n    // Se valida que peso de todos los archivos sea mayor a 15MB\n    if (getPesoTotalArchivos > 15000000) {\n      // Se quita el cargando\n      window.showSpinner(false);\n\n      // Se setea el mensaje de error\n      setModalState({\n        title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n        message: global.Constants.MENSAJE_ERROR.ERROR_FORMATO_PESO_DOCUMENTO,\n        show: true,\n        redirect: null,\n        from: {\n          from\n        },\n        alert: global.Constants.TIPO_ALERTA.ERROR\n      });\n\n      // Se muestra el modal\n      window.showModal(1);\n\n      // Se redeclara la variable\n      band = true;\n    }\n\n    // Se realiza que si el formulario es correcto\n    if (band === false) {\n      // Paso 1: Validar con SIRIUS\n      // Paso 1.1: Login y Radicación\n\n      // Se inicializa el array\n      const attributes = [];\n\n      // Se recorre el listado de archivos\n      for (let i = 0; i < inputListArchivos.length; i++) {\n        // Se valida que hayan numeros de folios\n        if (inputListArchivos[i].folios !== null || inputListArchivos[i].folios !== '') {\n          // Se añade los valores en el array de datos\n          attributes.push({\n            \"id_proceso_disciplinario\": procesoDisciplinarioId,\n            \"id_etapa\": from.id_etapa,\n            \"id_fase\": from.id_fase,\n            \"nombre_archivo\": inputListArchivos[i].archivo.name,\n            \"file64\": inputListArchivos[i].filebase64,\n            \"estado\": \"1\",\n            \"num_folios\": inputListArchivos[i].folios,\n            \"num_radicado\": radicado,\n            \"vigencia\": vigencia,\n            \"extension\": getFileExtension(inputListArchivos[i].archivo.name),\n            \"peso\": inputListArchivos[i].archivo.size,\n            \"created_user\": getNombreUsuario,\n            \"descripcion\": getDescripcion,\n            \"id_mas_formato\": inputListArchivos[i].id_mas_formato,\n            \"es_compulsa\": false,\n            \"es_soporte\": es_soporte\n          });\n        }\n      }\n\n      // Se inicializa la variable con la informacion\n      const data = {\n        \"data\": {\n          \"type\": \"documento_sirius\",\n          \"attributes\": attributes\n        }\n      };\n\n      // Se consume la API\n      DocumentoSiriusApi.addDocumentoSirius(data).then(\n      // Se inicializa la variable de respuesta\n      datos => {\n        // Se quita el cargando\n        window.showSpinner(false);\n\n        // Se valida que no haya error\n        if (!datos.error) {\n          // Se setea el mensaje\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n            message: global.Constants.MENSAJES_MODAL.EXITOSO,\n            show: true,\n            redirect: '/RamasProceso/',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.EXITO\n          });\n        } else {\n          // Se setea el mensaje de error\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    }\n  };\n  const changeDescripcion = e => {\n    if (e.target.value === '' || global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(e.target.value) && e.target.value.length <= getMaximoTextArea) {\n      setDescripcion(e.target.value);\n      setCountTextArea(e.target.value.length);\n      setRepuestaDescripcion(true);\n    }\n  };\n\n  /*Componentes*/\n  const componentFormSoporte = () => {\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        descripcion: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        let errores = {};\n        if (!getRepuestaDescripcion) {\n          errores.descripcion = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n        }\n        if (countTextArea > getMaximoTextArea) {\n          errores.descripcion = 'Debe ingresar maximo ' + getMaximoTextArea + ' caracteres';\n        }\n        if (countTextArea < getMinimoTextArea) {\n          errores.descripcion = 'Debe ingresar mínimo ' + getMinimoTextArea + ' caracteres';\n        }\n        if (getRepuestaDescripcion == false) {\n          errores.descripcion = global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS;\n        }\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        handleOnSubmit(valores);\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [inputListArchivos.map((x, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-9\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-5\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          className: \"form-control\",\n                          name: \"folios\",\n                          type: \"number\",\n                          min: \"1\",\n                          placeholder: \"No. de folios\",\n                          value: x.folios,\n                          onChange: e => handleInputChangeFolios(e, i),\n                          required: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 656,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(\"label\", {\n                            children: \"N\\xDAMERO DE FOLIOS\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 658,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 657,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 655,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-6\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"custom-file-label\",\n                          htmlFor: \"example-file-input-custom\",\n                          \"data-toggle\": \"custom-file-input\",\n                          children: x.archivo.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 663,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          className: \"custom-file-input\",\n                          \"data-toggle\": \"custom-file-input\",\n                          type: \"file\",\n                          name: \"archivo\",\n                          onChange: e => handleInputChangeArchivos(e, i),\n                          required: x.filebase64 == \"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 664,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          children: [\"PESO DEL DOCUMENTO: \", formatBytes(x.archivo.size)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 665,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 662,\n                        columnNumber: 57\n                      }, this), inputListArchivos.length !== 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          className: \"btn btn-rounded btn-outline-primary\",\n                          onClick: () => handleRemoveClick(i),\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-trash-alt col\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 671,\n                            columnNumber: 180\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 671,\n                          columnNumber: 73\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 670,\n                        columnNumber: 69\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 654,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 653,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row\",\n                      children: inputListArchivos.length - 1 === i ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-12\",\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          className: \"btn btn-rounded btn-primary\",\n                          onClick: handleAddClick,\n                          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-plus\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 684,\n                            columnNumber: 161\n                          }, this), \" AGREGAR\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 684,\n                          columnNumber: 73\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 683,\n                        columnNumber: 69\n                      }, this) : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 679,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 678,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 41\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 37\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-9\",\n              style: {\n                paddingLeft: \"55px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"descripcion\",\n                children: [\"DESCRIPCI\\xD3N \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 74\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: \"textarea\",\n                className: \"form-control\",\n                id: \"descripcion\",\n                name: \"descripcion\",\n                rows: \"4\",\n                placeholder: \"Descripci\\xF3n de los soportes\",\n                required: true,\n                maxLength: getMaximoTextArea,\n                minLength: getMinimoTextArea,\n                value: getDescripcion,\n                onChange: changeDescripcion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-right\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-primary\",\n                  children: [countTextArea, \" / \", getMaximoTextArea]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"descripcion\",\n                component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: errors.descripcion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 84\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12 text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: global.Constants.BOTON_NOMBRE.REGISTRAR\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/RamasProceso/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: global.Constants.BOTON_NOMBRE.CANCELAR\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 713,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w2d_block\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb breadcrumb-alt push\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"hover\",\n              className: \"text-dark\",\n              to: `/MisPendientes`,\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Mis Pendientes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 126\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"hover\",\n              className: \"text-dark\",\n              to: `/RamasProceso/`,\n              state: {\n                from: from\n              },\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Ramas del proceso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 149\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"hover\",\n              className: \"text-dark\",\n              to: `/SoporteRadicadoLista/`,\n              state: {\n                from: from\n              },\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Lista Soportes Radicado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 157\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Crear soporte del radicado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block block-themed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"block-title\",\n          children: [\" \", getNombreProceso.toUpperCase(), \" :: ADJUNTAR DOCUMENTO FASE \", getFaseApi.attributes != null ? getFaseApi.attributes.nombre : null, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right mb-2\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/SoporteRadicadoLista/`,\n            title: \"Regresar a lista de Soportes\",\n            state: {\n              from: from\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-backward\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 79\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-warning alert-dismissable\",\n              role: \"alert\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"alert-heading font-size-h4 my-2\",\n                children: \"INFORMACI\\xD3N\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"PARA CUALQUIER DOCUMENTO QUE REQUIERA ADJUNTAR VALIDE PREVIAMENTE LO SIGUIENTE: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"1.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 756,\n                  columnNumber: 53\n                }, this), \" SE RECOMIENDA QUE EL NOMBRE DEL ARCHIVO LLVE LA SIGUIENTE ESTRUCTURA EJM: 2022-ER-0000018-1, 2022-EE-0000018-2\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"2.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 53\n                }, this), \" NO PUEDE SUPERAR QUINCE (15) Mb DE PESO / TAMA\\xD1O.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"3.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 53\n                }, this), \" EL NOMBRE DEL DOCUMENTO DEBE SER M\\xC1XIMO DE 40 CAR\\xC1CTERES.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"4.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 53\n                }, this), \" FORMATOS PERMITIDOS:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-1\",\n                  children: getFormatosApi ? getFormatosApi.map(suggestion => {\n                    if (suggestion.attributes.estado == true) return suggestion.attributes.nombre;\n                  }).join(' - ') : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: componentFormSoporte()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SoporteRadicadoForm, \"76q53f4rgvhQ9JJ8wWsdxhHrc1o=\", false, function () {\n  return [useLocation, useForm, useFieldArray];\n});\n_c = SoporteRadicadoForm;\nexport default SoporteRadicadoForm;\nvar _c;\n$RefreshReg$(_c, \"SoporteRadicadoForm\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","InfoErrorApi","InfoExitoApi","Link","useForm","useFieldArray","Controller","DocumentoSiriusApi","Navigate","useLocation","getUser","ParametrosMasApi","InfoExitoApiTextsCustom","Spinner","ModalGen","GenericApi","SoporteRadicadoForm","errorApi","setErrorApi","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","location","from","state","radicado","procesoDisciplinarioId","vigencia","id_etapa","id_fase","es_soporte","getHabilitarBoton","setHabilitarBoton","control","fileInput","handleSubmit","fields","append","remove","name","isRedirect","setIsRedirect","getErrorRedirect","setErrorRedirect","countTextArea","setCountTextArea","getNombreUsuario","setNombreUsuario","getFormatosApi","setFormatosApi","getFaseApi","setFaseApi","attributes","exitoApiTextsCustom","setExitoApiTextsCustom","titulo","cuerpo","boton","getPesoTotalArchivos","setPesoTotalArchivos","getListNombresArchivos","setListNombresArchivos","getModalState","setModalState","title","message","show","getNombreProceso","setNombreProceso","getDescripcion","setDescripcion","getRepuestaDescripcion","setRepuestaDescripcion","fetchData","window","showSpinner","getActivarFaseSoportesRadicado","getGeneric","then","datos","error","toString","redirect","alert","global","Constants","TIPO_ALERTA","ERROR","nombre","getNombresDocumentos","getNombresDocumentacionSiriusByIdProDisciplinario","getFase","getFaseById","data","getFormatos","obtenerParametros","getParametroPorNombre","length","filter","includes","map","filteredName","nombreProceso","getByIdGeneric","containsSpecialChars","str","result","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","inputListArchivos","setInputListArchivos","folios","archivo","filebase64","size","id_mas_formato","handleInputChangeFolios","e","index","value","target","list","primerArchivoPdf","extensionList","getFileExtension","showModal","handleInputChangeArchivos","files","extension","resultado","Array","forEach","reader","FileReader","readAsDataURL","onload","arrayAuxiliar","base64","id","obtenerPesoTotalArchivos","compararNombresArchivos","MENSAJE_ERROR","ERROR_FORMATO_DOCUMENTO","handleRemoveClick","splice","handleAddClick","filename","slice","lastIndexOf","existe","nombre_servidor","find","dato","nombre_archivo","ERROR_FORMATO_NOMBRE_DOCUMENTO","peso","ERROR_PESO_DOCUMENTO","formatBytes","bytes","decimals","undefined","k","dm","sizes","i","Math","floor","log","round","parseFloat","pow","toFixed","handleOnSubmit","valores","band","j","ERROR_NOMBRE_DOCUMENTO","ERROR_FORMATO_PESO_DOCUMENTO","push","addDocumentoSirius","MENSAJES_MODAL","EXITOSO","EXITO","changeDescripcion","formatOnlyLettersWhitAccent","test","componentFormSoporte","descripcion","errores","CAMPO_OBLIGATORIO","ERROR_FORMATO_CARACTERES_INVALIDOS","resetForm","errors","x","paddingLeft","BOTON_NOMBRE","REGISTRAR","CANCELAR","toUpperCase","suggestion","estado","join"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/SoporteRadicado/SoporteRadicadoForm.js"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\r\nimport InfoExitoApi from '../../Utils/InfoExitoApi';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\r\nimport DocumentoSiriusApi from '../../Api/Services/DocumentoSiriusApi';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport { getUser } from '../../../components/Utils/Common';\r\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\r\nimport InfoExitoApiTextsCustom from '../../Utils/InfoExitoApiTextsCustom';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\n\r\nfunction SoporteRadicadoForm() {\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let vigencia = from.vigencia;\r\n\r\n    let id_etapa = from.id_etapa;\r\n    let id_fase = from.id_fase;\r\n    let es_soporte = from.es_soporte;\r\n    const [getHabilitarBoton, setHabilitarBoton] = useState(false);\r\n\r\n    const { control, fileInput, handleSubmit } = useForm();\r\n    const { fields, append, remove } = useFieldArray({\r\n        control,\r\n        name: 'folios',\r\n    });\r\n\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n    const [getErrorRedirect, setErrorRedirect] = useState(false);\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [getFormatosApi, setFormatosApi] = useState();\r\n    const [getFaseApi, setFaseApi] = useState({ attributes: null });\r\n    const [exitoApiTextsCustom, setExitoApiTextsCustom] = useState({ titulo: null, cuerpo: null, boton: null });\r\n    const [getPesoTotalArchivos, setPesoTotalArchivos] = useState(0);\r\n    const [getListNombresArchivos, setListNombresArchivos] = useState({ attributes: null });\r\n\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n    const [getDescripcion, setDescripcion] = useState('');\r\n    const [getRepuestaDescripcion, setRepuestaDescripcion] = useState(false);\r\n\r\n    // Metodo principal de la clase\r\n    useEffect(() => {\r\n\r\n        // Metodo encargado de cargar la informacion principal de la clase\r\n        async function fetchData() {\r\n\r\n            // Se usa el cargando\r\n            window.showSpinner(true);\r\n\r\n            // Se llama el metodo\r\n            getActivarFaseSoportesRadicado();\r\n        }\r\n\r\n        // Se llama el metodo\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Metodo encargado de activar las fases de soporte del radicado\r\n    const getActivarFaseSoportesRadicado = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getGeneric('activar-soporte-radicado/' + procesoDisciplinarioId).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida cuando hay error\r\n                if (datos.error) {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/RamasProceso/', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                } else {\r\n\r\n                    // Se setea el nombre del usuario logeado\r\n                    setNombreUsuario(getUser().nombre);\r\n\r\n                    // Se cargan los documentos\r\n                    getNombresDocumentos();\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los documentos del proceso disciplinario\r\n    const getNombresDocumentos = () => {\r\n\r\n        // Se consume la API\r\n        DocumentoSiriusApi.getNombresDocumentacionSiriusByIdProDisciplinario(procesoDisciplinarioId).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea los nombres de los documentos\r\n                    setListNombresArchivos(datos);\r\n\r\n                    // Se llama el metodo de fases\r\n                    getFase();\r\n                } else {\r\n                    setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/RamasProceso/', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar las fases\r\n    const getFase = () => {\r\n\r\n        // Se consume la API\r\n        ParametrosMasApi.getFaseById(id_fase).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea los valores\r\n                    setFaseApi(datos.data);\r\n\r\n                    // Se llama el metodo de formatos\r\n                    getFormatos();\r\n                } else {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/RamasProceso/', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los formatos\r\n    const getFormatos = () => {\r\n\r\n        // Se consume la API\r\n        ParametrosMasApi.getFormatos().then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea los valores\r\n                    setFormatosApi(datos.data);\r\n\r\n                    // Se llama el metodo de parametros\r\n                    obtenerParametros();\r\n                } else {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/RamasProceso/', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    // Metodo encargado de traer los parametros del sistema\r\n    const obtenerParametros = () => {\r\n\r\n        // Se usa el trycatch\r\n        try {\r\n\r\n            // Se inicializa la variable con la data\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Se consume la API\r\n            ParametrosMasApi.getParametroPorNombre(data).then(\r\n\r\n                // Se inicializa la variable de respuesta\r\n                datos => {\r\n\r\n                    // Se valida cuando no hay error\r\n                    if (!datos.error) {\r\n\r\n                        // Se valida que haya informacion\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            // Se busca y filta el valor minimo de caracteres\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n\r\n                                // Se busca y filta el valor minimo de caracteres\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                            // Se busca y filta el valor maximo de caracteres\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n\r\n                                // Se busca y filta el valor maximo de caracteres\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                        }\r\n\r\n                        // Se llama el metodo de los procesos\r\n                        nombreProceso();\r\n                    } else {\r\n\r\n                        // Se setea el modal de error\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: datos.error.toString(), show: true, redirect: '/RamasProceso/', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de cargar los nombres de los procesos\r\n    const nombreProceso = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\", procesoDisciplinarioId).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida cuando no hay error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea la data\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                }\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    const [inputListArchivos, setInputListArchivos] = useState([{ folios: \"\", archivo: {}, filebase64: \"\", size: 0, id_mas_formato: null }]);\r\n\r\n    /*Funciones*/\r\n    // handle input change\r\n    const handleInputChangeFolios = (e, index) => {\r\n        const { name, value } = e.target;\r\n        const list = [...inputListArchivos];\r\n        list[index][name] = value;\r\n        setInputListArchivos(list);\r\n    };\r\n\r\n    function primerArchivoPdf(list) {\r\n        const extensionList = getFileExtension(list[0].archivo.name);\r\n\r\n        if (extensionList != 'pdf') {\r\n            setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: 'EL PRIMER ARCHIVO SELECCIONADO DEBE SER .PDF', show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n            window.showModal(1)\r\n            setHabilitarBoton(false);\r\n        }\r\n        else {\r\n            setHabilitarBoton(true);\r\n        }\r\n    }\r\n\r\n    const handleInputChangeArchivos = (e, index) => {\r\n\r\n        const { name, files } = e.target;\r\n        if (files.length > 0) {\r\n            const extension = getFileExtension(files[0].name);\r\n            const resultado = getFormatosApi.filter(datos => datos.attributes.nombre == extension);\r\n\r\n\r\n            if (resultado.length > 0) {\r\n                const list = [...inputListArchivos];\r\n\r\n                list[index][name] = files[0];\r\n\r\n                primerArchivoPdf(list);\r\n\r\n                if (files[0]) {\r\n                    list[index][name] = files[0];\r\n                }\r\n                else {\r\n                    list[index][name] = '';\r\n                    list[index].filebase64 = '';\r\n                    list[index].size = 0;\r\n                    list[index].id_mas_formato = null;\r\n                    setInputListArchivos(list);\r\n                }\r\n                //Conversion a Base64\r\n                Array.from(e.target.files).forEach(archivo => {\r\n                    var reader = new FileReader();\r\n                    reader.readAsDataURL(archivo);\r\n                    reader.onload = function () {\r\n                        var arrayAuxiliar = [];\r\n                        var base64 = reader.result;\r\n                        arrayAuxiliar = base64.split(',');\r\n                        list[index].filebase64 = arrayAuxiliar[1];\r\n                        list[index].id_mas_formato = resultado[0].id;\r\n                        setInputListArchivos(list);\r\n                    }\r\n                })\r\n                obtenerPesoTotalArchivos(list);\r\n                compararNombresArchivos(list);\r\n            } else {\r\n                // Se setea el mensaje de error\r\n                setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: global.Constants.MENSAJE_ERROR.ERROR_FORMATO_DOCUMENTO, show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                // Se retorna en false\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            const list = [...inputListArchivos];\r\n            list[index][name] = '';\r\n            list[index].filebase64 = '';\r\n            list[index].size = 0;\r\n            list[index].id_mas_formato = null;\r\n            setInputListArchivos(list);\r\n            obtenerPesoTotalArchivos(list);\r\n            compararNombresArchivos(list);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // handle click event of the Remove button\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputListArchivos];\r\n        list.splice(index, 1);\r\n        setInputListArchivos(list);\r\n        obtenerPesoTotalArchivos(list);\r\n        primerArchivoPdf(list);\r\n    };\r\n\r\n    // handle click event of the Add button\r\n    const handleAddClick = () => {\r\n        setInputListArchivos([...inputListArchivos, { folios: \"\", archivo: {}, filebase64: \"\", size: 0, id_mas_formato: null }]);\r\n    };\r\n\r\n    function getFileExtension(filename) {\r\n        return filename.slice((filename.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n    }\r\n\r\n    function compararNombresArchivos(list) {\r\n        let existe = false;\r\n        let nombre = \"\";\r\n        if (getListNombresArchivos.data.length > 0) {\r\n            list.forEach(\r\n                (archivo, index) => {\r\n\r\n                    let nombre_servidor = getListNombresArchivos.data.find(dato => dato.attributes.nombre_archivo == archivo.archivo.name);\r\n\r\n                    if (nombre_servidor) {\r\n                        nombre = nombre_servidor.attributes.nombre_archivo;\r\n                        existe = true;\r\n                        return\r\n                    }\r\n\r\n                }\r\n            );\r\n\r\n            if (existe) {\r\n                setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: global.Constants.MENSAJE_ERROR.ERROR_FORMATO_NOMBRE_DOCUMENTO + \" - \" + nombre, show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n            }\r\n        }\r\n    }\r\n\r\n    function obtenerPesoTotalArchivos(list) {\r\n        let peso = 0;\r\n        list.forEach(\r\n            (archivo, index) => {\r\n                if (archivo.archivo.size) {\r\n                    peso += archivo.archivo.size;\r\n                }\r\n            }\r\n        )\r\n\r\n        if (peso > 15000000) {\r\n            setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: global.Constants.MENSAJE_ERROR.ERROR_PESO_DOCUMENTO, show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n        }\r\n\r\n        setPesoTotalArchivos(peso);\r\n    }\r\n\r\n    function formatBytes(bytes, decimals = 3) {\r\n        if (bytes === undefined) return '0 Bytes';\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const dm = decimals < 0 ? 0 : decimals;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return Math.round(parseFloat((bytes / Math.pow(k, i)).toFixed(dm), 1)) + ' ' + sizes[i];\r\n    }\r\n\r\n    // Metodo encargado de enviar los valores\r\n    const handleOnSubmit = (valores) => {\r\n\r\n        // Se usa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa la variable en false\r\n        let band = false;\r\n\r\n        // Se recorre la el array en posicion i\r\n        for (let i = 0; i < inputListArchivos.length - 1; i++) {\r\n\r\n            // Se recorre la el array en posicion j\r\n            for (let j = i + 1; j < inputListArchivos.length; j++) {\r\n\r\n                // Se validan que no existan archivos con el mismo nombre\r\n                if (inputListArchivos[i].archivo.name === inputListArchivos[j].archivo.name) {\r\n                    setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: global.Constants.MENSAJE_ERROR.ERROR_NOMBRE_DOCUMENTO, show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    band = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se valida que no exista nombre repertido en el sistema\r\n        let nombre = \"\";\r\n        let existe = false;\r\n\r\n        // Se valida que haya un listado de nombres en el array\r\n        if (getListNombresArchivos.data.length > 0) {\r\n\r\n            // Se recorre el array en i\r\n            for (let i = 0; i < inputListArchivos.length; i++) {\r\n\r\n                // Se captura el nombres del documento y\r\n                let nombre_servidor = getListNombresArchivos.data.find(dato =>\r\n\r\n                    // Se retorna el listado de nombre del archivo\r\n                    dato.attributes.nombre_archivo == inputListArchivos[i].archivo.name\r\n                );\r\n\r\n                // Se valida que si existe\r\n                if (nombre_servidor) {\r\n\r\n                    // Se setea los valores\r\n                    nombre = nombre_servidor.attributes.nombre_archivo;\r\n                    existe = true;\r\n                    band = true;\r\n                }\r\n\r\n                // Se valida que si existe\r\n                if (existe) {\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: global.Constants.MENSAJE_ERROR.ERROR_FORMATO_NOMBRE_DOCUMENTO + \" \" + nombre, show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se suma una a la longitud de i\r\n                    i = inputListArchivos.length + 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se recorre el array de archivos\r\n        for (let i = 0; i < inputListArchivos.length; i++) {\r\n\r\n            // Se consultan las extensiones por cada archivo\r\n            const extension = getFileExtension(inputListArchivos[i].archivo.name);\r\n\r\n            // Se recorre el array de las extensiones permitidas y se filtra por la extension de archivo\r\n            const resultado = getFormatosApi.filter(datos =>\r\n                datos.attributes.nombre == extension\r\n            );\r\n\r\n            // Se valida que la extension sea valida\r\n            if (resultado.length <= 0) {\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se setea el modal de error\r\n                setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: global.Constants.MENSAJE_ERROR.ERROR_FORMATO_DOCUMENTO, show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                // Se redeclara la variable\r\n                band = true;\r\n            }\r\n        }\r\n\r\n        // Se valida que peso de todos los archivos sea mayor a 15MB\r\n        if (getPesoTotalArchivos > 15000000) {\r\n\r\n            // Se quita el cargando\r\n            window.showSpinner(false);\r\n\r\n            // Se setea el mensaje de error\r\n            setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: global.Constants.MENSAJE_ERROR.ERROR_FORMATO_PESO_DOCUMENTO, show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n            // Se muestra el modal\r\n            window.showModal(1);\r\n\r\n            // Se redeclara la variable\r\n            band = true;\r\n        }\r\n\r\n        // Se realiza que si el formulario es correcto\r\n        if (band === false) {\r\n\r\n            // Paso 1: Validar con SIRIUS\r\n            // Paso 1.1: Login y Radicación\r\n\r\n            // Se inicializa el array\r\n            const attributes = [];\r\n\r\n            // Se recorre el listado de archivos\r\n            for (let i = 0; i < inputListArchivos.length; i++) {\r\n\r\n                // Se valida que hayan numeros de folios\r\n                if (inputListArchivos[i].folios !== null || inputListArchivos[i].folios !== '') {\r\n\r\n                    // Se añade los valores en el array de datos\r\n                    attributes.push({\r\n                        \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                        \"id_etapa\": from.id_etapa,\r\n                        \"id_fase\": from.id_fase,\r\n                        \"nombre_archivo\": inputListArchivos[i].archivo.name,\r\n                        \"file64\": inputListArchivos[i].filebase64,\r\n                        \"estado\": \"1\",\r\n                        \"num_folios\": inputListArchivos[i].folios,\r\n                        \"num_radicado\": radicado,\r\n                        \"vigencia\": vigencia,\r\n                        \"extension\": getFileExtension(inputListArchivos[i].archivo.name),\r\n                        \"peso\": inputListArchivos[i].archivo.size,\r\n                        \"created_user\": getNombreUsuario,\r\n                        \"descripcion\": getDescripcion,\r\n                        \"id_mas_formato\": inputListArchivos[i].id_mas_formato,\r\n                        \"es_compulsa\": false,\r\n                        \"es_soporte\": es_soporte\r\n                    });\r\n\r\n                }\r\n            }\r\n\r\n            // Se inicializa la variable con la informacion\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"documento_sirius\",\r\n                    \"attributes\": attributes\r\n                }\r\n            }\r\n\r\n            // Se consume la API\r\n            DocumentoSiriusApi.addDocumentoSirius(data).then(\r\n\r\n                // Se inicializa la variable de respuesta\r\n                datos => {\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n\r\n                    // Se valida que no haya error\r\n                    if (!datos.error) {\r\n\r\n                        // Se setea el mensaje\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: global.Constants.MENSAJES_MODAL.EXITOSO, show: true, redirect: '/RamasProceso/', from: { from }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                    } else {\r\n\r\n                        // Se setea el mensaje de error\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: SOPORTES DEL RADICADO\", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    const changeDescripcion = (e) => {\r\n        if (e.target.value === '' || \r\n        (global.Constants.CARACTERES_ESPECIALES.formatOnlyLettersWhitAccent.test(e.target.value) && \r\n        e.target.value.length <= getMaximoTextArea)) {\r\n            setDescripcion(e.target.value);\r\n            setCountTextArea(e.target.value.length);\r\n            setRepuestaDescripcion(true);\r\n        }\r\n    }\r\n\r\n    /*Componentes*/\r\n    const componentFormSoporte = () => {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    descripcion: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    let errores = {}\r\n\r\n                    if (!getRepuestaDescripcion) {\r\n                        errores.descripcion = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO\r\n                    }\r\n                    if (countTextArea > getMaximoTextArea) {\r\n                        errores.descripcion = 'Debe ingresar maximo ' + getMaximoTextArea + ' caracteres';\r\n                    }\r\n                    if (countTextArea < getMinimoTextArea) {\r\n                        errores.descripcion = 'Debe ingresar mínimo ' + getMinimoTextArea + ' caracteres'\r\n                    }\r\n                    if(getRepuestaDescripcion == false){\r\n                        errores.descripcion = global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS;\r\n                    }\r\n\r\n                    return errores;\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    handleOnSubmit(valores);\r\n                }}>\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        {\r\n                            inputListArchivos.map((x, i) => {\r\n                                return (\r\n                                    <div className=\"box\" key={i}>\r\n                                        <ul>\r\n                                            <div className='row'>\r\n                                                <div className='col-md-9'>\r\n                                                    <div className='row'>\r\n                                                        <div className='col-md-5'>\r\n                                                            <input className='form-control' name=\"folios\" type=\"number\" min=\"1\" placeholder=\"No. de folios\" value={x.folios} onChange={e => handleInputChangeFolios(e, i)} required />\r\n                                                            <div>\r\n                                                                <label>NÚMERO DE FOLIOS</label>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className='col-md-6'>\r\n                                                            <label className=\"custom-file-label\" htmlFor=\"example-file-input-custom\" data-toggle=\"custom-file-input\">{x.archivo.name}</label>\r\n                                                            <input className=\"custom-file-input\" data-toggle=\"custom-file-input\" type=\"file\" name=\"archivo\" onChange={e => handleInputChangeArchivos(e, i)} required={x.filebase64 == \"\"} />\r\n                                                            <label>PESO DEL DOCUMENTO: {formatBytes(x.archivo.size)}</label>\r\n                                                        </div>\r\n                                                        {\r\n                                                            inputListArchivos.length !== 1 ?\r\n                                                                (\r\n                                                                    <div className=\"col-md-2\">\r\n                                                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\" onClick={() => handleRemoveClick(i)}><i className=\"fas fa-trash-alt col\"></i></button>\r\n                                                                    </div>\r\n                                                                ) : null\r\n                                                        }\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-md-3'>\r\n                                                    <div className='row'>\r\n                                                        {\r\n                                                            inputListArchivos.length - 1 === i ?\r\n                                                                (\r\n                                                                    <div className=\"col-md-12\">\r\n                                                                        <button type=\"button\" className=\"btn btn-rounded btn-primary\" onClick={handleAddClick}> <i className=\"fas fa-plus\"></i> AGREGAR</button>\r\n                                                                    </div>\r\n                                                                ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ul>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                        <div className='row'>\r\n                            <div className=\"col-md-9\" style={{ paddingLeft: \"55px\" }}>\r\n                                <label htmlFor=\"descripcion\">DESCRIPCIÓN <span className=\"text-danger\">*</span></label>\r\n                                <Field as=\"textarea\" className=\"form-control\" id=\"descripcion\" name=\"descripcion\" rows=\"4\" placeholder=\"Descripción de los soportes\" required\r\n                                    maxLength={getMaximoTextArea} minLength={getMinimoTextArea} value={getDescripcion} onChange={changeDescripcion}></Field>\r\n                                <div className=\"text-right\">\r\n                                    <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                </div>\r\n                                <ErrorMessage name='descripcion' component={() => (<span className='text-danger'>{errors.descripcion}</span>)} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='row'>\r\n                            <div className=\"col-md-12 text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">{global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n\r\n                                <Link to={`/RamasProceso/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                </Link>\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<ModalGen data={getModalState} />}\r\n            {<Spinner />}\r\n\r\n\r\n            <div className=\"w2d_block\">\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                        <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                        <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                        <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/SoporteRadicadoLista/`} state={{ from: from }}><small>Lista Soportes Radicado</small></Link></li>\r\n                        <li className=\"breadcrumb-item\"> <small>Crear soporte del radicado</small></li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            <div className=\"block block-themed\">\r\n                <div className=\"block-header\">\r\n                    <h3 className=\"block-title\"> {getNombreProceso.toUpperCase()} :: ADJUNTAR DOCUMENTO FASE {getFaseApi.attributes != null ? getFaseApi.attributes.nombre : null} </h3>\r\n                </div>\r\n                <div className=\"block-content\">\r\n                    <div className='text-right mb-2'>\r\n                        <Link to={`/SoporteRadicadoLista/`} title='Regresar a lista de Soportes' state={{ from: from }}>\r\n                            <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                <h3 className=\"alert-heading font-size-h4 my-2\">INFORMACIÓN</h3>\r\n                                <p>PARA CUALQUIER DOCUMENTO QUE REQUIERA ADJUNTAR VALIDE PREVIAMENTE LO SIGUIENTE: </p>\r\n                                <p className=\"mb-0\"><strong>1.</strong> SE RECOMIENDA QUE EL NOMBRE DEL ARCHIVO LLVE LA SIGUIENTE ESTRUCTURA EJM: 2022-ER-0000018-1, 2022-EE-0000018-2</p>\r\n                                <p className=\"mb-0\"><strong>2.</strong> NO PUEDE SUPERAR QUINCE (15) Mb DE PESO / TAMAÑO.</p>\r\n                                <p className=\"mb-0\"><strong>3.</strong> EL NOMBRE DEL DOCUMENTO DEBE SER MÁXIMO DE 40 CARÁCTERES.</p>\r\n                                <p className=\"mb-0\"><strong>4.</strong> FORMATOS PERMITIDOS:\r\n                                    <span className=\"ml-1\">\r\n                                        {getFormatosApi ? (getFormatosApi.map((suggestion) => {\r\n                                            if (suggestion.attributes.estado == true)\r\n                                                return suggestion.attributes.nombre;\r\n                                        })).join(' - ') : null}\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {componentFormSoporte()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SoporteRadicadoForm;\r\n"],"mappings":";;AAAA,SAASA,YAAY,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,QAAQ;AAC1D,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAOC,YAAY,MAAM,0BAA0B;AACnD,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,SAASC,OAAO,EAAEC,aAAa,EAAEC,UAAU,QAAQ,iBAAiB;AACpE,OAAOC,kBAAkB,MAAM,uCAAuC;AACtE,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,kCAAkC;AAC1D,OAAOC,gBAAgB,MAAM,qCAAqC;AAClE,OAAOC,uBAAuB,MAAM,qCAAqC;AACzE,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,UAAU,MAAM,+BAA+B;AAAC;AAAA;AAEvD,SAASC,mBAAmB,GAAG;EAAA;EAE3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,iBAAiB,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACqB,iBAAiB,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAE1D,MAAMuB,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAM;IAAEe;EAAK,CAAC,GAAGD,QAAQ,CAACE,KAAK;EAC/B,IAAIC,QAAQ,GAAGF,IAAI,CAACE,QAAQ;EAC5B,IAAIC,sBAAsB,GAAGH,IAAI,CAACG,sBAAsB;EACxD,IAAIC,QAAQ,GAAGJ,IAAI,CAACI,QAAQ;EAE5B,IAAIC,QAAQ,GAAGL,IAAI,CAACK,QAAQ;EAC5B,IAAIC,OAAO,GAAGN,IAAI,CAACM,OAAO;EAC1B,IAAIC,UAAU,GAAGP,IAAI,CAACO,UAAU;EAChC,MAAM,CAACC,iBAAiB,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAE9D,MAAM;IAAEkC,OAAO;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGhC,OAAO,EAAE;EACtD,MAAM;IAAEiC,MAAM;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAGlC,aAAa,CAAC;IAC7C6B,OAAO;IACPM,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC2C,gBAAgB,EAAEC,gBAAgB,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EAC5D,MAAM,CAAC6C,aAAa,EAAEC,gBAAgB,CAAC,GAAG9C,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAAC+C,gBAAgB,EAAEC,gBAAgB,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EACzD,MAAM,CAACiD,cAAc,EAAEC,cAAc,CAAC,GAAGlD,QAAQ,EAAE;EACnD,MAAM,CAACmD,UAAU,EAAEC,UAAU,CAAC,GAAGpD,QAAQ,CAAC;IAAEqD,UAAU,EAAE;EAAK,CAAC,CAAC;EAC/D,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGvD,QAAQ,CAAC;IAAEwD,MAAM,EAAE,IAAI;IAAEC,MAAM,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,CAAC;EAC3G,MAAM,CAACC,oBAAoB,EAAEC,oBAAoB,CAAC,GAAG5D,QAAQ,CAAC,CAAC,CAAC;EAChE,MAAM,CAAC6D,sBAAsB,EAAEC,sBAAsB,CAAC,GAAG9D,QAAQ,CAAC;IAAEqD,UAAU,EAAE;EAAK,CAAC,CAAC;EAEvF,MAAM,CAACU,aAAa,EAAEC,aAAa,CAAC,GAAGhE,QAAQ,CAAC;IAAEiE,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAM,CAAC,CAAC;EACxF,MAAM,CAACC,gBAAgB,EAAEC,gBAAgB,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EACzD,MAAM,CAACsE,cAAc,EAAEC,cAAc,CAAC,GAAGvE,QAAQ,CAAC,EAAE,CAAC;EACrD,MAAM,CAACwE,sBAAsB,EAAEC,sBAAsB,CAAC,GAAGzE,QAAQ,CAAC,KAAK,CAAC;;EAExE;EACAD,SAAS,CAAC,MAAM;IAEZ;IACA,eAAe2E,SAAS,GAAG;MAEvB;MACAC,MAAM,CAACC,WAAW,CAAC,IAAI,CAAC;;MAExB;MACAC,8BAA8B,EAAE;IACpC;;IAEA;IACAH,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,8BAA8B,GAAG,MAAM;IAEzC;IACA9D,UAAU,CAAC+D,UAAU,CAAC,2BAA2B,GAAGnD,sBAAsB,CAAC,CAACoD,IAAI;IAE5E;IACAC,KAAK,IAAI;MAEL;MACA,IAAIA,KAAK,CAACC,KAAK,EAAE;QAEb;QACAjB,aAAa,CAAC;UAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;UAAEwC,OAAO,EAAEc,KAAK,CAACC,KAAK,CAACC,QAAQ,EAAE;UAAEf,IAAI,EAAE,IAAI;UAAEgB,QAAQ,EAAE,gBAAgB;UAAE3D,IAAI,EAAE;YAAEA;UAAK,CAAC;UAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;QAAM,CAAC,CAAC;MACxN,CAAC,MAAM;QAEH;QACAxC,gBAAgB,CAACtC,OAAO,EAAE,CAAC+E,MAAM,CAAC;;QAElC;QACAC,oBAAoB,EAAE;MAC1B;IAEJ,CAAC,CACJ;EACL,CAAC;;EAED;EACA,MAAMA,oBAAoB,GAAG,MAAM;IAE/B;IACAnF,kBAAkB,CAACoF,iDAAiD,CAAChE,sBAAsB,CAAC,CAACoD,IAAI;IAE7F;IACAC,KAAK,IAAI;MAEL;MACA,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;QAEd;QACAnB,sBAAsB,CAACkB,KAAK,CAAC;;QAE7B;QACAY,OAAO,EAAE;MACb,CAAC,MAAM;QACH5B,aAAa,CAAC;UAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;UAAEwC,OAAO,EAAEc,KAAK,CAACC,KAAK,CAACC,QAAQ,EAAE;UAAEf,IAAI,EAAE,IAAI;UAAEgB,QAAQ,EAAE,gBAAgB;UAAE3D,IAAI,EAAE;YAAEA;UAAK,CAAC;UAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;QAAM,CAAC,CAAC;QACpNb,MAAM,CAACC,WAAW,CAAC,KAAK,CAAC;MAC7B;IACJ,CAAC,CACJ;EACL,CAAC;;EAED;EACA,MAAMgB,OAAO,GAAG,MAAM;IAElB;IACAjF,gBAAgB,CAACkF,WAAW,CAAC/D,OAAO,CAAC,CAACiD,IAAI;IAEtC;IACAC,KAAK,IAAI;MAEL;MACA,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;QAEd;QACA7B,UAAU,CAAC4B,KAAK,CAACc,IAAI,CAAC;;QAEtB;QACAC,WAAW,EAAE;MACjB,CAAC,MAAM;QAEH;QACA/B,aAAa,CAAC;UAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;UAAEwC,OAAO,EAAEc,KAAK,CAACC,KAAK,CAACC,QAAQ,EAAE;UAAEf,IAAI,EAAE,IAAI;UAAEgB,QAAQ,EAAE,gBAAgB;UAAE3D,IAAI,EAAE;YAAEA;UAAK,CAAC;UAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;QAAM,CAAC,CAAC;;QAEpN;QACAb,MAAM,CAACC,WAAW,CAAC,KAAK,CAAC;MAC7B;IACJ,CAAC,CACJ;EACL,CAAC;;EAED;EACA,MAAMmB,WAAW,GAAG,MAAM;IAEtB;IACApF,gBAAgB,CAACoF,WAAW,EAAE,CAAChB,IAAI;IAE/B;IACAC,KAAK,IAAI;MAEL;MACA,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;QAEd;QACA/B,cAAc,CAAC8B,KAAK,CAACc,IAAI,CAAC;;QAE1B;QACAE,iBAAiB,EAAE;MACvB,CAAC,MAAM;QAEH;QACAhC,aAAa,CAAC;UAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;UAAEwC,OAAO,EAAEc,KAAK,CAACC,KAAK,CAACC,QAAQ,EAAE;UAAEf,IAAI,EAAE,IAAI;UAAEgB,QAAQ,EAAE,gBAAgB;UAAE3D,IAAI,EAAE;YAAEA;UAAK,CAAC;UAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;QAAM,CAAC,CAAC;;QAEpN;QACAb,MAAM,CAACC,WAAW,CAAC,KAAK,CAAC;MAC7B;IACJ,CAAC,CACJ;EACL,CAAC;;EAGD;EACA,MAAMoB,iBAAiB,GAAG,MAAM;IAE5B;IACA,IAAI;MAEA;MACA,MAAMF,IAAI,GAAG;QACT,MAAM,EAAE;UACJ,MAAM,EAAE,eAAe;UACvB,YAAY,EAAE;YACV,QAAQ,EAAE;UACd;QACJ;MACJ,CAAC;;MAED;MACAnF,gBAAgB,CAACsF,qBAAqB,CAACH,IAAI,CAAC,CAACf,IAAI;MAE7C;MACAC,KAAK,IAAI;QAEL;QACA,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;UAEd;UACA,IAAID,KAAK,CAAC,MAAM,CAAC,CAACkB,MAAM,GAAG,CAAC,EAAE;YAE1B;YACAlB,KAAK,CAAC,MAAM,CAAC,CAACmB,MAAM,CAACL,IAAI,IAAIA,IAAI,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,CAACM,QAAQ,CAAC,4BAA4B,CAAC,CAAC,CAACC,GAAG,CAACC,YAAY;YAE9G;YACAhF,iBAAiB,CAACgF,YAAY,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CACxD,CAAC;;YAEF;YACAtB,KAAK,CAAC,MAAM,CAAC,CAACmB,MAAM,CAACL,IAAI,IAAIA,IAAI,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,CAACM,QAAQ,CAAC,4BAA4B,CAAC,CAAC,CAACC,GAAG,CAACC,YAAY;YAE9G;YACAlF,iBAAiB,CAACkF,YAAY,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CACxD,CAAC;UACN;;UAEA;UACAC,aAAa,EAAE;QACnB,CAAC,MAAM;UAEH;UACAvC,aAAa,CAAC;YAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;YAAEwC,OAAO,EAAEc,KAAK,CAACC,KAAK,CAACC,QAAQ,EAAE;YAAEf,IAAI,EAAE,IAAI;YAAEgB,QAAQ,EAAE,gBAAgB;YAAE3D,IAAI,EAAE;cAAEA;YAAK,CAAC;YAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;UAAM,CAAC,CAAC;QACxN;MACJ,CAAC,CACJ;IACL,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZ;IAAA;EAER,CAAC;;EAED;EACA,MAAMsB,aAAa,GAAG,MAAM;IAExB;IACAxF,UAAU,CAACyF,cAAc,CAAC,gBAAgB,EAAE7E,sBAAsB,CAAC,CAACoD,IAAI;IAEpE;IACAC,KAAK,IAAI;MAEL;MACA,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;QAEd;QACAZ,gBAAgB,CAACW,KAAK,CAACc,IAAI,CAACzC,UAAU,CAACoC,MAAM,CAAC;MAClD;;MAEA;MACAd,MAAM,CAACC,WAAW,CAAC,KAAK,CAAC;IAC7B,CAAC,CACJ;EACL,CAAC;EAED,SAAS6B,oBAAoB,CAACC,GAAG,EAAE;IAE/B,MAAMC,MAAM,GAAGtB,MAAM,CAACC,SAAS,CAACsB,SAAS,CAACC,qBAAqB,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAACC,WAAW,IAAI;MAC1F,IAAIN,GAAG,CAACN,QAAQ,CAACY,WAAW,CAAC,EAAE;QAC3B,OAAO,IAAI;MACf;MAEA,OAAO,KAAK;IAChB,CAAC,CAAC;IAEF,OAAOL,MAAM;EACjB;EAEA,MAAM,CAACM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlH,QAAQ,CAAC,CAAC;IAAEmH,MAAM,EAAE,EAAE;IAAEC,OAAO,EAAE,CAAC,CAAC;IAAEC,UAAU,EAAE,EAAE;IAAEC,IAAI,EAAE,CAAC;IAAEC,cAAc,EAAE;EAAK,CAAC,CAAC,CAAC;;EAExI;EACA;EACA,MAAMC,uBAAuB,GAAG,CAACC,CAAC,EAAEC,KAAK,KAAK;IAC1C,MAAM;MAAElF,IAAI;MAAEmF;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC,MAAMC,IAAI,GAAG,CAAC,GAAGZ,iBAAiB,CAAC;IACnCY,IAAI,CAACH,KAAK,CAAC,CAAClF,IAAI,CAAC,GAAGmF,KAAK;IACzBT,oBAAoB,CAACW,IAAI,CAAC;EAC9B,CAAC;EAED,SAASC,gBAAgB,CAACD,IAAI,EAAE;IAC5B,MAAME,aAAa,GAAGC,gBAAgB,CAACH,IAAI,CAAC,CAAC,CAAC,CAACT,OAAO,CAAC5E,IAAI,CAAC;IAE5D,IAAIuF,aAAa,IAAI,KAAK,EAAE;MACxB/D,aAAa,CAAC;QAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;QAAEwC,OAAO,EAAE,8CAA8C;QAAEC,IAAI,EAAE,IAAI;QAAEgB,QAAQ,EAAE,IAAI;QAAE3D,IAAI,EAAE;UAAEA;QAAK,CAAC;QAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;MAAM,CAAC,CAAC;MAChOb,MAAM,CAACsD,SAAS,CAAC,CAAC,CAAC;MACnBhG,iBAAiB,CAAC,KAAK,CAAC;IAC5B,CAAC,MACI;MACDA,iBAAiB,CAAC,IAAI,CAAC;IAC3B;EACJ;EAEA,MAAMiG,yBAAyB,GAAG,CAACT,CAAC,EAAEC,KAAK,KAAK;IAE5C,MAAM;MAAElF,IAAI;MAAE2F;IAAM,CAAC,GAAGV,CAAC,CAACG,MAAM;IAChC,IAAIO,KAAK,CAACjC,MAAM,GAAG,CAAC,EAAE;MAClB,MAAMkC,SAAS,GAAGJ,gBAAgB,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC3F,IAAI,CAAC;MACjD,MAAM6F,SAAS,GAAGpF,cAAc,CAACkD,MAAM,CAACnB,KAAK,IAAIA,KAAK,CAAC3B,UAAU,CAACoC,MAAM,IAAI2C,SAAS,CAAC;MAGtF,IAAIC,SAAS,CAACnC,MAAM,GAAG,CAAC,EAAE;QACtB,MAAM2B,IAAI,GAAG,CAAC,GAAGZ,iBAAiB,CAAC;QAEnCY,IAAI,CAACH,KAAK,CAAC,CAAClF,IAAI,CAAC,GAAG2F,KAAK,CAAC,CAAC,CAAC;QAE5BL,gBAAgB,CAACD,IAAI,CAAC;QAEtB,IAAIM,KAAK,CAAC,CAAC,CAAC,EAAE;UACVN,IAAI,CAACH,KAAK,CAAC,CAAClF,IAAI,CAAC,GAAG2F,KAAK,CAAC,CAAC,CAAC;QAChC,CAAC,MACI;UACDN,IAAI,CAACH,KAAK,CAAC,CAAClF,IAAI,CAAC,GAAG,EAAE;UACtBqF,IAAI,CAACH,KAAK,CAAC,CAACL,UAAU,GAAG,EAAE;UAC3BQ,IAAI,CAACH,KAAK,CAAC,CAACJ,IAAI,GAAG,CAAC;UACpBO,IAAI,CAACH,KAAK,CAAC,CAACH,cAAc,GAAG,IAAI;UACjCL,oBAAoB,CAACW,IAAI,CAAC;QAC9B;QACA;QACAS,KAAK,CAAC9G,IAAI,CAACiG,CAAC,CAACG,MAAM,CAACO,KAAK,CAAC,CAACI,OAAO,CAACnB,OAAO,IAAI;UAC1C,IAAIoB,MAAM,GAAG,IAAIC,UAAU,EAAE;UAC7BD,MAAM,CAACE,aAAa,CAACtB,OAAO,CAAC;UAC7BoB,MAAM,CAACG,MAAM,GAAG,YAAY;YACxB,IAAIC,aAAa,GAAG,EAAE;YACtB,IAAIC,MAAM,GAAGL,MAAM,CAAC7B,MAAM;YAC1BiC,aAAa,GAAGC,MAAM,CAAC/B,KAAK,CAAC,GAAG,CAAC;YACjCe,IAAI,CAACH,KAAK,CAAC,CAACL,UAAU,GAAGuB,aAAa,CAAC,CAAC,CAAC;YACzCf,IAAI,CAACH,KAAK,CAAC,CAACH,cAAc,GAAGc,SAAS,CAAC,CAAC,CAAC,CAACS,EAAE;YAC5C5B,oBAAoB,CAACW,IAAI,CAAC;UAC9B,CAAC;QACL,CAAC,CAAC;QACFkB,wBAAwB,CAAClB,IAAI,CAAC;QAC9BmB,uBAAuB,CAACnB,IAAI,CAAC;MACjC,CAAC,MAAM;QACH;QACA7D,aAAa,CAAC;UAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;UAAEwC,OAAO,EAAEmB,MAAM,CAACC,SAAS,CAAC2D,aAAa,CAACC,uBAAuB;UAAE/E,IAAI,EAAE,IAAI;UAAEgB,QAAQ,EAAE,IAAI;UAAE3D,IAAI,EAAE;YAAEA;UAAK,CAAC;UAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;QAAM,CAAC,CAAC;;QAExO;QACA,OAAO,KAAK;MAChB;IACJ,CAAC,MACI;MACD,MAAMqC,IAAI,GAAG,CAAC,GAAGZ,iBAAiB,CAAC;MACnCY,IAAI,CAACH,KAAK,CAAC,CAAClF,IAAI,CAAC,GAAG,EAAE;MACtBqF,IAAI,CAACH,KAAK,CAAC,CAACL,UAAU,GAAG,EAAE;MAC3BQ,IAAI,CAACH,KAAK,CAAC,CAACJ,IAAI,GAAG,CAAC;MACpBO,IAAI,CAACH,KAAK,CAAC,CAACH,cAAc,GAAG,IAAI;MACjCL,oBAAoB,CAACW,IAAI,CAAC;MAC1BkB,wBAAwB,CAAClB,IAAI,CAAC;MAC9BmB,uBAAuB,CAACnB,IAAI,CAAC;IACjC;EAGJ,CAAC;;EAED;EACA,MAAMsB,iBAAiB,GAAGzB,KAAK,IAAI;IAC/B,MAAMG,IAAI,GAAG,CAAC,GAAGZ,iBAAiB,CAAC;IACnCY,IAAI,CAACuB,MAAM,CAAC1B,KAAK,EAAE,CAAC,CAAC;IACrBR,oBAAoB,CAACW,IAAI,CAAC;IAC1BkB,wBAAwB,CAAClB,IAAI,CAAC;IAC9BC,gBAAgB,CAACD,IAAI,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMwB,cAAc,GAAG,MAAM;IACzBnC,oBAAoB,CAAC,CAAC,GAAGD,iBAAiB,EAAE;MAAEE,MAAM,EAAE,EAAE;MAAEC,OAAO,EAAE,CAAC,CAAC;MAAEC,UAAU,EAAE,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE;IAAK,CAAC,CAAC,CAAC;EAC5H,CAAC;EAED,SAASS,gBAAgB,CAACsB,QAAQ,EAAE;IAChC,OAAOA,QAAQ,CAACC,KAAK,CAAC,CAACD,QAAQ,CAACE,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;EACpE;EAEA,SAASR,uBAAuB,CAACnB,IAAI,EAAE;IACnC,IAAI4B,MAAM,GAAG,KAAK;IAClB,IAAIhE,MAAM,GAAG,EAAE;IACf,IAAI5B,sBAAsB,CAACiC,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;MACxC2B,IAAI,CAACU,OAAO,CACR,CAACnB,OAAO,EAAEM,KAAK,KAAK;QAEhB,IAAIgC,eAAe,GAAG7F,sBAAsB,CAACiC,IAAI,CAAC6D,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACvG,UAAU,CAACwG,cAAc,IAAIzC,OAAO,CAACA,OAAO,CAAC5E,IAAI,CAAC;QAEtH,IAAIkH,eAAe,EAAE;UACjBjE,MAAM,GAAGiE,eAAe,CAACrG,UAAU,CAACwG,cAAc;UAClDJ,MAAM,GAAG,IAAI;UACb;QACJ;MAEJ,CAAC,CACJ;MAED,IAAIA,MAAM,EAAE;QACRzF,aAAa,CAAC;UAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;UAAEwC,OAAO,EAAEmB,MAAM,CAACC,SAAS,CAAC2D,aAAa,CAACa,8BAA8B,GAAG,KAAK,GAAGrE,MAAM;UAAEtB,IAAI,EAAE,IAAI;UAAEgB,QAAQ,EAAE,IAAI;UAAE3D,IAAI,EAAE;YAAEA;UAAK,CAAC;UAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;QAAM,CAAC,CAAC;MACpQ;IACJ;EACJ;EAEA,SAASuD,wBAAwB,CAAClB,IAAI,EAAE;IACpC,IAAIkC,IAAI,GAAG,CAAC;IACZlC,IAAI,CAACU,OAAO,CACR,CAACnB,OAAO,EAAEM,KAAK,KAAK;MAChB,IAAIN,OAAO,CAACA,OAAO,CAACE,IAAI,EAAE;QACtByC,IAAI,IAAI3C,OAAO,CAACA,OAAO,CAACE,IAAI;MAChC;IACJ,CAAC,CACJ;IAED,IAAIyC,IAAI,GAAG,QAAQ,EAAE;MACjB/F,aAAa,CAAC;QAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;QAAEwC,OAAO,EAAEmB,MAAM,CAACC,SAAS,CAAC2D,aAAa,CAACe,oBAAoB;QAAE7F,IAAI,EAAE,IAAI;QAAEgB,QAAQ,EAAE,IAAI;QAAE3D,IAAI,EAAE;UAAEA;QAAK,CAAC;QAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;MAAM,CAAC,CAAC;IACzO;IAEA5B,oBAAoB,CAACmG,IAAI,CAAC;EAC9B;EAEA,SAASE,WAAW,CAACC,KAAK,EAAgB;IAAA,IAAdC,QAAQ,uEAAG,CAAC;IACpC,IAAID,KAAK,KAAKE,SAAS,EAAE,OAAO,SAAS;IACzC,IAAIF,KAAK,KAAK,CAAC,EAAE,OAAO,SAAS;IACjC,MAAMG,CAAC,GAAG,IAAI;IACd,MAAMC,EAAE,GAAGH,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAGA,QAAQ;IACtC,MAAMI,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACvE,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACT,KAAK,CAAC,GAAGO,IAAI,CAACE,GAAG,CAACN,CAAC,CAAC,CAAC;IACnD,OAAOI,IAAI,CAACG,KAAK,CAACC,UAAU,CAAC,CAACX,KAAK,GAAGO,IAAI,CAACK,GAAG,CAACT,CAAC,EAAEG,CAAC,CAAC,EAAEO,OAAO,CAACT,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGC,KAAK,CAACC,CAAC,CAAC;EAC3F;;EAEA;EACA,MAAMQ,cAAc,GAAIC,OAAO,IAAK;IAEhC;IACAtG,MAAM,CAACC,WAAW,CAAC,IAAI,CAAC;;IAExB;IACA,IAAIsG,IAAI,GAAG,KAAK;;IAEhB;IACA,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvD,iBAAiB,CAACf,MAAM,GAAG,CAAC,EAAEsE,CAAC,EAAE,EAAE;MAEnD;MACA,KAAK,IAAIW,CAAC,GAAGX,CAAC,GAAG,CAAC,EAAEW,CAAC,GAAGlE,iBAAiB,CAACf,MAAM,EAAEiF,CAAC,EAAE,EAAE;QAEnD;QACA,IAAIlE,iBAAiB,CAACuD,CAAC,CAAC,CAACpD,OAAO,CAAC5E,IAAI,KAAKyE,iBAAiB,CAACkE,CAAC,CAAC,CAAC/D,OAAO,CAAC5E,IAAI,EAAE;UACzEwB,aAAa,CAAC;YAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;YAAEwC,OAAO,EAAEmB,MAAM,CAACC,SAAS,CAAC2D,aAAa,CAACmC,sBAAsB;YAAEjH,IAAI,EAAE,IAAI;YAAEgB,QAAQ,EAAE,IAAI;YAAE3D,IAAI,EAAE;cAAEA;YAAK,CAAC;YAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;UAAM,CAAC,CAAC;UACvO0F,IAAI,GAAG,IAAI;QACf;MACJ;IACJ;;IAEA;IACA,IAAIzF,MAAM,GAAG,EAAE;IACf,IAAIgE,MAAM,GAAG,KAAK;;IAElB;IACA,IAAI5F,sBAAsB,CAACiC,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;MAExC;MACA,KAAK,IAAIsE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvD,iBAAiB,CAACf,MAAM,EAAEsE,CAAC,EAAE,EAAE;QAE/C;QACA,IAAId,eAAe,GAAG7F,sBAAsB,CAACiC,IAAI,CAAC6D,IAAI,CAACC,IAAI;QAEvD;QACAA,IAAI,CAACvG,UAAU,CAACwG,cAAc,IAAI5C,iBAAiB,CAACuD,CAAC,CAAC,CAACpD,OAAO,CAAC5E,IAAI,CACtE;;QAED;QACA,IAAIkH,eAAe,EAAE;UAEjB;UACAjE,MAAM,GAAGiE,eAAe,CAACrG,UAAU,CAACwG,cAAc;UAClDJ,MAAM,GAAG,IAAI;UACbyB,IAAI,GAAG,IAAI;QACf;;QAEA;QACA,IAAIzB,MAAM,EAAE;UAER;UACA9E,MAAM,CAACC,WAAW,CAAC,KAAK,CAAC;;UAEzB;UACAZ,aAAa,CAAC;YAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;YAAEwC,OAAO,EAAEmB,MAAM,CAACC,SAAS,CAAC2D,aAAa,CAACa,8BAA8B,GAAG,GAAG,GAAGrE,MAAM;YAAEtB,IAAI,EAAE,IAAI;YAAEgB,QAAQ,EAAE,IAAI;YAAE3D,IAAI,EAAE;cAAEA;YAAK,CAAC;YAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;UAAM,CAAC,CAAC;;UAE9P;UACAgF,CAAC,GAAGvD,iBAAiB,CAACf,MAAM,GAAG,CAAC;QACpC;MACJ;IACJ;;IAEA;IACA,KAAK,IAAIsE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvD,iBAAiB,CAACf,MAAM,EAAEsE,CAAC,EAAE,EAAE;MAE/C;MACA,MAAMpC,SAAS,GAAGJ,gBAAgB,CAACf,iBAAiB,CAACuD,CAAC,CAAC,CAACpD,OAAO,CAAC5E,IAAI,CAAC;;MAErE;MACA,MAAM6F,SAAS,GAAGpF,cAAc,CAACkD,MAAM,CAACnB,KAAK,IACzCA,KAAK,CAAC3B,UAAU,CAACoC,MAAM,IAAI2C,SAAS,CACvC;;MAED;MACA,IAAIC,SAAS,CAACnC,MAAM,IAAI,CAAC,EAAE;QAEvB;QACAvB,MAAM,CAACC,WAAW,CAAC,KAAK,CAAC;;QAEzB;QACAZ,aAAa,CAAC;UAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;UAAEwC,OAAO,EAAEmB,MAAM,CAACC,SAAS,CAAC2D,aAAa,CAACC,uBAAuB;UAAE/E,IAAI,EAAE,IAAI;UAAEgB,QAAQ,EAAE,IAAI;UAAE3D,IAAI,EAAE;YAAEA;UAAK,CAAC;UAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;QAAM,CAAC,CAAC;;QAExO;QACA0F,IAAI,GAAG,IAAI;MACf;IACJ;;IAEA;IACA,IAAIvH,oBAAoB,GAAG,QAAQ,EAAE;MAEjC;MACAgB,MAAM,CAACC,WAAW,CAAC,KAAK,CAAC;;MAEzB;MACAZ,aAAa,CAAC;QAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;QAAEwC,OAAO,EAAEmB,MAAM,CAACC,SAAS,CAAC2D,aAAa,CAACoC,4BAA4B;QAAElH,IAAI,EAAE,IAAI;QAAEgB,QAAQ,EAAE,IAAI;QAAE3D,IAAI,EAAE;UAAEA;QAAK,CAAC;QAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;MAAM,CAAC,CAAC;;MAE7O;MACAb,MAAM,CAACsD,SAAS,CAAC,CAAC,CAAC;;MAEnB;MACAiD,IAAI,GAAG,IAAI;IACf;;IAEA;IACA,IAAIA,IAAI,KAAK,KAAK,EAAE;MAEhB;MACA;;MAEA;MACA,MAAM7H,UAAU,GAAG,EAAE;;MAErB;MACA,KAAK,IAAImH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvD,iBAAiB,CAACf,MAAM,EAAEsE,CAAC,EAAE,EAAE;QAE/C;QACA,IAAIvD,iBAAiB,CAACuD,CAAC,CAAC,CAACrD,MAAM,KAAK,IAAI,IAAIF,iBAAiB,CAACuD,CAAC,CAAC,CAACrD,MAAM,KAAK,EAAE,EAAE;UAE5E;UACA9D,UAAU,CAACiI,IAAI,CAAC;YACZ,0BAA0B,EAAE3J,sBAAsB;YAClD,UAAU,EAAEH,IAAI,CAACK,QAAQ;YACzB,SAAS,EAAEL,IAAI,CAACM,OAAO;YACvB,gBAAgB,EAAEmF,iBAAiB,CAACuD,CAAC,CAAC,CAACpD,OAAO,CAAC5E,IAAI;YACnD,QAAQ,EAAEyE,iBAAiB,CAACuD,CAAC,CAAC,CAACnD,UAAU;YACzC,QAAQ,EAAE,GAAG;YACb,YAAY,EAAEJ,iBAAiB,CAACuD,CAAC,CAAC,CAACrD,MAAM;YACzC,cAAc,EAAEzF,QAAQ;YACxB,UAAU,EAAEE,QAAQ;YACpB,WAAW,EAAEoG,gBAAgB,CAACf,iBAAiB,CAACuD,CAAC,CAAC,CAACpD,OAAO,CAAC5E,IAAI,CAAC;YAChE,MAAM,EAAEyE,iBAAiB,CAACuD,CAAC,CAAC,CAACpD,OAAO,CAACE,IAAI;YACzC,cAAc,EAAEvE,gBAAgB;YAChC,aAAa,EAAEuB,cAAc;YAC7B,gBAAgB,EAAE2C,iBAAiB,CAACuD,CAAC,CAAC,CAACjD,cAAc;YACrD,aAAa,EAAE,KAAK;YACpB,YAAY,EAAExF;UAClB,CAAC,CAAC;QAEN;MACJ;;MAEA;MACA,MAAM+D,IAAI,GAAG;QACT,MAAM,EAAE;UACJ,MAAM,EAAE,kBAAkB;UAC1B,YAAY,EAAEzC;QAClB;MACJ,CAAC;;MAED;MACA9C,kBAAkB,CAACgL,kBAAkB,CAACzF,IAAI,CAAC,CAACf,IAAI;MAE5C;MACAC,KAAK,IAAI;QAEL;QACAL,MAAM,CAACC,WAAW,CAAC,KAAK,CAAC;;QAEzB;QACA,IAAI,CAACI,KAAK,CAACC,KAAK,EAAE;UAEd;UACAjB,aAAa,CAAC;YAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;YAAEwC,OAAO,EAAEmB,MAAM,CAACC,SAAS,CAACkG,cAAc,CAACC,OAAO;YAAEtH,IAAI,EAAE,IAAI;YAAEgB,QAAQ,EAAE,gBAAgB;YAAE3D,IAAI,EAAE;cAAEA;YAAK,CAAC;YAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACmG;UAAM,CAAC,CAAC;QACzO,CAAC,MAAM;UAEH;UACA1H,aAAa,CAAC;YAAEC,KAAK,EAAE,aAAa,GAAGvC,QAAQ,GAAG,2BAA2B;YAAEwC,OAAO,EAAEc,KAAK,CAACC,KAAK,CAACC,QAAQ,EAAE;YAAEf,IAAI,EAAE,IAAI;YAAEgB,QAAQ,EAAE,IAAI;YAAE3D,IAAI,EAAE;cAAEA;YAAK,CAAC;YAAE4D,KAAK,EAAEC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC;UAAM,CAAC,CAAC;QAC5M;MACJ,CAAC,CACJ;IACL;EACJ,CAAC;EAED,MAAMmG,iBAAiB,GAAIlE,CAAC,IAAK;IAC7B,IAAIA,CAAC,CAACG,MAAM,CAACD,KAAK,KAAK,EAAE,IACxBtC,MAAM,CAACC,SAAS,CAACuB,qBAAqB,CAAC+E,2BAA2B,CAACC,IAAI,CAACpE,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC,IACxFF,CAAC,CAACG,MAAM,CAACD,KAAK,CAACzB,MAAM,IAAI/E,iBAAkB,EAAE;MACzCoD,cAAc,CAACkD,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC;MAC9B7E,gBAAgB,CAAC2E,CAAC,CAACG,MAAM,CAACD,KAAK,CAACzB,MAAM,CAAC;MACvCzB,sBAAsB,CAAC,IAAI,CAAC;IAChC;EACJ,CAAC;;EAED;EACA,MAAMqH,oBAAoB,GAAG,MAAM;IAC/B,oBACI,QAAC,MAAM;MACH,aAAa,EAAE;QACXC,WAAW,EAAE;MACjB,CAAE;MACF,kBAAkB;MAClB,QAAQ,EAAGd,OAAO,IAAK;QACnB,IAAIe,OAAO,GAAG,CAAC,CAAC;QAEhB,IAAI,CAACxH,sBAAsB,EAAE;UACzBwH,OAAO,CAACD,WAAW,GAAG1G,MAAM,CAACC,SAAS,CAAC2D,aAAa,CAACgD,iBAAiB;QAC1E;QACA,IAAIpJ,aAAa,GAAG1B,iBAAiB,EAAE;UACnC6K,OAAO,CAACD,WAAW,GAAG,uBAAuB,GAAG5K,iBAAiB,GAAG,aAAa;QACrF;QACA,IAAI0B,aAAa,GAAGxB,iBAAiB,EAAE;UACnC2K,OAAO,CAACD,WAAW,GAAG,uBAAuB,GAAG1K,iBAAiB,GAAG,aAAa;QACrF;QACA,IAAGmD,sBAAsB,IAAI,KAAK,EAAC;UAC/BwH,OAAO,CAACD,WAAW,GAAG1G,MAAM,CAACC,SAAS,CAAC2D,aAAa,CAACiD,kCAAkC;QAC3F;QAEA,OAAOF,OAAO;MAClB,CAAE;MACF,QAAQ,EAAE,CAACf,OAAO,WAAoB;QAAA,IAAlB;UAAEkB;QAAU,CAAC;QAC7BnB,cAAc,CAACC,OAAO,CAAC;MAC3B,CAAE;MAAA,UACD;QAAA,IAAC;UAAEmB;QAAO,CAAC;QAAA,oBACR,QAAC,IAAI;UAAA,WAEGnF,iBAAiB,CAACZ,GAAG,CAAC,CAACgG,CAAC,EAAE7B,CAAC,KAAK;YAC5B,oBACI;cAAK,SAAS,EAAC,KAAK;cAAA,uBAChB;gBAAA,uBACI;kBAAK,SAAS,EAAC,KAAK;kBAAA,wBAChB;oBAAK,SAAS,EAAC,UAAU;oBAAA,uBACrB;sBAAK,SAAS,EAAC,KAAK;sBAAA,wBAChB;wBAAK,SAAS,EAAC,UAAU;wBAAA,wBACrB;0BAAO,SAAS,EAAC,cAAc;0BAAC,IAAI,EAAC,QAAQ;0BAAC,IAAI,EAAC,QAAQ;0BAAC,GAAG,EAAC,GAAG;0BAAC,WAAW,EAAC,eAAe;0BAAC,KAAK,EAAE6B,CAAC,CAAClF,MAAO;0BAAC,QAAQ,EAAEM,CAAC,IAAID,uBAAuB,CAACC,CAAC,EAAE+C,CAAC,CAAE;0BAAC,QAAQ;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA,QAAG,eAC1K;0BAAA,uBACI;4BAAA;0BAAA;4BAAA;4BAAA;4BAAA;0BAAA;wBAA+B;0BAAA;0BAAA;0BAAA;wBAAA,QAC7B;sBAAA;wBAAA;wBAAA;wBAAA;sBAAA,QACJ,eAEN;wBAAK,SAAS,EAAC,UAAU;wBAAA,wBACrB;0BAAO,SAAS,EAAC,mBAAmB;0BAAC,OAAO,EAAC,2BAA2B;0BAAC,eAAY,mBAAmB;0BAAA,UAAE6B,CAAC,CAACjF,OAAO,CAAC5E;wBAAI;0BAAA;0BAAA;0BAAA;wBAAA,QAAS,eACjI;0BAAO,SAAS,EAAC,mBAAmB;0BAAC,eAAY,mBAAmB;0BAAC,IAAI,EAAC,MAAM;0BAAC,IAAI,EAAC,SAAS;0BAAC,QAAQ,EAAEiF,CAAC,IAAIS,yBAAyB,CAACT,CAAC,EAAE+C,CAAC,CAAE;0BAAC,QAAQ,EAAE6B,CAAC,CAAChF,UAAU,IAAI;wBAAG;0BAAA;0BAAA;0BAAA;wBAAA,QAAG,eAChL;0BAAA,mCAA4B4C,WAAW,CAACoC,CAAC,CAACjF,OAAO,CAACE,IAAI,CAAC;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA,QAAS;sBAAA;wBAAA;wBAAA;wBAAA;sBAAA,QAC9D,EAEFL,iBAAiB,CAACf,MAAM,KAAK,CAAC,gBAEtB;wBAAK,SAAS,EAAC,UAAU;wBAAA,uBACrB;0BAAQ,IAAI,EAAC,QAAQ;0BAAC,SAAS,EAAC,qCAAqC;0BAAC,OAAO,EAAE,MAAMiD,iBAAiB,CAACqB,CAAC,CAAE;0BAAA,uBAAC;4BAAG,SAAS,EAAC;0BAAsB;4BAAA;4BAAA;4BAAA;0BAAA;wBAAK;0BAAA;0BAAA;0BAAA;wBAAA;sBAAS;wBAAA;wBAAA;wBAAA;sBAAA,QAC1J,GACN,IAAI;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA;kBAGd;oBAAA;oBAAA;oBAAA;kBAAA,QACJ,eACN;oBAAK,SAAS,EAAC,UAAU;oBAAA,uBACrB;sBAAK,SAAS,EAAC,KAAK;sBAAA,UAEZvD,iBAAiB,CAACf,MAAM,GAAG,CAAC,KAAKsE,CAAC,gBAE1B;wBAAK,SAAS,EAAC,WAAW;wBAAA,uBACtB;0BAAQ,IAAI,EAAC,QAAQ;0BAAC,SAAS,EAAC,6BAA6B;0BAAC,OAAO,EAAEnB,cAAe;0BAAA,6BAAE;4BAAG,SAAS,EAAC;0BAAa;4BAAA;4BAAA;4BAAA;0BAAA,QAAK;wBAAA;0BAAA;0BAAA;0BAAA;wBAAA;sBAAiB;wBAAA;wBAAA;wBAAA;sBAAA,QACtI,GACN;oBAAI;sBAAA;sBAAA;sBAAA;oBAAA;kBAEd;oBAAA;oBAAA;oBAAA;kBAAA,QACJ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cACJ;gBAAA;gBAAA;gBAAA;cAAA;YACL,GAzCiBmB,CAAC;cAAA;cAAA;cAAA;YAAA,QA0CrB;UAEd,CAAC,CAAC,eAEN;YAAK,SAAS,EAAC,KAAK;YAAA,uBAChB;cAAK,SAAS,EAAC,UAAU;cAAC,KAAK,EAAE;gBAAE8B,WAAW,EAAE;cAAO,CAAE;cAAA,wBACrD;gBAAO,OAAO,EAAC,aAAa;gBAAA,2CAAa;kBAAM,SAAS,EAAC,aAAa;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAS;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAQ,eACvF,QAAC,KAAK;gBAAC,EAAE,EAAC,UAAU;gBAAC,SAAS,EAAC,cAAc;gBAAC,EAAE,EAAC,aAAa;gBAAC,IAAI,EAAC,aAAa;gBAAC,IAAI,EAAC,GAAG;gBAAC,WAAW,EAAC,gCAA6B;gBAAC,QAAQ;gBACzI,SAAS,EAAEnL,iBAAkB;gBAAC,SAAS,EAAEE,iBAAkB;gBAAC,KAAK,EAAEiD,cAAe;gBAAC,QAAQ,EAAEqH;cAAkB;gBAAA;gBAAA;gBAAA;cAAA,QAAS,eAC5H;gBAAK,SAAS,EAAC,YAAY;gBAAA,uBACvB;kBAAM,SAAS,EAAC,cAAc;kBAAA,WAAE9I,aAAa,SAAK1B,iBAAiB;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAAQ;gBAAA;gBAAA;gBAAA;cAAA,QACzE,eACN,QAAC,YAAY;gBAAC,IAAI,EAAC,aAAa;gBAAC,SAAS,EAAE,mBAAO;kBAAM,SAAS,EAAC,aAAa;kBAAA,UAAEiL,MAAM,CAACL;gBAAW;kBAAA;kBAAA;kBAAA;gBAAA;cAAU;gBAAA;gBAAA;gBAAA;cAAA,QAAG;YAAA;cAAA;cAAA;cAAA;YAAA;UAC/G;YAAA;YAAA;YAAA;UAAA,QACJ,eAEN;YAAK,SAAS,EAAC,KAAK;YAAA,uBAChB;cAAK,SAAS,EAAC,sBAAsB;cAAA,wBACjC;gBAAQ,IAAI,EAAC,QAAQ;gBAAC,SAAS,EAAC,6BAA6B;gBAAA,UAAE1G,MAAM,CAACC,SAAS,CAACiH,YAAY,CAACC;cAAS;gBAAA;gBAAA;gBAAA;cAAA,QAAU,eAEhH,QAAC,IAAI;gBAAC,EAAE,EAAG,gBAAgB;gBAAC,KAAK,EAAE;kBAAEhL,IAAI,EAAEA;gBAAK,CAAE;gBAAA,uBAC9C;kBAAQ,IAAI,EAAC,QAAQ;kBAAC,SAAS,EAAC,qCAAqC;kBAAA,UAAE6D,MAAM,CAACC,SAAS,CAACiH,YAAY,CAACE;gBAAQ;kBAAA;kBAAA;kBAAA;gBAAA;cAAU;gBAAA;gBAAA;gBAAA;cAAA,QACpH,eACP;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACN;gBAAA;gBAAA;gBAAA;cAAA,QAAM;YAAA;cAAA;cAAA;cAAA;YAAA;UACJ;YAAA;YAAA;YAAA;UAAA,QACJ;QAAA;UAAA;UAAA;UAAA;QAAA,QACH;MAAA;IACV;MAAA;MAAA;MAAA;IAAA,QACI;EAEjB,CAAC;EAED,oBACI;IAAA,wBACK,QAAC,QAAQ;MAAC,IAAI,EAAE1I;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eACjC,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAGZ;MAAK,SAAS,EAAC,WAAW;MAAA,uBACtB;QAAK,cAAW,YAAY;QAAA,uBACxB;UAAI,SAAS,EAAC,gCAAgC;UAAA,wBAC1C;YAAI,SAAS,EAAC,iBAAiB;YAAA,6BAAE,QAAC,IAAI;cAAC,SAAS,EAAC,OAAO;cAAC,SAAS,EAAC,WAAW;cAAC,EAAE,EAAG,gBAAgB;cAAA,uBAAC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAA6B;cAAA;cAAA;cAAA;YAAA,QAAO;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK,eAC9I;YAAI,SAAS,EAAC,iBAAiB;YAAA,6BAAE,QAAC,IAAI;cAAC,SAAS,EAAC,OAAO;cAAC,SAAS,EAAC,WAAW;cAAC,EAAE,EAAG,gBAAgB;cAAC,KAAK,EAAE;gBAAEvC,IAAI,EAAEA;cAAK,CAAE;cAAA,uBAAC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAgC;cAAA;cAAA;cAAA;YAAA,QAAO;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK,eACxK;YAAI,SAAS,EAAC,iBAAiB;YAAA,6BAAE,QAAC,IAAI;cAAC,SAAS,EAAC,OAAO;cAAC,SAAS,EAAC,WAAW;cAAC,EAAE,EAAG,wBAAwB;cAAC,KAAK,EAAE;gBAAEA,IAAI,EAAEA;cAAK,CAAE;cAAA,uBAAC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAsC;cAAA;cAAA;cAAA;YAAA,QAAO;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK,eACtL;YAAI,SAAS,EAAC,iBAAiB;YAAA,6BAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAyC;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MAC9E;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAK,SAAS,EAAC,oBAAoB;MAAA,wBAC/B;QAAK,SAAS,EAAC,cAAc;QAAA,uBACzB;UAAI,SAAS,EAAC,aAAa;UAAA,gBAAG4C,gBAAgB,CAACsI,WAAW,EAAE,kCAA8BvJ,UAAU,CAACE,UAAU,IAAI,IAAI,GAAGF,UAAU,CAACE,UAAU,CAACoC,MAAM,GAAG,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA,QAClK,eACN;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC1B;UAAK,SAAS,EAAC,iBAAiB;UAAA,uBAC5B,QAAC,IAAI;YAAC,EAAE,EAAG,wBAAwB;YAAC,KAAK,EAAC,8BAA8B;YAAC,KAAK,EAAE;cAAEjE,IAAI,EAAEA;YAAK,CAAE;YAAA,uBAC3F;cAAQ,IAAI,EAAC,QAAQ;cAAC,SAAS,EAAC,iBAAiB;cAAA,wBAAC;gBAAG,SAAS,EAAC;cAAiB;gBAAA;gBAAA;gBAAA;cAAA,QAAK;YAAA;cAAA;cAAA;cAAA;YAAA;UAAU;YAAA;YAAA;YAAA;UAAA;QAC5F;UAAA;UAAA;UAAA;QAAA,QACL,eACN;UAAK,SAAS,EAAC,KAAK;UAAA,uBAChB;YAAK,SAAS,EAAC,WAAW;YAAA,uBACtB;cAAK,SAAS,EAAC,uCAAuC;cAAC,IAAI,EAAC,OAAO;cAAA,wBAC/D;gBAAI,SAAS,EAAC,iCAAiC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAiB,eAChE;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAuF,eACvF;gBAAG,SAAS,EAAC,MAAM;gBAAA,wBAAC;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAmB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAmH,eAC1J;gBAAG,SAAS,EAAC,MAAM;gBAAA,wBAAC;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAmB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAsD,eAC7F;gBAAG,SAAS,EAAC,MAAM;gBAAA,wBAAC;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAmB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAA8D,eACrG;gBAAG,SAAS,EAAC,MAAM;gBAAA,wBAAC;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAmB,wCACnC;kBAAM,SAAS,EAAC,MAAM;kBAAA,UACjByB,cAAc,GAAIA,cAAc,CAACoD,GAAG,CAAEsG,UAAU,IAAK;oBAClD,IAAIA,UAAU,CAACtJ,UAAU,CAACuJ,MAAM,IAAI,IAAI,EACpC,OAAOD,UAAU,CAACtJ,UAAU,CAACoC,MAAM;kBAC3C,CAAC,CAAC,CAAEoH,IAAI,CAAC,KAAK,CAAC,GAAG;gBAAI;kBAAA;kBAAA;kBAAA;gBAAA,QACnB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACP;YAAA;cAAA;cAAA;cAAA;YAAA;UACF;YAAA;YAAA;YAAA;UAAA;QACJ;UAAA;UAAA;UAAA;QAAA,QACJ,eACN;UAAA,UACKf,oBAAoB;QAAE;UAAA;UAAA;UAAA;QAAA,QACrB;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA,gBACP;AAEX;AAAC,GAvvBQ9K,mBAAmB;EAAA,QAMPP,WAAW,EAWiBL,OAAO,EACjBC,aAAa;AAAA;AAAA,KAlB3CW,mBAAmB;AAwvB5B,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}