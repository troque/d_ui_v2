{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Herramientas\\\\ActuacionParametrosPlantillaForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport DataTable from 'react-data-table-component';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport ParametrosMasApi from \"../../Api/Services/ParametrosMasApi\";\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport '../../Utils/Constants';\nimport { getUser } from '../../Utils/Common';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ActuacionParametrosPlantillaForm(props) {\n  _s();\n\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let id_etapa = from.idEtapa;\n  const fechaRegistro = from.fechaRegistro;\n  const fechaIngreso = from.fechaIngreso;\n  const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\n  const registradoPor = from.registradoPor;\n  const vigencia = from.vigencia;\n  const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getListaParametros, setListaParametros] = useState({\n    params: []\n  });\n  const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({\n    data: []\n  });\n  const [getListaCamposPorCamposTemporal, setListaCamposPorCamposTemporal] = useState({\n    data: []\n  }); //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\n\n  const [getAntecedentesLista, setAntecedentesLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getInteresadosLista, setInteresadosLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getParametrosCampos, setParametrosCampos] = useState();\n  const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({\n    data: []\n  });\n  const [getCamposAdicionales, setCamposAdicionales] = useState([]);\n  const [getMaxDate, setMaxDate] = useState();\n  const [value, setValue] = useState(moment().format('YYYY-MM-DD')); // Metodo encargado de cargar la informacion general del formulario\n\n  useEffect(() => {\n    // Se setea el maximo de fecha\n    setMaxDate(new Date().toISOString().split(\"T\")[0]); // Se inicializa la funcion asyncrona\n\n    async function fetchData() {\n      // Metodo encargado de cargar los parametros de la plantilla\n      cargarTablaParametrosActuaciones();\n    } // Se llama el metodo\n\n\n    fetchData();\n  }, [props.id_mas_actuacion]); // Metodo encargado de cargar los parametros generales de la plantilla de la BD\n\n  const cargarTablaParametrosActuaciones = () => {\n    // Se inicializa el array\n    var array = []; // Se inicializa la API\n\n    GenericApi.getGeneric('parametro-campos').then( // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se recorre el array para insertar los valores necesarios\n        for (let index = 0; index < datos.data.length; index++) {\n          // Se captura los datos por posicion\n          const element = datos.data[index].attributes;\n          const title = element.nombre_campo;\n          const estado = element.estado == \"1\" ? true : false;\n          const type = element.type;\n          const value = validarValueParametros(type, estado); // Se añade el dato al array general\n\n          array.push({\n            title: title,\n            value: value,\n            type: type,\n            check: estado\n          });\n        } // Se setea la respuesta en la constante\n\n\n        setListaParametrosBaseDatos(array); // Se generan la lista de parametros del documento\n\n        cargarParametros(array);\n      }\n    });\n  }; // Metodo encargado de retorna el valor por el elemento\n\n\n  const validarValueParametros = (element, estado) => {\n    // Se inicializa la variable\n    let valor; // Se valida por el elemento\n\n    if ((element == \"Sinproc\" || element == \"Número de radicado\" || element == \"Radicación\" || element == \"Radicado\") && estado) {\n      valor = radicado;\n    } else if (element == \"Usuario\" && estado) {\n      valor = registradoPor;\n    } else if ((element == \"Dependencia Origen\" || element == \"Dependencia\") && estado) {\n      valor = dependencia;\n    } else if (element == \"Vigencia\" && estado) {\n      valor = vigencia;\n    } else if (element == \"Fecha de Registro\" && estado) {\n      valor = fechaRegistro;\n    } else if (element == \"Fecha de Ingreso\" && estado) {\n      valor = fechaIngreso;\n    } else if (element == \"Generado\" && estado) {\n      valor = generadoPor;\n    } else if ((element == \"Número de auto (generado despues de aprobación)\" || element == \"Auto\") && estado) {\n      valor = \"${numero_de_auto}\";\n    } // Se retorna el valor\n\n\n    return valor;\n  };\n\n  const selectCampos = parametro => {\n    return getListaParametrosBaseDatos.map((item, i) => {\n      var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\n\n      if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this);\n      }\n    });\n  };\n\n  const handleChangeInteresados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getInteresadosLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setInteresadosLista(valorId);\n    let val = getInteresadosLista.map(p => {\n      if (p.checked == true) {\n        var primerApellido = p.attributes.primer_apellido != null ? p.attributes.primer_apellido : \"\";\n        var segundoApellido = p.attributes.segundo_apellido != null ? p.attributes.segundo_apellido : \"\";\n        var primerNombre = p.attributes.primer_nombre != null ? p.attributes.primer_nombre : \"\";\n        var segundoNombre = p.attributes.segundo_nombre != null ? p.attributes.segundo_nombre : \"\";\n        var sujetoProcesalNombre = p.attributes.sujeto_procesal_nombre != \"\" ? p.attributes.sujeto_procesal_nombre : \"\";\n        var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\n        var nombre = nombreCompleto;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  function checkeoAutomaticoInteresados(parametro, id_campo) {\n    setInteresadosLista(getInteresadosLista);\n    var primerApellido = getInteresadosLista[0].attributes.primer_apellido != null ? getInteresadosLista[0].attributes.primer_apellido : \"\";\n    var segundoApellido = getInteresadosLista[0].attributes.segundo_apellido != null ? getInteresadosLista[0].attributes.segundo_apellido : \"\";\n    var primerNombre = getInteresadosLista[0].attributes.primer_nombre != null ? getInteresadosLista[0].attributes.primer_nombre : \"\";\n    var segundoNombre = getInteresadosLista[0].attributes.segundo_nombre != null ? getInteresadosLista[0].attributes.segundo_nombre : \"\";\n    var sujetoProcesalNombre = getInteresadosLista[0].attributes.sujeto_procesal_nombre != null ? getInteresadosLista[0].attributes.sujeto_procesal_nombre : \"\";\n    var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\n    var nombre = nombreCompleto; // var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoAntecedentes(parametro, id_campo) {\n    setAntecedentesLista(getAntecedentesLista);\n    var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\n    setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\n    var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\n    setCargosInvestigadoLista(getCargosInvestigadoLista);\n    var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\n    setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\n    var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoFechaAntecedentes(parametro, id_campo) {\n    setAntecedentesLista(getAntecedentesLista);\n    var nombre = `${getAntecedentesLista[0].attributes.fecha_creado}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  const handleChangeAntecedentes = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getAntecedentesLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setAntecedentesLista(valorId);\n    let val = getAntecedentesLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.descripcion}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeFechaAntecedentes = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getAntecedentesLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setAntecedentesLista(valorId);\n    let val = getAntecedentesLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.fecha_creado}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadesInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_investigado) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setEntidadesInvestigadoLista(valorId);\n    let val = getEntidadesInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_investigado}`;\n        var nombre = `${p.attributes.nombre_investigado}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getCargosInvestigadoLista.map(item => {\n      if (value == item.attributes.cargo) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getCargosInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.cargo}`;\n        var nombre = `${p.attributes.cargo}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_entidad) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getEntidadInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_entidad}`;\n        var nombre = `${p.attributes.nombre_entidad}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const selectAntecedentes = (parametro, id_campo) => {\n    if (Array.isArray(getAntecedentesLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getAntecedentesLista && getAntecedentesLista.length == 1) {\n        checkeoAutomaticoAntecedentes(parametro, id_campo);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getAntecedentesLista[0].id,\n            name: 'check' + getAntecedentesLista[0].id,\n            value: getAntecedentesLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this), \" \", getAntecedentesLista[0].attributes.descripcion]\n        }, 'keyCheck' + getAntecedentesLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this);\n      } else if (getAntecedentesLista.length > 1) {\n        return getAntecedentesLista.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + item.id,\n              name: 'check' + item.id,\n              value: item.id,\n              onChange: e => handleChangeAntecedentes(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 33\n            }, this), \" \", item.attributes.descripcion]\n          }, 'keyCheck' + item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 29\n          }, this) // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectFechaAntecedentes = (parametro, id_campo) => {\n    if (Array.isArray(getAntecedentesLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getAntecedentesLista && getAntecedentesLista.length == 1) {\n        checkeoAutomaticoFechaAntecedentes(parametro, id_campo);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getAntecedentesLista[0].attributes.fecha_creado,\n            name: 'check' + getAntecedentesLista[0].attributes.fecha_creado,\n            value: getAntecedentesLista[0].attributes.fecha_creado,\n            onChange: e => handleChangeFechaAntecedentes(0, parametro, id_campo),\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 25\n          }, this), \" \", getAntecedentesLista[0].attributes.fecha_creado]\n        }, 'keyCheck' + getAntecedentesLista[0].attributes.fecha_creado, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 21\n        }, this);\n      } else if (getAntecedentesLista.length > 1) {\n        return getAntecedentesLista.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + item.fecha_creado,\n              name: 'check' + item.fecha_creado,\n              value: item.fecha_creado //onChange={(e) => handleChangeFechaAntecedentes(e, parametro, id_campo)}\n              ,\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 33\n            }, this), \" \", item.attributes.fecha_creado]\n          }, 'keyCheck' + item.fecha_creado, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 29\n          }, this) // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectInteresados = (parametro, id_campo) => {\n    if (Array.isArray(getInteresadosLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getInteresadosLista && getInteresadosLista.length == 1) {\n        checkeoAutomaticoInteresados(parametro, id_campo);\n        var primerApellido = getInteresadosLista[0].attributes.primer_apellido != \"\" ? getInteresadosLista[0].attributes.primer_apellido : \"\";\n        var segundoApellido = getInteresadosLista[0].attributes.segundo_apellido != \"\" ? getInteresadosLista[0].attributes.segundo_apellido : \"\";\n        var primerNombre = getInteresadosLista[0].attributes.primer_nombre != \"\" ? getInteresadosLista[0].attributes.primer_nombre : \"\";\n        var segundoNombre = getInteresadosLista[0].attributes.segundo_nombre != \"\" ? getInteresadosLista[0].attributes.segundo_nombre : \"\";\n        var sujetoProcesalNombre = getInteresadosLista[0].attributes.sujeto_procesal_nombre != \"\" ? getInteresadosLista[0].attributes.sujeto_procesal_nombre : \"\";\n        var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\n        var nombre = nombreCompleto; // var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getInteresadosLista[0].id,\n            name: 'check' + getInteresadosLista[0].id,\n            value: getInteresadosLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getInteresadosLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 21\n        }, this);\n      } else if (getInteresadosLista.length > 1) {\n        return getInteresadosLista.map((item, i) => {\n          var primerApellido = item.attributes.primer_apellido != null ? item.attributes.primer_apellido : \"\";\n          var segundoApellido = item.attributes.segundo_apellido != null ? item.attributes.segundo_apellido : \"\";\n          var primerNombre = item.attributes.primer_nombre != null ? item.attributes.primer_nombre : \"\";\n          var segundoNombre = item.attributes.segundo_nombre != null ? item.attributes.segundo_nombre : \"\";\n          var sujetoProcesalNombre = item.attributes.sujeto_procesal_nombre != \"\" ? item.attributes.sujeto_procesal_nombre : \"\";\n          var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\n          var nombre = nombreCompleto; // var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + nombre,\n              name: 'check' + nombre,\n              value: item.id,\n              onChange: e => handleChangeInteresados(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 33\n            }, this), \" \", nombre]\n          }, 'keyCheck' + nombre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 29\n          }, this) // <option key={nombre} value={nombre}>{nombre}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadesInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\n        let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getEntidadesInvestigadoLista[0].id,\n            name: 'check' + getEntidadesInvestigadoLista[0].id,\n            value: getEntidadesInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getEntidadesInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }, this);\n      } else if (getEntidadesInvestigadoLista.length > 1) {\n        return getEntidadesInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.nombre_investigado}`;\n          var nombre = `${item.attributes.nombre_investigado}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 33\n            }, this) //<option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const selectCargosInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getCargosInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getCargosInvestigadoLista[0].id,\n            name: 'check' + getCargosInvestigadoLista[0].id,\n            value: getCargosInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getCargosInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 21\n        }, this);\n      } else if (getCargosInvestigadoLista.length > 1) {\n        return getCargosInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.cargo}`;\n          var nombre = `${item.attributes.cargo}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeCargosInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 33\n            }, this) // <option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const selectEntidadesInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getEntidadInvestigadoLista[0].id,\n            name: 'check' + getEntidadInvestigadoLista[0].id,\n            value: getEntidadInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getEntidadInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 21\n        }, this);\n      } else if (getEntidadInvestigadoLista.length > 1) {\n        return getEntidadInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.nombre_entidad}`;\n          var nombre = `${item.attributes.nombre_entidad}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeEntidadesInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 33\n            }, this) //<option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const cargarValoresDeParametro = parametro => {\n    const arrayOtherElements = [\"Dependencia Origen\", \"Delegada\", \"Radicado\", \"Radicación\", \"Auto\"];\n    var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\n      return item.parametro == parametro;\n    });\n    var tempCampo = campoParametro[0];\n\n    if (tempCampo != undefined && getListaParametrosBaseDatos[tempCampo.id_campo] != undefined) {\n      var itemCampo = getListaParametrosBaseDatos[tempCampo.id_campo]; // Tiene un valor por defecto\n\n      if (itemCampo.value != null) {\n        var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\n          if (item.parametro == parametro) {\n            item.id_campo = tempCampo.id_campo;\n            var itemCampoId = getListaParametrosBaseDatos[tempCampo.id_campo];\n            item.valor = itemCampoId.value != null ? itemCampoId.value : \"\";\n            item.valorTemporal = itemCampoId.value != null ? itemCampoId.value : \"\";\n          }\n\n          return item;\n        });\n        var validarElemento = document.getElementById('id' + itemCampo.title);\n\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        } // setListaCamposPorParametro({ data: newParams });\n\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: itemCampo.value\n        }, void 0, false);\n      } else if (itemCampo.title == \"Fecha Hechos\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectFechaAntecedentes(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Antecedentes\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectAntecedentes(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Interesados\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (getInteresadosLista[0] && getInteresadosLista.length == 1 && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectInteresados(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Investigado\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (getEntidadesInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1 && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectInvestigados(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Cargo\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (getCargosInvestigadoLista[0] && getCargosInvestigadoLista.length == 1 && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectCargosInvestigados(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Entidad\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (getEntidadInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1 && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectEntidadesInvestigados(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Seleccione un campo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 21\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const selectChangeListaCampos = (parametro, id_campo, value) => {\n    var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n      if (item.parametro == parametro) {\n        item.id_campo = id_campo;\n        var itemCampo = getListaParametrosBaseDatos[id_campo];\n        item.valor = itemCampo.value != null ? itemCampo.value : value;\n        item.valorTemporal = itemCampo.value != null ? itemCampo.value : value;\n      }\n\n      return item;\n    }); //setListaCamposPorParametroDefinitiva({ data: newParams });\n  }; // Metodo encargado de generar las columnas de los parametros de la plantilla\n\n\n  const columnsParametros = [{\n    name: 'Parametros de la plantilla',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: parametro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 32\n    }, this),\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Campo',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      id: `id${parametro}`,\n      name: `name${parametro}`,\n      onChange: e => selectChangeListaCampos(parametro, e.target.value, \"\"),\n      disabled: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Por favor seleccione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 21\n      }, this), selectCampos(parametro)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 17\n    }, this),\n    sortable: false,\n    width: \"25%\"\n  }, {\n    name: 'Valor seleccionado',\n    width: \"50%\",\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: cargarValoresDeParametro(parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 17\n    }, this)\n  } // {\n  //     name: 'Activar/Inactivar',\n  //     width: \"10%\",\n  //     cell: parametro =>\n  //         <div className='row'>\n  //             <div className='col'>\n  //                 {cargarCheckParametro(parametro)}\n  //             </div>\n  //         </div>\n  // }\n  ]; // Metodo encargado de generar las columnas de los parametros de la plantilla\n\n  const columnsCampos = [{\n    name: 'Campo',\n    cell: campo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: campo.nombreCampo ? campo.nombreCampo : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 17\n    }, this),\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Tipo',\n    cell: campo => /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      id: `idCampo${campo.nombreCampo}`,\n      name: `name${campo.nombreCampo}`,\n      disabled: true,\n      children: /*#__PURE__*/_jsxDEV(\"option\", {\n        value: validarTipoCampo(campo.tipoCampo),\n        selected: true,\n        children: [\" \", validarTipoCampo(campo.tipoCampo), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 17\n    }, this),\n    sortable: false,\n    width: \"25%\"\n  }, {\n    name: 'Items',\n    width: \"50%\",\n    cell: campo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: cargarValoresCampos(campo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 17\n    }, this)\n  }]; // Metodo encargado de setear el valor al mismo input\n\n  const changeTextInput = (e, arrayDatos) => {\n    // Se setea temporalmente\n    let elementoHtml = document.getElementById(e.target.name);\n    let nombreElemento = e.target.name; // Se captura el valor escrito\n\n    let valor = e.target.value; // El elemento existe\n\n    if (elementoHtml) {\n      // Se setea el nuevo valor\n      elementoHtml.title = valor; // Se asigna el item dentro del array para enviarlo\n\n      getCamposAdicionales.forEach(e => {\n        // Se captura la key\n        let key = e.nombreCampo; // Se valida que la key sea igual al elemento modificado\n\n        if (key == nombreElemento) {\n          // Se añade el item\n          e.items = [valor];\n        }\n      });\n    } // Se setea en el from cada que vez que finaliza la acción\n\n\n    from.getCamposAdicionales = getCamposAdicionales;\n  }; // Metodo encargado de cambiar el valor de la fecha\n\n\n  const changeDateInput = e => {\n    // Se formatea\n    const newDate = moment(e.target.value).format('DD/MM/YYYY'); // Se captura el nombre del elemento\n\n    let nombreElemento = e.target.name; // Se setea los valores\n\n    setValue(newDate); // Se asigna el item dentro del array para enviarlo\n\n    getCamposAdicionales.forEach(e => {\n      // Se captura la key\n      let key = e.nombreCampo; // Se valida que la key sea igual al elemento modificado\n\n      if (key == nombreElemento) {\n        // Se añade el item\n        e.items = [newDate];\n      }\n    }); // Se setea en el from cada que vez que finaliza la acción\n\n    from.getCamposAdicionales = getCamposAdicionales;\n  }; // Metodo encargado de cambiar el valor del input\n\n\n  const changeCheckInput = (e, value) => {\n    // Se captura el elemento html\n    let nombreElemento = value; // Se captura el elemento del check true o false\n\n    let checkeado = e.target.checked; // Se captura el valor chequeado html\n\n    let valorCheck = e.target.value; // Se valida cuando esta chequeado\n\n    if (checkeado == true) {\n      // Se asigna el item dentro del array para enviarlo\n      getCamposAdicionales.forEach(e => {\n        // Se captura la key\n        let key = e.nombreCampo; // Se valida que la key sea igual al elemento modificado\n\n        if (key == nombreElemento) {\n          // Se valida la primera vez\n          if (!e.itemsSeleccionado) {\n            // Se añade el item\n            e.itemsSeleccionado = [valorCheck];\n          } else {\n            // Se añade el item al array\n            e.itemsSeleccionado.push(valorCheck);\n          }\n        }\n      });\n    } else if (checkeado == false) {\n      // Se asigna el item dentro del array para quitarlo\n      getCamposAdicionales.forEach(e => {\n        // Se captura la key\n        let key = e.nombreCampo;\n        let items = e.itemsSeleccionado ? e.itemsSeleccionado : []; // Continua el proceso para quitarlo del array\n\n        if (items.length > 0 && key == nombreElemento) {\n          // Se busca la posicion del elemento\n          var index = items.indexOf(valorCheck); // Se quita el elemento\n\n          items.splice(index, 1);\n        }\n      });\n    } // Se setea en el from cada que vez que finaliza la acción\n\n\n    from.getCamposAdicionales = getCamposAdicionales;\n  }; // Metodo encargado de cargar los valores de los campos\n\n\n  const cargarValoresCampos = campo => {\n    // Se inicializa la variable de campos\n    const campoParametro = campo; // Se capturan la informacion del campo\n\n    const tipoCampo = campoParametro.tipoCampo;\n    const nombreCampo = campoParametro.nombreCampo;\n    const itemCampo = tipoCampo == 2 ? campoParametro.items : \"\"; // Se valida cuando el tipo campo es un listado\n\n    if (tipoCampo == 2) {\n      // Se retorna el mapeo\n      return (// Se recorre el elemento\n        itemCampo.map((item, i) => {\n          // Se retorna el HTML\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 mt-1 ml-2 mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: item,\n              name: item,\n              value: item,\n              onChange: e => changeCheckInput(e, nombreCampo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 29\n            }, this), \" \", item]\n          }, item, true, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 25\n          }, this);\n        })\n      );\n    } else if (tipoCampo == 1) {\n      // Se retorna el html del tipo fecha \n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-control custom-switch custom-control-lg mt-2 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"form-control\",\n          id: nombreCampo,\n          name: nombreCampo,\n          onChange: changeDateInput,\n          max: getMaxDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 17\n      }, this);\n    } else if (tipoCampo == 0) {\n      // Se retorna el html del tipo texto\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-control custom-switch custom-control-lg mt-2 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: nombreCampo,\n          name: nombreCampo,\n          placeholder: nombreCampo,\n          onChange: e => changeTextInput(e, campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1023,\n        columnNumber: 17\n      }, this);\n    }\n  }; // Metodo encargado de retorna los items separados\n\n\n  const validarItems = item => {\n    // Se valida que exista y tenga un elemento\n    if (item && item.length == 0) {\n      // Se retorna el primer elemento\n      return item;\n    } else if (item && item.length > 0) {\n      // Se retorna por comas\n      return item.join(\", \");\n    }\n  }; // Metodo encargado de validar el tipo del campo\n\n\n  const validarTipoCampo = tipo => {\n    // Se inicializa la variable\n    let nombreRetornado; // Se valida el tipo\n\n    if (tipo == 0) {\n      // Se redeclara la variable\n      nombreRetornado = \"Texto\";\n    } else if (tipo == 1) {\n      // Se redeclara la variable\n      nombreRetornado = \"Fecha\";\n    } else if (tipo == 2) {\n      // Se redeclara la variable\n      nombreRetornado = \"Lista\";\n    } // Se retorna el valor\n\n\n    return nombreRetornado;\n  }; // Metodo encargado de cargar los parametros de la base de datos\n\n\n  const cargarParametros = listaParametrosBaseDatos => {\n    // Se setean los valores en null y vacios para que no salga el limitante de las hooks\n    setListaParametros(null);\n    setAntecedentesLista({\n      data: []\n    });\n    setInteresadosLista({\n      data: []\n    });\n    setEntidadesInvestigadoLista({\n      data: []\n    });\n    setCargosInvestigadoLista({\n      data: []\n    });\n    setEntidadInvestigadoLista({\n      data: []\n    });\n    setListaCamposPorParametroTemporal({\n      data: []\n    });\n    setListaParametros({\n      data: []\n    }); // Se inicializa el array\n\n    const data = {\n      \"data\": {\n        \"type\": 'mas_actuaciones',\n        \"attributes\": {\n          \"id\": props.id_mas_actuacion\n        }\n      }\n    }; // Se inicializa la API\n\n    GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + props.id_mas_actuacion, data).then( // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setean los valores a la lista general de parametros\n        setListaParametros(datos); // Se recorre los parametros generales de la plantilla\n\n        var parametrosCampos = datos.params.map((item, i) => {\n          // Se busca el parametro con el de la base de datos\n          var indexCampo = listaParametrosBaseDatos.findIndex( // Se inicializa la variable\n          x => // Se valida que el parametro de la base de datos sea igual al parametro de la plantilla\n          x.title == item); // Se valida que haya encontrado un valor para asignarle el id\n\n          if (indexCampo >= 0) {\n            // Se retorna el array\n            return {\n              parametro: item,\n              id_campo: indexCampo,\n              valor: \"\"\n            };\n          } else {\n            // Se retorna el array\n            return {\n              parametro: item,\n              id_campo: \"\",\n              valor: \"\"\n            };\n          }\n        }); // Parametros de los campos e items\n\n        var parametrosItems = datos.campos && datos.campos.map((item, i) => {\n          // Se captura el tipo de campo\n          let tipoCampo = item.tipoCampo; // Se valida cuando es tipo lista\n\n          if (tipoCampo == 2) {\n            // Se setea la lista\n            return {\n              item: true,\n              parametro: item.nombreCampo,\n              id_campo: item.nombreCampo + i,\n              valor: item.items\n            };\n          } else {\n            // Se setea la lista\n            return {\n              item: true,\n              parametro: item.nombreCampo,\n              id_campo: item.nombreCampo + i,\n              valor: \"\"\n            };\n          }\n        }); // Se setean los valores de las listas\n\n        setListaCamposPorParametroTemporal({\n          data: parametrosCampos\n        });\n        setListaCamposPorCamposTemporal({\n          data: parametrosItems\n        }); // Se cargan los antecedentes, interesados y entidades del investigado\n\n        cargarEntidadesInvestigado();\n        cargarAntecedentes();\n        cargarInteresados();\n      }\n    }); // Se inicializa la API\n\n    GenericApi.getGeneric('mas_actuaciones/' + props.id_mas_actuacion).then( // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se valida que hayan campos adicionales\n        if (datos.data.attributes.campos.length > 0) {\n          // Se setean los valores a la lista\n          setCamposAdicionales(datos.data.attributes.campos);\n        }\n      }\n    }); // Se quita el cargando\n\n    window.showSpinner(false);\n  };\n\n  const cargarAntecedentes = () => {\n    const data = {\n      \"data\": {\n        \"type\": 'antecedente',\n        \"attributes\": {\n          \"antecedentes\": \"antecedentes\",\n          \"descripcion\": \"descripcion\",\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"fecha_registro\": Date.now(),\n          \"id_dependencia\": -1,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setAntecedentesLista(parametrosCampos);\n      }\n    });\n  };\n\n  const cargarInteresados = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"interesado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"tipo_documento\": \"1\",\n          \"numero_documento\": \"1\",\n          \"primer_nombre\": \"1\",\n          \"segundo_nombre\": \"1\",\n          \"primer_apellido\": \"1\",\n          \"segundo_apellido\": \"1\",\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setInteresadosLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Datos del interesado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const cargarEntidadesInvestigado = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"entidad_investigado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": \"1\",\n          \"requiere_registro\": true,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          var nombreInvestigado = item.attributes.nombre_investigado;\n          var cargoInvestigado = item.attributes.cargo;\n          var entidadInvestigado = item.attributes.nombre_entidad;\n\n          if (nombreInvestigado == null) {\n            item.attributes.nombre_investigado = \"NO_APLICA\";\n          }\n\n          if (cargoInvestigado == null) {\n            item.attributes.cargo = \"NO_APLICA\";\n          }\n\n          if (entidadInvestigado == null) {\n            item.attributes.nombre_entidad = \"NO_APLICA\";\n          }\n\n          item.checked = false;\n          return item;\n        });\n        setEntidadesInvestigadoLista(parametrosCampos);\n        setCargosInvestigadoLista(parametrosCampos);\n        setEntidadInvestigadoLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Entidades del investigado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const descargarArchivo = () => {\n    try {\n      window.showSpinner(true);\n      var params = getListaCamposPorParametroTemporal.data.map(item => {\n        return {\n          \"param\": item.parametro,\n          \"value\": item.valor\n        };\n      });\n      const data = {\n        \"data\": {\n          \"type\": \"mas_actuaciones\",\n          \"attributes\": {\n            \"params\": params\n          }\n        }\n      };\n      GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + props.id_mas_actuacion, data).then(datos => {\n        if (!datos.error) {\n          downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"docx\");\n          window.showSpinner(false);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: \",\n            message: datos.error.toString(),\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function downloadBase64File(contentType, base64Data, fileName, extension) {\n    const linkSource = `data:${contentType};base64,${base64Data}`;\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = linkSource;\n    downloadLink.download = fileName;\n    downloadLink.click();\n  }\n\n  const cargarCheckParametro = parametro => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        id: 'check' + parametro + '1',\n        name: 'check' + parametro + '1',\n        value: parametro + '1',\n        onChange: e => handleChangeStatus(e, parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1351,\n        columnNumber: 17\n      }, this)\n    }, 'keyCheck' + parametro + '1', false, {\n      fileName: _jsxFileName,\n      lineNumber: 1350,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleChangeStatus = (e, parametro) => {\n    // Se captura el elemento enviado por parametros\n    var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro); // Se valida si esta checkeado\n\n    if (e.target.checked) {\n      // Se devuelve el valor a vacio\n      var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n        // Se valida que el item recorrido sea igual al parametro checkeado\n        if (item.parametro == parametro) {\n          // Se captura el id del campo\n          item.id_campo = itemFilter[0].id_campo;\n          var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo]; // Se redefine el valor del item a vacio\n\n          item.valor = \"\";\n          item.valorTemporal = itemCampo.value != null ? itemCampo.value : itemFilter[0].value;\n        } // Se retorna el item\n\n\n        return item;\n      });\n    } else {\n      // Se devuelve el valor a vacio\n      var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n        // Se valida que el item recorrido sea igual al parametro checkeado\n        if (item.parametro == parametro) {\n          // Se captura el id del campo\n          item.id_campo = itemFilter[0].id_campo;\n          var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo]; // Se redefine el valor del item a su valor original\n\n          item.valor = item.valorTemporal;\n          item.valorTemporal = itemCampo.value != null ? itemCampo.value : itemFilter[0].value;\n        } // Se retorna el item\n\n\n        return item;\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1415,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1416,\n      columnNumber: 13\n    }, this), getListaParametros != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Parametros de la plantilla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1420,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1419,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-2 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n          columns: columnsParametros,\n          data: getListaParametros.params,\n          noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n          striped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1423,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1422,\n        columnNumber: 21\n      }, this), getCamposAdicionales && getCamposAdicionales.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          style: {\n            marginTop: '50px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Campos adicionales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1434,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1433,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 mt-2 mb-2\",\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n            columns: columnsCampos,\n            data: getCamposAdicionales,\n            noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n            striped: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1437,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1436,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-4 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mr-2\",\n          htmlFor: \"documento_ruta\",\n          children: \"Descargar documento pre-diligenciado con los valores seleccionados \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1448,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          title: \"Descargar documento diligenciado\",\n          onClick: () => descargarArchivo(),\n          className: \"btn btn-rounded btn-primary\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-file-word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1449,\n            columnNumber: 164\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1449,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1447,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Cargando parametros de la plantilla...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1454,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1453,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ActuacionParametrosPlantillaForm, \"/kl9RJ1DiCjHJT6ORGxxASFmPFQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = ActuacionParametrosPlantillaForm;\nexport default ActuacionParametrosPlantillaForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActuacionParametrosPlantillaForm\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","DataTable","GenericApi","ParametrosMasApi","Spinner","ModalGen","getUser","DatePicker","registerLocale","moment","ActuacionParametrosPlantillaForm","props","location","from","state","radicado","procesoDisciplinarioId","id_etapa","idEtapa","fechaRegistro","fechaIngreso","dependencia","nombre_dependencia","nombre","registradoPor","vigencia","generadoPor","nombre_completo","modalState","setModalState","title","message","show","getListaParametros","setListaParametros","params","getListaCamposPorParametroTemporal","setListaCamposPorParametroTemporal","data","getListaCamposPorCamposTemporal","setListaCamposPorCamposTemporal","getAntecedentesLista","setAntecedentesLista","links","meta","getInteresadosLista","setInteresadosLista","getEntidadesInvestigadoLista","setEntidadesInvestigadoLista","getCargosInvestigadoLista","setCargosInvestigadoLista","getEntidadInvestigadoLista","setEntidadInvestigadoLista","getParametrosCampos","setParametrosCampos","getListaParametrosBaseDatos","setListaParametrosBaseDatos","getCamposAdicionales","setCamposAdicionales","getMaxDate","setMaxDate","value","setValue","format","Date","toISOString","split","fetchData","cargarTablaParametrosActuaciones","id_mas_actuacion","array","getGeneric","then","datos","error","index","length","element","attributes","nombre_campo","estado","type","validarValueParametros","push","check","cargarParametros","valor","selectCampos","parametro","map","item","i","itemFilter","filter","x","undefined","id_campo","handleChangeInteresados","e","checked","target","valorId","id","val","p","primerApellido","primer_apellido","segundoApellido","segundo_apellido","primerNombre","primer_nombre","segundoNombre","segundo_nombre","sujetoProcesalNombre","sujeto_procesal_nombre","nombreCompleto","selectChangeListaCampos","toString","checkeoAutomaticoInteresados","checkeoAutomaticoAntecedentes","descripcion","checkeoAutomaticoInvestigadosNombre","nombre_investigado","checkeoAutomaticoInvestigadosCargo","cargo","checkeoAutomaticoInvestigadosEntidad","nombre_entidad","checkeoAutomaticoFechaAntecedentes","fecha_creado","handleChangeAntecedentes","handleChangeFechaAntecedentes","handleChangeInvestigados","handleChangeCargosInvestigados","handleChangeEntidadesInvestigados","selectAntecedentes","Array","isArray","selectFechaAntecedentes","selectInteresados","selectInvestigados","selectCargosInvestigados","selectEntidadesInvestigados","cargarValoresDeParametro","arrayOtherElements","campoParametro","tempCampo","itemCampo","newParamsItem","itemCampoId","valorTemporal","validarElemento","document","getElementById","hasAttribute","setAttribute","newParams","columnsParametros","name","cell","sortable","width","columnsCampos","campo","nombreCampo","validarTipoCampo","tipoCampo","cargarValoresCampos","changeTextInput","arrayDatos","elementoHtml","nombreElemento","forEach","key","items","changeDateInput","newDate","changeCheckInput","checkeado","valorCheck","itemsSeleccionado","indexOf","splice","validarItems","join","tipo","nombreRetornado","listaParametrosBaseDatos","getByDataGeneric","parametrosCampos","indexCampo","findIndex","parametrosItems","campos","cargarEntidadesInvestigado","cargarAntecedentes","cargarInteresados","window","showSpinner","now","redirect","nombreInvestigado","cargoInvestigado","entidadInvestigado","descargarArchivo","downloadBase64File","content_type","base_64","file_name","alert","global","Constants","TIPO_ALERTA","ERROR","console","contentType","base64Data","fileName","extension","linkSource","downloadLink","createElement","href","download","click","cargarCheckParametro","handleChangeStatus","DATA_TABLE","SIN_DATOS_TABLE","marginTop"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Herramientas/ActuacionParametrosPlantillaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport ParametrosMasApi from \"../../Api/Services/ParametrosMasApi\";\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport '../../Utils/Constants';\r\nimport { getUser } from '../../Utils/Common';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport moment from 'moment';\r\n\r\nfunction ActuacionParametrosPlantillaForm(props) {\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let id_etapa = from.idEtapa;\r\n    const fechaRegistro = from.fechaRegistro;\r\n    const fechaIngreso = from.fechaIngreso;\r\n    const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\r\n    const registradoPor = from.registradoPor;\r\n    const vigencia = from.vigencia;\r\n    const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaParametros, setListaParametros] = useState({ params: [] });\r\n    const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({ data: [] });\r\n    const [getListaCamposPorCamposTemporal, setListaCamposPorCamposTemporal] = useState({ data: [] });\r\n    //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getInteresadosLista, setInteresadosLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getParametrosCampos, setParametrosCampos] = useState();\r\n    const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({ data: [] });\r\n\r\n    const [getCamposAdicionales, setCamposAdicionales] = useState([]);\r\n    const [getMaxDate, setMaxDate] = useState();\r\n    const [value, setValue] = useState(moment().format('YYYY-MM-DD'));\r\n\r\n    // Metodo encargado de cargar la informacion general del formulario\r\n    useEffect(() => {\r\n\r\n        // Se setea el maximo de fecha\r\n        setMaxDate(new Date().toISOString().split(\"T\")[0]);\r\n\r\n        // Se inicializa la funcion asyncrona\r\n        async function fetchData() {\r\n\r\n            // Metodo encargado de cargar los parametros de la plantilla\r\n            cargarTablaParametrosActuaciones();\r\n        }\r\n\r\n        // Se llama el metodo\r\n        fetchData();\r\n    }, [props.id_mas_actuacion]);\r\n\r\n    // Metodo encargado de cargar los parametros generales de la plantilla de la BD\r\n    const cargarTablaParametrosActuaciones = () => {\r\n\r\n        // Se inicializa el array\r\n        var array = [];\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('parametro-campos').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se recorre el array para insertar los valores necesarios\r\n                    for (let index = 0; index < datos.data.length; index++) {\r\n\r\n                        // Se captura los datos por posicion\r\n                        const element = datos.data[index].attributes;\r\n                        const title = element.nombre_campo;\r\n                        const estado = element.estado == \"1\" ? true : false;\r\n                        const type = element.type;\r\n                        const value = validarValueParametros(type, estado);\r\n\r\n                        // Se añade el dato al array general\r\n                        array.push({ title: title, value: value, type: type, check: estado });\r\n                    }\r\n\r\n                    // Se setea la respuesta en la constante\r\n                    setListaParametrosBaseDatos(array);\r\n\r\n                    // Se generan la lista de parametros del documento\r\n                    cargarParametros(array);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de retorna el valor por el elemento\r\n    const validarValueParametros = (element, estado) => {\r\n\r\n        // Se inicializa la variable\r\n        let valor;\r\n\r\n        // Se valida por el elemento\r\n        if ((element == \"Sinproc\" || element == \"Número de radicado\"\r\n            || element == \"Radicación\" || element == \"Radicado\") && estado) {\r\n            valor = radicado;\r\n        } else if (element == \"Usuario\" && estado) {\r\n            valor = registradoPor;\r\n        } else if ((element == \"Dependencia Origen\" || element == \"Dependencia\") && estado) {\r\n            valor = dependencia;\r\n        } else if (element == \"Vigencia\" && estado) {\r\n            valor = vigencia;\r\n        } else if (element == \"Fecha de Registro\" && estado) {\r\n            valor = fechaRegistro;\r\n        } else if (element == \"Fecha de Ingreso\" && estado) {\r\n            valor = fechaIngreso;\r\n        } else if (element == \"Generado\" && estado) {\r\n            valor = generadoPor;\r\n        } else if ((element == \"Número de auto (generado despues de aprobación)\" || element == \"Auto\") && estado) {\r\n            valor = \"${numero_de_auto}\";\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return valor;\r\n    }\r\n\r\n    const selectCampos = (parametro) => {\r\n        return (\r\n            getListaParametrosBaseDatos.map((item, i) => {\r\n\r\n                var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n                if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\r\n                    return (\r\n                        <option selected key={i} value={i}>{item.title}</option>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <option key={i} value={i}>{item.title}</option>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleChangeInteresados = (e, parametro, id_campo) => {\r\n\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getInteresadosLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setInteresadosLista(valorId);\r\n        let val = getInteresadosLista.map((p) => {\r\n            if (p.checked == true) {\r\n\r\n                var primerApellido = p.attributes.primer_apellido != null ? p.attributes.primer_apellido : \"\";\r\n                var segundoApellido = p.attributes.segundo_apellido != null ? p.attributes.segundo_apellido : \"\";\r\n                var primerNombre = p.attributes.primer_nombre != null ? p.attributes.primer_nombre : \"\";\r\n                var segundoNombre = p.attributes.segundo_nombre != null ? p.attributes.segundo_nombre : \"\";\r\n                var sujetoProcesalNombre = p.attributes.sujeto_procesal_nombre != \"\" ? p.attributes.sujeto_procesal_nombre : \"\";\r\n                var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n                var nombre = nombreCompleto;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n    }\r\n\r\n    function checkeoAutomaticoInteresados(parametro, id_campo) {\r\n        setInteresadosLista(getInteresadosLista);\r\n\r\n        var primerApellido = getInteresadosLista[0].attributes.primer_apellido != null ? getInteresadosLista[0].attributes.primer_apellido : \"\";\r\n        var segundoApellido = getInteresadosLista[0].attributes.segundo_apellido != null ? getInteresadosLista[0].attributes.segundo_apellido : \"\";\r\n        var primerNombre = getInteresadosLista[0].attributes.primer_nombre != null ? getInteresadosLista[0].attributes.primer_nombre : \"\";\r\n        var segundoNombre = getInteresadosLista[0].attributes.segundo_nombre != null ? getInteresadosLista[0].attributes.segundo_nombre : \"\";\r\n        var sujetoProcesalNombre = getInteresadosLista[0].attributes.sujeto_procesal_nombre != null ? getInteresadosLista[0].attributes.sujeto_procesal_nombre : \"\";\r\n        var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n        var nombre = nombreCompleto;\r\n\r\n        // var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\r\n        setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\r\n        var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\r\n        setCargosInvestigadoLista(getCargosInvestigadoLista);\r\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\r\n        setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\r\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoFechaAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.fecha_creado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    const handleChangeAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.descripcion}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeFechaAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.fecha_creado}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadesInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_investigado) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setEntidadesInvestigadoLista(valorId);\r\n        let val = getEntidadesInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_investigado}`;\r\n                var nombre = `${p.attributes.nombre_investigado}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getCargosInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.cargo) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getCargosInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.cargo}`;\r\n                var nombre = `${p.attributes.cargo}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_entidad) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getEntidadInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_entidad}`;\r\n                var nombre = `${p.attributes.nombre_entidad}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const selectAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].id}\r\n                            name={'check' + getAntecedentesLista[0].id}\r\n                            value={getAntecedentesLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.descripcion}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.id}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.id}\r\n                                    name={'check' + item.id}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.descripcion}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectFechaAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoFechaAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].attributes.fecha_creado} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].attributes.fecha_creado}\r\n                            name={'check' + getAntecedentesLista[0].attributes.fecha_creado}\r\n                            value={getAntecedentesLista[0].attributes.fecha_creado}\r\n                            onChange={(e) => handleChangeFechaAntecedentes(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.fecha_creado}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.fecha_creado}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.fecha_creado}\r\n                                    name={'check' + item.fecha_creado}\r\n                                    value={item.fecha_creado}\r\n                                    //onChange={(e) => handleChangeFechaAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.fecha_creado}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInteresados = (parametro, id_campo) => {\r\n        if (Array.isArray(getInteresadosLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getInteresadosLista && getInteresadosLista.length == 1) {\r\n                checkeoAutomaticoInteresados(parametro, id_campo);\r\n\r\n                var primerApellido = getInteresadosLista[0].attributes.primer_apellido != \"\" ? getInteresadosLista[0].attributes.primer_apellido : \"\";\r\n                var segundoApellido = getInteresadosLista[0].attributes.segundo_apellido != \"\" ? getInteresadosLista[0].attributes.segundo_apellido : \"\";\r\n                var primerNombre = getInteresadosLista[0].attributes.primer_nombre != \"\" ? getInteresadosLista[0].attributes.primer_nombre : \"\";\r\n                var segundoNombre = getInteresadosLista[0].attributes.segundo_nombre != \"\" ? getInteresadosLista[0].attributes.segundo_nombre : \"\";\r\n                var sujetoProcesalNombre = getInteresadosLista[0].attributes.sujeto_procesal_nombre != \"\" ? getInteresadosLista[0].attributes.sujeto_procesal_nombre : \"\";\r\n                var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n                var nombre = nombreCompleto;\r\n\r\n                // var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getInteresadosLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getInteresadosLista[0].id}\r\n                            name={'check' + getInteresadosLista[0].id}\r\n                            value={getInteresadosLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getInteresadosLista.length > 1) {\r\n                return (\r\n                    getInteresadosLista.map((item, i) => {\r\n\r\n                        var primerApellido = item.attributes.primer_apellido != null ? item.attributes.primer_apellido : \"\";\r\n                        var segundoApellido = item.attributes.segundo_apellido != null ? item.attributes.segundo_apellido : \"\";\r\n                        var primerNombre = item.attributes.primer_nombre != null ? item.attributes.primer_nombre : \"\";\r\n                        var segundoNombre = item.attributes.segundo_nombre != null ? item.attributes.segundo_nombre : \"\";\r\n                        var sujetoProcesalNombre = item.attributes.sujeto_procesal_nombre != \"\" ? item.attributes.sujeto_procesal_nombre : \"\";\r\n                        var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n                        var nombre = nombreCompleto;\r\n\r\n                        // var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + nombre}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + nombre}\r\n                                    name={'check' + nombre}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeInteresados(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {nombre}\r\n                            </div>\r\n                            // <option key={nombre} value={nombre}>{nombre}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadesInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\r\n                let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadesInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            value={getEntidadesInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadesInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadesInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_investigado}`;\r\n                        var nombre = `${item.attributes.nombre_investigado}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectCargosInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getCargosInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\r\n                var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getCargosInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getCargosInvestigadoLista[0].id}\r\n                            name={'check' + getCargosInvestigadoLista[0].id}\r\n                            value={getCargosInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getCargosInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getCargosInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.cargo}`;\r\n                        var nombre = `${item.attributes.cargo}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeCargosInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                // <option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectEntidadesInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\r\n                var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadInvestigadoLista[0].id}\r\n                            value={getEntidadInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_entidad}`;\r\n                        var nombre = `${item.attributes.nombre_entidad}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeEntidadesInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const cargarValoresDeParametro = (parametro) => {\r\n\r\n        const arrayOtherElements = [\r\n            \"Dependencia Origen\",\r\n            \"Delegada\",\r\n            \"Radicado\",\r\n            \"Radicación\",\r\n            \"Auto\"\r\n        ];\r\n\r\n        var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\r\n            return item.parametro == parametro;\r\n        });\r\n\r\n        var tempCampo = campoParametro[0];\r\n\r\n        if (tempCampo != undefined && getListaParametrosBaseDatos[tempCampo.id_campo] != undefined) {\r\n            var itemCampo = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n\r\n            // Tiene un valor por defecto\r\n            if (itemCampo.value != null) {\r\n\r\n                var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\r\n                    if (item.parametro == parametro) {\r\n                        item.id_campo = tempCampo.id_campo;\r\n                        var itemCampoId = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n                        item.valor = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                        item.valorTemporal = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                var validarElemento = document.getElementById('id' + itemCampo.title);\r\n\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                // setListaCamposPorParametro({ data: newParams });\r\n\r\n                return (\r\n                    <>{itemCampo.value}</>\r\n                )\r\n            } else if (itemCampo.title == \"Fecha Hechos\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectFechaAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Antecedentes\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Interesados\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getInteresadosLista[0] && getInteresadosLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectInteresados(parametro, tempCampo.id_campo)}\r\n                        {/* {handleChangeInteresados(0, parametro, tempCampo.id_campo)} */}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Investigado\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getEntidadesInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Cargo\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getCargosInvestigadoLista[0] && getCargosInvestigadoLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectCargosInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Entidad\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getEntidadInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectEntidadesInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <label>Seleccione un campo</label>\r\n                )\r\n            }\r\n        }\r\n        return (<></>)\r\n    }\r\n\r\n    const selectChangeListaCampos = (parametro, id_campo, value) => {\r\n\r\n        var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n            if (item.parametro == parametro) {\r\n                item.id_campo = id_campo;\r\n                var itemCampo = getListaParametrosBaseDatos[id_campo];\r\n\r\n                item.valor = (itemCampo.value != null) ? itemCampo.value : value;\r\n                item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : value;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        //setListaCamposPorParametroDefinitiva({ data: newParams });\r\n    }\r\n\r\n    // Metodo encargado de generar las columnas de los parametros de la plantilla\r\n    const columnsParametros = [\r\n        {\r\n            name: 'Parametros de la plantilla',\r\n            cell: parametro => <div><strong>{parametro}</strong></div>,\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            name: 'Campo',\r\n            cell: parametro =>\r\n                <select className=\"form-control\" id={`id${parametro}`} name={`name${parametro}`}\r\n                    onChange={e => selectChangeListaCampos(parametro, e.target.value, \"\")} disabled>\r\n                    <option value=\"\">Por favor seleccione</option>\r\n                    {selectCampos(parametro)}\r\n                </select>,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'Valor seleccionado',\r\n            width: \"50%\",\r\n            cell: parametro =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresDeParametro(parametro)}\r\n                    </div>\r\n                </div>\r\n        },\r\n        // {\r\n        //     name: 'Activar/Inactivar',\r\n        //     width: \"10%\",\r\n        //     cell: parametro =>\r\n        //         <div className='row'>\r\n        //             <div className='col'>\r\n        //                 {cargarCheckParametro(parametro)}\r\n        //             </div>\r\n        //         </div>\r\n        // }\r\n    ];\r\n\r\n    // Metodo encargado de generar las columnas de los parametros de la plantilla\r\n    const columnsCampos = [\r\n        {\r\n            name: 'Campo',\r\n            cell: campo =>\r\n                <div>\r\n                    <strong>{campo.nombreCampo ? campo.nombreCampo : \"\"}</strong>\r\n                </div>,\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            name: 'Tipo',\r\n            cell: campo =>\r\n                <select className=\"form-control\" id={`idCampo${campo.nombreCampo}`} name={`name${campo.nombreCampo}`} disabled>\r\n                    <option value={validarTipoCampo(campo.tipoCampo)} selected> {validarTipoCampo(campo.tipoCampo)} </option>\r\n                </select>\r\n            ,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'Items',\r\n            width: \"50%\",\r\n            cell: campo =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresCampos(campo)}\r\n                    </div>\r\n                </div>\r\n        },\r\n    ];\r\n\r\n    // Metodo encargado de setear el valor al mismo input\r\n    const changeTextInput = (e, arrayDatos) => {\r\n\r\n        // Se setea temporalmente\r\n        let elementoHtml = document.getElementById(e.target.name);\r\n        let nombreElemento = e.target.name;\r\n\r\n        // Se captura el valor escrito\r\n        let valor = e.target.value;\r\n\r\n        // El elemento existe\r\n        if (elementoHtml) {\r\n\r\n            // Se setea el nuevo valor\r\n            elementoHtml.title = valor;\r\n\r\n            // Se asigna el item dentro del array para enviarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n\r\n                // Se valida que la key sea igual al elemento modificado\r\n                if (key == nombreElemento) {\r\n\r\n                    // Se añade el item\r\n                    e.items = [valor];\r\n                }\r\n            })\r\n        }\r\n\r\n        // Se setea en el from cada que vez que finaliza la acción\r\n        from.getCamposAdicionales = getCamposAdicionales;\r\n    }\r\n\r\n    // Metodo encargado de cambiar el valor de la fecha\r\n    const changeDateInput = (e) => {\r\n\r\n        // Se formatea\r\n        const newDate = moment(e.target.value).format('DD/MM/YYYY');\r\n\r\n        // Se captura el nombre del elemento\r\n        let nombreElemento = e.target.name;\r\n\r\n        // Se setea los valores\r\n        setValue(newDate);\r\n\r\n        // Se asigna el item dentro del array para enviarlo\r\n        getCamposAdicionales.forEach(e => {\r\n\r\n            // Se captura la key\r\n            let key = e.nombreCampo;\r\n\r\n            // Se valida que la key sea igual al elemento modificado\r\n            if (key == nombreElemento) {\r\n\r\n                // Se añade el item\r\n                e.items = [newDate];\r\n            }\r\n        })\r\n\r\n        // Se setea en el from cada que vez que finaliza la acción\r\n        from.getCamposAdicionales = getCamposAdicionales;\r\n    };\r\n\r\n    // Metodo encargado de cambiar el valor del input\r\n    const changeCheckInput = (e, value) => {\r\n\r\n        // Se captura el elemento html\r\n        let nombreElemento = value;\r\n\r\n        // Se captura el elemento del check true o false\r\n        let checkeado = e.target.checked;\r\n\r\n        // Se captura el valor chequeado html\r\n        let valorCheck = e.target.value;\r\n\r\n        // Se valida cuando esta chequeado\r\n        if (checkeado == true) {\r\n\r\n            // Se asigna el item dentro del array para enviarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n\r\n                // Se valida que la key sea igual al elemento modificado\r\n                if (key == nombreElemento) {\r\n\r\n                    // Se valida la primera vez\r\n                    if (!e.itemsSeleccionado) {\r\n\r\n                        // Se añade el item\r\n                        e.itemsSeleccionado = [valorCheck];\r\n                    } else {\r\n\r\n                        // Se añade el item al array\r\n                        e.itemsSeleccionado.push(valorCheck);\r\n                    }\r\n                }\r\n            })\r\n        } else if (checkeado == false) {\r\n\r\n            // Se asigna el item dentro del array para quitarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n                let items = e.itemsSeleccionado ? e.itemsSeleccionado : [];\r\n\r\n                // Continua el proceso para quitarlo del array\r\n                if (items.length > 0 && (key == nombreElemento)) {\r\n\r\n                    // Se busca la posicion del elemento\r\n                    var index = items.indexOf(valorCheck);\r\n\r\n                    // Se quita el elemento\r\n                    items.splice(index, 1);\r\n                }\r\n            })\r\n        }\r\n\r\n        // Se setea en el from cada que vez que finaliza la acción\r\n        from.getCamposAdicionales = getCamposAdicionales;\r\n    }\r\n\r\n    // Metodo encargado de cargar los valores de los campos\r\n    const cargarValoresCampos = (campo) => {\r\n\r\n        // Se inicializa la variable de campos\r\n        const campoParametro = campo;\r\n\r\n        // Se capturan la informacion del campo\r\n        const tipoCampo = campoParametro.tipoCampo;\r\n        const nombreCampo = campoParametro.nombreCampo;\r\n        const itemCampo = tipoCampo == 2 ? campoParametro.items : \"\";\r\n\r\n        // Se valida cuando el tipo campo es un listado\r\n        if (tipoCampo == 2) {\r\n\r\n            // Se retorna el mapeo\r\n            return (\r\n\r\n                // Se recorre el elemento\r\n                itemCampo.map((item, i) => {\r\n\r\n                    // Se retorna el HTML\r\n                    return (\r\n                        <div className=\"col-md-12 mt-1 ml-2 mb-1\" key={item}>\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id={item}\r\n                                name={item}\r\n                                value={item}\r\n                                onChange={(e) => changeCheckInput(e, nombreCampo)}\r\n                                defaultChecked={item.checked} /> {item}\r\n                        </div>\r\n                    )\r\n                })\r\n            )\r\n        } else if (tipoCampo == 1) {\r\n\r\n            // Se retorna el html del tipo fecha \r\n            return (\r\n                <div className=\"custom-control custom-switch custom-control-lg mt-2 mb-2\">\r\n                    <input type=\"date\"\r\n                        className=\"form-control\"\r\n                        id={nombreCampo}\r\n                        name={nombreCampo}\r\n                        onChange={changeDateInput}\r\n                        max={getMaxDate}\r\n                    />\r\n                </div>\r\n            )\r\n        } else if (tipoCampo == 0) {\r\n\r\n            // Se retorna el html del tipo texto\r\n            return (\r\n                <div className=\"custom-control custom-switch custom-control-lg mt-2 mb-2\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        id={nombreCampo}\r\n                        name={nombreCampo}\r\n                        placeholder={nombreCampo}\r\n                        onChange={e => changeTextInput(e, campo)} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de retorna los items separados\r\n    const validarItems = (item) => {\r\n\r\n        // Se valida que exista y tenga un elemento\r\n        if (item && item.length == 0) {\r\n\r\n            // Se retorna el primer elemento\r\n            return item;\r\n        } else if (item && item.length > 0) {\r\n\r\n            // Se retorna por comas\r\n            return item.join(\", \");\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de validar el tipo del campo\r\n    const validarTipoCampo = (tipo) => {\r\n\r\n        // Se inicializa la variable\r\n        let nombreRetornado;\r\n\r\n        // Se valida el tipo\r\n        if (tipo == 0) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Texto\";\r\n        } else if (tipo == 1) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Fecha\";\r\n        } else if (tipo == 2) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Lista\";\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return nombreRetornado;\r\n    }\r\n\r\n    // Metodo encargado de cargar los parametros de la base de datos\r\n    const cargarParametros = (listaParametrosBaseDatos) => {\r\n\r\n        // Se setean los valores en null y vacios para que no salga el limitante de las hooks\r\n        setListaParametros(null);\r\n        setAntecedentesLista({ data: [] });\r\n        setInteresadosLista({ data: [] });\r\n        setEntidadesInvestigadoLista({ data: [] });\r\n        setCargosInvestigadoLista({ data: [] });\r\n        setEntidadInvestigadoLista({ data: [] });\r\n        setListaCamposPorParametroTemporal({ data: [] });\r\n        setListaParametros({ data: [] });\r\n\r\n        // Se inicializa el array\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'mas_actuaciones',\r\n                \"attributes\": {\r\n                    \"id\": props.id_mas_actuacion\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + props.id_mas_actuacion, data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los valores a la lista general de parametros\r\n                    setListaParametros(datos);\r\n\r\n                    // Se recorre los parametros generales de la plantilla\r\n                    var parametrosCampos = datos.params.map((item, i) => {\r\n\r\n                        // Se busca el parametro con el de la base de datos\r\n                        var indexCampo = listaParametrosBaseDatos.findIndex(\r\n\r\n                            // Se inicializa la variable\r\n                            x =>\r\n\r\n                                // Se valida que el parametro de la base de datos sea igual al parametro de la plantilla\r\n                                x.title == item\r\n                        );\r\n\r\n                        // Se valida que haya encontrado un valor para asignarle el id\r\n                        if (indexCampo >= 0) {\r\n\r\n                            // Se retorna el array\r\n                            return { parametro: item, id_campo: indexCampo, valor: \"\" };\r\n                        } else {\r\n\r\n                            // Se retorna el array\r\n                            return { parametro: item, id_campo: \"\", valor: \"\" };\r\n                        }\r\n                    });\r\n\r\n                    // Parametros de los campos e items\r\n                    var parametrosItems = datos.campos && datos.campos.map((item, i) => {\r\n\r\n                        // Se captura el tipo de campo\r\n                        let tipoCampo = item.tipoCampo;\r\n\r\n                        // Se valida cuando es tipo lista\r\n                        if (tipoCampo == 2) {\r\n\r\n                            // Se setea la lista\r\n                            return { item: true, parametro: item.nombreCampo, id_campo: item.nombreCampo + i, valor: item.items };\r\n                        } else {\r\n\r\n                            // Se setea la lista\r\n                            return { item: true, parametro: item.nombreCampo, id_campo: item.nombreCampo + i, valor: \"\" };\r\n                        }\r\n                    });\r\n\r\n                    // Se setean los valores de las listas\r\n                    setListaCamposPorParametroTemporal({ data: parametrosCampos });\r\n                    setListaCamposPorCamposTemporal({ data: parametrosItems });\r\n\r\n                    // Se cargan los antecedentes, interesados y entidades del investigado\r\n                    cargarEntidadesInvestigado();\r\n                    cargarAntecedentes();\r\n                    cargarInteresados();\r\n                }\r\n            }\r\n        )\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('mas_actuaciones/' + props.id_mas_actuacion).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se valida que hayan campos adicionales\r\n                    if (datos.data.attributes.campos.length > 0) {\r\n\r\n                        // Se setean los valores a la lista\r\n                        setCamposAdicionales(datos.data.attributes.campos);\r\n                    }\r\n                }\r\n            }\r\n        )\r\n\r\n        // Se quita el cargando\r\n        window.showSpinner(false);\r\n    }\r\n\r\n    const cargarAntecedentes = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'antecedente',\r\n                \"attributes\": {\r\n                    \"antecedentes\": \"antecedentes\",\r\n                    \"descripcion\": \"descripcion\",\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"fecha_registro\": Date.now(),\r\n                    \"id_dependencia\": -1,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n        GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n\r\n                    setAntecedentesLista(parametrosCampos);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarInteresados = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"interesado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"tipo_documento\": \"1\",\r\n                    \"numero_documento\": \"1\",\r\n                    \"primer_nombre\": \"1\",\r\n                    \"segundo_nombre\": \"1\",\r\n                    \"primer_apellido\": \"1\",\r\n                    \"segundo_apellido\": \"1\",\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setInteresadosLista(parametrosCampos);\r\n                } else {\r\n                    setModalState({ title: \"Datos del interesado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarEntidadesInvestigado = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"entidad_investigado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": \"1\",\r\n                    \"requiere_registro\": true,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n\r\n                        var nombreInvestigado = item.attributes.nombre_investigado;\r\n                        var cargoInvestigado = item.attributes.cargo;\r\n                        var entidadInvestigado = item.attributes.nombre_entidad;\r\n\r\n                        if (nombreInvestigado == null) {\r\n                            item.attributes.nombre_investigado = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (cargoInvestigado == null) {\r\n                            item.attributes.cargo = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (entidadInvestigado == null) {\r\n                            item.attributes.nombre_entidad = \"NO_APLICA\";\r\n                        }\r\n\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setEntidadesInvestigadoLista(parametrosCampos);\r\n                    setCargosInvestigadoLista(parametrosCampos);\r\n                    setEntidadInvestigadoLista(parametrosCampos);\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Entidades del investigado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const descargarArchivo = () => {\r\n        try {\r\n            window.showSpinner(true);\r\n\r\n            var params = getListaCamposPorParametroTemporal.data.map(item => {\r\n                return {\r\n                    \"param\": item.parametro,\r\n                    \"value\": item.valor\r\n                };\r\n            });\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"mas_actuaciones\",\r\n                    \"attributes\": {\r\n                        \"params\": params,\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + props.id_mas_actuacion, data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"docx\");\r\n                        window.showSpinner(false);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: \", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    function downloadBase64File(contentType, base64Data, fileName, extension) {\r\n        const linkSource = `data:${contentType};base64,${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    const cargarCheckParametro = (parametro) => {\r\n\r\n        return (\r\n            <div className=\"col-md-12\" key={'keyCheck' + parametro + '1'} >\r\n                <input type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    id={'check' + parametro + '1'}\r\n                    name={'check' + parametro + '1'}\r\n                    value={parametro + '1'}\r\n                    onChange={(e) => handleChangeStatus(e, parametro)}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n\r\n    const handleChangeStatus = (e, parametro) => {\r\n\r\n        // Se captura el elemento enviado por parametros\r\n        var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n        // Se valida si esta checkeado\r\n        if (e.target.checked) {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a vacio\r\n                    item.valor = \"\";\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n\r\n\r\n        } else {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a su valor original\r\n                    item.valor = item.valorTemporal;\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <ModalGen data={modalState} />\r\n            {getListaParametros != null ?\r\n                <>\r\n                    <div className='col-md-12'>\r\n                        <label>Parametros de la plantilla</label>\r\n                    </div>\r\n                    <div className='col-md-12 mt-2 mb-2'>\r\n                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                            columns={columnsParametros}\r\n                            data={getListaParametros.params}\r\n                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                            striped\r\n                        />\r\n                    </div>\r\n\r\n                    {getCamposAdicionales && getCamposAdicionales.length > 0 ?\r\n                        <>\r\n                            <div className='col-md-12' style={{ marginTop: '50px' }}>\r\n                                <label>Campos adicionales</label>\r\n                            </div>\r\n                            <div className='col-md-12 mt-2 mb-2'>\r\n                                <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                    columns={columnsCampos}\r\n                                    data={getCamposAdicionales}\r\n                                    noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                                    striped\r\n                                />\r\n                            </div>\r\n                        </>\r\n                        : null\r\n                    }\r\n                    <div className='col-md-12 mt-4 mb-2'>\r\n                        <label className='mr-2' htmlFor=\"documento_ruta\">Descargar documento pre-diligenciado con los valores seleccionados </label>\r\n                        <button type=\"button\" title='Descargar documento diligenciado' onClick={() => descargarArchivo()} className=\"btn btn-rounded btn-primary\"> <i className=\"fas fa-file-word\"></i></button>\r\n                    </div>\r\n                </>\r\n                :\r\n                <div className='col-md-12 mt-4'>\r\n                    <label>Cargando parametros de la plantilla...</label>\r\n                </div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ActuacionParametrosPlantillaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}