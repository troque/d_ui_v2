{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Actuaciones\\\\ActuacionesForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getUser } from '../../../components/Utils/Common';\nimport '../../Utils/Constants';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { Link } from \"react-router-dom\";\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\nimport ActuacionParametrosPlantillaForm from '../Herramientas/ActuacionParametrosPlantillaForm';\nimport Spinner from '../../Utils/Spinner';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ActuacionesForm() {\n  _s();\n  const [errorApi, setErrorApi] = useState('');\n  const [getNombreUsuario, setNombreUsuario] = useState(\"\");\n  const [getListaUsuariosComisorio, setListaUsuariosComisorio] = useState(\"\");\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [inputListArchivos, setInputListArchivos] = useState([{\n    archivo: {},\n    filebase64: \"\",\n    size: 0,\n    ext: \"\"\n  }]);\n  const [getMasActuacionId, setMasActuacionId] = useState(0);\n  const [getUsuarioComisionado, setUsuarioComisionado] = useState(0);\n  const [getListaActuacionesOptions, setListaActuacionesOptions] = useState([]);\n  const [getListaActuacionesDefault, setListaActuacionesDefault] = useState([]);\n  const [getNombreDocumentoMasActuacion, setNombreDocumentoMasActuacion] = useState(\"\");\n  const [getNombreProceso, setNombreProceso] = useState('');\n  const [getHayArchivo, setHayArchivo] = useState(false);\n  const location = useLocation();\n  const {\n    from,\n    selected_id_etapa,\n    tipoActuacion,\n    vengo,\n    rutaParametrizada\n  } = location.state;\n  let deDondeVengo = vengo ? vengo : false;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  // let idEtapa = from.idEtapa >= 3 ? from.idEtapa : 3;\n\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      setNombreUsuario(getUser().nombre);\n      nombreProceso();\n      if (tipoActuacion == \"Comisorio\") {\n        getListUsuarios(getUser().id_dependencia);\n      }\n    }\n    fetchData();\n    selectOptionsActuaciones();\n  }, []);\n  const nombreProceso = () => {\n    GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setNombreProceso(datos.data.attributes.nombre);\n        getAllTipoActuaciones();\n      }\n    });\n  };\n  const getListUsuarios = id_dependencia => {\n    GenericApi.getByIdGeneric(\"usuario/get-todos-usuarios-dependencia\", id_dependencia).then(datos => {\n      if (!datos.error) {\n        setListaUsuariosComisorio(datos.data);\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: Crear \" + tipoActuacion,\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/PreguntaImpedimentos',\n          from: {\n            from: from,\n            selected_id_etapa: selected_id_etapa\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  /**\r\n   * Trae la lista de todos los tipos de actuaciones.\r\n   */\n  const getAllTipoActuaciones = () => {\n    GenericApi.getByIdGeneric(\"mas_actuaciones/actuaciones-etapa\", selected_id_etapa).then(datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se envia la informacion al metood encargado de validar y sacar los valores correspondientes del select\n        selectOptionsActuaciones(datos.data);\n\n        // Se desactiva el spinner\n        window.showSpinner(false);\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: CREAR ACTUACIONES\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ActuacionesForm',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n  const selectOptionsActuaciones = datos => {\n    // Se inicializan las variables\n    var listaActuacionesValidar = [];\n\n    // Se inicializa la cantidad de cada actuacion en 0\n    var cantidadActuaciones = 0;\n    var cantidadImpedimentos = 0;\n    var cantidadComisorios = 0;\n\n    // Se valida que exista el array, tenga longitud \n    if (datos && datos.length > 0) {\n      // Se recorre el array de las actuaciones\n      for (let index = 0; index < datos.length; index++) {\n        // Se captura el elemento por posición\n        const element = datos[index];\n\n        // Se valida cuando es actuación\n        if (element.attributes.tipo_actuacion == 0 && tipoActuacion == \"Actuación\") {\n          // Se suma +1 al elemento\n          cantidadActuaciones++;\n\n          // Se añade la actuacion a la lista\n          listaActuacionesValidar.push({\n            label: element.attributes.nombre_actuacion.toUpperCase(),\n            value: element.id\n          });\n        }\n        // Se valida cuando es impedimento \n        else if (element.attributes.tipo_actuacion == 1 && tipoActuacion == \"Impedimento\") {\n          // Se suma +1 al elemento\n          cantidadImpedimentos++;\n\n          // Se añade el impedimento a la lista\n          listaActuacionesValidar.push({\n            label: element.attributes.nombre_actuacion.toUpperCase(),\n            value: element.id\n          });\n        }\n        // Se valida cuando es comisorio\n        else if (element.attributes.tipo_actuacion == 2 && tipoActuacion == \"Comisorio\") {\n          // Se suma +1 al elemento\n          cantidadComisorios++;\n\n          // Se añade el comisorio a la lista\n          listaActuacionesValidar.push({\n            label: element.attributes.nombre_actuacion.toUpperCase(),\n            value: element.id\n          });\n        }\n      }\n\n      // ------------------------------------------------------------------------------------ // \n\n      // Se recorre el array de las actuaciones para preseleccionar y cargar la plantilla automaticamente\n      for (let index = 0; index < datos.length; index++) {\n        // Se captura el elemento por posición\n        const element = datos[index];\n\n        // Se valida cuando es actuación\n        if (cantidadActuaciones == 1 && element.attributes.tipo_actuacion == 0 && tipoActuacion == \"Actuación\") {\n          // Se setea el valor para que auto cargue la plantilla\n          setMasActuacionId(element.id);\n\n          // Se añade para qué quede preseleccionada en el select\n          setListaActuacionesDefault({\n            label: element.attributes.nombre_actuacion.toUpperCase(),\n            value: element.id\n          });\n        }\n\n        // Se valida cuando es impedimento \n        else if (cantidadImpedimentos == 1 && element.attributes.tipo_actuacion == 1 && tipoActuacion == \"Impedimento\") {\n          // Se setea el valor para que auto cargue la plantilla\n          setMasActuacionId(element.id);\n\n          // Se añade para qué quede preseleccionada en el select\n          setListaActuacionesDefault({\n            label: element.attributes.nombre_actuacion.toUpperCase(),\n            value: element.id\n          });\n        }\n\n        // Se valida cuando es comisorio\n        else if (cantidadComisorios == 1 && element.attributes.tipo_actuacion == 2 && tipoActuacion == \"Comisorio\") {\n          // Se setea el valor para que auto cargue la plantilla\n          setMasActuacionId(element.id);\n\n          // Se añade para qué quede preseleccionada en el select\n          setListaActuacionesDefault({\n            label: element.attributes.nombre_actuacion.toUpperCase(),\n            value: element.id\n          });\n        }\n      }\n    }\n\n    // Se setea el valor al array lista\n    setListaActuacionesOptions(listaActuacionesValidar);\n  };\n\n  // Metodo encargado de enviar los datos al backend\n  const enviarDatos = datos => {\n    // Se usa el cargando\n    window.showSpinner(true);\n\n    // Se captura el id de la actuacion\n    const actuacionId = datos.id_actuacion;\n\n    // Se valida si tiene un archivo valido cargado\n    if (!getHayArchivo) {\n      // Se usa el cargando\n      window.showSpinner(false);\n\n      // Se muestra el modal de error\n      setErrorApi(\"DEBE ADJUNTAR UN DOCUMENTO VÁLIDO\");\n\n      // Se ejecuta el modal\n      window.showModal(1);\n\n      // Se retorna falso\n      return false;\n    }\n\n    // Se validan que los campos adicionales tenga informacion obligatoria\n    if (from.getCamposAdicionales !== undefined && from.getCamposAdicionales.length > 0) {\n      // Se inicializa la variable\n      var encontroCampoVacio = false;\n\n      // Se recorre el array\n      from.getCamposAdicionales.forEach(e => {\n        /**\r\n            Se valida que el array de campos adicionales tenga información requerida\r\n            0 = Campo tipo texto\r\n            1 = Campo tipo lista\r\n            2 = campo tipo fecha\r\n        */\n        if (e.tipoCampo === \"0\" || e.tipoCampo === \"1\") {\n          // Se valida que tenga informacion el texto o fecha\n          if (!e.items) {\n            // Se redeclara la variable \n            encontroCampoVacio = true;\n          }\n        } else if (e.tipoCampo == 2) {\n          // Se valida que tenga informacion el texto o fecha\n          if (!e.itemsSeleccionado) {\n            // Se redeclara la variable \n            encontroCampoVacio = true;\n          }\n        }\n      });\n\n      // Se valida que haya encontrado el mensaje de error\n      if (encontroCampoVacio) {\n        // Se quita el cargando\n        window.showSpinner(false);\n\n        // Se setea el modal\n        setModalState({\n          title: getNombreProceso + \" :: CREAR \" + tipoActuacion.toUpperCase(),\n          message: \"TODOS LOS CAMPOS ADICIONALES SON OBLIGATORIOS\",\n          show: true,\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se retorna false\n        return false;\n      }\n    } else if (from.campos !== undefined && from.campos.length > 0 && from.getCamposAdicionales === undefined) {\n      // Se quita el cargando\n      window.showSpinner(false);\n\n      // Se setea el modal\n      setModalState({\n        title: getNombreProceso + \" :: CREAR \" + tipoActuacion.toUpperCase(),\n        message: \"TODOS LOS CAMPOS ADICIONALES SON OBLIGATORIOS\",\n        show: true,\n        alert: global.Constants.TIPO_ALERTA.ERROR\n      });\n\n      // Se retorna false\n      return false;\n    }\n\n    // Se valida cuando es tipo comisorio\n    if (tipoActuacion == 2 || tipoActuacion == \"Comisorio\") {\n      // Se inicializa la variable\n      const dataUsuarioComisorio = {\n        \"data\": {\n          \"type\": \"usuario-comisionado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": \"\"\n          }\n        }\n      };\n\n      // Se ejecuta la API\n      GenericApi.addGeneric(\"proceso-diciplinario/usuario-comisionado/\" + getUsuarioComisionado + \"/\" + procesoDisciplinarioId, dataUsuarioComisorio).then(\n      // Se inicializa la variable de respuesta\n      datos => {\n        // Se valida que no haya error\n        if (datos.error) {\n          // Se setea el modal\n          setModalState({\n            title: getNombreProceso + \" :: CREAR \" + tipoActuacion.toUpperCase(),\n            message: datos.error.toString(),\n            show: true,\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    }\n\n    // Se inicializa la variable\n    const data = {\n      \"data\": {\n        \"type\": 'actuaciones',\n        \"attributes\": {\n          \"id_actuacion\": actuacionId,\n          \"usuario_accion\": getNombreUsuario,\n          \"id_estado_actuacion\": 3,\n          \"created_user\": getNombreUsuario,\n          \"fileBase64\": inputListArchivos[0].filebase64,\n          \"nombre_archivo\": inputListArchivos[0].archivo.name,\n          \"ext\": inputListArchivos[0].ext,\n          \"peso\": inputListArchivos[0].archivo.size,\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": selected_id_etapa,\n          \"estado\": true,\n          \"campos_finales\": from.getCamposAdicionales ? from.getCamposAdicionales : []\n        }\n      }\n    };\n    console.log(\"actuacionId maestra -> \", actuacionId);\n\n    // Se ejecuta la API\n    GenericApi.addGeneric(\"actuaciones\", data).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se quita el cargando\n        window.showSpinner(false);\n\n        // Constante del tipo\n        var tipoActuacionDetalle;\n\n        // Se valida el tipo de actuacion a enviar en el detalle\n        if (tipoActuacion == 2 || tipoActuacion == \"Comisorio\") {\n          // Se envia como tipo Comisorio\n          tipoActuacionDetalle = 2;\n        } else if (tipoActuacion == 1 || tipoActuacion == \"Impedimento\") {\n          // Se envia como tipo Impedimento\n          tipoActuacionDetalle = 1;\n        } else if (tipoActuacion == 1 || tipoActuacion == \"Actuacion\" || tipoActuacion == \"Actuación\") {\n          // Se envia como tipo Impedimento\n          tipoActuacionDetalle = 0;\n        }\n\n        // Se setea el modal\n        setModalState({\n          title: getNombreProceso + \" :: CREAR \" + tipoActuacion.toUpperCase(),\n          message: global.Constants.MENSAJES_MODAL.EXITOSO,\n          show: true,\n          redirect: \"/ActuacionesVer/\" + procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/1\",\n          from: {\n            from: from,\n            selected_id_etapa: selected_id_etapa,\n            id: datos.data.id,\n            nombre: getListaActuacionesDefault.label,\n            estadoActualActuacion: \"Pendiente aprobación\",\n            tipoActuacion: tipoActuacionDetalle,\n            actuacionIdMaestra: actuacionId\n          },\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        // Se setea el modal\n        setModalState({\n          title: getNombreProceso + \" :: CREAR \" + tipoActuacion.toUpperCase(),\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ActuacionesLista',\n          from: {\n            from: from,\n            selected_id_etapa: selected_id_etapa\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  // Metodo encargado de cambiar la actuacion seleccionada\n  const selectChangeMasActuacion = (id, nombreDocumentoMasActuacion, nombreActuacion) => {\n    // Se usa el cargando\n    window.showSpinner(true);\n\n    // Se setea el nombre de la actuacion\n    setNombreDocumentoMasActuacion(nombreDocumentoMasActuacion);\n\n    // Se setea el id de la actuacion\n    setMasActuacionId(id);\n\n    // Se añade para qué quede preseleccionada en el select\n    setListaActuacionesDefault({\n      label: nombreDocumentoMasActuacion,\n      value: id\n    });\n  };\n  const selectChangeUsuarioComisionado = value => {\n    setUsuarioComisionado(value);\n  };\n  const selectUsuarioComisorio = () => {\n    return getListaUsuariosComisorio && getListaUsuariosComisorio.length ? getListaUsuariosComisorio.map((user, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: user.id,\n        children: user.attributes.nombre + \" \" + user.attributes.apellido\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 21\n      }, this);\n    }) : \"\";\n  };\n  function formatBytes(bytes) {\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    if (bytes === undefined) return '0 Bytes';\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n  function obtenerPesoTotalArchivos(list) {\n    let peso = 0;\n    list.forEach((archivo, index) => {\n      if (archivo.archivo.size) {\n        peso += archivo.archivo.size;\n      }\n    });\n    if (peso > 15000000) {\n      setErrorApi('El PESO/TAMAÑO DE TODOS LOS ARCHIVO SADJUNTOS SUPERAN LOS 15 MB PERMITIDOS PARA EL REGISTRO. VERIFIQUE EL TAMAÑO Y ELIMINE ALGUNOS ADJUNTOS');\n      window.showModal(1);\n    }\n\n    //setPesoTotalArchivos(peso);\n  }\n\n  const handleInputChangeArchivos = (e, index) => {\n    const {\n      name,\n      files\n    } = e.target;\n    if (files.length > 0) {\n      const extension = getFileExtension(files[0].name);\n      if (extension == global.Constants.TIPO_DOCUMENTO_PERMITIDO_ACTUACIONES.DOCX) {\n        const list = [...inputListArchivos];\n        list[index][name] = files[0];\n        if (files[0]) {\n          list[index][name] = files[0];\n        } else {\n          list[index][name] = '';\n          list[index].filebase64 = '';\n          list[index].size = 0;\n          list[index].ext = \"\";\n          setInputListArchivos(list);\n        }\n\n        // Conversion a Base64\n        Array.from(e.target.files).forEach(archivo => {\n          var reader = new FileReader();\n          reader.readAsDataURL(archivo);\n          reader.onload = function () {\n            var arrayAuxiliar = [];\n            var base64 = reader.result;\n            arrayAuxiliar = base64.split(',');\n            list[index].filebase64 = arrayAuxiliar[1];\n            list[index].ext = extension;\n            setInputListArchivos(list);\n          };\n        });\n        setHayArchivo(true);\n        obtenerPesoTotalArchivos(list);\n      } else {\n        setHayArchivo(false);\n        setErrorApi(\"EL DOCUMENTO SELECCIONADO NO TIENE UN FORMATO PERMITIDO\");\n        window.showModal(1);\n        return false;\n      }\n    } else {\n      const list = [...inputListArchivos];\n      list[index][name] = '';\n      list[index].filebase64 = '';\n      list[index].size = 0;\n      setInputListArchivos(list);\n      obtenerPesoTotalArchivos(list);\n    }\n  };\n  function getFileExtension(filename) {\n    return filename.slice((filename.lastIndexOf(\".\") - 1 >>> 0) + 2);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfoErrorApi, {\n      error: errorApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        id_actuacion: '',\n        usuario_comisionado: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        let errores = {};\n        valores.id_actuacion = getMasActuacionId;\n        valores.usuario_comisionado = getUsuarioComisionado;\n        if (tipoActuacion == \"Comisorio\" && valores.usuario_comisionado == 0) {\n          errores.usuario_comisionado = 'DEBE SELECCIONAR UN USUARIO COMISIONADO PARA REGISTRAR';\n        }\n        if (valores.id_actuacion == 0) {\n          errores.id_actuacion = 'DEBE SELECCIONAR UNA ACTUACIÓN PARA REGISTRAR';\n        }\n\n        // if (valores.id_actuacion != 0 && valores.id_actuacion != \"\") {\n        //     let id_actuacion = valores.id_actuacion;\n\n        //     listaTipoActuacion.forEach(element => {\n        //         if (element.id == id_actuacion) {\n        //             setValueDocumentoRuta(element.nombre_plantilla);\n        //         }\n        //     });\n        // }\n\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        enviarDatos(valores);\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w2d_block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"breadcrumb\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"breadcrumb breadcrumb-alt push\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/MisPendientes`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Mis Pendientes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 559,\n                      columnNumber: 134\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 66\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/RamasProceso/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Ramas del proceso\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 560,\n                      columnNumber: 157\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 66\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 37\n                }, this), deDondeVengo ? null : /*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`,\n                    state: {\n                      from: from,\n                      selected_id_etapa: selected_id_etapa\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: tipoActuacion\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 261\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [\"AGREGAR \", tipoActuacion]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 66\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-themed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: [getNombreProceso, \" :: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"CREAR \", tipoActuacion.toUpperCase()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 83\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-right\",\n                children: deDondeVengo ? /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/RamasProceso/`,\n                  title: \"Regresar a lista de Actuaciones\",\n                  state: {\n                    from: from\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-success\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-backward\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 578,\n                      columnNumber: 95\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 41\n                }, this) : rutaParametrizada == \"Comisorio\" ? /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/ActuacionesLista/`,\n                  title: \"Regresar a lista de Actuaciones\",\n                  state: {\n                    from: from,\n                    selected_id_etapa: selected_id_etapa\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-success\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-backward\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 583,\n                      columnNumber: 99\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(Link, {\n                  to: tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`,\n                  title: \"Regresar a lista de Actuaciones\",\n                  state: {\n                    from: from,\n                    selected_id_etapa: selected_id_etapa\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-success\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-backward\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 587,\n                      columnNumber: 99\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [getListaActuacionesOptions && getListaActuacionesOptions.length > 0 ? /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"id_actuacion\",\n                      children: [tipoActuacion.toUpperCase(), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \" *\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 595,\n                        columnNumber: 109\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 595,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"id_actuacion\",\n                        children: [\"SIN DATOS O INFORMACI\\xD3N PARA REGISTRAR \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 597,\n                          columnNumber: 122\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 597,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 51\n                    }, this), getListaActuacionesOptions && getListaActuacionesOptions.length > 0 ? /*#__PURE__*/_jsxDEV(Select, {\n                      placeholder: global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION,\n                      defaultValue: getListaActuacionesDefault,\n                      noOptionsMessage: () => \"Sin datos\",\n                      options: getListaActuacionesOptions.map(e => ({\n                        label: e.label,\n                        value: e.value\n                      })),\n                      onChange: e => selectChangeMasActuacion(e.value, e.label)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 601,\n                      columnNumber: 49\n                    }, this) : null, /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"id_actuacion\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.id_actuacion\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 611,\n                        columnNumber: 97\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 611,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 37\n                }, this), tipoActuacion == \"Comisorio\" && getListaActuacionesOptions && getListaActuacionesOptions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"usuario_comisionado\",\n                      children: [\"USUARIO COMISIONADO\", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 618,\n                        columnNumber: 105\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 618,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-control\",\n                      id: \"usuario_comisionado\",\n                      name: \"usuario_comisionado\",\n                      onChange: e => selectChangeUsuarioComisionado(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 620,\n                        columnNumber: 53\n                      }, this), selectUsuarioComisorio()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 619,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"usuario_comisionado\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.usuario_comisionado\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 623,\n                        columnNumber: 108\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 623,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 41\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 33\n              }, this), getMasActuacionId > 0 ? /*#__PURE__*/_jsxDEV(ActuacionParametrosPlantillaForm, {\n                from: from,\n                id_mas_actuacion: getMasActuacionId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 58\n              }, this) : null, getMasActuacionId > 0 ? inputListArchivos.map((x, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12 mt-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-12\",\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          children: [\"DOCUMENTO ADJUNTO DILIGENCIADO (WORD)\", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: \"* \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 646,\n                            columnNumber: 105\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 646,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 645,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-12\",\n                        style: {\n                          marginLeft: '13px'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"row\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-md-6\",\n                            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                              className: \"custom-file-label\",\n                              htmlFor: \"example-file-input-custom\",\n                              \"data-toggle\": \"custom-file-input\",\n                              children: x.archivo.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 651,\n                              columnNumber: 69\n                            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                              className: \"custom-file-input\",\n                              \"data-toggle\": \"custom-file-input\",\n                              type: \"file\",\n                              accept: \".docx\",\n                              name: \"archivo\",\n                              onChange: e => handleInputChangeArchivos(e, i),\n                              required: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 652,\n                              columnNumber: 69\n                            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                              children: [\"Peso del archivo: \", formatBytes(x.archivo.size)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 653,\n                              columnNumber: 69\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 650,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 649,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 648,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 644,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 49\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 45\n                }, this);\n              }) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content block-content-full text-right bg-light\",\n            children: [getListaActuacionesOptions && getListaActuacionesOptions.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-rounded btn-primary\",\n              children: [\" \", global.Constants.BOTON_NOMBRE.REGISTRAR]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 33\n            }, this) : null, deDondeVengo ? /*#__PURE__*/_jsxDEV(Link, {\n              to: `/RamasProceso/`,\n              state: {\n                from: from\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-rounded btn-outline-primary\",\n                children: [\" \", global.Constants.BOTON_NOMBRE.CANCELAR]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 33\n            }, this) : rutaParametrizada == \"Comisorio\" ? /*#__PURE__*/_jsxDEV(Link, {\n              to: `/ActuacionesLista/`,\n              state: {\n                from: from,\n                selected_id_etapa: selected_id_etapa\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-rounded btn-outline-primary\",\n                children: [\" \", global.Constants.BOTON_NOMBRE.CANCELAR]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Link, {\n              to: tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`,\n              state: {\n                from: from,\n                selected_id_etapa: selected_id_etapa\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-rounded btn-outline-primary\",\n                children: [\" \", global.Constants.BOTON_NOMBRE.CANCELAR]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ActuacionesForm, \"g6Cs+dthBiyl6KNSeygSu06ajvY=\", false, function () {\n  return [useLocation];\n});\n_c = ActuacionesForm;\nexport default ActuacionesForm;\nvar _c;\n$RefreshReg$(_c, \"ActuacionesForm\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","getUser","GenericApi","Link","ModalGen","ErrorMessage","Field","Form","Formik","InfoErrorApi","ActuacionParametrosPlantillaForm","Spinner","Select","makeAnimated","ActuacionesForm","errorApi","setErrorApi","getNombreUsuario","setNombreUsuario","getListaUsuariosComisorio","setListaUsuariosComisorio","getModalState","setModalState","title","message","show","inputListArchivos","setInputListArchivos","archivo","filebase64","size","ext","getMasActuacionId","setMasActuacionId","getUsuarioComisionado","setUsuarioComisionado","getListaActuacionesOptions","setListaActuacionesOptions","getListaActuacionesDefault","setListaActuacionesDefault","getNombreDocumentoMasActuacion","setNombreDocumentoMasActuacion","getNombreProceso","setNombreProceso","getHayArchivo","setHayArchivo","location","from","selected_id_etapa","tipoActuacion","vengo","rutaParametrizada","state","deDondeVengo","radicado","procesoDisciplinarioId","fetchData","window","showSpinner","nombre","nombreProceso","getListUsuarios","id_dependencia","selectOptionsActuaciones","getByIdGeneric","then","datos","error","data","attributes","getAllTipoActuaciones","toString","redirect","alert","global","Constants","TIPO_ALERTA","ERROR","listaActuacionesValidar","cantidadActuaciones","cantidadImpedimentos","cantidadComisorios","length","index","element","tipo_actuacion","push","label","nombre_actuacion","toUpperCase","value","id","enviarDatos","actuacionId","id_actuacion","showModal","getCamposAdicionales","undefined","encontroCampoVacio","forEach","e","tipoCampo","items","itemsSeleccionado","campos","dataUsuarioComisorio","addGeneric","name","console","log","tipoActuacionDetalle","MENSAJES_MODAL","EXITOSO","estadoActualActuacion","actuacionIdMaestra","EXITO","selectChangeMasActuacion","nombreDocumentoMasActuacion","nombreActuacion","selectChangeUsuarioComisionado","selectUsuarioComisorio","map","user","i","apellido","formatBytes","bytes","decimals","k","dm","sizes","Math","floor","parseFloat","pow","toFixed","obtenerPesoTotalArchivos","list","peso","handleInputChangeArchivos","files","target","extension","getFileExtension","TIPO_DOCUMENTO_PERMITIDO_ACTUACIONES","DOCX","Array","reader","FileReader","readAsDataURL","onload","arrayAuxiliar","base64","result","split","filename","slice","lastIndexOf","usuario_comisionado","valores","errores","resetForm","errors","MENSAJE_INFORMATIVO","SELECCIONE_UNA_OPCION","x","marginLeft","BOTON_NOMBRE","REGISTRAR","CANCELAR"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Actuaciones/ActuacionesForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { getUser } from '../../../components/Utils/Common';\r\nimport '../../Utils/Constants';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport { Link } from \"react-router-dom\";\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\r\nimport ActuacionParametrosPlantillaForm from '../Herramientas/ActuacionParametrosPlantillaForm';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\nfunction ActuacionesForm() {\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [getListaUsuariosComisorio, setListaUsuariosComisorio] = useState(\"\");\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [inputListArchivos, setInputListArchivos] = useState([{ archivo: {}, filebase64: \"\", size: 0, ext: \"\" }]);\r\n    const [getMasActuacionId, setMasActuacionId] = useState(0);\r\n    const [getUsuarioComisionado, setUsuarioComisionado] = useState(0);\r\n    const [getListaActuacionesOptions, setListaActuacionesOptions] = useState([]);\r\n    const [getListaActuacionesDefault, setListaActuacionesDefault] = useState([]);\r\n    const [getNombreDocumentoMasActuacion, setNombreDocumentoMasActuacion] = useState(\"\");\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n    const [getHayArchivo, setHayArchivo] = useState(false);\r\n\r\n    const location = useLocation();\r\n    const { from, selected_id_etapa, tipoActuacion, vengo, rutaParametrizada } = location.state;\r\n\r\n    let deDondeVengo = vengo ? vengo : false;\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    // let idEtapa = from.idEtapa >= 3 ? from.idEtapa : 3;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            setNombreUsuario(getUser().nombre);\r\n            nombreProceso();\r\n            if (tipoActuacion == \"Comisorio\") {\r\n                getListUsuarios(getUser().id_dependencia);\r\n            }\r\n        }\r\n        fetchData();\r\n        selectOptionsActuaciones();\r\n    }, []);\r\n\r\n\r\n    const nombreProceso = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                    getAllTipoActuaciones();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getListUsuarios = (id_dependencia) => {\r\n\r\n        GenericApi.getByIdGeneric(\"usuario/get-todos-usuarios-dependencia\", id_dependencia).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaUsuariosComisorio(datos.data);\r\n                } else {\r\n                    setModalState({ title: getNombreProceso + \" :: Crear \" + tipoActuacion, message: datos.error.toString(), show: true, redirect: '/PreguntaImpedimentos', from: { from: from, selected_id_etapa: selected_id_etapa }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    /**\r\n     * Trae la lista de todos los tipos de actuaciones.\r\n     */\r\n    const getAllTipoActuaciones = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"mas_actuaciones/actuaciones-etapa\", selected_id_etapa).then(\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se envia la informacion al metood encargado de validar y sacar los valores correspondientes del select\r\n                    selectOptionsActuaciones(datos.data);\r\n\r\n                    // Se desactiva el spinner\r\n                    window.showSpinner(false);\r\n                } else {\r\n                    setModalState({ title: getNombreProceso + \" :: CREAR ACTUACIONES\", message: datos.error.toString(), show: true, redirect: '/ActuacionesForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const selectOptionsActuaciones = (datos) => {\r\n\r\n        // Se inicializan las variables\r\n        var listaActuacionesValidar = [];\r\n\r\n        // Se inicializa la cantidad de cada actuacion en 0\r\n        var cantidadActuaciones = 0;\r\n        var cantidadImpedimentos = 0;\r\n        var cantidadComisorios = 0;\r\n\r\n        // Se valida que exista el array, tenga longitud \r\n        if (datos && datos.length > 0) {\r\n\r\n            // Se recorre el array de las actuaciones\r\n            for (let index = 0; index < datos.length; index++) {\r\n\r\n                // Se captura el elemento por posición\r\n                const element = datos[index];\r\n\r\n                // Se valida cuando es actuación\r\n                if (element.attributes.tipo_actuacion == 0 && tipoActuacion == \"Actuación\") {\r\n\r\n                    // Se suma +1 al elemento\r\n                    cantidadActuaciones++;\r\n\r\n                    // Se añade la actuacion a la lista\r\n                    listaActuacionesValidar.push({ label: element.attributes.nombre_actuacion.toUpperCase(), value: element.id });\r\n                }\r\n                // Se valida cuando es impedimento \r\n                else if (element.attributes.tipo_actuacion == 1 && tipoActuacion == \"Impedimento\") {\r\n\r\n                    // Se suma +1 al elemento\r\n                    cantidadImpedimentos++;\r\n\r\n                    // Se añade el impedimento a la lista\r\n                    listaActuacionesValidar.push({ label: element.attributes.nombre_actuacion.toUpperCase(), value: element.id });\r\n                }\r\n                // Se valida cuando es comisorio\r\n                else if (element.attributes.tipo_actuacion == 2 && tipoActuacion == \"Comisorio\") {\r\n\r\n                    // Se suma +1 al elemento\r\n                    cantidadComisorios++;\r\n\r\n                    // Se añade el comisorio a la lista\r\n                    listaActuacionesValidar.push({ label: element.attributes.nombre_actuacion.toUpperCase(), value: element.id });\r\n                }\r\n            }\r\n\r\n            // ------------------------------------------------------------------------------------ // \r\n\r\n            // Se recorre el array de las actuaciones para preseleccionar y cargar la plantilla automaticamente\r\n            for (let index = 0; index < datos.length; index++) {\r\n\r\n                // Se captura el elemento por posición\r\n                const element = datos[index];\r\n\r\n                // Se valida cuando es actuación\r\n                if (cantidadActuaciones == 1 && element.attributes.tipo_actuacion == 0 && tipoActuacion == \"Actuación\") {\r\n\r\n                    // Se setea el valor para que auto cargue la plantilla\r\n                    setMasActuacionId(element.id);\r\n\r\n                    // Se añade para qué quede preseleccionada en el select\r\n                    setListaActuacionesDefault({ label: element.attributes.nombre_actuacion.toUpperCase(), value: element.id });\r\n                }\r\n\r\n                // Se valida cuando es impedimento \r\n                else if (cantidadImpedimentos == 1 && element.attributes.tipo_actuacion == 1 && tipoActuacion == \"Impedimento\") {\r\n\r\n                    // Se setea el valor para que auto cargue la plantilla\r\n                    setMasActuacionId(element.id);\r\n\r\n                    // Se añade para qué quede preseleccionada en el select\r\n                    setListaActuacionesDefault({ label: element.attributes.nombre_actuacion.toUpperCase(), value: element.id });\r\n                }\r\n\r\n                // Se valida cuando es comisorio\r\n                else if (cantidadComisorios == 1 && element.attributes.tipo_actuacion == 2 && tipoActuacion == \"Comisorio\") {\r\n\r\n                    // Se setea el valor para que auto cargue la plantilla\r\n                    setMasActuacionId(element.id);\r\n\r\n                    // Se añade para qué quede preseleccionada en el select\r\n                    setListaActuacionesDefault({ label: element.attributes.nombre_actuacion.toUpperCase(), value: element.id });\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se setea el valor al array lista\r\n        setListaActuacionesOptions(listaActuacionesValidar);\r\n    }\r\n\r\n    // Metodo encargado de enviar los datos al backend\r\n    const enviarDatos = (datos) => {\r\n\r\n        // Se usa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se captura el id de la actuacion\r\n        const actuacionId = datos.id_actuacion;\r\n\r\n        // Se valida si tiene un archivo valido cargado\r\n        if (!getHayArchivo) {\r\n\r\n            // Se usa el cargando\r\n            window.showSpinner(false);\r\n\r\n            // Se muestra el modal de error\r\n            setErrorApi(\"DEBE ADJUNTAR UN DOCUMENTO VÁLIDO\");\r\n\r\n            // Se ejecuta el modal\r\n            window.showModal(1);\r\n\r\n            // Se retorna falso\r\n            return false;\r\n        }\r\n\r\n        // Se validan que los campos adicionales tenga informacion obligatoria\r\n        if (from.getCamposAdicionales !== undefined && from.getCamposAdicionales.length > 0) {\r\n\r\n            // Se inicializa la variable\r\n            var encontroCampoVacio = false;\r\n\r\n            // Se recorre el array\r\n            from.getCamposAdicionales.forEach(e => {\r\n\r\n                /**\r\n                    Se valida que el array de campos adicionales tenga información requerida\r\n                    0 = Campo tipo texto\r\n                    1 = Campo tipo lista\r\n                    2 = campo tipo fecha\r\n                */\r\n                if (e.tipoCampo === \"0\" || e.tipoCampo === \"1\") {\r\n\r\n                    // Se valida que tenga informacion el texto o fecha\r\n                    if (!e.items) {\r\n\r\n                        // Se redeclara la variable \r\n                        encontroCampoVacio = true;\r\n                    }\r\n                } else if (e.tipoCampo == 2) {\r\n\r\n                    // Se valida que tenga informacion el texto o fecha\r\n                    if (!e.itemsSeleccionado) {\r\n\r\n                        // Se redeclara la variable \r\n                        encontroCampoVacio = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Se valida que haya encontrado el mensaje de error\r\n            if (encontroCampoVacio) {\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se setea el modal\r\n                setModalState({\r\n                    title: getNombreProceso + \" :: CREAR \" + tipoActuacion.toUpperCase(),\r\n                    message: \"TODOS LOS CAMPOS ADICIONALES SON OBLIGATORIOS\",\r\n                    show: true,\r\n                    alert: global.Constants.TIPO_ALERTA.ERROR\r\n                });\r\n\r\n                // Se retorna false\r\n                return false;\r\n            }\r\n        } else if ((from.campos !== undefined && from.campos.length > 0) &&\r\n            from.getCamposAdicionales === undefined) {\r\n\r\n            // Se quita el cargando\r\n            window.showSpinner(false);\r\n\r\n            // Se setea el modal\r\n            setModalState({\r\n                title: getNombreProceso + \" :: CREAR \" + tipoActuacion.toUpperCase(),\r\n                message: \"TODOS LOS CAMPOS ADICIONALES SON OBLIGATORIOS\",\r\n                show: true,\r\n                alert: global.Constants.TIPO_ALERTA.ERROR\r\n            });\r\n\r\n            // Se retorna false\r\n            return false;\r\n        }\r\n\r\n        // Se valida cuando es tipo comisorio\r\n        if (tipoActuacion == 2 || tipoActuacion == \"Comisorio\") {\r\n\r\n            // Se inicializa la variable\r\n            const dataUsuarioComisorio = {\r\n                \"data\": {\r\n                    \"type\": \"usuario-comisionado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": \"\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Se ejecuta la API\r\n            GenericApi.addGeneric(\"proceso-diciplinario/usuario-comisionado/\" + getUsuarioComisionado + \"/\" + procesoDisciplinarioId, dataUsuarioComisorio).then(\r\n\r\n                // Se inicializa la variable de respuesta\r\n                datos => {\r\n\r\n                    // Se valida que no haya error\r\n                    if (datos.error) {\r\n\r\n                        // Se setea el modal\r\n                        setModalState({ title: getNombreProceso + \" :: CREAR \" + tipoActuacion.toUpperCase(), message: datos.error.toString(), show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        }\r\n\r\n        // Se inicializa la variable\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'actuaciones',\r\n                \"attributes\": {\r\n                    \"id_actuacion\": actuacionId,\r\n                    \"usuario_accion\": getNombreUsuario,\r\n                    \"id_estado_actuacion\": 3,\r\n                    \"created_user\": getNombreUsuario,\r\n                    \"fileBase64\": inputListArchivos[0].filebase64,\r\n                    \"nombre_archivo\": inputListArchivos[0].archivo.name,\r\n                    \"ext\": inputListArchivos[0].ext,\r\n                    \"peso\": inputListArchivos[0].archivo.size,\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": selected_id_etapa,\r\n                    \"estado\": true,\r\n                    \"campos_finales\": from.getCamposAdicionales ? from.getCamposAdicionales : [],\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(\"actuacionId maestra -> \", actuacionId);\r\n\r\n        // Se ejecuta la API\r\n        GenericApi.addGeneric(\"actuaciones\", data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n\r\n                    // Constante del tipo\r\n                    var tipoActuacionDetalle;\r\n\r\n                    // Se valida el tipo de actuacion a enviar en el detalle\r\n                    if (tipoActuacion == 2 || tipoActuacion == \"Comisorio\") {\r\n\r\n                        // Se envia como tipo Comisorio\r\n                        tipoActuacionDetalle = 2;\r\n                    } else if (tipoActuacion == 1 || tipoActuacion == \"Impedimento\") {\r\n\r\n                        // Se envia como tipo Impedimento\r\n                        tipoActuacionDetalle = 1;\r\n                    } else if (tipoActuacion == 1 || tipoActuacion == \"Actuacion\" || tipoActuacion == \"Actuación\") {\r\n\r\n                        // Se envia como tipo Impedimento\r\n                        tipoActuacionDetalle = 0;\r\n                    }\r\n\r\n                    // Se setea el modal\r\n                    setModalState({\r\n                        title: getNombreProceso + \" :: CREAR \" + tipoActuacion.toUpperCase(),\r\n                        message: global.Constants.MENSAJES_MODAL.EXITOSO,\r\n                        show: true, redirect: \"/ActuacionesVer/\" + procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/1\",\r\n                        from: {\r\n                            from: from,\r\n                            selected_id_etapa: selected_id_etapa,\r\n                            id: datos.data.id,\r\n                            nombre: getListaActuacionesDefault.label,\r\n                            estadoActualActuacion: \"Pendiente aprobación\",\r\n                            tipoActuacion: tipoActuacionDetalle,\r\n                            actuacionIdMaestra: actuacionId\r\n                        },\r\n                        alert: global.Constants.TIPO_ALERTA.EXITO\r\n                    });\r\n\r\n                } else {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: getNombreProceso + \" :: CREAR \" + tipoActuacion.toUpperCase(), message: datos.error.toString(), show: true, redirect: '/ActuacionesLista', from: { from: from, selected_id_etapa: selected_id_etapa }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cambiar la actuacion seleccionada\r\n    const selectChangeMasActuacion = (id, nombreDocumentoMasActuacion, nombreActuacion) => {\r\n\r\n        // Se usa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se setea el nombre de la actuacion\r\n        setNombreDocumentoMasActuacion(nombreDocumentoMasActuacion);\r\n\r\n        // Se setea el id de la actuacion\r\n        setMasActuacionId(id);\r\n\r\n        // Se añade para qué quede preseleccionada en el select\r\n        setListaActuacionesDefault({ label: nombreDocumentoMasActuacion, value: id });\r\n    }\r\n\r\n    const selectChangeUsuarioComisionado = (value) => {\r\n        setUsuarioComisionado(value);\r\n    }\r\n\r\n    const selectUsuarioComisorio = () => {\r\n\r\n        return (\r\n            getListaUsuariosComisorio && getListaUsuariosComisorio.length ? getListaUsuariosComisorio.map((user, i) => {\r\n                return (\r\n                    <option key={user.id} value={user.id}>{user.attributes.nombre + \" \" + user.attributes.apellido}</option>\r\n                )\r\n            }) : \"\"\r\n        )\r\n    }\r\n\r\n    function formatBytes(bytes, decimals = 3) {\r\n        if (bytes === undefined) return '0 Bytes';\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const dm = decimals < 0 ? 0 : decimals;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    }\r\n\r\n    function obtenerPesoTotalArchivos(list) {\r\n        let peso = 0;\r\n        list.forEach(\r\n            (archivo, index) => {\r\n                if (archivo.archivo.size) {\r\n                    peso += archivo.archivo.size;\r\n                }\r\n            }\r\n        )\r\n\r\n        if (peso > 15000000) {\r\n            setErrorApi('El PESO/TAMAÑO DE TODOS LOS ARCHIVO SADJUNTOS SUPERAN LOS 15 MB PERMITIDOS PARA EL REGISTRO. VERIFIQUE EL TAMAÑO Y ELIMINE ALGUNOS ADJUNTOS')\r\n            window.showModal(1)\r\n        }\r\n\r\n        //setPesoTotalArchivos(peso);\r\n    }\r\n\r\n    const handleInputChangeArchivos = (e, index) => {\r\n\r\n        const { name, files } = e.target;\r\n        if (files.length > 0) {\r\n            const extension = getFileExtension(files[0].name);\r\n\r\n            if (extension == global.Constants.TIPO_DOCUMENTO_PERMITIDO_ACTUACIONES.DOCX) {\r\n\r\n                const list = [...inputListArchivos];\r\n                list[index][name] = files[0];\r\n\r\n                if (files[0]) {\r\n                    list[index][name] = files[0];\r\n                } else {\r\n                    list[index][name] = '';\r\n                    list[index].filebase64 = '';\r\n                    list[index].size = 0;\r\n                    list[index].ext = \"\";\r\n                    setInputListArchivos(list);\r\n                }\r\n\r\n                // Conversion a Base64\r\n                Array.from(e.target.files).forEach(archivo => {\r\n                    var reader = new FileReader();\r\n                    reader.readAsDataURL(archivo);\r\n                    reader.onload = function () {\r\n                        var arrayAuxiliar = [];\r\n                        var base64 = reader.result;\r\n                        arrayAuxiliar = base64.split(',');\r\n                        list[index].filebase64 = arrayAuxiliar[1];\r\n                        list[index].ext = extension;\r\n                        setInputListArchivos(list);\r\n                    }\r\n                })\r\n                setHayArchivo(true);\r\n                obtenerPesoTotalArchivos(list);\r\n            } else {\r\n                setHayArchivo(false);\r\n                setErrorApi(\"EL DOCUMENTO SELECCIONADO NO TIENE UN FORMATO PERMITIDO\");\r\n                window.showModal(1);\r\n                return false;\r\n            }\r\n        } else {\r\n            const list = [...inputListArchivos];\r\n            list[index][name] = '';\r\n            list[index].filebase64 = '';\r\n            list[index].size = 0;\r\n            setInputListArchivos(list);\r\n            obtenerPesoTotalArchivos(list);\r\n        }\r\n\r\n    }\r\n\r\n    function getFileExtension(filename) {\r\n        return filename.slice((filename.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<InfoErrorApi error={errorApi} />}\r\n            {<ModalGen data={getModalState} />}\r\n            {<Spinner />}\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    id_actuacion: '',\r\n                    usuario_comisionado: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    let errores = {}\r\n                    valores.id_actuacion = getMasActuacionId;\r\n                    valores.usuario_comisionado = getUsuarioComisionado;\r\n\r\n                    if (tipoActuacion == \"Comisorio\" && valores.usuario_comisionado == 0) {\r\n                        errores.usuario_comisionado = 'DEBE SELECCIONAR UN USUARIO COMISIONADO PARA REGISTRAR'\r\n                    }\r\n\r\n                    if (valores.id_actuacion == 0) {\r\n                        errores.id_actuacion = 'DEBE SELECCIONAR UNA ACTUACIÓN PARA REGISTRAR'\r\n                    }\r\n\r\n                    // if (valores.id_actuacion != 0 && valores.id_actuacion != \"\") {\r\n                    //     let id_actuacion = valores.id_actuacion;\r\n\r\n                    //     listaTipoActuacion.forEach(element => {\r\n                    //         if (element.id == id_actuacion) {\r\n                    //             setValueDocumentoRuta(element.nombre_plantilla);\r\n                    //         }\r\n                    //     });\r\n                    // }\r\n\r\n                    return errores\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                    {deDondeVengo ? null : (\r\n                                        <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}><small>{tipoActuacion}</small></Link></li>\r\n                                    )}\r\n                                    <li class=\"breadcrumb-item\"> <small>AGREGAR {tipoActuacion}</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">{getNombreProceso} :: <strong>CREAR {tipoActuacion.toUpperCase()}</strong></h3>\r\n                            </div>\r\n\r\n                            <div className=\"block-content\">\r\n                                <div className='text-right'>\r\n                                    {deDondeVengo ? (\r\n                                        <Link to={`/RamasProceso/`} title='Regresar a lista de Actuaciones' state={{ from: from }}>\r\n                                            <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                                        </Link>\r\n                                    ) :\r\n                                        (rutaParametrizada == \"Comisorio\") ?\r\n                                            <Link to={`/ActuacionesLista/`} title='Regresar a lista de Actuaciones' state={{ from: from, selected_id_etapa: selected_id_etapa }}>\r\n                                                <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                                            </Link>\r\n                                            :\r\n                                            <Link to={tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`} title='Regresar a lista de Actuaciones' state={{ from: from, selected_id_etapa: selected_id_etapa }}>\r\n                                                <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                                            </Link>}\r\n\r\n                                </div>\r\n                                <div className='row mb-4'>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            {getListaActuacionesOptions && getListaActuacionesOptions.length > 0 ?\r\n                                                <label htmlFor=\"id_actuacion\">{tipoActuacion.toUpperCase()} <span className=\"text-danger\"> *</span></label>\r\n                                                : <div>\r\n                                                    <label htmlFor=\"id_actuacion\">SIN DATOS O INFORMACIÓN PARA REGISTRAR <span className=\"text-danger\"></span></label>\r\n                                                </div>\r\n                                            }\r\n                                            {getListaActuacionesOptions && getListaActuacionesOptions.length > 0 ?\r\n                                                <Select\r\n                                                    placeholder={global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}\r\n                                                    defaultValue={getListaActuacionesDefault}\r\n                                                    noOptionsMessage={() => \"Sin datos\"}\r\n                                                    options={getListaActuacionesOptions.map(e =>\r\n                                                        ({ label: e.label, value: e.value })\r\n                                                    )}\r\n                                                    onChange={(e) => selectChangeMasActuacion(e.value, e.label)}\r\n                                                /> : null\r\n                                            }\r\n                                            <ErrorMessage name=\"id_actuacion\" component={() => (<span className=\"text-danger\">{errors.id_actuacion}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {tipoActuacion == \"Comisorio\" && getListaActuacionesOptions && getListaActuacionesOptions.length > 0 ? (\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"usuario_comisionado\">USUARIO COMISIONADO<span className=\"text-danger\">*</span></label>\r\n                                                <select className=\"form-control\" id=\"usuario_comisionado\" name=\"usuario_comisionado\" onChange={e => selectChangeUsuarioComisionado(e.target.value)}>\r\n                                                    <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                    {selectUsuarioComisorio()}\r\n                                                </select>\r\n                                                <ErrorMessage name=\"usuario_comisionado\" component={() => (<span className=\"text-danger\">{errors.usuario_comisionado}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n\r\n                                {/* {getParamsForm()} */}\r\n                                {getMasActuacionId > 0 ? <ActuacionParametrosPlantillaForm from={from} id_mas_actuacion={getMasActuacionId} /> : null}\r\n                                {/* <div className=\"col-md-12\" style={{ marginLeft: '10px' }}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"documento_ruta\">Descargar documento diligenciado en Word <span className=\"text-danger\">* </span></label>\r\n                                        <a href={getValueDocumentoRuta} id='documento_ruta' name='documento_ruta' style={{ marginLeft: '10px' }} target=\"_blank\" download class=\"btn btn-success\"><i className=\"fa fa-download\" ></i> </a>\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                                {getMasActuacionId > 0 ?\r\n                                    inputListArchivos.map((x, i) => {\r\n                                        return (\r\n                                            <div className=\"col-md-12 mt-4\" key={i}>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className='row'>\r\n                                                        <div className='col-md-12'>\r\n                                                            <label>DOCUMENTO ADJUNTO DILIGENCIADO (WORD)<span className=\"text-danger\">* </span></label>\r\n                                                        </div>\r\n                                                        <div className='col-md-12' style={{ marginLeft: '13px' }}>\r\n                                                            <div className='row'>\r\n                                                                <div className='col-md-6'>\r\n                                                                    <label className=\"custom-file-label\" htmlFor=\"example-file-input-custom\" data-toggle=\"custom-file-input\">{x.archivo.name}</label>\r\n                                                                    <input className=\"custom-file-input\" data-toggle=\"custom-file-input\" type=\"file\" accept='.docx' name=\"archivo\" onChange={e => handleInputChangeArchivos(e, i)} required />\r\n                                                                    <label>Peso del archivo: {formatBytes(x.archivo.size)}</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"block-content block-content-full text-right bg-light\">\r\n                            {getListaActuacionesOptions && getListaActuacionesOptions.length > 0\r\n                                ?\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\"> {global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n                                : null}\r\n                            {deDondeVengo ? (\r\n                                <Link to={`/RamasProceso/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\"> {global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                </Link>\r\n                            ) :\r\n                                (rutaParametrizada == \"Comisorio\") ?\r\n                                    <Link to={`/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}>\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\"> {global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                    </Link>\r\n                                    :\r\n                                    <Link to={tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}>\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\"> {global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                    </Link>\r\n                            }\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default ActuacionesForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}