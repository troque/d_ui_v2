{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Herramientas\\\\ActuacionParametrosPlantillaForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport DataTable from 'react-data-table-component';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport '../../Utils/Constants';\nimport { getUser } from '../../Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ActuacionParametrosPlantillaForm(props) {\n  _s();\n\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let id_etapa = from.idEtapa;\n  const fechaRegistro = from.fechaRegistro;\n  const fechaIngreso = from.fechaIngreso;\n  const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\n  const registradoPor = from.registradoPor;\n  const vigencia = from.vigencia;\n  const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getListaParametros, setListaParametros] = useState({\n    params: []\n  });\n  const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({\n    data: []\n  });\n  const [getListaCamposPorCamposTemporal, setListaCamposPorCamposTemporal] = useState({\n    data: []\n  }); //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\n\n  const [getAntecedentesLista, setAntecedentesLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getInteresadosLista, setInteresadosLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getParametrosCampos, setParametrosCampos] = useState();\n  const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({\n    data: []\n  }); // const campos = [\n  //     { title: 'Antecedentes', value: null, type: \"Antecedentes\" },\n  //     { title: 'Dependencia', value: dependencia },\n  //     { title: 'Nombre', value: null, type: \"Investigados\" },\n  //     { title: 'Cargo', value: null, type: \"CargosInvestigados\" },\n  //     { title: 'Entidad', value: null, type: \"EntidadesInvestigados\" },\n  //     { title: 'Interesados', value: null, type: \"Interesados\" },\n  //     { title: 'Fecha de ingreso', value: fechaIngreso },\n  //     { title: 'Fecha de registro', value: fechaRegistro },\n  //     { title: 'Número de auto (generado despues de aprobación)', value: '${numero_de_auto}' },\n  //     { title: 'Número de radicado', value: radicado },\n  //     //{ id: 8, title: 'Campo de entrada por usuario', value: null },\n  // ];\n  // Metodo encargado de cargar la informacion general del formulario\n\n  useEffect(() => {\n    // Se inicializa la funcion asyncrona\n    async function fetchData() {\n      // Metodo encargado de cargar los parametros de la plantilla\n      cargarTablaParametrosActuaciones();\n    } // Se llama el metodo\n\n\n    fetchData();\n  }, [props.id_mas_actuacion]); // Metodo encargado de cargar los parametros generales de la plantilla de la BD\n\n  const cargarTablaParametrosActuaciones = () => {\n    // Se inicializa el array\n    var array = []; // Se inicializa la API\n\n    GenericApi.getGeneric('parametro-campos').then( // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se recorre el array para insertar los valores necesarios\n        for (let index = 0; index < datos.data.length; index++) {\n          // Se captura los datos por posicion\n          const element = datos.data[index].attributes;\n          const title = element.nombre_campo;\n          const estado = element.estado == \"1\" ? true : false;\n          const type = element.type;\n          const value = validarValueParametros(type, estado); // Se añade el dato al array general\n\n          array.push({\n            title: title,\n            value: value,\n            type: type,\n            check: estado\n          });\n        } // Se setea la respuesta en la constante\n\n\n        setListaParametrosBaseDatos(array); // Se generan la lista de parametros del documento\n\n        cargarParametros(array);\n      }\n    });\n  }; // Metodo encargado de retorna el valor por el elemento\n\n\n  const validarValueParametros = (element, estado) => {\n    // Se inicializa la variable\n    let valor; // Se valida por el elemento\n\n    if ((element == \"Sinproc\" || element == \"Número de radicado\" || element == \"Radicación\" || element == \"Radicado\") && estado) {\n      valor = radicado;\n    } else if (element == \"Usuario\" && estado) {\n      valor = registradoPor;\n    } else if ((element == \"Dependencia Origen\" || element == \"Dependencia\") && estado) {\n      valor = dependencia;\n    } else if (element == \"Vigencia\" && estado) {\n      valor = vigencia;\n    } else if (element == \"Fecha de Registro\" && estado) {\n      valor = fechaRegistro;\n    } else if (element == \"Fecha de Ingreso\" && estado) {\n      valor = fechaIngreso;\n    } else if (element == \"Generado\" && estado) {\n      valor = generadoPor;\n    } else if ((element == \"Número de auto (generado despues de aprobación)\" || element == \"Auto\") && estado) {\n      valor = \"${numero_de_auto}\";\n    } // Se retorna el valor\n\n\n    return valor;\n  };\n\n  const selectCampos = parametro => {\n    return getListaParametrosBaseDatos.map((item, i) => {\n      var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\n\n      if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this);\n      }\n    });\n  };\n\n  const handleChangeInteresados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getInteresadosLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setInteresadosLista(valorId);\n    let val = getInteresadosLista.map(p => {\n      if (p.checked == true) {\n        var primerApellido = p.attributes.primer_apellido != null ? p.attributes.primer_apellido : \"\";\n        var segundoApellido = p.attributes.segundo_apellido != null ? p.attributes.segundo_apellido : \"\";\n        var primerNombre = p.attributes.primer_nombre != null ? p.attributes.primer_nombre : \"\";\n        var segundoNombre = p.attributes.segundo_nombre != null ? p.attributes.segundo_nombre : \"\";\n        var sujetoProcesalNombre = p.attributes.sujeto_procesal_nombre != \"\" ? p.attributes.sujeto_procesal_nombre : \"\";\n        var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\n        var nombre = nombreCompleto;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  function checkeoAutomaticoInteresados(parametro, id_campo) {\n    setInteresadosLista(getInteresadosLista);\n    var primerApellido = getInteresadosLista[0].attributes.primer_apellido != null ? getInteresadosLista[0].attributes.primer_apellido : \"\";\n    var segundoApellido = getInteresadosLista[0].attributes.segundo_apellido != null ? getInteresadosLista[0].attributes.segundo_apellido : \"\";\n    var primerNombre = getInteresadosLista[0].attributes.primer_nombre != null ? getInteresadosLista[0].attributes.primer_nombre : \"\";\n    var segundoNombre = getInteresadosLista[0].attributes.segundo_nombre != null ? getInteresadosLista[0].attributes.segundo_nombre : \"\";\n    var sujetoProcesalNombre = getInteresadosLista[0].attributes.sujeto_procesal_nombre != null ? getInteresadosLista[0].attributes.sujeto_procesal_nombre : \"\";\n    var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\n    var nombre = nombreCompleto; // var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoAntecedentes(parametro, id_campo) {\n    setAntecedentesLista(getAntecedentesLista);\n    var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\n    setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\n    var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\n    setCargosInvestigadoLista(getCargosInvestigadoLista);\n    var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\n    setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\n    var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoFechaAntecedentes(parametro, id_campo) {\n    setAntecedentesLista(getAntecedentesLista);\n    var nombre = `${getAntecedentesLista[0].attributes.fecha_creado}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  const handleChangeAntecedentes = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getAntecedentesLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setAntecedentesLista(valorId);\n    let val = getAntecedentesLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.descripcion}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeFechaAntecedentes = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getAntecedentesLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setAntecedentesLista(valorId);\n    let val = getAntecedentesLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.fecha_creado}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadesInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_investigado) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setEntidadesInvestigadoLista(valorId);\n    let val = getEntidadesInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_investigado}`;\n        var nombre = `${p.attributes.nombre_investigado}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getCargosInvestigadoLista.map(item => {\n      if (value == item.attributes.cargo) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getCargosInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.cargo}`;\n        var nombre = `${p.attributes.cargo}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_entidad) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getEntidadInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_entidad}`;\n        var nombre = `${p.attributes.nombre_entidad}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const selectAntecedentes = (parametro, id_campo) => {\n    if (Array.isArray(getAntecedentesLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getAntecedentesLista && getAntecedentesLista.length == 1) {\n        checkeoAutomaticoAntecedentes(parametro, id_campo);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getAntecedentesLista[0].id,\n            name: 'check' + getAntecedentesLista[0].id,\n            value: getAntecedentesLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this), \" \", getAntecedentesLista[0].attributes.descripcion]\n        }, 'keyCheck' + getAntecedentesLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this);\n      } else if (getAntecedentesLista.length > 1) {\n        return getAntecedentesLista.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + item.id,\n              name: 'check' + item.id,\n              value: item.id,\n              onChange: e => handleChangeAntecedentes(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 33\n            }, this), \" \", item.attributes.descripcion]\n          }, 'keyCheck' + item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 29\n          }, this) // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectFechaAntecedentes = (parametro, id_campo) => {\n    if (Array.isArray(getAntecedentesLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getAntecedentesLista && getAntecedentesLista.length == 1) {\n        checkeoAutomaticoFechaAntecedentes(parametro, id_campo);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getAntecedentesLista[0].attributes.fecha_creado,\n            name: 'check' + getAntecedentesLista[0].attributes.fecha_creado,\n            value: getAntecedentesLista[0].attributes.fecha_creado,\n            onChange: e => handleChangeFechaAntecedentes(0, parametro, id_campo),\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this), \" \", getAntecedentesLista[0].attributes.fecha_creado]\n        }, 'keyCheck' + getAntecedentesLista[0].attributes.fecha_creado, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }, this);\n      } else if (getAntecedentesLista.length > 1) {\n        return getAntecedentesLista.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + item.fecha_creado,\n              name: 'check' + item.fecha_creado,\n              value: item.fecha_creado //onChange={(e) => handleChangeFechaAntecedentes(e, parametro, id_campo)}\n              ,\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 33\n            }, this), \" \", item.attributes.fecha_creado]\n          }, 'keyCheck' + item.fecha_creado, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 29\n          }, this) // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectInteresados = (parametro, id_campo) => {\n    if (Array.isArray(getInteresadosLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getInteresadosLista && getInteresadosLista.length == 1) {\n        checkeoAutomaticoInteresados(parametro, id_campo);\n        var primerApellido = getInteresadosLista[0].attributes.primer_apellido != \"\" ? getInteresadosLista[0].attributes.primer_apellido : \"\";\n        var segundoApellido = getInteresadosLista[0].attributes.segundo_apellido != \"\" ? getInteresadosLista[0].attributes.segundo_apellido : \"\";\n        var primerNombre = getInteresadosLista[0].attributes.primer_nombre != \"\" ? getInteresadosLista[0].attributes.primer_nombre : \"\";\n        var segundoNombre = getInteresadosLista[0].attributes.segundo_nombre != \"\" ? getInteresadosLista[0].attributes.segundo_nombre : \"\";\n        var sujetoProcesalNombre = getInteresadosLista[0].attributes.sujeto_procesal_nombre != \"\" ? getInteresadosLista[0].attributes.sujeto_procesal_nombre : \"\";\n        var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\n        var nombre = nombreCompleto; // var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getInteresadosLista[0].id,\n            name: 'check' + getInteresadosLista[0].id,\n            value: getInteresadosLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getInteresadosLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this);\n      } else if (getInteresadosLista.length > 1) {\n        return getInteresadosLista.map((item, i) => {\n          var primerApellido = item.attributes.primer_apellido != null ? item.attributes.primer_apellido : \"\";\n          var segundoApellido = item.attributes.segundo_apellido != null ? item.attributes.segundo_apellido : \"\";\n          var primerNombre = item.attributes.primer_nombre != null ? item.attributes.primer_nombre : \"\";\n          var segundoNombre = item.attributes.segundo_nombre != null ? item.attributes.segundo_nombre : \"\";\n          var sujetoProcesalNombre = item.attributes.sujeto_procesal_nombre != \"\" ? item.attributes.sujeto_procesal_nombre : \"\";\n          var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\n          var nombre = nombreCompleto; // var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + nombre,\n              name: 'check' + nombre,\n              value: item.id,\n              onChange: e => handleChangeInteresados(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 33\n            }, this), \" \", nombre]\n          }, 'keyCheck' + nombre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 29\n          }, this) // <option key={nombre} value={nombre}>{nombre}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadesInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\n        let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getEntidadesInvestigadoLista[0].id,\n            name: 'check' + getEntidadesInvestigadoLista[0].id,\n            value: getEntidadesInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getEntidadesInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }, this);\n      } else if (getEntidadesInvestigadoLista.length > 1) {\n        return getEntidadesInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.nombre_investigado}`;\n          var nombre = `${item.attributes.nombre_investigado}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 33\n            }, this) //<option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const selectCargosInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getCargosInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getCargosInvestigadoLista[0].id,\n            name: 'check' + getCargosInvestigadoLista[0].id,\n            value: getCargosInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getCargosInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 21\n        }, this);\n      } else if (getCargosInvestigadoLista.length > 1) {\n        return getCargosInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.cargo}`;\n          var nombre = `${item.attributes.cargo}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeCargosInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 33\n            }, this) // <option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const selectEntidadesInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getEntidadInvestigadoLista[0].id,\n            name: 'check' + getEntidadInvestigadoLista[0].id,\n            value: getEntidadInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getEntidadInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 21\n        }, this);\n      } else if (getEntidadInvestigadoLista.length > 1) {\n        return getEntidadInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.nombre_entidad}`;\n          var nombre = `${item.attributes.nombre_entidad}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeEntidadesInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 33\n            }, this) //<option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const cargarValoresDeParametro = parametro => {\n    const arrayOtherElements = [\"Dependencia Origen\", \"Delegada\", \"Radicado\", \"Radicación\", \"Auto\"];\n    var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\n      return item.parametro == parametro;\n    });\n    var tempCampo = campoParametro[0]; // console.log(\"tempCampo -> \", tempCampo);\n\n    if (tempCampo != undefined && getListaParametrosBaseDatos[tempCampo.id_campo] != undefined) {\n      var itemCampo = getListaParametrosBaseDatos[tempCampo.id_campo]; // Tiene un valor por defecto\n\n      if (itemCampo.value != null) {\n        var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\n          if (item.parametro == parametro) {\n            item.id_campo = tempCampo.id_campo;\n            var itemCampoId = getListaParametrosBaseDatos[tempCampo.id_campo];\n            item.valor = itemCampoId.value != null ? itemCampoId.value : \"\";\n            item.valorTemporal = itemCampoId.value != null ? itemCampoId.value : \"\";\n          }\n\n          return item;\n        });\n        var validarElemento = document.getElementById('id' + itemCampo.title);\n\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        } // setListaCamposPorParametro({ data: newParams });\n\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: itemCampo.value\n        }, void 0, false);\n      } else if (itemCampo.title == \"Fecha Hechos\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectFechaAntecedentes(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Antecedentes\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectAntecedentes(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Interesados\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (getInteresadosLista[0] && getInteresadosLista.length == 1 && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectInteresados(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Investigado\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (getEntidadesInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1 && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectInvestigados(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Cargo\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (getCargosInvestigadoLista[0] && getCargosInvestigadoLista.length == 1 && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectCargosInvestigados(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Entidad\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (getEntidadInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1 && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectEntidadesInvestigados(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Seleccione un campo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 21\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const selectChangeListaCampos = (parametro, id_campo, value) => {\n    //console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\n    var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n      if (item.parametro == parametro) {\n        item.id_campo = id_campo;\n        var itemCampo = getListaParametrosBaseDatos[id_campo];\n        item.valor = itemCampo.value != null ? itemCampo.value : value;\n        item.valorTemporal = itemCampo.value != null ? itemCampo.value : value;\n      }\n\n      return item;\n    }); //setListaCamposPorParametroDefinitiva({ data: newParams });\n    //console.log(newParams);\n  }; // Metodo encargado de generar las columnas de los parametros de la plantilla\n\n\n  const columnsParametros = [{\n    name: 'Parametros de la plantilla',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: parametro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 32\n    }, this),\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Campo',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      id: `id${parametro}`,\n      name: `name${parametro}`,\n      onChange: e => selectChangeListaCampos(parametro, e.target.value, \"\"),\n      disabled: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Por favor seleccione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 21\n      }, this), selectCampos(parametro)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 17\n    }, this),\n    sortable: false,\n    width: \"25%\"\n  }, {\n    name: 'Valor seleccionado',\n    width: \"50%\",\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: cargarValoresDeParametro(parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 17\n    }, this)\n  } // {\n  //     name: 'Activar/Inactivar',\n  //     width: \"10%\",\n  //     cell: parametro =>\n  //         <div className='row'>\n  //             <div className='col'>\n  //                 {cargarCheckParametro(parametro)}\n  //             </div>\n  //         </div>\n  // }\n  ]; // Metodo encargado de generar las columnas de los parametros de la plantilla\n\n  const columnsCampos = [{\n    name: 'Campo',\n    cell: campo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: campo.nombreCampo ? campo.nombreCampo : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 17\n    }, this),\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Tipo',\n    cell: campo => /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      id: `idCampo${campo.nombreCampo}`,\n      name: `name${campo.nombreCampo}`,\n      disabled: true,\n      children: /*#__PURE__*/_jsxDEV(\"option\", {\n        value: validarTipoCampo(campo.tipoCampo),\n        selected: true,\n        children: [\" \", validarTipoCampo(campo.tipoCampo), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 17\n    }, this),\n    sortable: false,\n    width: \"25%\"\n  }, {\n    name: 'Items',\n    width: \"50%\",\n    cell: campo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: cargarValoresCampos(campo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 17\n    }, this)\n  }]; // Metodo encargado de cargar los valores de los campos\n\n  const cargarValoresCampos = campo => {\n    // Se inicializa la variable de campos\n    const campoParametro = campo; // console.log(\"campoParametro -> \", campoParametro);\n    // console.log(\"----------------------------------------------\");\n    // Se capturan la informacion del campo\n\n    const tipoCampo = campoParametro.tipoCampo;\n    const nombreCampo = campoParametro.nombreCampo;\n    const itemCampo = tipoCampo == 2 ? campoParametro.items : \"\"; // Se valida cuando el tipo campo es un listado\n\n    if (tipoCampo == 2) {\n      // Se retorna el html del tipo lista\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-control custom-switch custom-control-lg mb-2\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: itemCampo\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 17\n      }, this);\n    } else if (tipoCampo == 1) {\n      // Se retorna el html del tipo fecha \n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-control custom-switch custom-control-lg mb-2\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: itemCampo\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 17\n      }, this);\n    } else if (tipoCampo == 0) {\n      // Se retorna el html del tipo texto\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-control custom-switch custom-control-lg mb-2\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: itemCampo\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 17\n      }, this);\n    }\n  }; // Metodo encargado de validar el tipo del campo\n\n\n  const validarTipoCampo = tipo => {\n    // Se inicializa la variable\n    let nombreRetornado; // Se valida el tipo\n\n    if (tipo == 0) {\n      // Se redeclara la variable\n      nombreRetornado = \"Texto\";\n    } else if (tipo == 1) {\n      // Se redeclara la variable\n      nombreRetornado = \"Fecha\";\n    } else if (tipo == 2) {\n      // Se redeclara la variable\n      nombreRetornado = \"Lista\";\n    } // Se retorna el valor\n\n\n    return nombreRetornado;\n  }; // Metodo encargado de cargar los parametros de la base de datos\n\n\n  const cargarParametros = listaParametrosBaseDatos => {\n    // Se setean los valores en null y vacios para que no salga el limitante de las hooks\n    setListaParametros(null);\n    setAntecedentesLista({\n      data: []\n    });\n    setInteresadosLista({\n      data: []\n    });\n    setEntidadesInvestigadoLista({\n      data: []\n    });\n    setCargosInvestigadoLista({\n      data: []\n    });\n    setEntidadInvestigadoLista({\n      data: []\n    });\n    setListaCamposPorParametroTemporal({\n      data: []\n    });\n    setListaParametros({\n      data: []\n    }); // Se inicializa el array\n\n    const data = {\n      \"data\": {\n        \"type\": 'mas_actuaciones',\n        \"attributes\": {\n          \"id\": props.id_mas_actuacion\n        }\n      }\n    }; // Se inicializa la API\n\n    GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + props.id_mas_actuacion, data).then( // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setean los valores a la lista general de parametros\n        setListaParametros(datos); // Se recorre los parametros generales de la plantilla\n\n        var parametrosCampos = datos.params.map((item, i) => {\n          // Se busca el parametro con el de la base de datos\n          var indexCampo = listaParametrosBaseDatos.findIndex( // Se inicializa la variable\n          x => // Se valida que el parametro de la base de datos sea igual al parametro de la plantilla\n          x.title == item); // Se valida que haya encontrado un valor para asignarle el id\n\n          if (indexCampo >= 0) {\n            // Se retorna el array\n            return {\n              parametro: item,\n              id_campo: indexCampo,\n              valor: \"\"\n            };\n          } else {\n            // Se retorna el array\n            return {\n              parametro: item,\n              id_campo: \"\",\n              valor: \"\"\n            };\n          }\n        }); // Parametros de los campos e items\n\n        var parametrosItems = datos.campos && datos.campos.map((item, i) => {\n          // Se captura el tipo de campo\n          let tipoCampo = item.tipoCampo; // Se valida cuando es tipo lista\n\n          if (tipoCampo == 2) {\n            // Se setea la lista\n            return {\n              item: true,\n              parametro: item.nombreCampo,\n              id_campo: item.nombreCampo + i,\n              valor: item.items\n            };\n          } else {\n            // Se setea la lista\n            return {\n              item: true,\n              parametro: item.nombreCampo,\n              id_campo: item.nombreCampo + i,\n              valor: \"\"\n            };\n          }\n        }); // Se setean los valores de las listas\n\n        setListaCamposPorParametroTemporal({\n          data: parametrosCampos\n        });\n        setListaCamposPorCamposTemporal({\n          data: parametrosItems\n        }); // Se cargan los antecedentes, interesados y entidades del investigado\n\n        cargarEntidadesInvestigado();\n        cargarAntecedentes();\n        cargarInteresados();\n      }\n    }); // Se quita el cargando\n\n    window.showSpinner(false);\n  };\n\n  const cargarAntecedentes = () => {\n    const data = {\n      \"data\": {\n        \"type\": 'antecedente',\n        \"attributes\": {\n          \"antecedentes\": \"antecedentes\",\n          \"descripcion\": \"descripcion\",\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"fecha_registro\": Date.now(),\n          \"id_dependencia\": -1,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setAntecedentesLista(parametrosCampos);\n      }\n    });\n  };\n\n  const cargarInteresados = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"interesado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"tipo_documento\": \"1\",\n          \"numero_documento\": \"1\",\n          \"primer_nombre\": \"1\",\n          \"segundo_nombre\": \"1\",\n          \"primer_apellido\": \"1\",\n          \"segundo_apellido\": \"1\",\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setInteresadosLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Datos del interesado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const cargarEntidadesInvestigado = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"entidad_investigado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": \"1\",\n          \"requiere_registro\": true,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          var nombreInvestigado = item.attributes.nombre_investigado;\n          var cargoInvestigado = item.attributes.cargo;\n          var entidadInvestigado = item.attributes.nombre_entidad;\n\n          if (nombreInvestigado == null) {\n            item.attributes.nombre_investigado = \"NO_APLICA\";\n          }\n\n          if (cargoInvestigado == null) {\n            item.attributes.cargo = \"NO_APLICA\";\n          }\n\n          if (entidadInvestigado == null) {\n            item.attributes.nombre_entidad = \"NO_APLICA\";\n          }\n\n          item.checked = false;\n          return item;\n        });\n        setEntidadesInvestigadoLista(parametrosCampos);\n        setCargosInvestigadoLista(parametrosCampos);\n        setEntidadInvestigadoLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Entidades del investigado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const descargarArchivo = () => {\n    try {\n      window.showSpinner(true);\n      var params = getListaCamposPorParametroTemporal.data.map(item => {\n        return {\n          \"param\": item.parametro,\n          \"value\": item.valor\n        };\n      });\n      const data = {\n        \"data\": {\n          \"type\": \"mas_actuaciones\",\n          \"attributes\": {\n            \"params\": params\n          }\n        }\n      };\n      GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + props.id_mas_actuacion, data).then(datos => {\n        if (!datos.error) {\n          downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"docx\");\n          window.showSpinner(false);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: \",\n            message: datos.error.toString(),\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function downloadBase64File(contentType, base64Data, fileName, extension) {\n    const linkSource = `data:${contentType};base64,${base64Data}`;\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = linkSource;\n    downloadLink.download = fileName;\n    downloadLink.click();\n  }\n\n  const cargarCheckParametro = parametro => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        id: 'check' + parametro + '1',\n        name: 'check' + parametro + '1',\n        value: parametro + '1',\n        onChange: e => handleChangeStatus(e, parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 17\n      }, this)\n    }, 'keyCheck' + parametro + '1', false, {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleChangeStatus = (e, parametro) => {\n    // Se captura el elemento enviado por parametros\n    var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro); // Se valida si esta checkeado\n\n    if (e.target.checked) {\n      // Se devuelve el valor a vacio\n      var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n        // Se valida que el item recorrido sea igual al parametro checkeado\n        if (item.parametro == parametro) {\n          // Se captura el id del campo\n          item.id_campo = itemFilter[0].id_campo;\n          var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo]; // Se redefine el valor del item a vacio\n\n          item.valor = \"\";\n          item.valorTemporal = itemCampo.value != null ? itemCampo.value : itemFilter[0].value;\n        } // Se retorna el item\n\n\n        return item;\n      });\n    } else {\n      // Se devuelve el valor a vacio\n      var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n        // Se valida que el item recorrido sea igual al parametro checkeado\n        if (item.parametro == parametro) {\n          // Se captura el id del campo\n          item.id_campo = itemFilter[0].id_campo;\n          var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo]; // Se redefine el valor del item a su valor original\n\n          item.valor = item.valorTemporal;\n          item.valorTemporal = itemCampo.value != null ? itemCampo.value : itemFilter[0].value;\n        } // Se retorna el item\n\n\n        return item;\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1243,\n      columnNumber: 13\n    }, this), getListaParametros != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Parametros de la plantilla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1247,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1246,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-2 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n          columns: columnsParametros,\n          data: getListaParametros.params,\n          noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n          striped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1249,\n        columnNumber: 21\n      }, this), getListaParametros.campos && getListaParametros.campos.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          style: {\n            marginTop: '50px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Campos adicionales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1261,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1260,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 mt-2 mb-2\",\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n            columns: columnsCampos,\n            data: getListaParametros.campos,\n            noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n            striped: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-4 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mr-2\",\n          htmlFor: \"documento_ruta\",\n          children: \"Descargar documento pre-diligenciado con los valores seleccionados \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1275,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          title: \"Descargar documento diligenciado\",\n          onClick: () => descargarArchivo(),\n          className: \"btn btn-rounded btn-primary\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-file-word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1276,\n            columnNumber: 164\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1274,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Cargando parametros de la plantilla...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1281,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1280,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ActuacionParametrosPlantillaForm, \"zOCEVqb8mV1Sx34Yx8arocxLYOg=\", false, function () {\n  return [useLocation];\n});\n\n_c = ActuacionParametrosPlantillaForm;\nexport default ActuacionParametrosPlantillaForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActuacionParametrosPlantillaForm\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","DataTable","GenericApi","Spinner","ModalGen","getUser","ActuacionParametrosPlantillaForm","props","location","from","state","radicado","procesoDisciplinarioId","id_etapa","idEtapa","fechaRegistro","fechaIngreso","dependencia","nombre_dependencia","nombre","registradoPor","vigencia","generadoPor","nombre_completo","modalState","setModalState","title","message","show","getListaParametros","setListaParametros","params","getListaCamposPorParametroTemporal","setListaCamposPorParametroTemporal","data","getListaCamposPorCamposTemporal","setListaCamposPorCamposTemporal","getAntecedentesLista","setAntecedentesLista","links","meta","getInteresadosLista","setInteresadosLista","getEntidadesInvestigadoLista","setEntidadesInvestigadoLista","getCargosInvestigadoLista","setCargosInvestigadoLista","getEntidadInvestigadoLista","setEntidadInvestigadoLista","getParametrosCampos","setParametrosCampos","getListaParametrosBaseDatos","setListaParametrosBaseDatos","fetchData","cargarTablaParametrosActuaciones","id_mas_actuacion","array","getGeneric","then","datos","error","index","length","element","attributes","nombre_campo","estado","type","value","validarValueParametros","push","check","cargarParametros","valor","selectCampos","parametro","map","item","i","itemFilter","filter","x","undefined","id_campo","handleChangeInteresados","e","checked","target","valorId","id","val","p","primerApellido","primer_apellido","segundoApellido","segundo_apellido","primerNombre","primer_nombre","segundoNombre","segundo_nombre","sujetoProcesalNombre","sujeto_procesal_nombre","nombreCompleto","selectChangeListaCampos","toString","checkeoAutomaticoInteresados","checkeoAutomaticoAntecedentes","descripcion","checkeoAutomaticoInvestigadosNombre","nombre_investigado","checkeoAutomaticoInvestigadosCargo","cargo","checkeoAutomaticoInvestigadosEntidad","nombre_entidad","checkeoAutomaticoFechaAntecedentes","fecha_creado","handleChangeAntecedentes","handleChangeFechaAntecedentes","handleChangeInvestigados","handleChangeCargosInvestigados","handleChangeEntidadesInvestigados","selectAntecedentes","Array","isArray","selectFechaAntecedentes","selectInteresados","selectInvestigados","selectCargosInvestigados","selectEntidadesInvestigados","cargarValoresDeParametro","arrayOtherElements","campoParametro","tempCampo","itemCampo","newParamsItem","itemCampoId","valorTemporal","validarElemento","document","getElementById","hasAttribute","setAttribute","newParams","columnsParametros","name","cell","sortable","width","columnsCampos","campo","nombreCampo","validarTipoCampo","tipoCampo","cargarValoresCampos","items","tipo","nombreRetornado","listaParametrosBaseDatos","getByDataGeneric","parametrosCampos","indexCampo","findIndex","parametrosItems","campos","cargarEntidadesInvestigado","cargarAntecedentes","cargarInteresados","window","showSpinner","Date","now","redirect","nombreInvestigado","cargoInvestigado","entidadInvestigado","descargarArchivo","downloadBase64File","content_type","base_64","file_name","alert","global","Constants","TIPO_ALERTA","ERROR","console","contentType","base64Data","fileName","extension","linkSource","downloadLink","createElement","href","download","click","cargarCheckParametro","handleChangeStatus","DATA_TABLE","SIN_DATOS_TABLE","marginTop"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Herramientas/ActuacionParametrosPlantillaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport '../../Utils/Constants';\r\nimport { getUser } from '../../Utils/Common';\r\n\r\nfunction ActuacionParametrosPlantillaForm(props) {\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let id_etapa = from.idEtapa;\r\n    const fechaRegistro = from.fechaRegistro;\r\n    const fechaIngreso = from.fechaIngreso;\r\n    const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\r\n    const registradoPor = from.registradoPor;\r\n    const vigencia = from.vigencia;\r\n    const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaParametros, setListaParametros] = useState({ params: [] });\r\n    const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({ data: [] });\r\n    const [getListaCamposPorCamposTemporal, setListaCamposPorCamposTemporal] = useState({ data: [] });\r\n    //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getInteresadosLista, setInteresadosLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getParametrosCampos, setParametrosCampos] = useState();\r\n    const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({ data: [] });\r\n\r\n    // const campos = [\r\n    //     { title: 'Antecedentes', value: null, type: \"Antecedentes\" },\r\n    //     { title: 'Dependencia', value: dependencia },\r\n    //     { title: 'Nombre', value: null, type: \"Investigados\" },\r\n    //     { title: 'Cargo', value: null, type: \"CargosInvestigados\" },\r\n    //     { title: 'Entidad', value: null, type: \"EntidadesInvestigados\" },\r\n    //     { title: 'Interesados', value: null, type: \"Interesados\" },\r\n    //     { title: 'Fecha de ingreso', value: fechaIngreso },\r\n    //     { title: 'Fecha de registro', value: fechaRegistro },\r\n    //     { title: 'Número de auto (generado despues de aprobación)', value: '${numero_de_auto}' },\r\n    //     { title: 'Número de radicado', value: radicado },\r\n    //     //{ id: 8, title: 'Campo de entrada por usuario', value: null },\r\n    // ];\r\n\r\n    // Metodo encargado de cargar la informacion general del formulario\r\n    useEffect(() => {\r\n\r\n        // Se inicializa la funcion asyncrona\r\n        async function fetchData() {\r\n\r\n            // Metodo encargado de cargar los parametros de la plantilla\r\n            cargarTablaParametrosActuaciones();\r\n        }\r\n\r\n        // Se llama el metodo\r\n        fetchData();\r\n    }, [props.id_mas_actuacion]);\r\n\r\n    // Metodo encargado de cargar los parametros generales de la plantilla de la BD\r\n    const cargarTablaParametrosActuaciones = () => {\r\n\r\n        // Se inicializa el array\r\n        var array = [];\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('parametro-campos').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se recorre el array para insertar los valores necesarios\r\n                    for (let index = 0; index < datos.data.length; index++) {\r\n\r\n                        // Se captura los datos por posicion\r\n                        const element = datos.data[index].attributes;\r\n                        const title = element.nombre_campo;\r\n                        const estado = element.estado == \"1\" ? true : false;\r\n                        const type = element.type;\r\n                        const value = validarValueParametros(type, estado);\r\n\r\n                        // Se añade el dato al array general\r\n                        array.push({ title: title, value: value, type: type, check: estado });\r\n                    }\r\n\r\n                    // Se setea la respuesta en la constante\r\n                    setListaParametrosBaseDatos(array);\r\n\r\n                    // Se generan la lista de parametros del documento\r\n                    cargarParametros(array);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de retorna el valor por el elemento\r\n    const validarValueParametros = (element, estado) => {\r\n\r\n        // Se inicializa la variable\r\n        let valor;\r\n\r\n        // Se valida por el elemento\r\n        if ((element == \"Sinproc\" || element == \"Número de radicado\"\r\n            || element == \"Radicación\" || element == \"Radicado\") && estado) {\r\n            valor = radicado;\r\n        } else if (element == \"Usuario\" && estado) {\r\n            valor = registradoPor;\r\n        } else if ((element == \"Dependencia Origen\" || element == \"Dependencia\") && estado) {\r\n            valor = dependencia;\r\n        } else if (element == \"Vigencia\" && estado) {\r\n            valor = vigencia;\r\n        } else if (element == \"Fecha de Registro\" && estado) {\r\n            valor = fechaRegistro;\r\n        } else if (element == \"Fecha de Ingreso\" && estado) {\r\n            valor = fechaIngreso;\r\n        } else if (element == \"Generado\" && estado) {\r\n            valor = generadoPor;\r\n        } else if ((element == \"Número de auto (generado despues de aprobación)\" || element == \"Auto\") && estado) {\r\n            valor = \"${numero_de_auto}\";\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return valor;\r\n    }\r\n\r\n    const selectCampos = (parametro) => {\r\n        return (\r\n            getListaParametrosBaseDatos.map((item, i) => {\r\n\r\n                var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n                if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\r\n                    return (\r\n                        <option selected key={i} value={i}>{item.title}</option>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <option key={i} value={i}>{item.title}</option>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleChangeInteresados = (e, parametro, id_campo) => {\r\n\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getInteresadosLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setInteresadosLista(valorId);\r\n        let val = getInteresadosLista.map((p) => {\r\n            if (p.checked == true) {\r\n\r\n                var primerApellido = p.attributes.primer_apellido != null ? p.attributes.primer_apellido : \"\";\r\n                var segundoApellido = p.attributes.segundo_apellido != null ? p.attributes.segundo_apellido : \"\";\r\n                var primerNombre = p.attributes.primer_nombre != null ? p.attributes.primer_nombre : \"\";\r\n                var segundoNombre = p.attributes.segundo_nombre != null ? p.attributes.segundo_nombre : \"\";\r\n                var sujetoProcesalNombre = p.attributes.sujeto_procesal_nombre != \"\" ? p.attributes.sujeto_procesal_nombre : \"\";\r\n                var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n                var nombre = nombreCompleto;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n    }\r\n\r\n    function checkeoAutomaticoInteresados(parametro, id_campo) {\r\n        setInteresadosLista(getInteresadosLista);\r\n\r\n        var primerApellido = getInteresadosLista[0].attributes.primer_apellido != null ? getInteresadosLista[0].attributes.primer_apellido : \"\";\r\n        var segundoApellido = getInteresadosLista[0].attributes.segundo_apellido != null ? getInteresadosLista[0].attributes.segundo_apellido : \"\";\r\n        var primerNombre = getInteresadosLista[0].attributes.primer_nombre != null ? getInteresadosLista[0].attributes.primer_nombre : \"\";\r\n        var segundoNombre = getInteresadosLista[0].attributes.segundo_nombre != null ? getInteresadosLista[0].attributes.segundo_nombre : \"\";\r\n        var sujetoProcesalNombre = getInteresadosLista[0].attributes.sujeto_procesal_nombre != null ? getInteresadosLista[0].attributes.sujeto_procesal_nombre : \"\";\r\n        var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n        var nombre = nombreCompleto;\r\n\r\n        // var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\r\n        setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\r\n        var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\r\n        setCargosInvestigadoLista(getCargosInvestigadoLista);\r\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\r\n        setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\r\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoFechaAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.fecha_creado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    const handleChangeAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.descripcion}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeFechaAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.fecha_creado}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadesInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_investigado) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setEntidadesInvestigadoLista(valorId);\r\n        let val = getEntidadesInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_investigado}`;\r\n                var nombre = `${p.attributes.nombre_investigado}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getCargosInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.cargo) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getCargosInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.cargo}`;\r\n                var nombre = `${p.attributes.cargo}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_entidad) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getEntidadInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_entidad}`;\r\n                var nombre = `${p.attributes.nombre_entidad}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const selectAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].id}\r\n                            name={'check' + getAntecedentesLista[0].id}\r\n                            value={getAntecedentesLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.descripcion}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.id}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.id}\r\n                                    name={'check' + item.id}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.descripcion}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectFechaAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoFechaAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].attributes.fecha_creado} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].attributes.fecha_creado}\r\n                            name={'check' + getAntecedentesLista[0].attributes.fecha_creado}\r\n                            value={getAntecedentesLista[0].attributes.fecha_creado}\r\n                            onChange={(e) => handleChangeFechaAntecedentes(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.fecha_creado}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.fecha_creado}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.fecha_creado}\r\n                                    name={'check' + item.fecha_creado}\r\n                                    value={item.fecha_creado}\r\n                                    //onChange={(e) => handleChangeFechaAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.fecha_creado}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInteresados = (parametro, id_campo) => {\r\n        if (Array.isArray(getInteresadosLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getInteresadosLista && getInteresadosLista.length == 1) {\r\n                checkeoAutomaticoInteresados(parametro, id_campo);\r\n\r\n                var primerApellido = getInteresadosLista[0].attributes.primer_apellido != \"\" ? getInteresadosLista[0].attributes.primer_apellido : \"\";\r\n                var segundoApellido = getInteresadosLista[0].attributes.segundo_apellido != \"\" ? getInteresadosLista[0].attributes.segundo_apellido : \"\";\r\n                var primerNombre = getInteresadosLista[0].attributes.primer_nombre != \"\" ? getInteresadosLista[0].attributes.primer_nombre : \"\";\r\n                var segundoNombre = getInteresadosLista[0].attributes.segundo_nombre != \"\" ? getInteresadosLista[0].attributes.segundo_nombre : \"\";\r\n                var sujetoProcesalNombre = getInteresadosLista[0].attributes.sujeto_procesal_nombre != \"\" ? getInteresadosLista[0].attributes.sujeto_procesal_nombre : \"\";\r\n                var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n                var nombre = nombreCompleto;\r\n\r\n                // var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getInteresadosLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getInteresadosLista[0].id}\r\n                            name={'check' + getInteresadosLista[0].id}\r\n                            value={getInteresadosLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getInteresadosLista.length > 1) {\r\n                return (\r\n                    getInteresadosLista.map((item, i) => {\r\n\r\n                        var primerApellido = item.attributes.primer_apellido != null ? item.attributes.primer_apellido : \"\";\r\n                        var segundoApellido = item.attributes.segundo_apellido != null ? item.attributes.segundo_apellido : \"\";\r\n                        var primerNombre = item.attributes.primer_nombre != null ? item.attributes.primer_nombre : \"\";\r\n                        var segundoNombre = item.attributes.segundo_nombre != null ? item.attributes.segundo_nombre : \"\";\r\n                        var sujetoProcesalNombre = item.attributes.sujeto_procesal_nombre != \"\" ? item.attributes.sujeto_procesal_nombre : \"\";\r\n                        var nombreCompleto = sujetoProcesalNombre + \" \" + primerApellido + \" \" + segundoApellido + \" \" + primerNombre + \" \" + segundoNombre;\r\n                        var nombre = nombreCompleto;\r\n\r\n                        // var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + nombre}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + nombre}\r\n                                    name={'check' + nombre}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeInteresados(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {nombre}\r\n                            </div>\r\n                            // <option key={nombre} value={nombre}>{nombre}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadesInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\r\n                let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadesInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            value={getEntidadesInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadesInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadesInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_investigado}`;\r\n                        var nombre = `${item.attributes.nombre_investigado}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectCargosInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getCargosInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\r\n                var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getCargosInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getCargosInvestigadoLista[0].id}\r\n                            name={'check' + getCargosInvestigadoLista[0].id}\r\n                            value={getCargosInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getCargosInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getCargosInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.cargo}`;\r\n                        var nombre = `${item.attributes.cargo}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeCargosInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                // <option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectEntidadesInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\r\n                var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadInvestigadoLista[0].id}\r\n                            value={getEntidadInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_entidad}`;\r\n                        var nombre = `${item.attributes.nombre_entidad}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeEntidadesInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const cargarValoresDeParametro = (parametro) => {\r\n\r\n        const arrayOtherElements = [\r\n            \"Dependencia Origen\",\r\n            \"Delegada\",\r\n            \"Radicado\",\r\n            \"Radicación\",\r\n            \"Auto\"\r\n        ];\r\n\r\n        var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\r\n            return item.parametro == parametro;\r\n        });\r\n\r\n        var tempCampo = campoParametro[0];\r\n\r\n        // console.log(\"tempCampo -> \", tempCampo);\r\n\r\n        if (tempCampo != undefined && getListaParametrosBaseDatos[tempCampo.id_campo] != undefined) {\r\n            var itemCampo = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n\r\n            // Tiene un valor por defecto\r\n            if (itemCampo.value != null) {\r\n\r\n                var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\r\n                    if (item.parametro == parametro) {\r\n                        item.id_campo = tempCampo.id_campo;\r\n                        var itemCampoId = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n                        item.valor = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                        item.valorTemporal = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                var validarElemento = document.getElementById('id' + itemCampo.title);\r\n\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                // setListaCamposPorParametro({ data: newParams });\r\n\r\n                return (\r\n                    <>{itemCampo.value}</>\r\n                )\r\n            } else if (itemCampo.title == \"Fecha Hechos\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectFechaAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Antecedentes\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Interesados\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getInteresadosLista[0] && getInteresadosLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectInteresados(parametro, tempCampo.id_campo)}\r\n                        {/* {handleChangeInteresados(0, parametro, tempCampo.id_campo)} */}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Investigado\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getEntidadesInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Cargo\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getCargosInvestigadoLista[0] && getCargosInvestigadoLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectCargosInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Entidad\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getEntidadInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectEntidadesInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <label>Seleccione un campo</label>\r\n                )\r\n            }\r\n        }\r\n        return (<></>)\r\n    }\r\n\r\n    const selectChangeListaCampos = (parametro, id_campo, value) => {\r\n\r\n        //console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\r\n\r\n        var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n            if (item.parametro == parametro) {\r\n                item.id_campo = id_campo;\r\n                var itemCampo = getListaParametrosBaseDatos[id_campo];\r\n\r\n                item.valor = (itemCampo.value != null) ? itemCampo.value : value;\r\n                item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : value;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        //setListaCamposPorParametroDefinitiva({ data: newParams });\r\n        //console.log(newParams);\r\n    }\r\n\r\n    // Metodo encargado de generar las columnas de los parametros de la plantilla\r\n    const columnsParametros = [\r\n        {\r\n            name: 'Parametros de la plantilla',\r\n            cell: parametro => <div><strong>{parametro}</strong></div>,\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            name: 'Campo',\r\n            cell: parametro =>\r\n                <select className=\"form-control\" id={`id${parametro}`} name={`name${parametro}`}\r\n                    onChange={e => selectChangeListaCampos(parametro, e.target.value, \"\")} disabled>\r\n                    <option value=\"\">Por favor seleccione</option>\r\n                    {selectCampos(parametro)}\r\n                </select>,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'Valor seleccionado',\r\n            width: \"50%\",\r\n            cell: parametro =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresDeParametro(parametro)}\r\n                    </div>\r\n                </div>\r\n        },\r\n        // {\r\n        //     name: 'Activar/Inactivar',\r\n        //     width: \"10%\",\r\n        //     cell: parametro =>\r\n        //         <div className='row'>\r\n        //             <div className='col'>\r\n        //                 {cargarCheckParametro(parametro)}\r\n        //             </div>\r\n        //         </div>\r\n        // }\r\n    ];\r\n\r\n    // Metodo encargado de generar las columnas de los parametros de la plantilla\r\n    const columnsCampos = [\r\n        {\r\n            name: 'Campo',\r\n            cell: campo =>\r\n                <div>\r\n                    <strong>{campo.nombreCampo ? campo.nombreCampo : \"\"}</strong>\r\n                </div>,\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            name: 'Tipo',\r\n            cell: campo =>\r\n                <select className=\"form-control\" id={`idCampo${campo.nombreCampo}`} name={`name${campo.nombreCampo}`} disabled>\r\n                    <option value={validarTipoCampo(campo.tipoCampo)} selected> {validarTipoCampo(campo.tipoCampo)} </option>\r\n                </select>\r\n            ,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'Items',\r\n            width: \"50%\",\r\n            cell: campo =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresCampos(campo)}\r\n                    </div>\r\n                </div>\r\n        },\r\n    ];\r\n\r\n    // Metodo encargado de cargar los valores de los campos\r\n    const cargarValoresCampos = (campo) => {\r\n\r\n        // Se inicializa la variable de campos\r\n        const campoParametro = campo;\r\n\r\n        // console.log(\"campoParametro -> \", campoParametro);\r\n        // console.log(\"----------------------------------------------\");\r\n\r\n        // Se capturan la informacion del campo\r\n        const tipoCampo = campoParametro.tipoCampo;\r\n        const nombreCampo = campoParametro.nombreCampo;\r\n        const itemCampo = tipoCampo == 2 ? campoParametro.items : \"\";\r\n\r\n        // Se valida cuando el tipo campo es un listado\r\n        if (tipoCampo == 2) {\r\n\r\n            // Se retorna el html del tipo lista\r\n            return (\r\n                <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                    <>{itemCampo}</>\r\n                </div>\r\n            )\r\n        } else if (tipoCampo == 1) {\r\n\r\n            // Se retorna el html del tipo fecha \r\n            return (\r\n                <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                    <>{itemCampo}</>\r\n                </div>\r\n            )\r\n        } else if (tipoCampo == 0) {\r\n\r\n            // Se retorna el html del tipo texto\r\n            return (\r\n                <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                    <>{itemCampo}</>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    // Metodo encargado de validar el tipo del campo\r\n    const validarTipoCampo = (tipo) => {\r\n\r\n        // Se inicializa la variable\r\n        let nombreRetornado;\r\n\r\n        // Se valida el tipo\r\n        if (tipo == 0) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Texto\";\r\n        } else if (tipo == 1) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Fecha\";\r\n        } else if (tipo == 2) {\r\n\r\n            // Se redeclara la variable\r\n            nombreRetornado = \"Lista\";\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return nombreRetornado;\r\n    }\r\n\r\n    // Metodo encargado de cargar los parametros de la base de datos\r\n    const cargarParametros = (listaParametrosBaseDatos) => {\r\n\r\n        // Se setean los valores en null y vacios para que no salga el limitante de las hooks\r\n        setListaParametros(null);\r\n        setAntecedentesLista({ data: [] });\r\n        setInteresadosLista({ data: [] });\r\n        setEntidadesInvestigadoLista({ data: [] });\r\n        setCargosInvestigadoLista({ data: [] });\r\n        setEntidadInvestigadoLista({ data: [] });\r\n        setListaCamposPorParametroTemporal({ data: [] });\r\n        setListaParametros({ data: [] });\r\n\r\n        // Se inicializa el array\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'mas_actuaciones',\r\n                \"attributes\": {\r\n                    \"id\": props.id_mas_actuacion\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + props.id_mas_actuacion, data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los valores a la lista general de parametros\r\n                    setListaParametros(datos);\r\n\r\n                    // Se recorre los parametros generales de la plantilla\r\n                    var parametrosCampos = datos.params.map((item, i) => {\r\n\r\n                        // Se busca el parametro con el de la base de datos\r\n                        var indexCampo = listaParametrosBaseDatos.findIndex(\r\n\r\n                            // Se inicializa la variable\r\n                            x =>\r\n\r\n                                // Se valida que el parametro de la base de datos sea igual al parametro de la plantilla\r\n                                x.title == item\r\n                        );\r\n\r\n                        // Se valida que haya encontrado un valor para asignarle el id\r\n                        if (indexCampo >= 0) {\r\n\r\n                            // Se retorna el array\r\n                            return { parametro: item, id_campo: indexCampo, valor: \"\" };\r\n                        } else {\r\n\r\n                            // Se retorna el array\r\n                            return { parametro: item, id_campo: \"\", valor: \"\" };\r\n                        }\r\n                    });\r\n\r\n                    // Parametros de los campos e items\r\n                    var parametrosItems = datos.campos && datos.campos.map((item, i) => {\r\n\r\n                        // Se captura el tipo de campo\r\n                        let tipoCampo = item.tipoCampo;\r\n\r\n                        // Se valida cuando es tipo lista\r\n                        if (tipoCampo == 2) {\r\n\r\n                            // Se setea la lista\r\n                            return { item: true, parametro: item.nombreCampo, id_campo: item.nombreCampo + i, valor: item.items };\r\n                        } else {\r\n\r\n                            // Se setea la lista\r\n                            return { item: true, parametro: item.nombreCampo, id_campo: item.nombreCampo + i, valor: \"\" };\r\n                        }\r\n                    });\r\n\r\n                    // Se setean los valores de las listas\r\n                    setListaCamposPorParametroTemporal({ data: parametrosCampos });\r\n                    setListaCamposPorCamposTemporal({ data: parametrosItems });\r\n\r\n                    // Se cargan los antecedentes, interesados y entidades del investigado\r\n                    cargarEntidadesInvestigado();\r\n                    cargarAntecedentes();\r\n                    cargarInteresados();\r\n                }\r\n            }\r\n        )\r\n\r\n        // Se quita el cargando\r\n        window.showSpinner(false);\r\n    }\r\n\r\n    const cargarAntecedentes = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'antecedente',\r\n                \"attributes\": {\r\n                    \"antecedentes\": \"antecedentes\",\r\n                    \"descripcion\": \"descripcion\",\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"fecha_registro\": Date.now(),\r\n                    \"id_dependencia\": -1,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n        GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n\r\n                    setAntecedentesLista(parametrosCampos);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarInteresados = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"interesado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"tipo_documento\": \"1\",\r\n                    \"numero_documento\": \"1\",\r\n                    \"primer_nombre\": \"1\",\r\n                    \"segundo_nombre\": \"1\",\r\n                    \"primer_apellido\": \"1\",\r\n                    \"segundo_apellido\": \"1\",\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setInteresadosLista(parametrosCampos);\r\n                } else {\r\n                    setModalState({ title: \"Datos del interesado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarEntidadesInvestigado = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"entidad_investigado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": \"1\",\r\n                    \"requiere_registro\": true,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n\r\n                        var nombreInvestigado = item.attributes.nombre_investigado;\r\n                        var cargoInvestigado = item.attributes.cargo;\r\n                        var entidadInvestigado = item.attributes.nombre_entidad;\r\n\r\n                        if (nombreInvestigado == null) {\r\n                            item.attributes.nombre_investigado = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (cargoInvestigado == null) {\r\n                            item.attributes.cargo = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (entidadInvestigado == null) {\r\n                            item.attributes.nombre_entidad = \"NO_APLICA\";\r\n                        }\r\n\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setEntidadesInvestigadoLista(parametrosCampos);\r\n                    setCargosInvestigadoLista(parametrosCampos);\r\n                    setEntidadInvestigadoLista(parametrosCampos);\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Entidades del investigado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const descargarArchivo = () => {\r\n        try {\r\n            window.showSpinner(true);\r\n\r\n            var params = getListaCamposPorParametroTemporal.data.map(item => {\r\n                return {\r\n                    \"param\": item.parametro,\r\n                    \"value\": item.valor\r\n                };\r\n            });\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"mas_actuaciones\",\r\n                    \"attributes\": {\r\n                        \"params\": params,\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + props.id_mas_actuacion, data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"docx\");\r\n                        window.showSpinner(false);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: \", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    function downloadBase64File(contentType, base64Data, fileName, extension) {\r\n        const linkSource = `data:${contentType};base64,${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    const cargarCheckParametro = (parametro) => {\r\n\r\n        return (\r\n            <div className=\"col-md-12\" key={'keyCheck' + parametro + '1'} >\r\n                <input type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    id={'check' + parametro + '1'}\r\n                    name={'check' + parametro + '1'}\r\n                    value={parametro + '1'}\r\n                    onChange={(e) => handleChangeStatus(e, parametro)}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n\r\n    const handleChangeStatus = (e, parametro) => {\r\n\r\n        // Se captura el elemento enviado por parametros\r\n        var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n        // Se valida si esta checkeado\r\n        if (e.target.checked) {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a vacio\r\n                    item.valor = \"\";\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n\r\n\r\n        } else {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a su valor original\r\n                    item.valor = item.valorTemporal;\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <ModalGen data={modalState} />\r\n            {getListaParametros != null ?\r\n                <>\r\n                    <div className='col-md-12'>\r\n                        <label>Parametros de la plantilla</label>\r\n                    </div>\r\n                    <div className='col-md-12 mt-2 mb-2'>\r\n                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                            columns={columnsParametros}\r\n                            data={getListaParametros.params}\r\n                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                            striped\r\n                        />\r\n                    </div>\r\n\r\n                    {getListaParametros.campos && getListaParametros.campos.length > 0 ?\r\n                        <>\r\n                            <div className='col-md-12' style={{ marginTop: '50px' }}>\r\n                                <label>Campos adicionales</label>\r\n                            </div>\r\n                            <div className='col-md-12 mt-2 mb-2'>\r\n                                <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                    columns={columnsCampos}\r\n                                    data={getListaParametros.campos}\r\n                                    noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                                    striped\r\n                                />\r\n                            </div>\r\n                        </>\r\n                        : null\r\n                    }\r\n                    <div className='col-md-12 mt-4 mb-2'>\r\n                        <label className='mr-2' htmlFor=\"documento_ruta\">Descargar documento pre-diligenciado con los valores seleccionados </label>\r\n                        <button type=\"button\" title='Descargar documento diligenciado' onClick={() => descargarArchivo()} className=\"btn btn-rounded btn-primary\"> <i className=\"fas fa-file-word\"></i></button>\r\n                    </div>\r\n                </>\r\n                :\r\n                <div className='col-md-12 mt-4'>\r\n                    <label>Cargando parametros de la plantilla...</label>\r\n                </div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ActuacionParametrosPlantillaForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAO,uBAAP;AACA,SAASC,OAAT,QAAwB,oBAAxB;;;;AAEA,SAASC,gCAAT,CAA0CC,KAA1C,EAAiD;EAAA;;EAC7C,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAM;IAAES;EAAF,IAAWD,QAAQ,CAACE,KAA1B;EACA,IAAIC,QAAQ,GAAGF,IAAI,CAACE,QAApB;EACA,IAAIC,sBAAsB,GAAGH,IAAI,CAACG,sBAAlC;EACA,IAAIC,QAAQ,GAAGJ,IAAI,CAACK,OAApB;EACA,MAAMC,aAAa,GAAGN,IAAI,CAACM,aAA3B;EACA,MAAMC,YAAY,GAAGP,IAAI,CAACO,YAA1B;EACA,MAAMC,WAAW,GAAGZ,OAAO,GAAGa,kBAAV,GAA+Bb,OAAO,GAAGa,kBAAV,CAA6BC,MAA5D,GAAqE,EAAzF;EACA,MAAMC,aAAa,GAAGX,IAAI,CAACW,aAA3B;EACA,MAAMC,QAAQ,GAAGZ,IAAI,CAACY,QAAtB;EACA,MAAMC,WAAW,GAAGjB,OAAO,GAAGkB,eAAV,GAA4BlB,OAAO,GAAGkB,eAAtC,GAAwD,EAA5E;EAEA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC;IAAE2B,KAAK,EAAE,EAAT;IAAaC,OAAO,EAAE,EAAtB;IAA0BC,IAAI,EAAE;EAAhC,CAAD,CAA5C;EACA,MAAM,CAACC,kBAAD,EAAqBC,kBAArB,IAA2C/B,QAAQ,CAAC;IAAEgC,MAAM,EAAE;EAAV,CAAD,CAAzD;EACA,MAAM,CAACC,kCAAD,EAAqCC,kCAArC,IAA2ElC,QAAQ,CAAC;IAAEmC,IAAI,EAAE;EAAR,CAAD,CAAzF;EACA,MAAM,CAACC,+BAAD,EAAkCC,+BAAlC,IAAqErC,QAAQ,CAAC;IAAEmC,IAAI,EAAE;EAAR,CAAD,CAAnF,CAhB6C,CAiB7C;;EACA,MAAM,CAACG,oBAAD,EAAuBC,oBAAvB,IAA+CvC,QAAQ,CAAC;IAAEmC,IAAI,EAAE,EAAR;IAAYK,KAAK,EAAE,EAAnB;IAAuBC,IAAI,EAAE;EAA7B,CAAD,CAA7D;EACA,MAAM,CAACC,mBAAD,EAAsBC,mBAAtB,IAA6C3C,QAAQ,CAAC;IAAEmC,IAAI,EAAE,EAAR;IAAYK,KAAK,EAAE,EAAnB;IAAuBC,IAAI,EAAE;EAA7B,CAAD,CAA3D;EACA,MAAM,CAACG,4BAAD,EAA+BC,4BAA/B,IAA+D7C,QAAQ,CAAC;IAAEmC,IAAI,EAAE,EAAR;IAAYK,KAAK,EAAE,EAAnB;IAAuBC,IAAI,EAAE;EAA7B,CAAD,CAA7E;EACA,MAAM,CAACK,yBAAD,EAA4BC,yBAA5B,IAAyD/C,QAAQ,CAAC;IAAEmC,IAAI,EAAE,EAAR;IAAYK,KAAK,EAAE,EAAnB;IAAuBC,IAAI,EAAE;EAA7B,CAAD,CAAvE;EACA,MAAM,CAACO,0BAAD,EAA6BC,0BAA7B,IAA2DjD,QAAQ,CAAC;IAAEmC,IAAI,EAAE,EAAR;IAAYK,KAAK,EAAE,EAAnB;IAAuBC,IAAI,EAAE;EAA7B,CAAD,CAAzE;EACA,MAAM,CAACS,mBAAD,EAAsBC,mBAAtB,IAA6CnD,QAAQ,EAA3D;EACA,MAAM,CAACoD,2BAAD,EAA8BC,2BAA9B,IAA6DrD,QAAQ,CAAC;IAAEmC,IAAI,EAAE;EAAR,CAAD,CAA3E,CAxB6C,CA0B7C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EACApC,SAAS,CAAC,MAAM;IAEZ;IACA,eAAeuD,SAAf,GAA2B;MAEvB;MACAC,gCAAgC;IACnC,CAPW,CASZ;;;IACAD,SAAS;EACZ,CAXQ,EAWN,CAAC9C,KAAK,CAACgD,gBAAP,CAXM,CAAT,CAzC6C,CAsD7C;;EACA,MAAMD,gCAAgC,GAAG,MAAM;IAE3C;IACA,IAAIE,KAAK,GAAG,EAAZ,CAH2C,CAK3C;;IACAtD,UAAU,CAACuD,UAAX,CAAsB,kBAAtB,EAA0CC,IAA1C,EAEI;IACAC,KAAK,IAAI;MAEL;MACA,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;QAEd;QACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,KAAK,CAACzB,IAAN,CAAW4B,MAAvC,EAA+CD,KAAK,EAApD,EAAwD;UAEpD;UACA,MAAME,OAAO,GAAGJ,KAAK,CAACzB,IAAN,CAAW2B,KAAX,EAAkBG,UAAlC;UACA,MAAMtC,KAAK,GAAGqC,OAAO,CAACE,YAAtB;UACA,MAAMC,MAAM,GAAGH,OAAO,CAACG,MAAR,IAAkB,GAAlB,GAAwB,IAAxB,GAA+B,KAA9C;UACA,MAAMC,IAAI,GAAGJ,OAAO,CAACI,IAArB;UACA,MAAMC,KAAK,GAAGC,sBAAsB,CAACF,IAAD,EAAOD,MAAP,CAApC,CAPoD,CASpD;;UACAV,KAAK,CAACc,IAAN,CAAW;YAAE5C,KAAK,EAAEA,KAAT;YAAgB0C,KAAK,EAAEA,KAAvB;YAA8BD,IAAI,EAAEA,IAApC;YAA0CI,KAAK,EAAEL;UAAjD,CAAX;QACH,CAda,CAgBd;;;QACAd,2BAA2B,CAACI,KAAD,CAA3B,CAjBc,CAmBd;;QACAgB,gBAAgB,CAAChB,KAAD,CAAhB;MACH;IACJ,CA5BL;EA8BH,CApCD,CAvD6C,CA6F7C;;;EACA,MAAMa,sBAAsB,GAAG,CAACN,OAAD,EAAUG,MAAV,KAAqB;IAEhD;IACA,IAAIO,KAAJ,CAHgD,CAKhD;;IACA,IAAI,CAACV,OAAO,IAAI,SAAX,IAAwBA,OAAO,IAAI,oBAAnC,IACEA,OAAO,IAAI,YADb,IAC6BA,OAAO,IAAI,UADzC,KACwDG,MAD5D,EACoE;MAChEO,KAAK,GAAG9D,QAAR;IACH,CAHD,MAGO,IAAIoD,OAAO,IAAI,SAAX,IAAwBG,MAA5B,EAAoC;MACvCO,KAAK,GAAGrD,aAAR;IACH,CAFM,MAEA,IAAI,CAAC2C,OAAO,IAAI,oBAAX,IAAmCA,OAAO,IAAI,aAA/C,KAAiEG,MAArE,EAA6E;MAChFO,KAAK,GAAGxD,WAAR;IACH,CAFM,MAEA,IAAI8C,OAAO,IAAI,UAAX,IAAyBG,MAA7B,EAAqC;MACxCO,KAAK,GAAGpD,QAAR;IACH,CAFM,MAEA,IAAI0C,OAAO,IAAI,mBAAX,IAAkCG,MAAtC,EAA8C;MACjDO,KAAK,GAAG1D,aAAR;IACH,CAFM,MAEA,IAAIgD,OAAO,IAAI,kBAAX,IAAiCG,MAArC,EAA6C;MAChDO,KAAK,GAAGzD,YAAR;IACH,CAFM,MAEA,IAAI+C,OAAO,IAAI,UAAX,IAAyBG,MAA7B,EAAqC;MACxCO,KAAK,GAAGnD,WAAR;IACH,CAFM,MAEA,IAAI,CAACyC,OAAO,IAAI,iDAAX,IAAgEA,OAAO,IAAI,MAA5E,KAAuFG,MAA3F,EAAmG;MACtGO,KAAK,GAAG,mBAAR;IACH,CAvB+C,CAyBhD;;;IACA,OAAOA,KAAP;EACH,CA3BD;;EA6BA,MAAMC,YAAY,GAAIC,SAAD,IAAe;IAChC,OACIxB,2BAA2B,CAACyB,GAA5B,CAAgC,CAACC,IAAD,EAAOC,CAAP,KAAa;MAEzC,IAAIC,UAAU,GAAG/C,kCAAkC,CAACE,IAAnC,CAAwC8C,MAAxC,CAA+CC,CAAC,IAAIA,CAAC,CAACN,SAAF,IAAeA,SAAnE,CAAjB;;MAEA,IAAII,UAAU,IAAIG,SAAd,IAA2BH,UAAU,CAACjB,MAAX,GAAoB,CAA/C,IAAoDiB,UAAU,CAAC,CAAD,CAAV,CAAcI,QAAd,KAA2BL,CAAnF,EAAsF;QAClF,oBACI;UAAQ,QAAQ,MAAhB;UAAyB,KAAK,EAAEA,CAAhC;UAAA,UAAoCD,IAAI,CAACnD;QAAzC,GAAsBoD,CAAtB;UAAA;UAAA;UAAA;QAAA,QADJ;MAGH,CAJD,MAIO;QACH,oBACI;UAAgB,KAAK,EAAEA,CAAvB;UAAA,UAA2BD,IAAI,CAACnD;QAAhC,GAAaoD,CAAb;UAAA;UAAA;UAAA;QAAA,QADJ;MAGH;IACJ,CAbD,CADJ;EAgBH,CAjBD;;EAmBA,MAAMM,uBAAuB,GAAG,CAACC,CAAD,EAAIV,SAAJ,EAAeQ,QAAf,KAA4B;IAExD,MAAM;MAAEf,KAAF;MAASkB;IAAT,IAAqBD,CAAC,CAACE,MAA7B;IAEA,IAAIC,OAAO,GAAG/C,mBAAmB,CAACmC,GAApB,CAAyBC,IAAD,IAAU;MAC5C,IAAIT,KAAK,IAAIS,IAAI,CAACY,EAAlB,EAAsB;QAClBZ,IAAI,CAACS,OAAL,GAAeA,OAAf;MACH;;MACD,OAAOT,IAAP;IACH,CALa,CAAd;IAOAnC,mBAAmB,CAAC8C,OAAD,CAAnB;IACA,IAAIE,GAAG,GAAGjD,mBAAmB,CAACmC,GAApB,CAAyBe,CAAD,IAAO;MACrC,IAAIA,CAAC,CAACL,OAAF,IAAa,IAAjB,EAAuB;QAEnB,IAAIM,cAAc,GAAGD,CAAC,CAAC3B,UAAF,CAAa6B,eAAb,IAAgC,IAAhC,GAAuCF,CAAC,CAAC3B,UAAF,CAAa6B,eAApD,GAAsE,EAA3F;QACA,IAAIC,eAAe,GAAGH,CAAC,CAAC3B,UAAF,CAAa+B,gBAAb,IAAiC,IAAjC,GAAwCJ,CAAC,CAAC3B,UAAF,CAAa+B,gBAArD,GAAwE,EAA9F;QACA,IAAIC,YAAY,GAAGL,CAAC,CAAC3B,UAAF,CAAaiC,aAAb,IAA8B,IAA9B,GAAqCN,CAAC,CAAC3B,UAAF,CAAaiC,aAAlD,GAAkE,EAArF;QACA,IAAIC,aAAa,GAAGP,CAAC,CAAC3B,UAAF,CAAamC,cAAb,IAA+B,IAA/B,GAAsCR,CAAC,CAAC3B,UAAF,CAAamC,cAAnD,GAAoE,EAAxF;QACA,IAAIC,oBAAoB,GAAGT,CAAC,CAAC3B,UAAF,CAAaqC,sBAAb,IAAuC,EAAvC,GAA4CV,CAAC,CAAC3B,UAAF,CAAaqC,sBAAzD,GAAkF,EAA7G;QACA,IAAIC,cAAc,GAAGF,oBAAoB,GAAG,GAAvB,GAA6BR,cAA7B,GAA8C,GAA9C,GAAoDE,eAApD,GAAsE,GAAtE,GAA4EE,YAA5E,GAA2F,GAA3F,GAAiGE,aAAtH;QACA,IAAI/E,MAAM,GAAGmF,cAAb;QAEA,OAAOnF,MAAP;MACH;IACJ,CAbS,EAaP6D,MAbO,CAaAC,CAAC,IAAIA,CAAC,IAAIC,SAbV,CAAV;IAcAqB,uBAAuB,CAAC5B,SAAD,EAAYQ,QAAZ,EAAsBO,GAAG,CAACc,QAAJ,EAAtB,CAAvB;EACH,CA3BD;;EA6BA,SAASC,4BAAT,CAAsC9B,SAAtC,EAAiDQ,QAAjD,EAA2D;IACvDzC,mBAAmB,CAACD,mBAAD,CAAnB;IAEA,IAAImD,cAAc,GAAGnD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkC6B,eAAlC,IAAqD,IAArD,GAA4DpD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkC6B,eAA9F,GAAgH,EAArI;IACA,IAAIC,eAAe,GAAGrD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkC+B,gBAAlC,IAAsD,IAAtD,GAA6DtD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkC+B,gBAA/F,GAAkH,EAAxI;IACA,IAAIC,YAAY,GAAGvD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkCiC,aAAlC,IAAmD,IAAnD,GAA0DxD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkCiC,aAA5F,GAA4G,EAA/H;IACA,IAAIC,aAAa,GAAGzD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkCmC,cAAlC,IAAoD,IAApD,GAA2D1D,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkCmC,cAA7F,GAA8G,EAAlI;IACA,IAAIC,oBAAoB,GAAG3D,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkCqC,sBAAlC,IAA4D,IAA5D,GAAmE5D,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkCqC,sBAArG,GAA8H,EAAzJ;IACA,IAAIC,cAAc,GAAGF,oBAAoB,GAAG,GAAvB,GAA6BR,cAA7B,GAA8C,GAA9C,GAAoDE,eAApD,GAAsE,GAAtE,GAA4EE,YAA5E,GAA2F,GAA3F,GAAiGE,aAAtH;IACA,IAAI/E,MAAM,GAAGmF,cAAb,CATuD,CAWvD;;IACAC,uBAAuB,CAAC5B,SAAD,EAAYQ,QAAZ,EAAsBhE,MAAtB,CAAvB;EACH;;EAED,SAASuF,6BAAT,CAAuC/B,SAAvC,EAAkDQ,QAAlD,EAA4D;IACxD7C,oBAAoB,CAACD,oBAAD,CAApB;IACA,IAAIlB,MAAM,GAAI,GAAEkB,oBAAoB,CAAC,CAAD,CAApB,CAAwB2B,UAAxB,CAAmC2C,WAAY,EAA/D;IACAJ,uBAAuB,CAAC5B,SAAD,EAAYQ,QAAZ,EAAsBhE,MAAtB,CAAvB;EACH;;EAED,SAASyF,mCAAT,CAA6CjC,SAA7C,EAAwDQ,QAAxD,EAAkE;IAC9DnC,0BAA0B,CAACL,4BAAD,CAA1B;IACA,IAAIxB,MAAM,GAAI,GAAEwB,4BAA4B,CAAC,CAAD,CAA5B,CAAgCqB,UAAhC,CAA2C6C,kBAAmB,EAA9E;;IACA,IAAI1F,MAAM,IAAI,MAAd,EAAsB;MAClBA,MAAM,GAAG,WAAT;IACH;;IACDoF,uBAAuB,CAAC5B,SAAD,EAAYQ,QAAZ,EAAsBhE,MAAtB,CAAvB;EACH;;EAED,SAAS2F,kCAAT,CAA4CnC,SAA5C,EAAuDQ,QAAvD,EAAiE;IAC7DrC,yBAAyB,CAACD,yBAAD,CAAzB;IACA,IAAI1B,MAAM,GAAI,GAAE0B,yBAAyB,CAAC,CAAD,CAAzB,CAA6BmB,UAA7B,CAAwC+C,KAAM,EAA9D;;IACA,IAAI5F,MAAM,IAAI,MAAd,EAAsB;MAClBA,MAAM,GAAG,WAAT;IACH;;IACDoF,uBAAuB,CAAC5B,SAAD,EAAYQ,QAAZ,EAAsBhE,MAAtB,CAAvB;EACH;;EAED,SAAS6F,oCAAT,CAA8CrC,SAA9C,EAAyDQ,QAAzD,EAAmE;IAC/DvC,4BAA4B,CAACG,0BAAD,CAA5B;IACA,IAAI5B,MAAM,GAAI,GAAE4B,0BAA0B,CAAC,CAAD,CAA1B,CAA8BiB,UAA9B,CAAyCiD,cAAe,EAAxE;;IACA,IAAI9F,MAAM,IAAI,MAAd,EAAsB;MAClBA,MAAM,GAAG,WAAT;IACH;;IACDoF,uBAAuB,CAAC5B,SAAD,EAAYQ,QAAZ,EAAsBhE,MAAtB,CAAvB;EACH;;EAED,SAAS+F,kCAAT,CAA4CvC,SAA5C,EAAuDQ,QAAvD,EAAiE;IAC7D7C,oBAAoB,CAACD,oBAAD,CAApB;IACA,IAAIlB,MAAM,GAAI,GAAEkB,oBAAoB,CAAC,CAAD,CAApB,CAAwB2B,UAAxB,CAAmCmD,YAAa,EAAhE;;IACA,IAAIhG,MAAM,IAAI,MAAd,EAAsB;MAClBA,MAAM,GAAG,WAAT;IACH;;IACDoF,uBAAuB,CAAC5B,SAAD,EAAYQ,QAAZ,EAAsBhE,MAAtB,CAAvB;EACH;;EAED,MAAMiG,wBAAwB,GAAG,CAAC/B,CAAD,EAAIV,SAAJ,EAAeQ,QAAf,KAA4B;IACzD,MAAM;MAAEf,KAAF;MAASkB;IAAT,IAAqBD,CAAC,CAACE,MAA7B;IAEA,IAAIC,OAAO,GAAGnD,oBAAoB,CAACuC,GAArB,CAA0BC,IAAD,IAAU;MAC7C,IAAIT,KAAK,IAAIS,IAAI,CAACY,EAAlB,EAAsB;QAClBZ,IAAI,CAACS,OAAL,GAAeA,OAAf;MACH;;MACD,OAAOT,IAAP;IACH,CALa,CAAd;IAOAvC,oBAAoB,CAACkD,OAAD,CAApB;IACA,IAAIE,GAAG,GAAGrD,oBAAoB,CAACuC,GAArB,CAA0Be,CAAD,IAAO;MACtC,IAAIA,CAAC,CAACL,OAAF,IAAa,IAAjB,EAAuB;QACnB,IAAInE,MAAM,GAAI,GAAEwE,CAAC,CAAC3B,UAAF,CAAa2C,WAAY,EAAzC;QACA,OAAOxF,MAAP;MACH;IACJ,CALS,EAKP6D,MALO,CAKAC,CAAC,IAAIA,CAAC,IAAIC,SALV,CAAV;IAMAqB,uBAAuB,CAAC5B,SAAD,EAAYQ,QAAZ,EAAsBO,GAAG,CAACc,QAAJ,EAAtB,CAAvB;EAEH,CAnBD;;EAqBA,MAAMa,6BAA6B,GAAG,CAAChC,CAAD,EAAIV,SAAJ,EAAeQ,QAAf,KAA4B;IAC9D,MAAM;MAAEf,KAAF;MAASkB;IAAT,IAAqBD,CAAC,CAACE,MAA7B;IAEA,IAAIC,OAAO,GAAGnD,oBAAoB,CAACuC,GAArB,CAA0BC,IAAD,IAAU;MAC7C,IAAIT,KAAK,IAAIS,IAAI,CAACY,EAAlB,EAAsB;QAClBZ,IAAI,CAACS,OAAL,GAAeA,OAAf;MACH;;MACD,OAAOT,IAAP;IACH,CALa,CAAd;IAOAvC,oBAAoB,CAACkD,OAAD,CAApB;IACA,IAAIE,GAAG,GAAGrD,oBAAoB,CAACuC,GAArB,CAA0Be,CAAD,IAAO;MACtC,IAAIA,CAAC,CAACL,OAAF,IAAa,IAAjB,EAAuB;QACnB,IAAInE,MAAM,GAAI,GAAEwE,CAAC,CAAC3B,UAAF,CAAamD,YAAa,EAA1C;QACA,OAAOhG,MAAP;MACH;IACJ,CALS,EAKP6D,MALO,CAKAC,CAAC,IAAIA,CAAC,IAAIC,SALV,CAAV;IAMAqB,uBAAuB,CAAC5B,SAAD,EAAYQ,QAAZ,EAAsBO,GAAG,CAACc,QAAJ,EAAtB,CAAvB;EAEH,CAnBD;;EAqBA,MAAMc,wBAAwB,GAAG,CAACjC,CAAD,EAAIV,SAAJ,EAAeQ,QAAf,KAA4B;IACzD,MAAM;MAAEf,KAAF;MAASkB;IAAT,IAAqBD,CAAC,CAACE,MAA7B;IAEA,IAAIC,OAAO,GAAG7C,4BAA4B,CAACiC,GAA7B,CAAkCC,IAAD,IAAU;MACrD,IAAIT,KAAK,IAAIS,IAAI,CAACb,UAAL,CAAgB6C,kBAA7B,EAAiD;QAC7ChC,IAAI,CAACS,OAAL,GAAeA,OAAf;MACH;;MACD,OAAOT,IAAP;IACH,CALa,CAAd;IAOAjC,4BAA4B,CAAC4C,OAAD,CAA5B;IACA,IAAIE,GAAG,GAAG/C,4BAA4B,CAACiC,GAA7B,CAAkCe,CAAD,IAAO;MAC9C,IAAIA,CAAC,CAACL,OAAF,IAAa,IAAjB,EAAuB;QACnB,IAAIlB,KAAK,GAAI,GAAEuB,CAAC,CAAC3B,UAAF,CAAa6C,kBAAmB,EAA/C;QACA,IAAI1F,MAAM,GAAI,GAAEwE,CAAC,CAAC3B,UAAF,CAAa6C,kBAAmB,EAAhD;QAEA,OAAO1F,MAAP;MACH;IACJ,CAPS,EAOP6D,MAPO,CAOAC,CAAC,IAAIA,CAAC,IAAIC,SAPV,CAAV;IAQAqB,uBAAuB,CAAC5B,SAAD,EAAYQ,QAAZ,EAAsBO,GAAG,CAACc,QAAJ,EAAtB,CAAvB;EAEH,CArBD;;EAuBA,MAAMe,8BAA8B,GAAG,CAAClC,CAAD,EAAIV,SAAJ,EAAeQ,QAAf,KAA4B;IAC/D,MAAM;MAAEf,KAAF;MAASkB;IAAT,IAAqBD,CAAC,CAACE,MAA7B;IAEA,IAAIC,OAAO,GAAG3C,yBAAyB,CAAC+B,GAA1B,CAA+BC,IAAD,IAAU;MAClD,IAAIT,KAAK,IAAIS,IAAI,CAACb,UAAL,CAAgB+C,KAA7B,EAAoC;QAChClC,IAAI,CAACS,OAAL,GAAeA,OAAf;MACH;;MACD,OAAOT,IAAP;IACH,CALa,CAAd;IAOA/B,yBAAyB,CAAC0C,OAAD,CAAzB;IACA,IAAIE,GAAG,GAAG7C,yBAAyB,CAAC+B,GAA1B,CAA+Be,CAAD,IAAO;MAC3C,IAAIA,CAAC,CAACL,OAAF,IAAa,IAAjB,EAAuB;QACnB,IAAIlB,KAAK,GAAI,GAAEuB,CAAC,CAAC3B,UAAF,CAAa+C,KAAM,EAAlC;QACA,IAAI5F,MAAM,GAAI,GAAEwE,CAAC,CAAC3B,UAAF,CAAa+C,KAAM,EAAnC;QAEA,OAAO5F,MAAP;MACH;IACJ,CAPS,EAOP6D,MAPO,CAOAC,CAAC,IAAIA,CAAC,IAAIC,SAPV,CAAV;IAQAqB,uBAAuB,CAAC5B,SAAD,EAAYQ,QAAZ,EAAsBO,GAAG,CAACc,QAAJ,EAAtB,CAAvB;EAEH,CArBD;;EAuBA,MAAMgB,iCAAiC,GAAG,CAACnC,CAAD,EAAIV,SAAJ,EAAeQ,QAAf,KAA4B;IAClE,MAAM;MAAEf,KAAF;MAASkB;IAAT,IAAqBD,CAAC,CAACE,MAA7B;IAEA,IAAIC,OAAO,GAAGzC,0BAA0B,CAAC6B,GAA3B,CAAgCC,IAAD,IAAU;MACnD,IAAIT,KAAK,IAAIS,IAAI,CAACb,UAAL,CAAgBiD,cAA7B,EAA6C;QACzCpC,IAAI,CAACS,OAAL,GAAeA,OAAf;MACH;;MACD,OAAOT,IAAP;IACH,CALa,CAAd;IAOA/B,yBAAyB,CAAC0C,OAAD,CAAzB;IACA,IAAIE,GAAG,GAAG3C,0BAA0B,CAAC6B,GAA3B,CAAgCe,CAAD,IAAO;MAC5C,IAAIA,CAAC,CAACL,OAAF,IAAa,IAAjB,EAAuB;QACnB,IAAIlB,KAAK,GAAI,GAAEuB,CAAC,CAAC3B,UAAF,CAAaiD,cAAe,EAA3C;QACA,IAAI9F,MAAM,GAAI,GAAEwE,CAAC,CAAC3B,UAAF,CAAaiD,cAAe,EAA5C;QAEA,OAAO9F,MAAP;MACH;IACJ,CAPS,EAOP6D,MAPO,CAOAC,CAAC,IAAIA,CAAC,IAAIC,SAPV,CAAV;IAQAqB,uBAAuB,CAAC5B,SAAD,EAAYQ,QAAZ,EAAsBO,GAAG,CAACc,QAAJ,EAAtB,CAAvB;EAEH,CArBD;;EAuBA,MAAMiB,kBAAkB,GAAG,CAAC9C,SAAD,EAAYQ,QAAZ,KAAyB;IAChD,IAAIuC,KAAK,CAACC,OAAN,CAActF,oBAAd,CAAJ,EAAyC;MAErC;MACA,IAAIA,oBAAoB,IAAIA,oBAAoB,CAACyB,MAArB,IAA+B,CAA3D,EAA8D;QAC1D4C,6BAA6B,CAAC/B,SAAD,EAAYQ,QAAZ,CAA7B;QACA,oBACI;UAAK,SAAS,EAAC,WAAf;UAAA,wBACI;YAAO,IAAI,EAAC,UAAZ;YACI,SAAS,EAAC,kBADd;YAEI,EAAE,EAAE,UAAU9C,oBAAoB,CAAC,CAAD,CAApB,CAAwBoD,EAF1C;YAGI,IAAI,EAAE,UAAUpD,oBAAoB,CAAC,CAAD,CAApB,CAAwBoD,EAH5C;YAII,KAAK,EAAEpD,oBAAoB,CAAC,CAAD,CAApB,CAAwBoD,EAJnC,CAKI;YALJ;YAMI,cAAc,EAAE,IANpB;YAOI,QAAQ;UAPZ;YAAA;YAAA;YAAA;UAAA,QADJ,OAQqBpD,oBAAoB,CAAC,CAAD,CAApB,CAAwB2B,UAAxB,CAAmC2C,WARxD;QAAA,GAAgC,aAAatE,oBAAoB,CAAC,CAAD,CAApB,CAAwBoD,EAArE;UAAA;UAAA;UAAA;QAAA,QADJ;MAYH,CAdD,MAcO,IAAIpD,oBAAoB,CAACyB,MAArB,GAA8B,CAAlC,EAAqC;QACxC,OACIzB,oBAAoB,CAACuC,GAArB,CAAyB,CAACC,IAAD,EAAOC,CAAP,KAAa;UAClC,oBACI;YAAK,SAAS,EAAC,WAAf;YAAA,wBACI;cAAO,IAAI,EAAC,UAAZ;cACI,SAAS,EAAC,kBADd;cAEI,EAAE,EAAE,UAAUD,IAAI,CAACY,EAFvB;cAGI,IAAI,EAAE,UAAUZ,IAAI,CAACY,EAHzB;cAII,KAAK,EAAEZ,IAAI,CAACY,EAJhB;cAKI,QAAQ,EAAGJ,CAAD,IAAO+B,wBAAwB,CAAC/B,CAAD,EAAIV,SAAJ,EAAeQ,QAAf,CAL7C;cAMI,cAAc,EAAEN,IAAI,CAACS;YANzB;cAAA;cAAA;cAAA;YAAA,QADJ,OAO0CT,IAAI,CAACb,UAAL,CAAgB2C,WAP1D;UAAA,GAAgC,aAAa9B,IAAI,CAACY,EAAlD;YAAA;YAAA;YAAA;UAAA,QADJ,CAUI;UAVJ;QAYH,CAbD,CADJ;MAgBH;IACJ;EACJ,CArCD;;EAuCA,MAAMmC,uBAAuB,GAAG,CAACjD,SAAD,EAAYQ,QAAZ,KAAyB;IACrD,IAAIuC,KAAK,CAACC,OAAN,CAActF,oBAAd,CAAJ,EAAyC;MACrC;MACA,IAAIA,oBAAoB,IAAIA,oBAAoB,CAACyB,MAArB,IAA+B,CAA3D,EAA8D;QAC1DoD,kCAAkC,CAACvC,SAAD,EAAYQ,QAAZ,CAAlC;QACA,oBACI;UAAK,SAAS,EAAC,WAAf;UAAA,wBACI;YAAO,IAAI,EAAC,UAAZ;YACI,SAAS,EAAC,kBADd;YAEI,EAAE,EAAE,UAAU9C,oBAAoB,CAAC,CAAD,CAApB,CAAwB2B,UAAxB,CAAmCmD,YAFrD;YAGI,IAAI,EAAE,UAAU9E,oBAAoB,CAAC,CAAD,CAApB,CAAwB2B,UAAxB,CAAmCmD,YAHvD;YAII,KAAK,EAAE9E,oBAAoB,CAAC,CAAD,CAApB,CAAwB2B,UAAxB,CAAmCmD,YAJ9C;YAKI,QAAQ,EAAG9B,CAAD,IAAOgC,6BAA6B,CAAC,CAAD,EAAI1C,SAAJ,EAAeQ,QAAf,CALlD;YAMI,cAAc,EAAE,IANpB;YAOI,QAAQ;UAPZ;YAAA;YAAA;YAAA;UAAA,QADJ,OAQqB9C,oBAAoB,CAAC,CAAD,CAApB,CAAwB2B,UAAxB,CAAmCmD,YARxD;QAAA,GAAgC,aAAa9E,oBAAoB,CAAC,CAAD,CAApB,CAAwB2B,UAAxB,CAAmCmD,YAAhF;UAAA;UAAA;UAAA;QAAA,QADJ;MAYH,CAdD,MAcO,IAAI9E,oBAAoB,CAACyB,MAArB,GAA8B,CAAlC,EAAqC;QACxC,OACIzB,oBAAoB,CAACuC,GAArB,CAAyB,CAACC,IAAD,EAAOC,CAAP,KAAa;UAClC,oBACI;YAAK,SAAS,EAAC,WAAf;YAAA,wBACI;cAAO,IAAI,EAAC,UAAZ;cACI,SAAS,EAAC,kBADd;cAEI,EAAE,EAAE,UAAUD,IAAI,CAACsC,YAFvB;cAGI,IAAI,EAAE,UAAUtC,IAAI,CAACsC,YAHzB;cAII,KAAK,EAAEtC,IAAI,CAACsC,YAJhB,CAKI;cALJ;cAMI,cAAc,EAAEtC,IAAI,CAACS;YANzB;cAAA;cAAA;cAAA;YAAA,QADJ,OAO0CT,IAAI,CAACb,UAAL,CAAgBmD,YAP1D;UAAA,GAAgC,aAAatC,IAAI,CAACsC,YAAlD;YAAA;YAAA;YAAA;UAAA,QADJ,CAUI;UAVJ;QAYH,CAbD,CADJ;MAgBH;IACJ;EACJ,CApCD;;EAsCA,MAAMU,iBAAiB,GAAG,CAAClD,SAAD,EAAYQ,QAAZ,KAAyB;IAC/C,IAAIuC,KAAK,CAACC,OAAN,CAAclF,mBAAd,CAAJ,EAAwC;MAEpC;MACA,IAAIA,mBAAmB,IAAIA,mBAAmB,CAACqB,MAApB,IAA8B,CAAzD,EAA4D;QACxD2C,4BAA4B,CAAC9B,SAAD,EAAYQ,QAAZ,CAA5B;QAEA,IAAIS,cAAc,GAAGnD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkC6B,eAAlC,IAAqD,EAArD,GAA0DpD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkC6B,eAA5F,GAA8G,EAAnI;QACA,IAAIC,eAAe,GAAGrD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkC+B,gBAAlC,IAAsD,EAAtD,GAA2DtD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkC+B,gBAA7F,GAAgH,EAAtI;QACA,IAAIC,YAAY,GAAGvD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkCiC,aAAlC,IAAmD,EAAnD,GAAwDxD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkCiC,aAA1F,GAA0G,EAA7H;QACA,IAAIC,aAAa,GAAGzD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkCmC,cAAlC,IAAoD,EAApD,GAAyD1D,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkCmC,cAA3F,GAA4G,EAAhI;QACA,IAAIC,oBAAoB,GAAG3D,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkCqC,sBAAlC,IAA4D,EAA5D,GAAiE5D,mBAAmB,CAAC,CAAD,CAAnB,CAAuBuB,UAAvB,CAAkCqC,sBAAnG,GAA4H,EAAvJ;QACA,IAAIC,cAAc,GAAGF,oBAAoB,GAAG,GAAvB,GAA6BR,cAA7B,GAA8C,GAA9C,GAAoDE,eAApD,GAAsE,GAAtE,GAA4EE,YAA5E,GAA2F,GAA3F,GAAiGE,aAAtH;QACA,IAAI/E,MAAM,GAAGmF,cAAb,CATwD,CAWxD;;QACA,oBACI;UAAK,SAAS,EAAC,WAAf;UAAA,wBACI;YAAO,IAAI,EAAC,UAAZ;YACI,SAAS,EAAC,kBADd;YAEI,EAAE,EAAE,UAAU7D,mBAAmB,CAAC,CAAD,CAAnB,CAAuBgD,EAFzC;YAGI,IAAI,EAAE,UAAUhD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBgD,EAH3C;YAII,KAAK,EAAEhD,mBAAmB,CAAC,CAAD,CAAnB,CAAuBgD,EAJlC,CAKI;YALJ;YAMI,cAAc,EAAE,IANpB;YAOI,QAAQ;UAPZ;YAAA;YAAA;YAAA;UAAA,QADJ,OAQqBtE,MARrB;QAAA,GAAgC,aAAasB,mBAAmB,CAAC,CAAD,CAAnB,CAAuBgD,EAApE;UAAA;UAAA;UAAA;QAAA,QADJ;MAYH,CAxBD,MAwBO,IAAIhD,mBAAmB,CAACqB,MAApB,GAA6B,CAAjC,EAAoC;QACvC,OACIrB,mBAAmB,CAACmC,GAApB,CAAwB,CAACC,IAAD,EAAOC,CAAP,KAAa;UAEjC,IAAIc,cAAc,GAAGf,IAAI,CAACb,UAAL,CAAgB6B,eAAhB,IAAmC,IAAnC,GAA0ChB,IAAI,CAACb,UAAL,CAAgB6B,eAA1D,GAA4E,EAAjG;UACA,IAAIC,eAAe,GAAGjB,IAAI,CAACb,UAAL,CAAgB+B,gBAAhB,IAAoC,IAApC,GAA2ClB,IAAI,CAACb,UAAL,CAAgB+B,gBAA3D,GAA8E,EAApG;UACA,IAAIC,YAAY,GAAGnB,IAAI,CAACb,UAAL,CAAgBiC,aAAhB,IAAiC,IAAjC,GAAwCpB,IAAI,CAACb,UAAL,CAAgBiC,aAAxD,GAAwE,EAA3F;UACA,IAAIC,aAAa,GAAGrB,IAAI,CAACb,UAAL,CAAgBmC,cAAhB,IAAkC,IAAlC,GAAyCtB,IAAI,CAACb,UAAL,CAAgBmC,cAAzD,GAA0E,EAA9F;UACA,IAAIC,oBAAoB,GAAGvB,IAAI,CAACb,UAAL,CAAgBqC,sBAAhB,IAA0C,EAA1C,GAA+CxB,IAAI,CAACb,UAAL,CAAgBqC,sBAA/D,GAAwF,EAAnH;UACA,IAAIC,cAAc,GAAGF,oBAAoB,GAAG,GAAvB,GAA6BR,cAA7B,GAA8C,GAA9C,GAAoDE,eAApD,GAAsE,GAAtE,GAA4EE,YAA5E,GAA2F,GAA3F,GAAiGE,aAAtH;UACA,IAAI/E,MAAM,GAAGmF,cAAb,CARiC,CAUjC;;UACA,oBACI;YAAK,SAAS,EAAC,WAAf;YAAA,wBACI;cAAO,IAAI,EAAC,UAAZ;cACI,SAAS,EAAC,kBADd;cAEI,EAAE,EAAE,UAAUnF,MAFlB;cAGI,IAAI,EAAE,UAAUA,MAHpB;cAII,KAAK,EAAE0D,IAAI,CAACY,EAJhB;cAKI,QAAQ,EAAGJ,CAAD,IAAOD,uBAAuB,CAACC,CAAD,EAAIV,SAAJ,EAAeQ,QAAf,CAL5C;cAMI,cAAc,EAAEN,IAAI,CAACS;YANzB;cAAA;cAAA;cAAA;YAAA,QADJ,OAO0CnE,MAP1C;UAAA,GAAgC,aAAaA,MAA7C;YAAA;YAAA;YAAA;UAAA,QADJ,CAUI;UAVJ;QAYH,CAvBD,CADJ;MA0BH;IACJ;EACJ,CAzDD;;EA2DA,MAAM2G,kBAAkB,GAAG,CAACnD,SAAD,EAAYQ,QAAZ,KAAyB;IAChD,IAAIuC,KAAK,CAACC,OAAN,CAAchF,4BAAd,CAAJ,EAAiD;MAE7C;MACA,IAAIA,4BAA4B,IAAIA,4BAA4B,CAACmB,MAA7B,IAAuC,CAA3E,EAA8E;QAC1E8C,mCAAmC,CAACjC,SAAD,EAAYQ,QAAZ,CAAnC;QACA,IAAIhE,MAAM,GAAI,GAAEwB,4BAA4B,CAAC,CAAD,CAA5B,CAAgCqB,UAAhC,CAA2C6C,kBAAmB,EAA9E;;QACA,IAAI1F,MAAM,IAAI,MAAd,EAAsB;UAClBA,MAAM,GAAG,WAAT;QACH;;QACD,oBACI;UAAK,SAAS,EAAC,WAAf;UAAA,wBACI;YAAO,IAAI,EAAC,UAAZ;YACI,SAAS,EAAC,kBADd;YAEI,EAAE,EAAE,UAAUwB,4BAA4B,CAAC,CAAD,CAA5B,CAAgC8C,EAFlD;YAGI,IAAI,EAAE,UAAU9C,4BAA4B,CAAC,CAAD,CAA5B,CAAgC8C,EAHpD;YAII,KAAK,EAAE9C,4BAA4B,CAAC,CAAD,CAA5B,CAAgC8C,EAJ3C,CAKI;YALJ;YAMI,cAAc,EAAE,IANpB;YAOI,QAAQ;UAPZ;YAAA;YAAA;YAAA;UAAA,QADJ,OAQqBtE,MARrB;QAAA,GAAgC,aAAawB,4BAA4B,CAAC,CAAD,CAA5B,CAAgC8C,EAA7E;UAAA;UAAA;UAAA;QAAA,QADJ;MAYH,CAlBD,MAkBO,IAAI9C,4BAA4B,CAACmB,MAA7B,GAAsC,CAA1C,EAA6C;QAEhD,OACInB,4BAA4B,CAACiC,GAA7B,CAAiC,CAACC,IAAD,EAAOC,CAAP,KAAa;UAC1C,IAAIV,KAAK,GAAI,GAAES,IAAI,CAACb,UAAL,CAAgB6C,kBAAmB,EAAlD;UACA,IAAI1F,MAAM,GAAI,GAAE0D,IAAI,CAACb,UAAL,CAAgB6C,kBAAmB,EAAnD;;UAEA,IAAI1F,MAAM,IAAI,MAAd,EAAsB;YAClB,oBACI;cAAK,SAAS,EAAC,WAAf;cAAA,wBACI;gBAAO,IAAI,EAAC,UAAZ;gBACI,SAAS,EAAC,kBADd;gBAEI,EAAE,EAAEA,MAFR;gBAGI,IAAI,EAAEA,MAHV;gBAII,KAAK,EAAEA,MAJX;gBAKI,QAAQ,EAAGkE,CAAD,IAAOiC,wBAAwB,CAACjC,CAAD,EAAIV,SAAJ,EAAeQ,QAAf,CAL7C;gBAMI,cAAc,EAAEN,IAAI,CAACS;cANzB;gBAAA;gBAAA;gBAAA;cAAA,QADJ,OAO0CnE,MAP1C;YAAA,GAAgCA,MAAhC;cAAA;cAAA;cAAA;YAAA,QADJ,CAUI;YAVJ;UAYH;QACJ,CAlBD,CADJ;MAqBH;IACJ;EACJ,CA/CD;;EAiDA,MAAM4G,wBAAwB,GAAG,CAACpD,SAAD,EAAYQ,QAAZ,KAAyB;IACtD,IAAIuC,KAAK,CAACC,OAAN,CAAc9E,yBAAd,CAAJ,EAA8C;MAE1C;MACA,IAAIA,yBAAyB,IAAIA,yBAAyB,CAACiB,MAA1B,IAAoC,CAArE,EAAwE;QACpEgD,kCAAkC,CAACnC,SAAD,EAAYQ,QAAZ,CAAlC;QACA,IAAIhE,MAAM,GAAI,GAAE0B,yBAAyB,CAAC,CAAD,CAAzB,CAA6BmB,UAA7B,CAAwC+C,KAAM,EAA9D;;QACA,IAAI5F,MAAM,IAAI,MAAd,EAAsB;UAClBA,MAAM,GAAG,WAAT;QACH;;QACD,oBACI;UAAK,SAAS,EAAC,WAAf;UAAA,wBACI;YAAO,IAAI,EAAC,UAAZ;YACI,SAAS,EAAC,kBADd;YAEI,EAAE,EAAE,UAAU0B,yBAAyB,CAAC,CAAD,CAAzB,CAA6B4C,EAF/C;YAGI,IAAI,EAAE,UAAU5C,yBAAyB,CAAC,CAAD,CAAzB,CAA6B4C,EAHjD;YAII,KAAK,EAAE5C,yBAAyB,CAAC,CAAD,CAAzB,CAA6B4C,EAJxC,CAKI;YALJ;YAMI,cAAc,EAAE,IANpB;YAOI,QAAQ;UAPZ;YAAA;YAAA;YAAA;UAAA,QADJ,OAQqBtE,MARrB;QAAA,GAAgC,aAAa0B,yBAAyB,CAAC,CAAD,CAAzB,CAA6B4C,EAA1E;UAAA;UAAA;UAAA;QAAA,QADJ;MAYH,CAlBD,MAkBO,IAAI5C,yBAAyB,CAACiB,MAA1B,GAAmC,CAAvC,EAA0C;QAE7C,OACIjB,yBAAyB,CAAC+B,GAA1B,CAA8B,CAACC,IAAD,EAAOC,CAAP,KAAa;UACvC,IAAIV,KAAK,GAAI,GAAES,IAAI,CAACb,UAAL,CAAgB+C,KAAM,EAArC;UACA,IAAI5F,MAAM,GAAI,GAAE0D,IAAI,CAACb,UAAL,CAAgB+C,KAAM,EAAtC;;UAEA,IAAI5F,MAAM,IAAI,MAAd,EAAsB;YAClB,oBACI;cAAK,SAAS,EAAC,WAAf;cAAA,wBACI;gBAAO,IAAI,EAAC,UAAZ;gBACI,SAAS,EAAC,kBADd;gBAEI,EAAE,EAAEA,MAFR;gBAGI,IAAI,EAAEA,MAHV;gBAII,KAAK,EAAEA,MAJX;gBAKI,QAAQ,EAAGkE,CAAD,IAAOkC,8BAA8B,CAAClC,CAAD,EAAIV,SAAJ,EAAeQ,QAAf,CALnD;gBAMI,cAAc,EAAEN,IAAI,CAACS;cANzB;gBAAA;gBAAA;gBAAA;cAAA,QADJ,OAO0CnE,MAP1C;YAAA,GAAgCA,MAAhC;cAAA;cAAA;cAAA;YAAA,QADJ,CAUI;YAVJ;UAYH;QACJ,CAlBD,CADJ;MAqBH;IACJ;EACJ,CA/CD;;EAiDA,MAAM6G,2BAA2B,GAAG,CAACrD,SAAD,EAAYQ,QAAZ,KAAyB;IACzD,IAAIuC,KAAK,CAACC,OAAN,CAAc5E,0BAAd,CAAJ,EAA+C;MAE3C;MACA,IAAIA,0BAA0B,IAAIA,0BAA0B,CAACe,MAA3B,IAAqC,CAAvE,EAA0E;QACtEkD,oCAAoC,CAACrC,SAAD,EAAYQ,QAAZ,CAApC;QACA,IAAIhE,MAAM,GAAI,GAAE4B,0BAA0B,CAAC,CAAD,CAA1B,CAA8BiB,UAA9B,CAAyCiD,cAAe,EAAxE;;QACA,IAAI9F,MAAM,IAAI,MAAd,EAAsB;UAClBA,MAAM,GAAG,WAAT;QACH;;QACD,oBACI;UAAK,SAAS,EAAC,WAAf;UAAA,wBACI;YAAO,IAAI,EAAC,UAAZ;YACI,SAAS,EAAC,kBADd;YAEI,EAAE,EAAE,UAAU4B,0BAA0B,CAAC,CAAD,CAA1B,CAA8B0C,EAFhD;YAGI,IAAI,EAAE,UAAU1C,0BAA0B,CAAC,CAAD,CAA1B,CAA8B0C,EAHlD;YAII,KAAK,EAAE1C,0BAA0B,CAAC,CAAD,CAA1B,CAA8B0C,EAJzC,CAKI;YALJ;YAMI,cAAc,EAAE,IANpB;YAOI,QAAQ;UAPZ;YAAA;YAAA;YAAA;UAAA,QADJ,OAQqBtE,MARrB;QAAA,GAAgC,aAAa4B,0BAA0B,CAAC,CAAD,CAA1B,CAA8B0C,EAA3E;UAAA;UAAA;UAAA;QAAA,QADJ;MAYH,CAlBD,MAkBO,IAAI1C,0BAA0B,CAACe,MAA3B,GAAoC,CAAxC,EAA2C;QAE9C,OACIf,0BAA0B,CAAC6B,GAA3B,CAA+B,CAACC,IAAD,EAAOC,CAAP,KAAa;UACxC,IAAIV,KAAK,GAAI,GAAES,IAAI,CAACb,UAAL,CAAgBiD,cAAe,EAA9C;UACA,IAAI9F,MAAM,GAAI,GAAE0D,IAAI,CAACb,UAAL,CAAgBiD,cAAe,EAA/C;;UAEA,IAAI9F,MAAM,IAAI,MAAd,EAAsB;YAClB,oBACI;cAAK,SAAS,EAAC,WAAf;cAAA,wBACI;gBAAO,IAAI,EAAC,UAAZ;gBACI,SAAS,EAAC,kBADd;gBAEI,EAAE,EAAEA,MAFR;gBAGI,IAAI,EAAEA,MAHV;gBAII,KAAK,EAAEA,MAJX;gBAKI,QAAQ,EAAGkE,CAAD,IAAOmC,iCAAiC,CAACnC,CAAD,EAAIV,SAAJ,EAAeQ,QAAf,CALtD;gBAMI,cAAc,EAAEN,IAAI,CAACS;cANzB;gBAAA;gBAAA;gBAAA;cAAA,QADJ,OAO0CnE,MAP1C;YAAA,GAAgCA,MAAhC;cAAA;cAAA;cAAA;YAAA,QADJ,CAUI;YAVJ;UAYH;QACJ,CAlBD,CADJ;MAqBH;IACJ;EACJ,CA/CD;;EAiDA,MAAM8G,wBAAwB,GAAItD,SAAD,IAAe;IAE5C,MAAMuD,kBAAkB,GAAG,CACvB,oBADuB,EAEvB,UAFuB,EAGvB,UAHuB,EAIvB,YAJuB,EAKvB,MALuB,CAA3B;IAQA,IAAIC,cAAc,GAAGnG,kCAAkC,CAACE,IAAnC,CAAwC8C,MAAxC,CAA+CH,IAAI,IAAI;MACxE,OAAOA,IAAI,CAACF,SAAL,IAAkBA,SAAzB;IACH,CAFoB,CAArB;IAIA,IAAIyD,SAAS,GAAGD,cAAc,CAAC,CAAD,CAA9B,CAd4C,CAgB5C;;IAEA,IAAIC,SAAS,IAAIlD,SAAb,IAA0B/B,2BAA2B,CAACiF,SAAS,CAACjD,QAAX,CAA3B,IAAmDD,SAAjF,EAA4F;MACxF,IAAImD,SAAS,GAAGlF,2BAA2B,CAACiF,SAAS,CAACjD,QAAX,CAA3C,CADwF,CAGxF;;MACA,IAAIkD,SAAS,CAACjE,KAAV,IAAmB,IAAvB,EAA6B;QAEzB,IAAIkE,aAAa,GAAGtG,kCAAkC,CAACE,IAAnC,CAAwC0C,GAAxC,CAA4CC,IAAI,IAAI;UACpE,IAAIA,IAAI,CAACF,SAAL,IAAkBA,SAAtB,EAAiC;YAC7BE,IAAI,CAACM,QAAL,GAAgBiD,SAAS,CAACjD,QAA1B;YACA,IAAIoD,WAAW,GAAGpF,2BAA2B,CAACiF,SAAS,CAACjD,QAAX,CAA7C;YACAN,IAAI,CAACJ,KAAL,GAAc8D,WAAW,CAACnE,KAAZ,IAAqB,IAAtB,GAA8BmE,WAAW,CAACnE,KAA1C,GAAkD,EAA/D;YACAS,IAAI,CAAC2D,aAAL,GAAsBD,WAAW,CAACnE,KAAZ,IAAqB,IAAtB,GAA8BmE,WAAW,CAACnE,KAA1C,GAAkD,EAAvE;UACH;;UACD,OAAOS,IAAP;QACH,CARmB,CAApB;QAUA,IAAI4D,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAON,SAAS,CAAC3G,KAAzC,CAAtB;;QAEA,IAAI+G,eAAe,IAAI,CAACA,eAAe,CAACG,YAAhB,CAA6B,UAA7B,CAAxB,EAAkE;UAC9DH,eAAe,CAACI,YAAhB,CAA6B,UAA7B,EAAyC,MAAzC;QACH,CAhBwB,CAkBzB;;;QAEA,oBACI;UAAA,UAAGR,SAAS,CAACjE;QAAb,iBADJ;MAGH,CAvBD,MAuBO,IAAIiE,SAAS,CAAC3G,KAAV,IAAmB,cAAvB,EAAuC;QAE1C,IAAI+G,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAOP,SAAS,CAACzD,SAAzC,CAAtB;;QACA,IAAI8D,eAAe,IAAI,CAACA,eAAe,CAACG,YAAhB,CAA6B,UAA7B,CAAxB,EAAkE;UAC9DH,eAAe,CAACI,YAAhB,CAA6B,UAA7B,EAAyC,MAAzC;QACH;;QAED,oBACI;UAAK,SAAS,EAAC,qDAAf;UAAA,UACKjB,uBAAuB,CAACjD,SAAD,EAAYyD,SAAS,CAACjD,QAAtB;QAD5B;UAAA;UAAA;UAAA;QAAA,QADJ;MAKH,CAZM,MAYA,IAAIkD,SAAS,CAAClE,IAAV,IAAkB,cAAtB,EAAsC;QAEzC,IAAIsE,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAOP,SAAS,CAACzD,SAAzC,CAAtB;;QACA,IAAI8D,eAAe,IAAI,CAACA,eAAe,CAACG,YAAhB,CAA6B,UAA7B,CAAxB,EAAkE;UAC9DH,eAAe,CAACI,YAAhB,CAA6B,UAA7B,EAAyC,MAAzC;QACH;;QAED,oBACI;UAAK,SAAS,EAAC,qDAAf;UAAA,UACKpB,kBAAkB,CAAC9C,SAAD,EAAYyD,SAAS,CAACjD,QAAtB;QADvB;UAAA;UAAA;UAAA;QAAA,QADJ;MAKH,CAZM,MAYA,IAAIkD,SAAS,CAAClE,IAAV,IAAkB,aAAtB,EAAqC;QAExC,IAAIsE,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAOP,SAAS,CAACzD,SAAzC,CAAtB;;QACA,IAAKlC,mBAAmB,CAAC,CAAD,CAAnB,IAA0BA,mBAAmB,CAACqB,MAApB,IAA8B,CAAzD,IAA+D2E,eAA/D,IAAkF,CAACA,eAAe,CAACG,YAAhB,CAA6B,UAA7B,CAAvF,EAAiI;UAC7HH,eAAe,CAACI,YAAhB,CAA6B,UAA7B,EAAyC,MAAzC;QACH;;QAED,oBACI;UAAK,SAAS,EAAC,qDAAf;UAAA,UACKhB,iBAAiB,CAAClD,SAAD,EAAYyD,SAAS,CAACjD,QAAtB;QADtB;UAAA;UAAA;UAAA;QAAA,QADJ;MAMH,CAbM,MAaA,IAAIkD,SAAS,CAAClE,IAAV,IAAkB,aAAtB,EAAqC;QAExC,IAAIsE,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAOP,SAAS,CAACzD,SAAzC,CAAtB;;QACA,IAAKhC,4BAA4B,CAAC,CAAD,CAA5B,IAAmCI,0BAA0B,CAACe,MAA3B,IAAqC,CAAzE,IAA+E2E,eAA/E,IAAkG,CAACA,eAAe,CAACG,YAAhB,CAA6B,UAA7B,CAAvG,EAAiJ;UAC7IH,eAAe,CAACI,YAAhB,CAA6B,UAA7B,EAAyC,MAAzC;QACH;;QAED,oBACI;UAAK,SAAS,EAAC,qDAAf;UAAA,UACKf,kBAAkB,CAACnD,SAAD,EAAYyD,SAAS,CAACjD,QAAtB;QADvB;UAAA;UAAA;UAAA;QAAA,QADJ;MAKH,CAZM,MAYA,IAAIkD,SAAS,CAAClE,IAAV,IAAkB,OAAtB,EAA+B;QAElC,IAAIsE,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAOP,SAAS,CAACzD,SAAzC,CAAtB;;QACA,IAAK9B,yBAAyB,CAAC,CAAD,CAAzB,IAAgCA,yBAAyB,CAACiB,MAA1B,IAAoC,CAArE,IAA2E2E,eAA3E,IAA8F,CAACA,eAAe,CAACG,YAAhB,CAA6B,UAA7B,CAAnG,EAA6I;UACzIH,eAAe,CAACI,YAAhB,CAA6B,UAA7B,EAAyC,MAAzC;QACH;;QAED,oBACI;UAAK,SAAS,EAAC,qDAAf;UAAA,UACKd,wBAAwB,CAACpD,SAAD,EAAYyD,SAAS,CAACjD,QAAtB;QAD7B;UAAA;UAAA;UAAA;QAAA,QADJ;MAKH,CAZM,MAYA,IAAIkD,SAAS,CAAClE,IAAV,IAAkB,SAAtB,EAAiC;QAEpC,IAAIsE,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAOP,SAAS,CAACzD,SAAzC,CAAtB;;QACA,IAAK5B,0BAA0B,CAAC,CAAD,CAA1B,IAAiCA,0BAA0B,CAACe,MAA3B,IAAqC,CAAvE,IAA6E2E,eAA7E,IAAgG,CAACA,eAAe,CAACG,YAAhB,CAA6B,UAA7B,CAArG,EAA+I;UAC3IH,eAAe,CAACI,YAAhB,CAA6B,UAA7B,EAAyC,MAAzC;QACH;;QAED,oBACI;UAAK,SAAS,EAAC,qDAAf;UAAA,UACKb,2BAA2B,CAACrD,SAAD,EAAYyD,SAAS,CAACjD,QAAtB;QADhC;UAAA;UAAA;UAAA;QAAA,QADJ;MAKH,CAZM,MAYA;QACH,oBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ;MAGH;IACJ;;IACD,oBAAQ,qCAAR;EACH,CA7HD;;EA+HA,MAAMoB,uBAAuB,GAAG,CAAC5B,SAAD,EAAYQ,QAAZ,EAAsBf,KAAtB,KAAgC;IAE5D;IAEA,IAAI0E,SAAS,GAAG9G,kCAAkC,CAACE,IAAnC,CAAwC0C,GAAxC,CAA4CC,IAAI,IAAI;MAEhE,IAAIA,IAAI,CAACF,SAAL,IAAkBA,SAAtB,EAAiC;QAC7BE,IAAI,CAACM,QAAL,GAAgBA,QAAhB;QACA,IAAIkD,SAAS,GAAGlF,2BAA2B,CAACgC,QAAD,CAA3C;QAEAN,IAAI,CAACJ,KAAL,GAAc4D,SAAS,CAACjE,KAAV,IAAmB,IAApB,GAA4BiE,SAAS,CAACjE,KAAtC,GAA8CA,KAA3D;QACAS,IAAI,CAAC2D,aAAL,GAAsBH,SAAS,CAACjE,KAAV,IAAmB,IAApB,GAA4BiE,SAAS,CAACjE,KAAtC,GAA8CA,KAAnE;MACH;;MACD,OAAOS,IAAP;IACH,CAVe,CAAhB,CAJ4D,CAgB5D;IACA;EACH,CAlBD,CA7uB6C,CAiwB7C;;;EACA,MAAMkE,iBAAiB,GAAG,CACtB;IACIC,IAAI,EAAE,4BADV;IAEIC,IAAI,EAAEtE,SAAS,iBAAI;MAAA,uBAAK;QAAA,UAASA;MAAT;QAAA;QAAA;QAAA;MAAA;IAAL;MAAA;MAAA;MAAA;IAAA,QAFvB;IAGIuE,QAAQ,EAAE,IAHd;IAIIC,KAAK,EAAE;EAJX,CADsB,EAOtB;IACIH,IAAI,EAAE,OADV;IAEIC,IAAI,EAAEtE,SAAS,iBACX;MAAQ,SAAS,EAAC,cAAlB;MAAiC,EAAE,EAAG,KAAIA,SAAU,EAApD;MAAuD,IAAI,EAAG,OAAMA,SAAU,EAA9E;MACI,QAAQ,EAAEU,CAAC,IAAIkB,uBAAuB,CAAC5B,SAAD,EAAYU,CAAC,CAACE,MAAF,CAASnB,KAArB,EAA4B,EAA5B,CAD1C;MAC2E,QAAQ,MADnF;MAAA,wBAEI;QAAQ,KAAK,EAAC,EAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,EAGKM,YAAY,CAACC,SAAD,CAHjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAHR;IAQIuE,QAAQ,EAAE,KARd;IASIC,KAAK,EAAE;EATX,CAPsB,EAkBtB;IACIH,IAAI,EAAE,oBADV;IAEIG,KAAK,EAAE,KAFX;IAGIF,IAAI,EAAEtE,SAAS,iBACX;MAAK,SAAS,EAAC,KAAf;MAAA,uBACI;QAAK,SAAS,EAAC,KAAf;QAAA,UACKsD,wBAAwB,CAACtD,SAAD;MAD7B;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EAJR,CAlBsB,CA4BtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EArCsB,CAA1B,CAlwB6C,CA0yB7C;;EACA,MAAMyE,aAAa,GAAG,CAClB;IACIJ,IAAI,EAAE,OADV;IAEIC,IAAI,EAAEI,KAAK,iBACP;MAAA,uBACI;QAAA,UAASA,KAAK,CAACC,WAAN,GAAoBD,KAAK,CAACC,WAA1B,GAAwC;MAAjD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAHR;IAMIJ,QAAQ,EAAE,IANd;IAOIC,KAAK,EAAE;EAPX,CADkB,EAUlB;IACIH,IAAI,EAAE,MADV;IAEIC,IAAI,EAAEI,KAAK,iBACP;MAAQ,SAAS,EAAC,cAAlB;MAAiC,EAAE,EAAG,UAASA,KAAK,CAACC,WAAY,EAAjE;MAAoE,IAAI,EAAG,OAAMD,KAAK,CAACC,WAAY,EAAnG;MAAsG,QAAQ,MAA9G;MAAA,uBACI;QAAQ,KAAK,EAAEC,gBAAgB,CAACF,KAAK,CAACG,SAAP,CAA/B;QAAkD,QAAQ,MAA1D;QAAA,gBAA6DD,gBAAgB,CAACF,KAAK,CAACG,SAAP,CAA7E;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAHR;IAOIN,QAAQ,EAAE,KAPd;IAQIC,KAAK,EAAE;EARX,CAVkB,EAoBlB;IACIH,IAAI,EAAE,OADV;IAEIG,KAAK,EAAE,KAFX;IAGIF,IAAI,EAAEI,KAAK,iBACP;MAAK,SAAS,EAAC,KAAf;MAAA,uBACI;QAAK,SAAS,EAAC,KAAf;QAAA,UACKI,mBAAmB,CAACJ,KAAD;MADxB;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EAJR,CApBkB,CAAtB,CA3yB6C,CA20B7C;;EACA,MAAMI,mBAAmB,GAAIJ,KAAD,IAAW;IAEnC;IACA,MAAMlB,cAAc,GAAGkB,KAAvB,CAHmC,CAKnC;IACA;IAEA;;IACA,MAAMG,SAAS,GAAGrB,cAAc,CAACqB,SAAjC;IACA,MAAMF,WAAW,GAAGnB,cAAc,CAACmB,WAAnC;IACA,MAAMjB,SAAS,GAAGmB,SAAS,IAAI,CAAb,GAAiBrB,cAAc,CAACuB,KAAhC,GAAwC,EAA1D,CAXmC,CAanC;;IACA,IAAIF,SAAS,IAAI,CAAjB,EAAoB;MAEhB;MACA,oBACI;QAAK,SAAS,EAAC,qDAAf;QAAA,uBACI;UAAA,UAAGnB;QAAH;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH,CARD,MAQO,IAAImB,SAAS,IAAI,CAAjB,EAAoB;MAEvB;MACA,oBACI;QAAK,SAAS,EAAC,qDAAf;QAAA,uBACI;UAAA,UAAGnB;QAAH;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH,CARM,MAQA,IAAImB,SAAS,IAAI,CAAjB,EAAoB;MAEvB;MACA,oBACI;QAAK,SAAS,EAAC,qDAAf;QAAA,uBACI;UAAA,UAAGnB;QAAH;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH;EAEJ,CAxCD,CA50B6C,CAs3B7C;;;EACA,MAAMkB,gBAAgB,GAAII,IAAD,IAAU;IAE/B;IACA,IAAIC,eAAJ,CAH+B,CAK/B;;IACA,IAAID,IAAI,IAAI,CAAZ,EAAe;MAEX;MACAC,eAAe,GAAG,OAAlB;IACH,CAJD,MAIO,IAAID,IAAI,IAAI,CAAZ,EAAe;MAElB;MACAC,eAAe,GAAG,OAAlB;IACH,CAJM,MAIA,IAAID,IAAI,IAAI,CAAZ,EAAe;MAElB;MACAC,eAAe,GAAG,OAAlB;IACH,CAlB8B,CAoB/B;;;IACA,OAAOA,eAAP;EACH,CAtBD,CAv3B6C,CA+4B7C;;;EACA,MAAMpF,gBAAgB,GAAIqF,wBAAD,IAA8B;IAEnD;IACA/H,kBAAkB,CAAC,IAAD,CAAlB;IACAQ,oBAAoB,CAAC;MAAEJ,IAAI,EAAE;IAAR,CAAD,CAApB;IACAQ,mBAAmB,CAAC;MAAER,IAAI,EAAE;IAAR,CAAD,CAAnB;IACAU,4BAA4B,CAAC;MAAEV,IAAI,EAAE;IAAR,CAAD,CAA5B;IACAY,yBAAyB,CAAC;MAAEZ,IAAI,EAAE;IAAR,CAAD,CAAzB;IACAc,0BAA0B,CAAC;MAAEd,IAAI,EAAE;IAAR,CAAD,CAA1B;IACAD,kCAAkC,CAAC;MAAEC,IAAI,EAAE;IAAR,CAAD,CAAlC;IACAJ,kBAAkB,CAAC;MAAEI,IAAI,EAAE;IAAR,CAAD,CAAlB,CAVmD,CAYnD;;IACA,MAAMA,IAAI,GAAG;MACT,QAAQ;QACJ,QAAQ,iBADJ;QAEJ,cAAc;UACV,MAAM3B,KAAK,CAACgD;QADF;MAFV;IADC,CAAb,CAbmD,CAsBnD;;IACArD,UAAU,CAAC4J,gBAAX,CAA4B,0CAA0CvJ,KAAK,CAACgD,gBAA5E,EAA8FrB,IAA9F,EAAoGwB,IAApG,EAEI;IACAC,KAAK,IAAI;MAEL;MACA,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;QAEd;QACA9B,kBAAkB,CAAC6B,KAAD,CAAlB,CAHc,CAKd;;QACA,IAAIoG,gBAAgB,GAAGpG,KAAK,CAAC5B,MAAN,CAAa6C,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,KAAa;UAEjD;UACA,IAAIkF,UAAU,GAAGH,wBAAwB,CAACI,SAAzB,EAEb;UACAhF,CAAC,IAEG;UACAA,CAAC,CAACvD,KAAF,IAAWmD,IANF,CAAjB,CAHiD,CAYjD;;UACA,IAAImF,UAAU,IAAI,CAAlB,EAAqB;YAEjB;YACA,OAAO;cAAErF,SAAS,EAAEE,IAAb;cAAmBM,QAAQ,EAAE6E,UAA7B;cAAyCvF,KAAK,EAAE;YAAhD,CAAP;UACH,CAJD,MAIO;YAEH;YACA,OAAO;cAAEE,SAAS,EAAEE,IAAb;cAAmBM,QAAQ,EAAE,EAA7B;cAAiCV,KAAK,EAAE;YAAxC,CAAP;UACH;QACJ,CAtBsB,CAAvB,CANc,CA8Bd;;QACA,IAAIyF,eAAe,GAAGvG,KAAK,CAACwG,MAAN,IAAgBxG,KAAK,CAACwG,MAAN,CAAavF,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,KAAa;UAEhE;UACA,IAAI0E,SAAS,GAAG3E,IAAI,CAAC2E,SAArB,CAHgE,CAKhE;;UACA,IAAIA,SAAS,IAAI,CAAjB,EAAoB;YAEhB;YACA,OAAO;cAAE3E,IAAI,EAAE,IAAR;cAAcF,SAAS,EAAEE,IAAI,CAACyE,WAA9B;cAA2CnE,QAAQ,EAAEN,IAAI,CAACyE,WAAL,GAAmBxE,CAAxE;cAA2EL,KAAK,EAAEI,IAAI,CAAC6E;YAAvF,CAAP;UACH,CAJD,MAIO;YAEH;YACA,OAAO;cAAE7E,IAAI,EAAE,IAAR;cAAcF,SAAS,EAAEE,IAAI,CAACyE,WAA9B;cAA2CnE,QAAQ,EAAEN,IAAI,CAACyE,WAAL,GAAmBxE,CAAxE;cAA2EL,KAAK,EAAE;YAAlF,CAAP;UACH;QACJ,CAfqC,CAAtC,CA/Bc,CAgDd;;QACAxC,kCAAkC,CAAC;UAAEC,IAAI,EAAE6H;QAAR,CAAD,CAAlC;QACA3H,+BAA+B,CAAC;UAAEF,IAAI,EAAEgI;QAAR,CAAD,CAA/B,CAlDc,CAoDd;;QACAE,0BAA0B;QAC1BC,kBAAkB;QAClBC,iBAAiB;MACpB;IACJ,CA/DL,EAvBmD,CAyFnD;;IACAC,MAAM,CAACC,WAAP,CAAmB,KAAnB;EACH,CA3FD;;EA6FA,MAAMH,kBAAkB,GAAG,MAAM;IAC7B,MAAMnI,IAAI,GAAG;MACT,QAAQ;QACJ,QAAQ,aADJ;QAEJ,cAAc;UACV,gBAAgB,cADN;UAEV,eAAe,aAFL;UAGV,4BAA4BtB,sBAHlB;UAIV,kBAAkB6J,IAAI,CAACC,GAAL,EAJR;UAKV,kBAAkB,CAAC,CALT;UAMV,UAAU,GANA;UAOV,YAAY,GAPF;UAQV,gBAAgB;QARN;MAFV;IADC,CAAb;IAeAxK,UAAU,CAAC4J,gBAAX,CAA4B,mCAAmClJ,sBAA/D,EAAuFsB,IAAvF,EAA6FwB,IAA7F,CACIC,KAAK,IAAI;MACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;QAEd,IAAImG,gBAAgB,GAAGpG,KAAK,CAACzB,IAAN,CAAW0C,GAAX,CAAgBC,IAAD,IAAU;UAC5CA,IAAI,CAACS,OAAL,GAAe,KAAf;UACA,OAAOT,IAAP;QACH,CAHsB,CAAvB;QAKAvC,oBAAoB,CAACyH,gBAAD,CAApB;MACH;IACJ,CAXL;EAaH,CA7BD;;EA+BA,MAAMO,iBAAiB,GAAG,MAAM;IAC5B,MAAMpI,IAAI,GAAG;MACT,QAAQ;QACJ,QAAQ,YADJ;QAEJ,cAAc;UACV,4BAA4BtB,sBADlB;UAEV,kBAAkB,GAFR;UAGV,oBAAoB,GAHV;UAIV,iBAAiB,GAJP;UAKV,kBAAkB,GALR;UAMV,mBAAmB,GANT;UAOV,oBAAoB,GAPV;UAQV,UAAU,GARA;UASV,YAAY,GATF;UAUV,gBAAgB;QAVN;MAFV;IADC,CAAb;IAkBAV,UAAU,CAAC4J,gBAAX,CAA4B,uCAAuClJ,sBAAnE,EAA2FsB,IAA3F,EAAiGwB,IAAjG,CACIC,KAAK,IAAI;MACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;QACd,IAAImG,gBAAgB,GAAGpG,KAAK,CAACzB,IAAN,CAAW0C,GAAX,CAAgBC,IAAD,IAAU;UAC5CA,IAAI,CAACS,OAAL,GAAe,KAAf;UACA,OAAOT,IAAP;QACH,CAHsB,CAAvB;QAIAnC,mBAAmB,CAACqH,gBAAD,CAAnB;MACH,CAND,MAMO;QACHtI,aAAa,CAAC;UAAEC,KAAK,EAAE,sBAAT;UAAiCC,OAAO,EAAEgC,KAAK,CAACC,KAAN,CAAY4C,QAAZ,EAA1C;UAAkE5E,IAAI,EAAE,IAAxE;UAA8E+I,QAAQ,EAAE,IAAxF;UAA8FlK,IAAI,EAAE;YAAEA;UAAF;QAApG,CAAD,CAAb;MACH;IACJ,CAXL;EAaH,CAhCD;;EAkCA,MAAM2J,0BAA0B,GAAG,MAAM;IACrC,MAAMlI,IAAI,GAAG;MACT,QAAQ;QACJ,QAAQ,qBADJ;QAEJ,cAAc;UACV,4BAA4BtB,sBADlB;UAEV,YAAY,GAFF;UAGV,qBAAqB,IAHX;UAIV,UAAU,GAJA;UAKV,YAAY,GALF;UAMV,gBAAgB;QANN;MAFV;IADC,CAAb;IAcAV,UAAU,CAAC4J,gBAAX,CAA4B,iDAAiDlJ,sBAA7E,EAAqGsB,IAArG,EAA2GwB,IAA3G,CACIC,KAAK,IAAI;MACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;QACd,IAAImG,gBAAgB,GAAGpG,KAAK,CAACzB,IAAN,CAAW0C,GAAX,CAAgBC,IAAD,IAAU;UAE5C,IAAI+F,iBAAiB,GAAG/F,IAAI,CAACb,UAAL,CAAgB6C,kBAAxC;UACA,IAAIgE,gBAAgB,GAAGhG,IAAI,CAACb,UAAL,CAAgB+C,KAAvC;UACA,IAAI+D,kBAAkB,GAAGjG,IAAI,CAACb,UAAL,CAAgBiD,cAAzC;;UAEA,IAAI2D,iBAAiB,IAAI,IAAzB,EAA+B;YAC3B/F,IAAI,CAACb,UAAL,CAAgB6C,kBAAhB,GAAqC,WAArC;UACH;;UAED,IAAIgE,gBAAgB,IAAI,IAAxB,EAA8B;YAC1BhG,IAAI,CAACb,UAAL,CAAgB+C,KAAhB,GAAwB,WAAxB;UACH;;UAED,IAAI+D,kBAAkB,IAAI,IAA1B,EAAgC;YAC5BjG,IAAI,CAACb,UAAL,CAAgBiD,cAAhB,GAAiC,WAAjC;UACH;;UAEDpC,IAAI,CAACS,OAAL,GAAe,KAAf;UACA,OAAOT,IAAP;QACH,CApBsB,CAAvB;QAqBAjC,4BAA4B,CAACmH,gBAAD,CAA5B;QACAjH,yBAAyB,CAACiH,gBAAD,CAAzB;QACA/G,0BAA0B,CAAC+G,gBAAD,CAA1B;MACH,CAzBD,MA0BK;QACDtI,aAAa,CAAC;UAAEC,KAAK,EAAE,2BAAT;UAAsCC,OAAO,EAAEgC,KAAK,CAACC,KAAN,CAAY4C,QAAZ,EAA/C;UAAuE5E,IAAI,EAAE,IAA7E;UAAmF+I,QAAQ,EAAE,IAA7F;UAAmGlK,IAAI,EAAE;YAAEA;UAAF;QAAzG,CAAD,CAAb;MACH;IAEJ,CAhCL;EAkCH,CAjDD;;EAmDA,MAAMsK,gBAAgB,GAAG,MAAM;IAC3B,IAAI;MACAR,MAAM,CAACC,WAAP,CAAmB,IAAnB;MAEA,IAAIzI,MAAM,GAAGC,kCAAkC,CAACE,IAAnC,CAAwC0C,GAAxC,CAA4CC,IAAI,IAAI;QAC7D,OAAO;UACH,SAASA,IAAI,CAACF,SADX;UAEH,SAASE,IAAI,CAACJ;QAFX,CAAP;MAIH,CALY,CAAb;MAOA,MAAMvC,IAAI,GAAG;QACT,QAAQ;UACJ,QAAQ,iBADJ;UAEJ,cAAc;YACV,UAAUH;UADA;QAFV;MADC,CAAb;MAQA7B,UAAU,CAAC4J,gBAAX,CAA4B,4CAA4CvJ,KAAK,CAACgD,gBAA9E,EAAgGrB,IAAhG,EAAsGwB,IAAtG,CACIC,KAAK,IAAI;QACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;UACdoH,kBAAkB,CAACrH,KAAK,CAACsH,YAAP,EAAqBtH,KAAK,CAACuH,OAA3B,EAAoCvH,KAAK,CAACwH,SAA1C,EAAqD,MAArD,CAAlB;UACAZ,MAAM,CAACC,WAAP,CAAmB,KAAnB;QACH,CAHD,MAIK;UACD/I,aAAa,CAAC;YAAEC,KAAK,EAAE,gBAAgBf,QAAhB,GAA2B,MAApC;YAA4CgB,OAAO,EAAEgC,KAAK,CAACC,KAAN,CAAY4C,QAAZ,EAArD;YAA6E5E,IAAI,EAAE,IAAnF;YAAyF+I,QAAQ,EAAE,IAAnG;YAAyGlK,IAAI,EAAE;cAAEA;YAAF,CAA/G;YAAyH2K,KAAK,EAAEC,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC;UAA7J,CAAD,CAAb;QACH;MACJ,CATL;IAWH,CA7BD,CA6BE,OAAO5H,KAAP,EAAc;MACZ6H,OAAO,CAAC7H,KAAR,CAAcA,KAAd;IACH;EACJ,CAjCD;;EAmCA,SAASoH,kBAAT,CAA4BU,WAA5B,EAAyCC,UAAzC,EAAqDC,QAArD,EAA+DC,SAA/D,EAA0E;IACtE,MAAMC,UAAU,GAAI,QAAOJ,WAAY,WAAUC,UAAW,EAA5D;IACA,MAAMI,YAAY,GAAGrD,QAAQ,CAACsD,aAAT,CAAuB,GAAvB,CAArB;IACAD,YAAY,CAACE,IAAb,GAAoBH,UAApB;IACAC,YAAY,CAACG,QAAb,GAAwBN,QAAxB;IACAG,YAAY,CAACI,KAAb;EACH;;EAED,MAAMC,oBAAoB,GAAIzH,SAAD,IAAe;IAExC,oBACI;MAAK,SAAS,EAAC,WAAf;MAAA,uBACI;QAAO,IAAI,EAAC,UAAZ;QACI,SAAS,EAAC,kBADd;QAEI,EAAE,EAAE,UAAUA,SAAV,GAAsB,GAF9B;QAGI,IAAI,EAAE,UAAUA,SAAV,GAAsB,GAHhC;QAII,KAAK,EAAEA,SAAS,GAAG,GAJvB;QAKI,QAAQ,EAAGU,CAAD,IAAOgH,kBAAkB,CAAChH,CAAD,EAAIV,SAAJ;MALvC;QAAA;QAAA;QAAA;MAAA;IADJ,GAAgC,aAAaA,SAAb,GAAyB,GAAzD;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH,CAbD;;EAeA,MAAM0H,kBAAkB,GAAG,CAAChH,CAAD,EAAIV,SAAJ,KAAkB;IAEzC;IACA,IAAII,UAAU,GAAG/C,kCAAkC,CAACE,IAAnC,CAAwC8C,MAAxC,CAA+CC,CAAC,IAAIA,CAAC,CAACN,SAAF,IAAeA,SAAnE,CAAjB,CAHyC,CAKzC;;IACA,IAAIU,CAAC,CAACE,MAAF,CAASD,OAAb,EAAsB;MAElB;MACA,IAAIwD,SAAS,GAAG9G,kCAAkC,CAACE,IAAnC,CAAwC0C,GAAxC,CAA4CC,IAAI,IAAI;QAEhE;QACA,IAAIA,IAAI,CAACF,SAAL,IAAkBA,SAAtB,EAAiC;UAE7B;UACAE,IAAI,CAACM,QAAL,GAAgBJ,UAAU,CAAC,CAAD,CAAV,CAAcI,QAA9B;UACA,IAAIkD,SAAS,GAAGlF,2BAA2B,CAAC4B,UAAU,CAAC,CAAD,CAAV,CAAcI,QAAf,CAA3C,CAJ6B,CAM7B;;UACAN,IAAI,CAACJ,KAAL,GAAa,EAAb;UACAI,IAAI,CAAC2D,aAAL,GAAsBH,SAAS,CAACjE,KAAV,IAAmB,IAApB,GAA4BiE,SAAS,CAACjE,KAAtC,GAA8CW,UAAU,CAAC,CAAD,CAAV,CAAcX,KAAjF;QACH,CAZ+D,CAchE;;;QACA,OAAOS,IAAP;MACH,CAhBe,CAAhB;IAmBH,CAtBD,MAsBO;MAEH;MACA,IAAIiE,SAAS,GAAG9G,kCAAkC,CAACE,IAAnC,CAAwC0C,GAAxC,CAA4CC,IAAI,IAAI;QAEhE;QACA,IAAIA,IAAI,CAACF,SAAL,IAAkBA,SAAtB,EAAiC;UAE7B;UACAE,IAAI,CAACM,QAAL,GAAgBJ,UAAU,CAAC,CAAD,CAAV,CAAcI,QAA9B;UACA,IAAIkD,SAAS,GAAGlF,2BAA2B,CAAC4B,UAAU,CAAC,CAAD,CAAV,CAAcI,QAAf,CAA3C,CAJ6B,CAM7B;;UACAN,IAAI,CAACJ,KAAL,GAAaI,IAAI,CAAC2D,aAAlB;UACA3D,IAAI,CAAC2D,aAAL,GAAsBH,SAAS,CAACjE,KAAV,IAAmB,IAApB,GAA4BiE,SAAS,CAACjE,KAAtC,GAA8CW,UAAU,CAAC,CAAD,CAAV,CAAcX,KAAjF;QACH,CAZ+D,CAchE;;;QACA,OAAOS,IAAP;MACH,CAhBe,CAAhB;IAiBH;EACJ,CAjDD;;EAmDA,oBACI;IAAA,wBACI,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,QAAD;MAAU,IAAI,EAAErD;IAAhB;MAAA;MAAA;MAAA;IAAA,QAFJ,EAGKK,kBAAkB,IAAI,IAAtB,gBACG;MAAA,wBACI;QAAK,SAAS,EAAC,WAAf;QAAA,uBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAK,SAAS,EAAC,qBAAf;QAAA,uBACI,QAAC,SAAD;UAAW,SAAS,EAAC,oEAArB;UACI,OAAO,EAAEkH,iBADb;UAEI,IAAI,EAAElH,kBAAkB,CAACE,MAF7B;UAGI,eAAe,EAAEsJ,MAAM,CAACC,SAAP,CAAiBgB,UAAjB,CAA4BC,eAHjD;UAII,OAAO;QAJX;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAJJ,EAaK1K,kBAAkB,CAACsI,MAAnB,IAA6BtI,kBAAkB,CAACsI,MAAnB,CAA0BrG,MAA1B,GAAmC,CAAhE,gBACG;QAAA,wBACI;UAAK,SAAS,EAAC,WAAf;UAA2B,KAAK,EAAE;YAAE0I,SAAS,EAAE;UAAb,CAAlC;UAAA,uBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAII;UAAK,SAAS,EAAC,qBAAf;UAAA,uBACI,QAAC,SAAD;YAAW,SAAS,EAAC,oEAArB;YACI,OAAO,EAAEpD,aADb;YAEI,IAAI,EAAEvH,kBAAkB,CAACsI,MAF7B;YAGI,eAAe,EAAEkB,MAAM,CAACC,SAAP,CAAiBgB,UAAjB,CAA4BC,eAHjD;YAII,OAAO;UAJX;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA,gBADH,GAcK,IA3BV,eA6BI;QAAK,SAAS,EAAC,qBAAf;QAAA,wBACI;UAAO,SAAS,EAAC,MAAjB;UAAwB,OAAO,EAAC,gBAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,IAAI,EAAC,QAAb;UAAsB,KAAK,EAAC,kCAA5B;UAA+D,OAAO,EAAE,MAAMxB,gBAAgB,EAA9F;UAAkG,SAAS,EAAC,6BAA5G;UAAA,6BAA2I;YAAG,SAAS,EAAC;UAAb;YAAA;YAAA;YAAA;UAAA,QAA3I;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QA7BJ;IAAA,gBADH,gBAoCG;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAvCR;EAAA,gBADJ;AA6CH;;GA3vCQzK,gC;UACYN,W;;;KADZM,gC;AA6vCT,eAAeA,gCAAf"},"metadata":{},"sourceType":"module"}