{"ast":null,"code":"import _toConsumableArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useLocation}from'react-router-dom';import{getUser}from'../../../components/Utils/Common';import'../../Utils/Constants';import GenericApi from'../../Api/Services/GenericApi';import{Link}from\"react-router-dom\";import ModalGen from'../../Utils/Modals/ModalGeneric';import{ErrorMessage,Field,Form,Formik}from'formik';import InfoErrorApi from'../../Utils/InfoErrorApi';import ActuacionParametrosPlantillaForm from'../Herramientas/ActuacionParametrosPlantillaForm';import Spinner from'../../Utils/Spinner';import Select from'react-select';import makeAnimated from'react-select/animated';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ActuacionesForm(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),errorApi=_useState2[0],setErrorApi=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),getNombreUsuario=_useState4[0],setNombreUsuario=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),getListaUsuariosComisorio=_useState6[0],setListaUsuariosComisorio=_useState6[1];var _useState7=useState({title:\"\",message:\"\",show:false}),_useState8=_slicedToArray(_useState7,2),getModalState=_useState8[0],setModalState=_useState8[1];var _useState9=useState([{archivo:{},filebase64:\"\",size:0,ext:\"\"}]),_useState10=_slicedToArray(_useState9,2),inputListArchivos=_useState10[0],setInputListArchivos=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),getMasActuacionId=_useState12[0],setMasActuacionId=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),getUsuarioComisionado=_useState14[0],setUsuarioComisionado=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),getListaActuacionesOptions=_useState16[0],setListaActuacionesOptions=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),getListaActuacionesDefault=_useState18[0],setListaActuacionesDefault=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),getNombreDocumentoMasActuacion=_useState20[0],setNombreDocumentoMasActuacion=_useState20[1];var _useState21=useState(''),_useState22=_slicedToArray(_useState21,2),getNombreProceso=_useState22[0],setNombreProceso=_useState22[1];var location=useLocation();var _location$state=location.state,from=_location$state.from,selected_id_etapa=_location$state.selected_id_etapa,tipoActuacion=_location$state.tipoActuacion,vengo=_location$state.vengo;var deDondeVengo=vengo?vengo:false;var radicado=from.radicado;var procesoDisciplinarioId=from.procesoDisciplinarioId;// let idEtapa = from.idEtapa >= 3 ? from.idEtapa : 3;\nuseEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:window.showSpinner(true);setNombreUsuario(getUser().nombre);nombreProceso();if(tipoActuacion==\"Comisorio\"){getListUsuarios(getUser().id_dependencia);}case 4:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();selectOptionsActuaciones();},[]);var nombreProceso=function nombreProceso(){GenericApi.getByIdGeneric(\"nombre-proceso\",from.procesoDisciplinarioId).then(function(datos){if(!datos.error){setNombreProceso(datos.data.attributes.nombre);getAllTipoActuaciones();}});};var getListUsuarios=function getListUsuarios(id_dependencia){GenericApi.getByIdGeneric(\"usuario/get-todos-usuarios-dependencia\",id_dependencia).then(function(datos){if(!datos.error){setListaUsuariosComisorio(datos.data);}else{setModalState({title:getNombreProceso+\" :: Crear \"+tipoActuacion,message:datos.error.toString(),show:true,redirect:'/PreguntaImpedimentos',from:{from:from,selected_id_etapa:selected_id_etapa},alert:global.Constants.TIPO_ALERTA.ERROR});}});};/**\r\n     * Trae la lista de todos los tipos de actuaciones.\r\n     */var getAllTipoActuaciones=function getAllTipoActuaciones(){GenericApi.getByIdGeneric(\"mas_actuaciones/actuaciones-etapa\",selected_id_etapa).then(function(datos){// Se valida que no haya error\nif(!datos.error){// Se envia la informacion al metood encargado de validar y sacar los valores correspondientes del select\nselectOptionsActuaciones(datos.data);// Se desactiva el spinner\nwindow.showSpinner(false);}else{setModalState({title:getNombreProceso+\" :: Crear actuaciones\",message:datos.error.toString(),show:true,redirect:'/ActuacionesForm',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});};var selectOptionsActuaciones=function selectOptionsActuaciones(datos){// Se inicializan las variables\nvar listaActuacionesValidar=[];// Se inicializa la cantidad de cada actuacion en 0\nvar cantidadActuaciones=0;var cantidadImpedimentos=0;var cantidadComisorios=0;// Se valida que exista el array, tenga longitud \nif(datos&&datos.length>0){// Se recorre el array de las actuaciones\nfor(var index=0;index<datos.length;index++){// Se captura el elemento por posición\nvar element=datos[index];// Se valida cuando es actuación\nif(element.attributes.tipo_actuacion==0&&tipoActuacion==\"Actuación\"){// Se suma +1 al elemento\ncantidadActuaciones++;// Se añade la actuacion a la lista\nlistaActuacionesValidar.push({label:element.attributes.nombre_actuacion.toUpperCase(),value:element.id});}// Se valida cuando es impedimento \nelse if(element.attributes.tipo_actuacion==1&&tipoActuacion==\"Impedimento\"){// Se suma +1 al elemento\ncantidadImpedimentos++;// Se añade el impedimento a la lista\nlistaActuacionesValidar.push({label:element.attributes.nombre_actuacion.toUpperCase(),value:element.id});}// Se valida cuando es comisorio\nelse if(element.attributes.tipo_actuacion==2&&tipoActuacion==\"Comisorio\"){// Se suma +1 al elemento\ncantidadComisorios++;// Se añade el comisorio a la lista\nlistaActuacionesValidar.push({label:element.attributes.nombre_actuacion.toUpperCase(),value:element.id});}}// ------------------------------------------------------------------------------------ // \n// Se recorre el array de las actuaciones para preseleccionar y cargar la plantilla automaticamente\nfor(var _index=0;_index<datos.length;_index++){// Se captura el elemento por posición\nvar _element=datos[_index];// Se valida cuando es actuación\nif(cantidadActuaciones==1&&_element.attributes.tipo_actuacion==0&&tipoActuacion==\"Actuación\"){// Se setea el valor para que auto cargue la plantilla\nsetMasActuacionId(_element.id);// Se añade para qué quede preseleccionada en el select\nsetListaActuacionesDefault({label:_element.attributes.nombre_actuacion.toUpperCase(),value:_element.id});}// Se valida cuando es impedimento \nelse if(cantidadImpedimentos==1&&_element.attributes.tipo_actuacion==1&&tipoActuacion==\"Impedimento\"){// Se setea el valor para que auto cargue la plantilla\nsetMasActuacionId(_element.id);// Se añade para qué quede preseleccionada en el select\nsetListaActuacionesDefault({label:_element.attributes.nombre_actuacion.toUpperCase(),value:_element.id});}// Se valida cuando es comisorio\nelse if(cantidadComisorios==1&&_element.attributes.tipo_actuacion==2&&tipoActuacion==\"Comisorio\"){// Se setea el valor para que auto cargue la plantilla\nsetMasActuacionId(_element.id);// Se añade para qué quede preseleccionada en el select\nsetListaActuacionesDefault({label:_element.attributes.nombre_actuacion.toUpperCase(),value:_element.id});}}}// Se setea el valor al array lista\nsetListaActuacionesOptions(listaActuacionesValidar);};// Metodo encargado de enviar los datos al backend\nvar enviarDatos=function enviarDatos(datos){// Se usa el cargando\nwindow.showSpinner(true);// Se captura el id de la actuacion\nvar actuacionId=datos.id_actuacion;// Se valida cuando es tipo comisorio\nif(tipoActuacion==2){// Se inicializa la variable\nvar dataUsuarioComisorio={\"data\":{\"type\":\"usuario-comisionado\",\"attributes\":{\"id_proceso_disciplinario\":\"\"}}};// Se ejecuta la API\nGenericApi.addGeneric(\"proceso-diciplinario/usuario-comisionado/\"+getUsuarioComisionado+\"/\"+procesoDisciplinarioId,dataUsuarioComisorio);}// Se inicializa la variable\nvar data={\"data\":{\"type\":'actuaciones',\"attributes\":{\"id_actuacion\":actuacionId,\"usuario_accion\":getNombreUsuario,\"id_estado_actuacion\":3,\"created_user\":getNombreUsuario,\"fileBase64\":inputListArchivos[0].filebase64,\"nombre_archivo\":inputListArchivos[0].archivo.name,\"ext\":inputListArchivos[0].ext,\"peso\":inputListArchivos[0].archivo.size,\"id_proceso_disciplinario\":procesoDisciplinarioId,\"id_etapa\":selected_id_etapa,\"estado\":true,\"campos_finales\":from.getCamposAdicionales?from.getCamposAdicionales:[]}}};// Se ejecuta la API\nGenericApi.addGeneric(\"actuaciones\",data).then(// Se inicializa la variable de respuesta\nfunction(datos){// Se valida que no haya error\nif(!datos.error){// Se quita el cargando\nwindow.showSpinner(false);// Se valida cuando la actuacion es tipo impedimento\nif(tipoActuacion==\"Impedimento\"){// Se setea el modal\nsetModalState({title:getNombreProceso+\" :: Crear \"+tipoActuacion,message:'Registros exitoso',show:true,redirect:\"/ActuacionesVer/\"+procesoDisciplinarioId+\"/\"+selected_id_etapa+\"/1\",from:{from:from,selected_id_etapa:selected_id_etapa,id:datos.data.id,nombre:getListaActuacionesDefault.label,estadoActualActuacion:\"Pendiente aprobación\",tipoActuacion:\"1\"},alert:global.Constants.TIPO_ALERTA.EXITO});}else{// Se setea el modal\nsetModalState({title:getNombreProceso+\" :: Crear \"+tipoActuacion,message:'Registro exitoso',show:true,redirect:'/Transacciones',from:{from:from,selected_id_etapa:selected_id_etapa,id_actuacion:actuacionId},alert:global.Constants.TIPO_ALERTA.EXITO});}}else{// Se setea el modal\nsetModalState({title:getNombreProceso+\" :: Crear \"+tipoActuacion,message:datos.error.toString(),show:true,redirect:'/ActuacionesLista',from:{from:from,selected_id_etapa:selected_id_etapa},alert:global.Constants.TIPO_ALERTA.ERROR});}});};// Metodo encargado de cambiar la actuacion seleccionada\nvar selectChangeMasActuacion=function selectChangeMasActuacion(id,nombreDocumentoMasActuacion,nombreActuacion){// Se usa el cargando\nwindow.showSpinner(true);// Se setea el nombre de la actuacion\nsetNombreDocumentoMasActuacion(nombreDocumentoMasActuacion);// Se setea el id de la actuacion\nsetMasActuacionId(id);};var selectChangeUsuarioComisionado=function selectChangeUsuarioComisionado(value){setUsuarioComisionado(value);};var selectUsuarioComisorio=function selectUsuarioComisorio(){return getListaUsuariosComisorio&&getListaUsuariosComisorio.length?getListaUsuariosComisorio.map(function(user,i){return/*#__PURE__*/_jsx(\"option\",{value:user.id,children:user.attributes.nombre+\" \"+user.attributes.apellido},user.id);}):\"\";};function formatBytes(bytes){var decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;if(bytes===undefined)return'0 Bytes';if(bytes===0)return'0 Bytes';var k=1024;var dm=decimals<0?0:decimals;var sizes=['Bytes','KB','MB','GB','TB','PB','EB','ZB','YB'];var i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(dm))+' '+sizes[i];}function obtenerPesoTotalArchivos(list){var peso=0;list.forEach(function(archivo,index){if(archivo.archivo.size){peso+=archivo.archivo.size;}});if(peso>15000000){setErrorApi('El peso/tamaño de los todos los adjuntos superan los 15 Mb pertmitidos para el registro, verifique e tamaño y elimine algunos adjuntos.');window.showModal(1);}//setPesoTotalArchivos(peso);\n}var handleInputChangeArchivos=function handleInputChangeArchivos(e,index){var _e$target=e.target,name=_e$target.name,files=_e$target.files;if(files.length>0){var extension=getFileExtension(files[0].name);if(extension==\"docx\"){var list=_toConsumableArray(inputListArchivos);list[index][name]=files[0];if(files[0]){list[index][name]=files[0];}else{list[index][name]='';list[index].filebase64='';list[index].size=0;list[index].ext=\"\";setInputListArchivos(list);}// Conversion a Base64\nArray.from(e.target.files).forEach(function(archivo){var reader=new FileReader();reader.readAsDataURL(archivo);reader.onload=function(){var arrayAuxiliar=[];var base64=reader.result;arrayAuxiliar=base64.split(',');list[index].filebase64=arrayAuxiliar[1];list[index].ext=extension;setInputListArchivos(list);};});obtenerPesoTotalArchivos(list);}else{var _list=_toConsumableArray(inputListArchivos);_list[index][name]=files[0];_list[index].filebase64='';_list[index].size=0;setInputListArchivos(_list);setErrorApi(\"El archivo seleccionado no tiene un formato permitido\");window.showModal(1);}}else{var _list2=_toConsumableArray(inputListArchivos);_list2[index][name]='';_list2[index].filebase64='';_list2[index].size=0;setInputListArchivos(_list2);obtenerPesoTotalArchivos(_list2);}};function getFileExtension(filename){return filename.slice((filename.lastIndexOf(\".\")-1>>>0)+2);}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(InfoErrorApi,{error:errorApi}),/*#__PURE__*/_jsx(ModalGen,{data:getModalState}),/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(Formik,{initialValues:{id_actuacion:'',usuario_comisionado:''},enableReinitialize:true,validate:function validate(valores){var errores={};valores.id_actuacion=getMasActuacionId;valores.usuario_comisionado=getUsuarioComisionado;if(tipoActuacion==\"Comisorio\"&&valores.usuario_comisionado==0){errores.usuario_comisionado='Debe seleccionar una usuario comisionado para registrar';}if(valores.id_actuacion==0){errores.id_actuacion='Debe seleccionar una actuación para registrar';}// if (valores.id_actuacion != 0 && valores.id_actuacion != \"\") {\n//     let id_actuacion = valores.id_actuacion;\n//     listaTipoActuacion.forEach(element => {\n//         if (element.id == id_actuacion) {\n//             setValueDocumentoRuta(element.nombre_plantilla);\n//         }\n//     });\n// }\nreturn errores;},onSubmit:function onSubmit(valores,_ref){var resetForm=_ref.resetForm;enviarDatos(valores);},children:function children(_ref2){var errors=_ref2.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"w2d_block\",children:/*#__PURE__*/_jsx(\"nav\",{\"aria-label\":\"breadcrumb\",children:/*#__PURE__*/_jsxs(\"ol\",{className:\"breadcrumb breadcrumb-alt push\",children:[/*#__PURE__*/_jsxs(\"li\",{class:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/MisPendientes\",children:/*#__PURE__*/_jsx(\"small\",{children:\"Mis Pendientes\"})})]}),/*#__PURE__*/_jsxs(\"li\",{class:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/RamasProceso/\",state:{from:from},children:/*#__PURE__*/_jsx(\"small\",{children:\"Ramas del proceso\"})})]}),deDondeVengo?null:/*#__PURE__*/_jsxs(\"li\",{class:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:tipoActuacion!=\"Actuación\"?\"/PreguntaImpedimentos/\":\"/ActuacionesLista/\",state:{from:from,selected_id_etapa:selected_id_etapa},children:/*#__PURE__*/_jsx(\"small\",{children:tipoActuacion})})]}),/*#__PURE__*/_jsxs(\"li\",{class:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsxs(\"small\",{children:[\"Agregar \",tipoActuacion]})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsxs(\"h3\",{className:\"block-title\",children:[getNombreProceso,\" :: \",/*#__PURE__*/_jsxs(\"strong\",{children:[\"Crear \",tipoActuacion]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:deDondeVengo?/*#__PURE__*/_jsx(Link,{to:\"/RamasProceso/\",title:\"Regresar a lista de Actuaciones\",state:{from:from},children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-success\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-backward\"}),\" \"]})}):/*#__PURE__*/_jsx(Link,{to:tipoActuacion!=\"Actuación\"?\"/PreguntaImpedimentos/\":\"/ActuacionesLista/\",title:\"Regresar a lista de Actuaciones\",state:{from:from,selected_id_etapa:selected_id_etapa},children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-success\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-backward\"}),\" \"]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[getListaActuacionesOptions&&getListaActuacionesOptions.length>0?/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"id_actuacion\",children:[tipoActuacion,\" \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"id_actuacion\",children:[\"Sin datos o informaci\\xF3n para registrar \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\"})]})}),getListaActuacionesOptions&&getListaActuacionesOptions.length>0?/*#__PURE__*/_jsx(Select,{placeholder:\"Selecciona\",defaultValue:getListaActuacionesDefault,noOptionsMessage:function noOptionsMessage(){return\"Sin datos\";},options:getListaActuacionesOptions.map(function(e){return{label:e.label,value:e.value};}),onChange:function onChange(e){return selectChangeMasActuacion(e.value,e.label);}}):null,/*#__PURE__*/_jsx(ErrorMessage,{name:\"id_actuacion\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.id_actuacion});}})]})}),tipoActuacion==\"Comisorio\"&&getListaActuacionesOptions&&getListaActuacionesOptions.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"usuario_comisionado\",children:[\"Usuario Comisionado \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-control\",id:\"usuario_comisionado\",name:\"usuario_comisionado\",onChange:function onChange(e){return selectChangeUsuarioComisionado(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Por favor seleccione\"}),selectUsuarioComisorio()]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"usuario_comisionado\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.usuario_comisionado});}})]})}):null]}),getMasActuacionId>0?/*#__PURE__*/_jsx(ActuacionParametrosPlantillaForm,{from:from,id_mas_actuacion:getMasActuacionId}):null,getMasActuacionId>0?inputListArchivos.map(function(x,i){return/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Documento adjunto diligenciado (Word)\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"* \"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",style:{marginLeft:'13px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"custom-file-label\",htmlFor:\"example-file-input-custom\",\"data-toggle\":\"custom-file-input\",children:x.archivo.name}),/*#__PURE__*/_jsx(\"input\",{className:\"custom-file-input\",\"data-toggle\":\"custom-file-input\",type:\"file\",name:\"archivo\",onChange:function onChange(e){return handleInputChangeArchivos(e,i);},required:true}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Peso del archivo: \",formatBytes(x.archivo.size)]})]})})})]})})},i);}):null]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right bg-light\",children:[getListaActuacionesOptions&&getListaActuacionesOptions.length>0?/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:\" Registrar\"}):null,deDondeVengo?/*#__PURE__*/_jsx(Link,{to:\"/RamasProceso/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:\" Cancelar\"})}):/*#__PURE__*/_jsx(Link,{to:tipoActuacion!=\"Actuación\"?\"/PreguntaImpedimentos/\":\"/ActuacionesLista/\",state:{from:from,selected_id_etapa:selected_id_etapa},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:\" Cancelar\"})})]})]});}})]});}export default ActuacionesForm;","map":{"version":3,"names":["React","useEffect","useState","useLocation","getUser","GenericApi","Link","ModalGen","ErrorMessage","Field","Form","Formik","InfoErrorApi","ActuacionParametrosPlantillaForm","Spinner","Select","makeAnimated","ActuacionesForm","errorApi","setErrorApi","getNombreUsuario","setNombreUsuario","getListaUsuariosComisorio","setListaUsuariosComisorio","title","message","show","getModalState","setModalState","archivo","filebase64","size","ext","inputListArchivos","setInputListArchivos","getMasActuacionId","setMasActuacionId","getUsuarioComisionado","setUsuarioComisionado","getListaActuacionesOptions","setListaActuacionesOptions","getListaActuacionesDefault","setListaActuacionesDefault","getNombreDocumentoMasActuacion","setNombreDocumentoMasActuacion","getNombreProceso","setNombreProceso","location","state","from","selected_id_etapa","tipoActuacion","vengo","deDondeVengo","radicado","procesoDisciplinarioId","fetchData","window","showSpinner","nombre","nombreProceso","getListUsuarios","id_dependencia","selectOptionsActuaciones","getByIdGeneric","then","datos","error","data","attributes","getAllTipoActuaciones","toString","redirect","alert","global","Constants","TIPO_ALERTA","ERROR","listaActuacionesValidar","cantidadActuaciones","cantidadImpedimentos","cantidadComisorios","length","index","element","tipo_actuacion","push","label","nombre_actuacion","toUpperCase","value","id","enviarDatos","actuacionId","id_actuacion","dataUsuarioComisorio","addGeneric","name","getCamposAdicionales","estadoActualActuacion","EXITO","selectChangeMasActuacion","nombreDocumentoMasActuacion","nombreActuacion","selectChangeUsuarioComisionado","selectUsuarioComisorio","map","user","i","apellido","formatBytes","bytes","decimals","undefined","k","dm","sizes","Math","floor","log","parseFloat","pow","toFixed","obtenerPesoTotalArchivos","list","peso","forEach","showModal","handleInputChangeArchivos","e","target","files","extension","getFileExtension","Array","reader","FileReader","readAsDataURL","onload","arrayAuxiliar","base64","result","split","filename","slice","lastIndexOf","usuario_comisionado","valores","errores","resetForm","errors","x","marginLeft"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Actuaciones/ActuacionesForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { getUser } from '../../../components/Utils/Common';\r\nimport '../../Utils/Constants';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport { Link } from \"react-router-dom\";\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\r\nimport ActuacionParametrosPlantillaForm from '../Herramientas/ActuacionParametrosPlantillaForm';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\nfunction ActuacionesForm() {\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [getListaUsuariosComisorio, setListaUsuariosComisorio] = useState(\"\");\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [inputListArchivos, setInputListArchivos] = useState([{ archivo: {}, filebase64: \"\", size: 0, ext: \"\" }]);\r\n    const [getMasActuacionId, setMasActuacionId] = useState(0);\r\n    const [getUsuarioComisionado, setUsuarioComisionado] = useState(0);\r\n    const [getListaActuacionesOptions, setListaActuacionesOptions] = useState([]);\r\n    const [getListaActuacionesDefault, setListaActuacionesDefault] = useState([]);\r\n    const [getNombreDocumentoMasActuacion, setNombreDocumentoMasActuacion] = useState(\"\");\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    const location = useLocation();\r\n    const { from, selected_id_etapa, tipoActuacion, vengo } = location.state;\r\n\r\n    let deDondeVengo = vengo ? vengo : false;\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    // let idEtapa = from.idEtapa >= 3 ? from.idEtapa : 3;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            setNombreUsuario(getUser().nombre);\r\n            nombreProceso();\r\n            if (tipoActuacion == \"Comisorio\") {\r\n                getListUsuarios(getUser().id_dependencia);\r\n            }\r\n        }\r\n        fetchData();\r\n        selectOptionsActuaciones();\r\n    }, []);\r\n\r\n\r\n    const nombreProceso = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                    getAllTipoActuaciones();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getListUsuarios = (id_dependencia) => {\r\n\r\n        GenericApi.getByIdGeneric(\"usuario/get-todos-usuarios-dependencia\", id_dependencia).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaUsuariosComisorio(datos.data);\r\n                } else {\r\n                    setModalState({ title: getNombreProceso + \" :: Crear \" + tipoActuacion, message: datos.error.toString(), show: true, redirect: '/PreguntaImpedimentos', from: { from: from, selected_id_etapa: selected_id_etapa }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    /**\r\n     * Trae la lista de todos los tipos de actuaciones.\r\n     */\r\n    const getAllTipoActuaciones = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"mas_actuaciones/actuaciones-etapa\", selected_id_etapa).then(\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se envia la informacion al metood encargado de validar y sacar los valores correspondientes del select\r\n                    selectOptionsActuaciones(datos.data);\r\n\r\n                    // Se desactiva el spinner\r\n                    window.showSpinner(false);\r\n                } else {\r\n                    setModalState({ title: getNombreProceso + \" :: Crear actuaciones\", message: datos.error.toString(), show: true, redirect: '/ActuacionesForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const selectOptionsActuaciones = (datos) => {\r\n\r\n        // Se inicializan las variables\r\n        var listaActuacionesValidar = [];\r\n\r\n        // Se inicializa la cantidad de cada actuacion en 0\r\n        var cantidadActuaciones = 0;\r\n        var cantidadImpedimentos = 0;\r\n        var cantidadComisorios = 0;\r\n\r\n        // Se valida que exista el array, tenga longitud \r\n        if (datos && datos.length > 0) {\r\n\r\n            // Se recorre el array de las actuaciones\r\n            for (let index = 0; index < datos.length; index++) {\r\n\r\n                // Se captura el elemento por posición\r\n                const element = datos[index];\r\n\r\n                // Se valida cuando es actuación\r\n                if (element.attributes.tipo_actuacion == 0 && tipoActuacion == \"Actuación\") {\r\n\r\n                    // Se suma +1 al elemento\r\n                    cantidadActuaciones++;\r\n\r\n                    // Se añade la actuacion a la lista\r\n                    listaActuacionesValidar.push({ label: element.attributes.nombre_actuacion.toUpperCase(), value: element.id });\r\n                }\r\n                // Se valida cuando es impedimento \r\n                else if (element.attributes.tipo_actuacion == 1 && tipoActuacion == \"Impedimento\") {\r\n\r\n                    // Se suma +1 al elemento\r\n                    cantidadImpedimentos++;\r\n\r\n                    // Se añade el impedimento a la lista\r\n                    listaActuacionesValidar.push({ label: element.attributes.nombre_actuacion.toUpperCase(), value: element.id });\r\n                }\r\n                // Se valida cuando es comisorio\r\n                else if (element.attributes.tipo_actuacion == 2 && tipoActuacion == \"Comisorio\") {\r\n\r\n                    // Se suma +1 al elemento\r\n                    cantidadComisorios++;\r\n\r\n                    // Se añade el comisorio a la lista\r\n                    listaActuacionesValidar.push({ label: element.attributes.nombre_actuacion.toUpperCase(), value: element.id });\r\n                }\r\n            }\r\n\r\n            // ------------------------------------------------------------------------------------ // \r\n\r\n            // Se recorre el array de las actuaciones para preseleccionar y cargar la plantilla automaticamente\r\n            for (let index = 0; index < datos.length; index++) {\r\n\r\n                // Se captura el elemento por posición\r\n                const element = datos[index];\r\n\r\n                // Se valida cuando es actuación\r\n                if (cantidadActuaciones == 1 && element.attributes.tipo_actuacion == 0 && tipoActuacion == \"Actuación\") {\r\n\r\n                    // Se setea el valor para que auto cargue la plantilla\r\n                    setMasActuacionId(element.id);\r\n\r\n                    // Se añade para qué quede preseleccionada en el select\r\n                    setListaActuacionesDefault({ label: element.attributes.nombre_actuacion.toUpperCase(), value: element.id });\r\n                }\r\n\r\n                // Se valida cuando es impedimento \r\n                else if (cantidadImpedimentos == 1 && element.attributes.tipo_actuacion == 1 && tipoActuacion == \"Impedimento\") {\r\n\r\n                    // Se setea el valor para que auto cargue la plantilla\r\n                    setMasActuacionId(element.id);\r\n\r\n                    // Se añade para qué quede preseleccionada en el select\r\n                    setListaActuacionesDefault({ label: element.attributes.nombre_actuacion.toUpperCase(), value: element.id });\r\n                }\r\n\r\n                // Se valida cuando es comisorio\r\n                else if (cantidadComisorios == 1 && element.attributes.tipo_actuacion == 2 && tipoActuacion == \"Comisorio\") {\r\n\r\n                    // Se setea el valor para que auto cargue la plantilla\r\n                    setMasActuacionId(element.id);\r\n\r\n                    // Se añade para qué quede preseleccionada en el select\r\n                    setListaActuacionesDefault({ label: element.attributes.nombre_actuacion.toUpperCase(), value: element.id });\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se setea el valor al array lista\r\n        setListaActuacionesOptions(listaActuacionesValidar);\r\n    }\r\n\r\n    // Metodo encargado de enviar los datos al backend\r\n    const enviarDatos = (datos) => {\r\n\r\n        // Se usa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se captura el id de la actuacion\r\n        const actuacionId = datos.id_actuacion;\r\n\r\n        // Se valida cuando es tipo comisorio\r\n        if (tipoActuacion == 2) {\r\n\r\n            // Se inicializa la variable\r\n            const dataUsuarioComisorio = {\r\n                \"data\": {\r\n                    \"type\": \"usuario-comisionado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": \"\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Se ejecuta la API\r\n            GenericApi.addGeneric(\"proceso-diciplinario/usuario-comisionado/\" + getUsuarioComisionado + \"/\" + procesoDisciplinarioId, dataUsuarioComisorio)\r\n        }\r\n\r\n        // Se inicializa la variable\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'actuaciones',\r\n                \"attributes\": {\r\n                    \"id_actuacion\": actuacionId,\r\n                    \"usuario_accion\": getNombreUsuario,\r\n                    \"id_estado_actuacion\": 3,\r\n                    \"created_user\": getNombreUsuario,\r\n                    \"fileBase64\": inputListArchivos[0].filebase64,\r\n                    \"nombre_archivo\": inputListArchivos[0].archivo.name,\r\n                    \"ext\": inputListArchivos[0].ext,\r\n                    \"peso\": inputListArchivos[0].archivo.size,\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": selected_id_etapa,\r\n                    \"estado\": true,\r\n                    \"campos_finales\": from.getCamposAdicionales ? from.getCamposAdicionales : [],\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se ejecuta la API\r\n        GenericApi.addGeneric(\"actuaciones\", data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n\r\n                    // Se valida cuando la actuacion es tipo impedimento\r\n                    if (tipoActuacion == \"Impedimento\") {\r\n\r\n                        // Se setea el modal\r\n                        setModalState({\r\n                            title: getNombreProceso + \" :: Crear \" + tipoActuacion, message: 'Registros exitoso', show: true, redirect: \"/ActuacionesVer/\" + procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/1\",\r\n                            from: {\r\n                                from: from,\r\n                                selected_id_etapa: selected_id_etapa,\r\n                                id: datos.data.id,\r\n                                nombre: getListaActuacionesDefault.label,\r\n                                estadoActualActuacion: \"Pendiente aprobación\",\r\n                                tipoActuacion: \"1\"\r\n                            }, alert: global.Constants.TIPO_ALERTA.EXITO\r\n                        });\r\n                    } else {\r\n\r\n                        // Se setea el modal\r\n                        setModalState({ title: getNombreProceso + \" :: Crear \" + tipoActuacion, message: 'Registro exitoso', show: true, redirect: '/Transacciones', from: { from: from, selected_id_etapa: selected_id_etapa, id_actuacion: actuacionId }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                    }\r\n\r\n                } else {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: getNombreProceso + \" :: Crear \" + tipoActuacion, message: datos.error.toString(), show: true, redirect: '/ActuacionesLista', from: { from: from, selected_id_etapa: selected_id_etapa }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cambiar la actuacion seleccionada\r\n    const selectChangeMasActuacion = (id, nombreDocumentoMasActuacion, nombreActuacion) => {\r\n\r\n        // Se usa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se setea el nombre de la actuacion\r\n        setNombreDocumentoMasActuacion(nombreDocumentoMasActuacion);\r\n\r\n        // Se setea el id de la actuacion\r\n        setMasActuacionId(id);\r\n    }\r\n\r\n    const selectChangeUsuarioComisionado = (value) => {\r\n        setUsuarioComisionado(value);\r\n    }\r\n\r\n    const selectUsuarioComisorio = () => {\r\n\r\n        return (\r\n            getListaUsuariosComisorio && getListaUsuariosComisorio.length ? getListaUsuariosComisorio.map((user, i) => {\r\n                return (\r\n                    <option key={user.id} value={user.id}>{user.attributes.nombre + \" \" + user.attributes.apellido}</option>\r\n                )\r\n            }) : \"\"\r\n        )\r\n    }\r\n\r\n    function formatBytes(bytes, decimals = 3) {\r\n        if (bytes === undefined) return '0 Bytes';\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const dm = decimals < 0 ? 0 : decimals;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    }\r\n\r\n    function obtenerPesoTotalArchivos(list) {\r\n        let peso = 0;\r\n        list.forEach(\r\n            (archivo, index) => {\r\n                if (archivo.archivo.size) {\r\n                    peso += archivo.archivo.size;\r\n                }\r\n            }\r\n        )\r\n\r\n        if (peso > 15000000) {\r\n            setErrorApi('El peso/tamaño de los todos los adjuntos superan los 15 Mb pertmitidos para el registro, verifique e tamaño y elimine algunos adjuntos.')\r\n            window.showModal(1)\r\n        }\r\n\r\n        //setPesoTotalArchivos(peso);\r\n    }\r\n\r\n    const handleInputChangeArchivos = (e, index) => {\r\n\r\n        const { name, files } = e.target;\r\n        if (files.length > 0) {\r\n            const extension = getFileExtension(files[0].name);\r\n\r\n            if (extension == \"docx\") {\r\n\r\n                const list = [...inputListArchivos];\r\n                list[index][name] = files[0];\r\n\r\n                if (files[0]) {\r\n                    list[index][name] = files[0];\r\n                } else {\r\n                    list[index][name] = '';\r\n                    list[index].filebase64 = '';\r\n                    list[index].size = 0;\r\n                    list[index].ext = \"\";\r\n                    setInputListArchivos(list);\r\n                }\r\n\r\n                // Conversion a Base64\r\n                Array.from(e.target.files).forEach(archivo => {\r\n                    var reader = new FileReader();\r\n                    reader.readAsDataURL(archivo);\r\n                    reader.onload = function () {\r\n                        var arrayAuxiliar = [];\r\n                        var base64 = reader.result;\r\n                        arrayAuxiliar = base64.split(',');\r\n                        list[index].filebase64 = arrayAuxiliar[1];\r\n                        list[index].ext = extension;\r\n                        setInputListArchivos(list);\r\n                    }\r\n                })\r\n                obtenerPesoTotalArchivos(list);\r\n            } else {\r\n                const list = [...inputListArchivos];\r\n                list[index][name] = files[0];\r\n                list[index].filebase64 = '';\r\n                list[index].size = 0;\r\n                setInputListArchivos(list);\r\n                setErrorApi(\"El archivo seleccionado no tiene un formato permitido\")\r\n                window.showModal(1)\r\n            }\r\n        } else {\r\n            const list = [...inputListArchivos];\r\n            list[index][name] = '';\r\n            list[index].filebase64 = '';\r\n            list[index].size = 0;\r\n            setInputListArchivos(list);\r\n            obtenerPesoTotalArchivos(list);\r\n        }\r\n\r\n    }\r\n\r\n    function getFileExtension(filename) {\r\n        return filename.slice((filename.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<InfoErrorApi error={errorApi} />}\r\n            {<ModalGen data={getModalState} />}\r\n            {<Spinner />}\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    id_actuacion: '',\r\n                    usuario_comisionado: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    let errores = {}\r\n                    valores.id_actuacion = getMasActuacionId;\r\n                    valores.usuario_comisionado = getUsuarioComisionado;\r\n\r\n                    if (tipoActuacion == \"Comisorio\" && valores.usuario_comisionado == 0) {\r\n                        errores.usuario_comisionado = 'Debe seleccionar una usuario comisionado para registrar'\r\n                    }\r\n\r\n                    if (valores.id_actuacion == 0) {\r\n                        errores.id_actuacion = 'Debe seleccionar una actuación para registrar'\r\n                    }\r\n\r\n                    // if (valores.id_actuacion != 0 && valores.id_actuacion != \"\") {\r\n                    //     let id_actuacion = valores.id_actuacion;\r\n\r\n                    //     listaTipoActuacion.forEach(element => {\r\n                    //         if (element.id == id_actuacion) {\r\n                    //             setValueDocumentoRuta(element.nombre_plantilla);\r\n                    //         }\r\n                    //     });\r\n                    // }\r\n\r\n                    return errores\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                    {deDondeVengo ? null : (\r\n                                        <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}><small>{tipoActuacion}</small></Link></li>\r\n                                    )}\r\n                                    <li class=\"breadcrumb-item\"> <small>Agregar {tipoActuacion}</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">{getNombreProceso} :: <strong>Crear {tipoActuacion}</strong></h3>\r\n                            </div>\r\n\r\n                            <div className=\"block-content\">\r\n                                <div className='text-right'>\r\n                                    {deDondeVengo ? (\r\n                                        <Link to={`/RamasProceso/`} title='Regresar a lista de Actuaciones' state={{ from: from }}>\r\n                                            <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                                        </Link>\r\n                                    ) : (\r\n                                        <Link to={tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`} title='Regresar a lista de Actuaciones' state={{ from: from, selected_id_etapa: selected_id_etapa }}>\r\n                                            <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                                        </Link>\r\n                                    )}\r\n\r\n                                </div>\r\n                                <div className='row mb-4'>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            {getListaActuacionesOptions && getListaActuacionesOptions.length > 0 ?\r\n                                                <label htmlFor=\"id_actuacion\">{tipoActuacion} <span className=\"text-danger\">*</span></label>\r\n                                                : <div>\r\n                                                    <label htmlFor=\"id_actuacion\">Sin datos o información para registrar <span className=\"text-danger\"></span></label>\r\n                                                </div>\r\n                                            }\r\n                                            {getListaActuacionesOptions && getListaActuacionesOptions.length > 0 ?\r\n                                                <Select\r\n                                                    placeholder=\"Selecciona\"\r\n                                                    defaultValue={getListaActuacionesDefault}\r\n                                                    noOptionsMessage={() => \"Sin datos\"}\r\n                                                    options={getListaActuacionesOptions.map(e =>\r\n                                                        ({ label: e.label, value: e.value })\r\n                                                    )}\r\n                                                    onChange={(e) => selectChangeMasActuacion(e.value, e.label)}\r\n                                                /> : null\r\n                                            }\r\n                                            <ErrorMessage name=\"id_actuacion\" component={() => (<span className=\"text-danger\">{errors.id_actuacion}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {tipoActuacion == \"Comisorio\" && getListaActuacionesOptions && getListaActuacionesOptions.length > 0 ? (\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"usuario_comisionado\">Usuario Comisionado <span className=\"text-danger\">*</span></label>\r\n                                                <select className=\"form-control\" id=\"usuario_comisionado\" name=\"usuario_comisionado\" onChange={e => selectChangeUsuarioComisionado(e.target.value)}>\r\n                                                    <option value=\"\">Por favor seleccione</option>\r\n                                                    {selectUsuarioComisorio()}\r\n                                                </select>\r\n                                                <ErrorMessage name=\"usuario_comisionado\" component={() => (<span className=\"text-danger\">{errors.usuario_comisionado}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n\r\n                                {/* {getParamsForm()} */}\r\n                                {getMasActuacionId > 0 ? <ActuacionParametrosPlantillaForm from={from} id_mas_actuacion={getMasActuacionId} /> : null}\r\n                                {/* <div className=\"col-md-12\" style={{ marginLeft: '10px' }}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"documento_ruta\">Descargar documento diligenciado en Word <span className=\"text-danger\">* </span></label>\r\n                                        <a href={getValueDocumentoRuta} id='documento_ruta' name='documento_ruta' style={{ marginLeft: '10px' }} target=\"_blank\" download class=\"btn btn-success\"><i className=\"fa fa-download\" ></i> </a>\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                                {getMasActuacionId > 0 ?\r\n                                    inputListArchivos.map((x, i) => {\r\n                                        return (\r\n                                            <div className=\"col-md-12 mt-4\" key={i}>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className='row'>\r\n                                                        <div className='col-md-12'>\r\n                                                            <label>Documento adjunto diligenciado (Word)<span className=\"text-danger\">* </span></label>\r\n                                                        </div>\r\n                                                        <div className='col-md-12' style={{ marginLeft: '13px' }}>\r\n                                                            <div className='row'>\r\n                                                                <div className='col-md-6'>\r\n                                                                    <label className=\"custom-file-label\" htmlFor=\"example-file-input-custom\" data-toggle=\"custom-file-input\">{x.archivo.name}</label>\r\n                                                                    <input className=\"custom-file-input\" data-toggle=\"custom-file-input\" type=\"file\" name=\"archivo\" onChange={e => handleInputChangeArchivos(e, i)} required />\r\n                                                                    <label>Peso del archivo: {formatBytes(x.archivo.size)}</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"block-content block-content-full text-right bg-light\">\r\n                            {getListaActuacionesOptions && getListaActuacionesOptions.length > 0\r\n                                ?\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\"> Registrar</button>\r\n                                : null}\r\n                            {deDondeVengo ? (\r\n                                <Link to={`/RamasProceso/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\"> Cancelar</button>\r\n                                </Link>\r\n                            ) : (\r\n                                <Link to={tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\"> Cancelar</button>\r\n                                </Link>\r\n                            )}\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default ActuacionesForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}