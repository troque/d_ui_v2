{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Actuaciones\\\\ActuacionesForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getUser } from '../../../components/Utils/Common';\nimport '../../Utils/Constants';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { Link } from \"react-router-dom\";\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\nimport ActuacionParametrosPlantillaForm from '../Herramientas/ActuacionParametrosPlantillaForm';\nimport Spinner from '../../Utils/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ActuacionesForm() {\n  _s();\n\n  const [errorApi, setErrorApi] = useState('');\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getNombreUsuario, setNombreUsuario] = useState(\"\");\n  const [listaTipoActuacion, setListaTipoActuacion] = useState(\"\");\n  const [getListaUsuariosComisorio, setListaUsuariosComisorio] = useState(\"\");\n  const [getValueDocumentoRuta, setValueDocumentoRuta] = useState(\"\");\n  const [getPesoTotalArchivos, setPesoTotalArchivos] = useState(0);\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [inputListArchivos, setInputListArchivos] = useState([{\n    archivo: {},\n    filebase64: \"\",\n    size: 0,\n    ext: \"\"\n  }]);\n  const [getMasActuacionId, setMasActuacionId] = useState(0);\n  const [getUsuarioComisionado, setUsuarioComisionado] = useState(0);\n  const [getCantidadActuaciones, setCantidadActuaciones] = useState(0);\n  const [getCantidadImpedimentos, setCantidadImpedimentos] = useState(0);\n  const [getCantidadComisorios, setCantidadComisorios] = useState(0);\n  const location = useLocation();\n  const {\n    from,\n    selected_id_etapa,\n    tipoActuacion\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let idEtapa = from.idEtapa >= 3 ? from.idEtapa : 3;\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      setNombreUsuario(getUser().nombre);\n      obtenerParametros();\n      getAllTipoActuaciones();\n\n      if (tipoActuacion == \"Comisorio\") {\n        getListUsuarios(getUser().id_dependencia);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const getListUsuarios = id_dependencia => {\n    GenericApi.getByIdGeneric(\"usuario/get-todos-usuarios-dependencia\", id_dependencia).then(datos => {\n      if (!datos.error) {\n        setListaUsuariosComisorio(datos.data);\n      } else {\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: Crear \" + tipoActuacion,\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/PreguntaImpedimentos',\n          from: {\n            from: from,\n            selected_id_etapa: selected_id_etapa\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      }; //buscamos el parametro\n\n      GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          setModalState({\n            title: \"Antecedentes\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/AntecedentesForm',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  /**\r\n   * Trae la lista de todos los tipos de actuaciones.\r\n   */\n\n\n  const getAllTipoActuaciones = () => {\n    GenericApi.getByIdGeneric(\"mas_actuaciones/actuaciones-etapa\", selected_id_etapa).then(datos => {\n      if (!datos.error) {\n        setListaTipoActuacion(datos.data);\n        let actuaciones = 0;\n        let impedimentos = 0;\n        let comisorios = 0;\n\n        for (let index = 0; index < datos.data.length; index++) {\n          const element = datos.data[index];\n\n          if (element.attributes.tipo_actuacion == 0 && tipoActuacion == \"Actuación\") {\n            actuaciones++;\n          } else if (element.attributes.tipo_actuacion == 1 && tipoActuacion == \"Impedimento\") {\n            impedimentos++;\n          } else if (element.attributes.tipo_actuacion == 2 && tipoActuacion == \"Comisorio\") {\n            comisorios++;\n          }\n        }\n\n        setCantidadActuaciones(actuaciones);\n        setCantidadImpedimentos(impedimentos);\n        setCantidadComisorios(comisorios);\n        window.showSpinner(false);\n      } else {\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: Crear Actuaciones\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ActuacionesForm',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  const enviarDatos = datos => {\n    window.showSpinner(true);\n    const actuacionId = datos.id_actuacion;\n\n    if (getUsuarioComisionado != 0) {\n      const dataUsuarioComisorio = {\n        \"data\": {\n          \"type\": \"usuario-comisionado\",\n          \"attributes\": {\n            \"id_proceso_disciplinario\": \"\"\n          }\n        }\n      };\n      GenericApi.addGeneric(\"proceso-diciplinario/usuario-comisionado/\" + getUsuarioComisionado + \"/\" + procesoDisciplinarioId, dataUsuarioComisorio).then(datos => {\n        if (!datos.error) {} else {\n          setModalState({\n            title: \"SINPROCNo \" + radicado + \" :: Crear \" + tipoActuacion,\n            message: datos.error.toString() + \" Error en guardar el usuario comisorio\",\n            show: true,\n            redirect: '/ActuacionesLista',\n            from: {\n              from: from,\n              selected_id_etapa: selected_id_etapa\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    }\n\n    const data = {\n      \"data\": {\n        \"type\": 'actuaciones',\n        \"attributes\": {\n          \"id_actuacion\": datos.id_actuacion,\n          \"usuario_accion\": getNombreUsuario,\n          \"id_estado_actuacion\": 3,\n          \"created_user\": getNombreUsuario,\n          \"fileBase64\": inputListArchivos[0].filebase64,\n          \"nombre_archivo\": inputListArchivos[0].archivo.name,\n          \"ext\": inputListArchivos[0].ext,\n          \"peso\": inputListArchivos[0].archivo.size,\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": selected_id_etapa,\n          \"estado\": true\n        }\n      }\n    };\n    GenericApi.addGeneric(\"actuaciones\", data).then(datos => {\n      if (!datos.error) {\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: Crear \" + tipoActuacion,\n          message: 'Registro Exitoso',\n          show: true,\n          redirect: '/Transacciones',\n          from: {\n            from,\n            selected_id_etapa: selected_id_etapa,\n            id_actuacion: actuacionId\n          },\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        setModalState({\n          title: \"SINPROCNo \" + radicado + \" :: Crear \" + tipoActuacion,\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ActuacionesLista',\n          from: {\n            from: from,\n            selected_id_etapa: selected_id_etapa\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n\n      window.showSpinner(false);\n    });\n  };\n\n  const selectChangeMasActuacion = value => {\n    setMasActuacionId(value);\n  };\n\n  const selectChangeUsuarioComisionado = value => {\n    setUsuarioComisionado(value);\n  };\n\n  const getParamsForm = () => {\n    if (getMasActuacionId > 0) {\n      return /*#__PURE__*/_jsxDEV(ActuacionParametrosPlantillaForm, {\n        from: from,\n        id_mas_actuacion: getMasActuacionId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const selectTipoActuacionesLis = () => {\n    return listaTipoActuacion && listaTipoActuacion.length ? listaTipoActuacion.map((actuaciones, i) => {\n      if (actuaciones.attributes.tipo_actuacion == 0 && tipoActuacion == \"Actuación\") {\n        if (getCantidadActuaciones == 1) {\n          setMasActuacionId(actuaciones.id);\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: actuaciones.id,\n            children: actuaciones.attributes.nombre_actuacion\n          }, actuaciones.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: actuaciones.id,\n            children: actuaciones.attributes.nombre_actuacion\n          }, actuaciones.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this);\n        }\n      } else if (actuaciones.attributes.tipo_actuacion == 1 && tipoActuacion == \"Impedimento\") {\n        if (getCantidadImpedimentos == 1) {\n          setMasActuacionId(actuaciones.id);\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: actuaciones.id,\n            children: actuaciones.attributes.nombre_actuacion\n          }, actuaciones.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: actuaciones.id,\n            children: actuaciones.attributes.nombre_actuacion\n          }, actuaciones.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this);\n        }\n      } else if (actuaciones.attributes.tipo_actuacion == 2 && tipoActuacion == \"Comisorio\") {\n        if (getCantidadComisorios == 1) {\n          setMasActuacionId(actuaciones.id);\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: actuaciones.id,\n            children: actuaciones.attributes.nombre_actuacion\n          }, actuaciones.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: actuaciones.id,\n            children: actuaciones.attributes.nombre_actuacion\n          }, actuaciones.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this);\n        }\n      } else {// setModalState({ title: \"SINPROCNo \" + radicado + \" :: Crear \"+tipoActuacion, message: \"Error al intentar listar \"+tipoActuacion , show: true, redirect: tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`, from: { from: from, selected_id_etapa: selected_id_etapa }, alert: global.Constants.TIPO_ALERTA.ERROR });\n      }\n    }) : \"\";\n  };\n\n  const selectUsuarioComisorio = () => {\n    return getListaUsuariosComisorio && getListaUsuariosComisorio.length ? getListaUsuariosComisorio.map((user, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: user.id,\n        children: user.attributes.nombre + \" \" + user.attributes.apellido\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this);\n    }) : \"\";\n  };\n\n  function formatBytes(bytes) {\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    if (bytes === undefined) return '0 Bytes';\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n  function obtenerPesoTotalArchivos(list) {\n    let peso = 0;\n    list.forEach((archivo, index) => {\n      if (archivo.archivo.size) {\n        peso += archivo.archivo.size;\n      }\n    });\n\n    if (peso > 15000000) {\n      setErrorApi('El peso/tamaño de los todos los adjuntos superan los 15 Mb pertmitidos para el registro, verifique e tamaño y elimine algunos adjuntos, (Si desea enviar mas archivos realice otro proceso de registro de Soportes del radicado)');\n      window.showModal(1);\n    }\n\n    setPesoTotalArchivos(peso);\n  }\n\n  const handleInputChangeArchivos = (e, index) => {\n    const {\n      name,\n      files\n    } = e.target;\n\n    if (files.length > 0) {\n      const extension = getFileExtension(files[0].name);\n\n      if (extension == \"docx\") {\n        const list = [...inputListArchivos];\n        list[index][name] = files[0];\n\n        if (files[0]) {\n          list[index][name] = files[0];\n        } else {\n          list[index][name] = '';\n          list[index].filebase64 = '';\n          list[index].size = 0;\n          list[index].ext = \"\";\n          setInputListArchivos(list);\n        } // Conversion a Base64\n\n\n        Array.from(e.target.files).forEach(archivo => {\n          var reader = new FileReader();\n          reader.readAsDataURL(archivo);\n\n          reader.onload = function () {\n            var arrayAuxiliar = [];\n            var base64 = reader.result;\n            arrayAuxiliar = base64.split(',');\n            list[index].filebase64 = arrayAuxiliar[1];\n            list[index].ext = extension;\n            setInputListArchivos(list);\n          };\n        });\n        obtenerPesoTotalArchivos(list);\n      } else {\n        const list = [...inputListArchivos];\n        list[index][name] = files[0];\n        list[index].filebase64 = '';\n        list[index].size = 0;\n        setInputListArchivos(list);\n        setErrorApi(\"El archivo seleccionado no tiene un formato permitido\");\n        window.showModal(1);\n      }\n    } else {\n      const list = [...inputListArchivos];\n      list[index][name] = '';\n      list[index].filebase64 = '';\n      list[index].size = 0;\n      setInputListArchivos(list);\n      obtenerPesoTotalArchivos(list);\n    }\n  };\n\n  function getFileExtension(filename) {\n    return filename.slice((filename.lastIndexOf(\".\") - 1 >>> 0) + 2);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfoErrorApi, {\n      error: errorApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        id_actuacion: '',\n        usuario_comisionado: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        let errores = {};\n        valores.id_actuacion = getMasActuacionId;\n        valores.usuario_comisionado = getUsuarioComisionado;\n\n        if (tipoActuacion == \"Comisorio\" && valores.usuario_comisionado == 0) {\n          errores.usuario_comisionado = 'Debe seleccionar una usuario comisionado para registrar';\n        }\n\n        if (valores.id_actuacion == 0) {\n          errores.id_actuacion = 'Debe seleccionar una actuación para registrar';\n        } // if (valores.id_actuacion != 0 && valores.id_actuacion != \"\") {\n        //     let id_actuacion = valores.id_actuacion;\n        //     listaTipoActuacion.forEach(element => {\n        //         if (element.id == id_actuacion) {\n        //             setValueDocumentoRuta(element.nombre_plantilla);\n        //         }\n        //     });\n        // }\n\n\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        enviarDatos(valores);\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w2d_block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"breadcrumb\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"breadcrumb breadcrumb-alt push\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/MisPendientes`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Mis Pendientes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 134\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 66\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/RamasProceso/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Ramas del proceso\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 157\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 66\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`,\n                    state: {\n                      from: from,\n                      selected_id_etapa: selected_id_etapa\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: tipoActuacion\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 257\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 66\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [\"Agregar \", tipoActuacion]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 66\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-themed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: [\"SINPROC No \", radicado, \" :: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"Crear \", tipoActuacion]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 86\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-right\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`,\n                  title: \"Regresar a lista de Actuaciones\",\n                  state: {\n                    from: from,\n                    selected_id_etapa: selected_id_etapa\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-success\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-backward\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 91\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"id_actuacion\",\n                      children: [tipoActuacion, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 446,\n                        columnNumber: 91\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 446,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-control\",\n                      id: \"id_actuacion\",\n                      name: \"id_actuacion\",\n                      onChange: e => selectChangeMasActuacion(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Por favor seleccione\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 448,\n                        columnNumber: 49\n                      }, this), selectTipoActuacionesLis()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"id_actuacion\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.id_actuacion\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 455,\n                        columnNumber: 97\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 455,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 37\n                }, this), tipoActuacion == \"Comisorio\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"usuario_comisionado\",\n                      children: [\"Usuario Comisionado \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 462,\n                        columnNumber: 106\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-control\",\n                      id: \"usuario_comisionado\",\n                      name: \"usuario_comisionado\",\n                      onChange: e => selectChangeUsuarioComisionado(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Por favor seleccione\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 464,\n                        columnNumber: 53\n                      }, this), selectUsuarioComisorio()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"usuario_comisionado\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.usuario_comisionado\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 467,\n                        columnNumber: 108\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 41\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 33\n              }, this), getMasActuacionId > 0 ? /*#__PURE__*/_jsxDEV(ActuacionParametrosPlantillaForm, {\n                from: from,\n                id_mas_actuacion: getMasActuacionId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 58\n              }, this) : null, getMasActuacionId > 0 ? inputListArchivos.map((x, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-12\",\n                        children: /*#__PURE__*/_jsxDEV(\"label\", {\n                          children: [\"Documento adjunto diligenciado (Word)\", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: \"* \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 490,\n                            columnNumber: 105\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 490,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 489,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-12\",\n                        style: {\n                          marginLeft: '13px'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"row\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-md-6\",\n                            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                              className: \"custom-file-label\",\n                              htmlFor: \"example-file-input-custom\",\n                              \"data-toggle\": \"custom-file-input\",\n                              children: x.archivo.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 495,\n                              columnNumber: 69\n                            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                              className: \"custom-file-input\",\n                              \"data-toggle\": \"custom-file-input\",\n                              type: \"file\",\n                              name: \"archivo\",\n                              onChange: e => handleInputChangeArchivos(e, i),\n                              required: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 496,\n                              columnNumber: 69\n                            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                              children: [\"Peso del archivo: \", formatBytes(x.archivo.size)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 497,\n                              columnNumber: 69\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 494,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 493,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 492,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 49\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 45\n                }, this);\n              }) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content block-content-full text-right bg-light\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 79\n              }, this), \" Registrar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`,\n              state: {\n                from: from,\n                selected_id_etapa: selected_id_etapa\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-window-close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 82\n                }, this), \" Cancelar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ActuacionesForm, \"C4iThfbx/mwy415DtfffStp7ELU=\", false, function () {\n  return [useLocation];\n});\n\n_c = ActuacionesForm;\nexport default ActuacionesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActuacionesForm\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","getUser","GenericApi","Link","ModalGen","ErrorMessage","Field","Form","Formik","InfoErrorApi","ActuacionParametrosPlantillaForm","Spinner","ActuacionesForm","errorApi","setErrorApi","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","countTextArea","setCountTextArea","getNombreUsuario","setNombreUsuario","listaTipoActuacion","setListaTipoActuacion","getListaUsuariosComisorio","setListaUsuariosComisorio","getValueDocumentoRuta","setValueDocumentoRuta","getPesoTotalArchivos","setPesoTotalArchivos","getModalState","setModalState","title","message","show","inputListArchivos","setInputListArchivos","archivo","filebase64","size","ext","getMasActuacionId","setMasActuacionId","getUsuarioComisionado","setUsuarioComisionado","getCantidadActuaciones","setCantidadActuaciones","getCantidadImpedimentos","setCantidadImpedimentos","getCantidadComisorios","setCantidadComisorios","location","from","selected_id_etapa","tipoActuacion","state","radicado","procesoDisciplinarioId","idEtapa","fetchData","window","showSpinner","nombre","obtenerParametros","getAllTipoActuaciones","getListUsuarios","id_dependencia","getByIdGeneric","then","datos","error","data","toString","redirect","alert","global","Constants","TIPO_ALERTA","ERROR","containsSpecialChars","str","result","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","getByDataGeneric","length","filter","map","filteredName","console","log","actuaciones","impedimentos","comisorios","index","element","attributes","tipo_actuacion","enviarDatos","actuacionId","id_actuacion","dataUsuarioComisorio","addGeneric","name","EXITO","selectChangeMasActuacion","value","selectChangeUsuarioComisionado","getParamsForm","selectTipoActuacionesLis","i","id","nombre_actuacion","selectUsuarioComisorio","user","apellido","formatBytes","bytes","decimals","undefined","k","dm","sizes","Math","floor","parseFloat","pow","toFixed","obtenerPesoTotalArchivos","list","peso","forEach","showModal","handleInputChangeArchivos","e","files","target","extension","getFileExtension","Array","reader","FileReader","readAsDataURL","onload","arrayAuxiliar","base64","filename","slice","lastIndexOf","usuario_comisionado","valores","errores","resetForm","errors","x","marginLeft"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Actuaciones/ActuacionesForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { getUser } from '../../../components/Utils/Common';\r\nimport '../../Utils/Constants';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport { Link } from \"react-router-dom\";\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\r\nimport ActuacionParametrosPlantillaForm from '../Herramientas/ActuacionParametrosPlantillaForm';\r\nimport Spinner from '../../Utils/Spinner';\r\n\r\nfunction ActuacionesForm() {\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [listaTipoActuacion, setListaTipoActuacion] = useState(\"\");\r\n    const [getListaUsuariosComisorio, setListaUsuariosComisorio] = useState(\"\");\r\n    const [getValueDocumentoRuta, setValueDocumentoRuta] = useState(\"\");\r\n    const [getPesoTotalArchivos, setPesoTotalArchivos] = useState(0);\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [inputListArchivos, setInputListArchivos] = useState([{ archivo: {}, filebase64: \"\", size: 0, ext: \"\" }]);\r\n    const [getMasActuacionId, setMasActuacionId] = useState(0);\r\n    const [getUsuarioComisionado, setUsuarioComisionado] = useState(0);\r\n    const [getCantidadActuaciones, setCantidadActuaciones] = useState(0);\r\n    const [getCantidadImpedimentos, setCantidadImpedimentos] = useState(0);\r\n    const [getCantidadComisorios, setCantidadComisorios] = useState(0);\r\n\r\n    const location = useLocation();\r\n    const { from, selected_id_etapa, tipoActuacion } = location.state;\r\n\r\n\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let idEtapa = from.idEtapa >= 3 ? from.idEtapa : 3;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            setNombreUsuario(getUser().nombre);\r\n            obtenerParametros();\r\n            getAllTipoActuaciones();\r\n            if (tipoActuacion == \"Comisorio\") {\r\n                getListUsuarios(getUser().id_dependencia);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const getListUsuarios = (id_dependencia) => {\r\n\r\n        GenericApi.getByIdGeneric(\"usuario/get-todos-usuarios-dependencia\", id_dependencia).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaUsuariosComisorio(datos.data);\r\n                } else {\r\n                    setModalState({ title: \"SINPROC No \" + radicado + \" :: Crear \" + tipoActuacion, message: datos.error.toString(), show: true, redirect: '/PreguntaImpedimentos', from: { from: from, selected_id_etapa: selected_id_etapa }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    const obtenerParametros = () => {\r\n        try {\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: \"Antecedentes\", message: datos.error.toString(), show: true, redirect: '/AntecedentesForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Trae la lista de todos los tipos de actuaciones.\r\n     */\r\n    const getAllTipoActuaciones = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"mas_actuaciones/actuaciones-etapa\", selected_id_etapa).then(\r\n            datos => {\r\n\r\n                if (!datos.error) {\r\n                    setListaTipoActuacion(datos.data);\r\n\r\n                    let actuaciones = 0;\r\n                    let impedimentos = 0;\r\n                    let comisorios = 0;\r\n\r\n                    for (let index = 0; index < datos.data.length; index++) {\r\n                        const element = datos.data[index];\r\n\r\n                        if (element.attributes.tipo_actuacion == 0 && tipoActuacion == \"Actuación\") {\r\n                            actuaciones++;\r\n                        } else if (element.attributes.tipo_actuacion == 1 && tipoActuacion == \"Impedimento\") {\r\n                            impedimentos++;\r\n                        } else if (element.attributes.tipo_actuacion == 2 && tipoActuacion == \"Comisorio\") {\r\n                            comisorios++;\r\n                        }\r\n                    }\r\n\r\n                    setCantidadActuaciones(actuaciones);\r\n                    setCantidadImpedimentos(impedimentos);\r\n                    setCantidadComisorios(comisorios);\r\n\r\n                    window.showSpinner(false);\r\n                } else {\r\n                    setModalState({ title: \"SINPROC No \" + radicado + \" :: Crear Actuaciones\", message: datos.error.toString(), show: true, redirect: '/ActuacionesForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const enviarDatos = (datos) => {\r\n        window.showSpinner(true);\r\n\r\n        const actuacionId = datos.id_actuacion;\r\n\r\n        if (getUsuarioComisionado != 0) {\r\n            const dataUsuarioComisorio = {\r\n                \"data\": {\r\n                    \"type\": \"usuario-comisionado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": \"\"\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.addGeneric(\"proceso-diciplinario/usuario-comisionado/\" + getUsuarioComisionado + \"/\" + procesoDisciplinarioId, dataUsuarioComisorio).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                    } else {\r\n                        setModalState({ title: \"SINPROCNo \" + radicado + \" :: Crear \" + tipoActuacion, message: datos.error.toString() + \" Error en guardar el usuario comisorio\", show: true, redirect: '/ActuacionesLista', from: { from: from, selected_id_etapa: selected_id_etapa }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        }\r\n\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'actuaciones',\r\n                \"attributes\": {\r\n                    \"id_actuacion\": datos.id_actuacion,\r\n                    \"usuario_accion\": getNombreUsuario,\r\n                    \"id_estado_actuacion\": 3,\r\n                    \"created_user\": getNombreUsuario,\r\n                    \"fileBase64\": inputListArchivos[0].filebase64,\r\n                    \"nombre_archivo\": inputListArchivos[0].archivo.name,\r\n                    \"ext\": inputListArchivos[0].ext,\r\n                    \"peso\": inputListArchivos[0].archivo.size,\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": selected_id_etapa,\r\n                    \"estado\": true,\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.addGeneric(\"actuaciones\", data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"SINPROC No \" + radicado + \" :: Crear \" + tipoActuacion, message: 'Registro Exitoso', show: true, redirect: '/Transacciones', from: { from, selected_id_etapa: selected_id_etapa, id_actuacion: actuacionId }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n                    setModalState({ title: \"SINPROCNo \" + radicado + \" :: Crear \" + tipoActuacion, message: datos.error.toString(), show: true, redirect: '/ActuacionesLista', from: { from: from, selected_id_etapa: selected_id_etapa }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n                window.showSpinner(false);\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const selectChangeMasActuacion = (value) => {\r\n        setMasActuacionId(value);\r\n    }\r\n\r\n    const selectChangeUsuarioComisionado = (value) => {\r\n        setUsuarioComisionado(value);\r\n    }\r\n\r\n    const getParamsForm = () => {\r\n        if (getMasActuacionId > 0) {\r\n            return (\r\n                <ActuacionParametrosPlantillaForm from={from} id_mas_actuacion={getMasActuacionId} />\r\n            )\r\n        }\r\n    }\r\n\r\n    const selectTipoActuacionesLis = () => {\r\n\r\n        return (\r\n            listaTipoActuacion && listaTipoActuacion.length ? listaTipoActuacion.map((actuaciones, i) => {\r\n                if (actuaciones.attributes.tipo_actuacion == 0 && tipoActuacion == \"Actuación\") {\r\n                    if (getCantidadActuaciones == 1) {\r\n                        setMasActuacionId(actuaciones.id);\r\n                        return (\r\n                            <option selected key={actuaciones.id} value={actuaciones.id}>{actuaciones.attributes.nombre_actuacion}</option>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <option key={actuaciones.id} value={actuaciones.id}>{actuaciones.attributes.nombre_actuacion}</option>\r\n                        )\r\n                    }\r\n                } else if (actuaciones.attributes.tipo_actuacion == 1 && tipoActuacion == \"Impedimento\") {\r\n                    if (getCantidadImpedimentos == 1) {\r\n                        setMasActuacionId(actuaciones.id);\r\n                        return (\r\n                            <option selected key={actuaciones.id} value={actuaciones.id}>{actuaciones.attributes.nombre_actuacion}</option>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <option key={actuaciones.id} value={actuaciones.id}>{actuaciones.attributes.nombre_actuacion}</option>\r\n                        )\r\n                    }\r\n                } else if (actuaciones.attributes.tipo_actuacion == 2 && tipoActuacion == \"Comisorio\") {\r\n                    if (getCantidadComisorios == 1) {\r\n                        setMasActuacionId(actuaciones.id);\r\n                        return (\r\n                            <option selected key={actuaciones.id} value={actuaciones.id}>{actuaciones.attributes.nombre_actuacion}</option>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <option key={actuaciones.id} value={actuaciones.id}>{actuaciones.attributes.nombre_actuacion}</option>\r\n                        )\r\n                    }\r\n                } else {\r\n                    // setModalState({ title: \"SINPROCNo \" + radicado + \" :: Crear \"+tipoActuacion, message: \"Error al intentar listar \"+tipoActuacion , show: true, redirect: tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`, from: { from: from, selected_id_etapa: selected_id_etapa }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }) : \"\"\r\n        )\r\n\r\n\r\n\r\n    }\r\n\r\n    const selectUsuarioComisorio = () => {\r\n\r\n        return (\r\n            getListaUsuariosComisorio && getListaUsuariosComisorio.length ? getListaUsuariosComisorio.map((user, i) => {\r\n                return (\r\n                    <option key={user.id} value={user.id}>{user.attributes.nombre + \" \" + user.attributes.apellido}</option>\r\n                )\r\n            }) : \"\"\r\n        )\r\n    }\r\n\r\n    function formatBytes(bytes, decimals = 3) {\r\n        if (bytes === undefined) return '0 Bytes';\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const dm = decimals < 0 ? 0 : decimals;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    }\r\n\r\n    function obtenerPesoTotalArchivos(list) {\r\n        let peso = 0;\r\n        list.forEach(\r\n            (archivo, index) => {\r\n                if (archivo.archivo.size) {\r\n                    peso += archivo.archivo.size;\r\n                }\r\n            }\r\n        )\r\n\r\n        if (peso > 15000000) {\r\n            setErrorApi('El peso/tamaño de los todos los adjuntos superan los 15 Mb pertmitidos para el registro, verifique e tamaño y elimine algunos adjuntos, (Si desea enviar mas archivos realice otro proceso de registro de Soportes del radicado)')\r\n            window.showModal(1)\r\n        }\r\n\r\n        setPesoTotalArchivos(peso);\r\n    }\r\n\r\n    const handleInputChangeArchivos = (e, index) => {\r\n\r\n        const { name, files } = e.target;\r\n        if (files.length > 0) {\r\n            const extension = getFileExtension(files[0].name);\r\n\r\n            if (extension == \"docx\") {\r\n\r\n                const list = [...inputListArchivos];\r\n                list[index][name] = files[0];\r\n\r\n                if (files[0]) {\r\n                    list[index][name] = files[0];\r\n                } else {\r\n                    list[index][name] = '';\r\n                    list[index].filebase64 = '';\r\n                    list[index].size = 0;\r\n                    list[index].ext = \"\";\r\n                    setInputListArchivos(list);\r\n                }\r\n\r\n                // Conversion a Base64\r\n                Array.from(e.target.files).forEach(archivo => {\r\n                    var reader = new FileReader();\r\n                    reader.readAsDataURL(archivo);\r\n                    reader.onload = function () {\r\n                        var arrayAuxiliar = [];\r\n                        var base64 = reader.result;\r\n                        arrayAuxiliar = base64.split(',');\r\n                        list[index].filebase64 = arrayAuxiliar[1];\r\n                        list[index].ext = extension;\r\n                        setInputListArchivos(list);\r\n                    }\r\n                })\r\n                obtenerPesoTotalArchivos(list);\r\n            } else {\r\n                const list = [...inputListArchivos];\r\n                list[index][name] = files[0];\r\n                list[index].filebase64 = '';\r\n                list[index].size = 0;\r\n                setInputListArchivos(list);\r\n                setErrorApi(\"El archivo seleccionado no tiene un formato permitido\")\r\n                window.showModal(1)\r\n            }\r\n        } else {\r\n            const list = [...inputListArchivos];\r\n            list[index][name] = '';\r\n            list[index].filebase64 = '';\r\n            list[index].size = 0;\r\n            setInputListArchivos(list);\r\n            obtenerPesoTotalArchivos(list);\r\n        }\r\n\r\n    }\r\n\r\n    function getFileExtension(filename) {\r\n        return filename.slice((filename.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<InfoErrorApi error={errorApi} />}\r\n            {<ModalGen data={getModalState} />}\r\n            {<Spinner />}\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    id_actuacion: '',\r\n                    usuario_comisionado: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    let errores = {}\r\n                    valores.id_actuacion = getMasActuacionId;\r\n                    valores.usuario_comisionado = getUsuarioComisionado;\r\n\r\n                    if (tipoActuacion == \"Comisorio\" && valores.usuario_comisionado == 0) {\r\n                        errores.usuario_comisionado = 'Debe seleccionar una usuario comisionado para registrar'\r\n                    }\r\n\r\n                    if (valores.id_actuacion == 0) {\r\n                        errores.id_actuacion = 'Debe seleccionar una actuación para registrar'\r\n                    }\r\n\r\n                    // if (valores.id_actuacion != 0 && valores.id_actuacion != \"\") {\r\n                    //     let id_actuacion = valores.id_actuacion;\r\n\r\n                    //     listaTipoActuacion.forEach(element => {\r\n                    //         if (element.id == id_actuacion) {\r\n                    //             setValueDocumentoRuta(element.nombre_plantilla);\r\n                    //         }\r\n                    //     });\r\n                    // }\r\n\r\n                    return errores\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                    <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}><small>{tipoActuacion}</small></Link></li>\r\n                                    <li class=\"breadcrumb-item\"> <small>Agregar {tipoActuacion}</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">SINPROC No {radicado} :: <strong>Crear {tipoActuacion}</strong></h3>\r\n                            </div>\r\n\r\n                            <div className=\"block-content\">\r\n                                <div className='text-right'>\r\n\r\n                                    <Link to={tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`} title='Regresar a lista de Actuaciones' state={{ from: from, selected_id_etapa: selected_id_etapa }}>\r\n                                        <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"id_actuacion\">{tipoActuacion} <span className=\"text-danger\">*</span></label>\r\n                                            <select className=\"form-control\" id=\"id_actuacion\" name=\"id_actuacion\" onChange={e => selectChangeMasActuacion(e.target.value)}>\r\n                                                <option value=\"\">Por favor seleccione</option>\r\n                                                {selectTipoActuacionesLis()}\r\n                                            </select>\r\n                                            {/* <Field as=\"select\" className=\"form-control\" id=\"id_actuacion\" name=\"id_actuacion\">\r\n                                                <option>Por favor seleccione</option>\r\n                                                {selectTipoActuacionesLis()}\r\n                                            </Field> */}\r\n                                            <ErrorMessage name=\"id_actuacion\" component={() => (<span className=\"text-danger\">{errors.id_actuacion}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {tipoActuacion == \"Comisorio\" ? (\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"usuario_comisionado\">Usuario Comisionado <span className=\"text-danger\">*</span></label>\r\n                                                <select className=\"form-control\" id=\"usuario_comisionado\" name=\"usuario_comisionado\" onChange={e => selectChangeUsuarioComisionado(e.target.value)}>\r\n                                                    <option value=\"\">Por favor seleccione</option>\r\n                                                    {selectUsuarioComisorio()}\r\n                                                </select>\r\n                                                <ErrorMessage name=\"usuario_comisionado\" component={() => (<span className=\"text-danger\">{errors.usuario_comisionado}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n\r\n                                {/* {getParamsForm()} */}\r\n                                {getMasActuacionId > 0 ? <ActuacionParametrosPlantillaForm from={from} id_mas_actuacion={getMasActuacionId} /> : null}\r\n                                {/* <div className=\"col-md-12\" style={{ marginLeft: '10px' }}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"documento_ruta\">Descargar documento diligenciado en Word <span className=\"text-danger\">* </span></label>\r\n                                        <a href={getValueDocumentoRuta} id='documento_ruta' name='documento_ruta' style={{ marginLeft: '10px' }} target=\"_blank\" download class=\"btn btn-success\"><i className=\"fa fa-download\" ></i> </a>\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                                {getMasActuacionId > 0 ?\r\n                                    inputListArchivos.map((x, i) => {\r\n                                        return (\r\n                                            <div className=\"col-md-12\" key={i}>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className='row'>\r\n                                                        <div className='col-md-12'>\r\n                                                            <label>Documento adjunto diligenciado (Word)<span className=\"text-danger\">* </span></label>\r\n                                                        </div>\r\n                                                        <div className='col-md-12' style={{ marginLeft: '13px' }}>\r\n                                                            <div className='row'>\r\n                                                                <div className='col-md-6'>\r\n                                                                    <label className=\"custom-file-label\" htmlFor=\"example-file-input-custom\" data-toggle=\"custom-file-input\">{x.archivo.name}</label>\r\n                                                                    <input className=\"custom-file-input\" data-toggle=\"custom-file-input\" type=\"file\" name=\"archivo\" onChange={e => handleInputChangeArchivos(e, i)} required />\r\n                                                                    <label>Peso del archivo: {formatBytes(x.archivo.size)}</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"block-content block-content-full text-right bg-light\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n\r\n                            <Link to={tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}>\r\n                                <button type=\"button\" className=\"btn btn-danger\"><i class=\"fas fa-window-close\"></i> Cancelar</button>\r\n                            </Link>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default ActuacionesForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}