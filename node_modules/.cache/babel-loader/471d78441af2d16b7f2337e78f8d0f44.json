{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AutofieldContainer = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactHookForm = require(\"react-hook-form\");\n\nvar _Autofield = require(\"./Autofield\");\n\nvar _utils = require(\"../utils\");\n\nvar _autoform_state = require(\"../autoform_state\");\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst AutofieldContainer = props => {\n  const {\n    id,\n    name,\n    fieldSchema,\n    defaultValue,\n    schemaTypeName,\n    skinElement,\n    formHook: {\n      control\n    },\n    formHook,\n    register,\n    rules,\n    overrides,\n    skin,\n    stateControl,\n    setVisible,\n    setHelperText,\n    setValue,\n    arrayControl\n  } = props;\n  const {\n    visible,\n    helperText\n  } = (0, _autoform_state.useAutofieldState)({\n    name,\n    stateControl\n  });\n  let baseProps = Object.assign({}, props, {\n    helperText\n  });\n  const {\n    controlled\n  } = skinElement;\n\n  if (controlled) {\n    const {\n      field\n    } = (0, _reactHookForm.useController)({\n      name,\n      control: control,\n      rules\n    });\n    baseProps.onChange = field.onChange;\n    baseProps.onBlur = field.onBlur;\n    baseProps.value = field.value;\n  } else {\n    if (!skinElement.skipRegister) {\n      const registerProps = register(name, rules);\n      baseProps.onBlur = registerProps.onBlur;\n      baseProps.onChange = registerProps.onChange;\n      baseProps.inputRef = registerProps.ref;\n    }\n  } // Allow field schema or overrides onChange\n\n\n  if ('onChange' in fieldSchema || 'onChange' in overrides) {\n    const baseOnChange = baseProps.onChange;\n    const overrideOnChange = overrides.onChange;\n    if (overrideOnChange) delete overrides.onChange;\n    const onChangeArguments = {\n      name,\n      setVisible,\n      setHelperText,\n      formHook,\n      setValue,\n      arrayControl\n    };\n\n    const fireOnChange = value => {\n      if (fieldSchema.onChange) fieldSchema.onChange(value, onChangeArguments);\n      if (overrideOnChange) overrideOnChange(value, onChangeArguments);\n    };\n\n    baseProps.onChange = event => {\n      const value = (0, _utils.valueFromEvent)(event);\n      baseOnChange(event);\n      fireOnChange(value);\n    };\n\n    baseProps.setValue = (name, value) => {\n      setValue(name, value);\n      fireOnChange(value);\n    };\n  } // Allow general onChange, passed to <Autoform />\n\n\n  if (props.onChange) {\n    const oldOnChange = baseProps.onChange;\n\n    baseProps.onChange = event => {\n      oldOnChange(event);\n      props.onChange();\n    };\n  }\n\n  const propsTransform = (0, _utils.getPropsTransform)(skinElement);\n  let transformedProps;\n  if (typeof propsTransform == 'function') transformedProps = propsTransform ? propsTransform(baseProps) : baseProps;else transformedProps = _objectSpread(_objectSpread({}, baseProps), propsTransform);\n  transformedProps = _objectSpread(_objectSpread({}, transformedProps), overrides);\n  const component = transformedProps.component || skinElement.component;\n\n  if (visible && component) {\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Autofield.Autofield, _objectSpread(_objectSpread({}, transformedProps), {}, {\n      component: component\n    }));\n  } else {\n    return null;\n  }\n};\n\nexports.AutofieldContainer = AutofieldContainer;","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/node_modules/react-hook-form-auto/lib/ui/AutofieldContainer.js"],"names":["Object","defineProperty","exports","value","AutofieldContainer","_react","_interopRequireDefault","require","_reactHookForm","_Autofield","_utils","_autoform_state","_jsxRuntime","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","props","id","name","fieldSchema","defaultValue","schemaTypeName","skinElement","formHook","control","register","rules","overrides","skin","stateControl","setVisible","setHelperText","setValue","arrayControl","visible","helperText","useAutofieldState","baseProps","assign","controlled","field","useController","onChange","onBlur","skipRegister","registerProps","inputRef","ref","baseOnChange","overrideOnChange","onChangeArguments","fireOnChange","event","valueFromEvent","oldOnChange","propsTransform","getPropsTransform","transformedProps","component","jsx","Autofield"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AutofieldContainer = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactHookForm = require(\"react-hook-form\");\n\nvar _Autofield = require(\"./Autofield\");\n\nvar _utils = require(\"../utils\");\n\nvar _autoform_state = require(\"../autoform_state\");\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst AutofieldContainer = props => {\n  const {\n    id,\n    name,\n    fieldSchema,\n    defaultValue,\n    schemaTypeName,\n    skinElement,\n    formHook: {\n      control\n    },\n    formHook,\n    register,\n    rules,\n    overrides,\n    skin,\n    stateControl,\n    setVisible,\n    setHelperText,\n    setValue,\n    arrayControl\n  } = props;\n  const {\n    visible,\n    helperText\n  } = (0, _autoform_state.useAutofieldState)({\n    name,\n    stateControl\n  });\n  let baseProps = Object.assign({}, props, {\n    helperText\n  });\n  const {\n    controlled\n  } = skinElement;\n\n  if (controlled) {\n    const {\n      field\n    } = (0, _reactHookForm.useController)({\n      name,\n      control: control,\n      rules\n    });\n    baseProps.onChange = field.onChange;\n    baseProps.onBlur = field.onBlur;\n    baseProps.value = field.value;\n  } else {\n    if (!skinElement.skipRegister) {\n      const registerProps = register(name, rules);\n      baseProps.onBlur = registerProps.onBlur;\n      baseProps.onChange = registerProps.onChange;\n      baseProps.inputRef = registerProps.ref;\n    }\n  } // Allow field schema or overrides onChange\n\n\n  if ('onChange' in fieldSchema || 'onChange' in overrides) {\n    const baseOnChange = baseProps.onChange;\n    const overrideOnChange = overrides.onChange;\n    if (overrideOnChange) delete overrides.onChange;\n    const onChangeArguments = {\n      name,\n      setVisible,\n      setHelperText,\n      formHook,\n      setValue,\n      arrayControl\n    };\n\n    const fireOnChange = value => {\n      if (fieldSchema.onChange) fieldSchema.onChange(value, onChangeArguments);\n      if (overrideOnChange) overrideOnChange(value, onChangeArguments);\n    };\n\n    baseProps.onChange = event => {\n      const value = (0, _utils.valueFromEvent)(event);\n      baseOnChange(event);\n      fireOnChange(value);\n    };\n\n    baseProps.setValue = (name, value) => {\n      setValue(name, value);\n      fireOnChange(value);\n    };\n  } // Allow general onChange, passed to <Autoform />\n\n\n  if (props.onChange) {\n    const oldOnChange = baseProps.onChange;\n\n    baseProps.onChange = event => {\n      oldOnChange(event);\n      props.onChange();\n    };\n  }\n\n  const propsTransform = (0, _utils.getPropsTransform)(skinElement);\n  let transformedProps;\n  if (typeof propsTransform == 'function') transformedProps = propsTransform ? propsTransform(baseProps) : baseProps;else transformedProps = _objectSpread(_objectSpread({}, baseProps), propsTransform);\n  transformedProps = _objectSpread(_objectSpread({}, transformedProps), overrides);\n  const component = transformedProps.component || skinElement.component;\n\n  if (visible && component) {\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Autofield.Autofield, _objectSpread(_objectSpread({}, transformedProps), {}, {\n      component: component\n    }));\n  } else {\n    return null;\n  }\n};\n\nexports.AutofieldContainer = AutofieldContainer;"]},"metadata":{},"sourceType":"script"}