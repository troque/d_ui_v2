{"ast":null,"code":"import _classCallCheck from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{Link}from\"react-router-dom\";import React,{Component,Fragment}from\"react\";import{hasAccess}from'../../components/Utils/Common';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ListaBotones=/*#__PURE__*/function(_Component){_inherits(ListaBotones,_Component);var _super=_createSuper(ListaBotones);function ListaBotones(props){var _this;_classCallCheck(this,ListaBotones);_this=_super.call(this,props);_this.boton_add=function(id_etapa,id_fase){// console.log(\"VALOR DE ID_ETAPA: \" + id_etapa);\n// console.log(\"VALOR DE ID_FASE: \" + id_fase);\n// console.log(\"MOSTRAR AGREGAR: \" + this.state.muestra_agregar);\nif(id_etapa>=global.Constants.ETAPAS.EVALUACION_PD){return true;}else{if(hasAccess(_this.state.modulo,_this.state.funcionalidad_crear)){if(id_etapa!=global.Constants.ETAPAS.CAPTURA_REPARTO&&id_fase==global.Constants.FASES.CLASIFICACION){return false;}else{return true;}}}};_this.refrescar=function(estado){try{_this.props.parentCallback(estado);}catch(error){console.error(\"Error \"+error);}};var getRoutes=_this.props.getRoutes;var from=_this.props.from;var disable=_this.props.disable;var _true=true,mostrarBotonAgregar=_true.mostrarBotonAgregar;if(_this.props.hasOwnProperty('mostrarBotonAgregar')){mostrarBotonAgregar=_this.props.mostrarBotonAgregar;}else{mostrarBotonAgregar=true;}var _Actuación=\"Actuación\",rutaParametrizada=_Actuación.rutaParametrizada;if(_this.props.hasOwnProperty('rutaParametrizada')){rutaParametrizada=_this.props.rutaParametrizada;}else{rutaParametrizada=\"Comisorio\";}// console.log(mostrarBotonAgregar);\n_this.state={id_etapa:getRoutes.id_etapa,id_fase:getRoutes.id_fase,crear_registro:getRoutes.crear_registro,consultar_registros:getRoutes.consultar_registros,adjuntar_documento:getRoutes.adjuntar_documento,repositorio_documentos:getRoutes.repositorio_documentos,modulo:getRoutes.modulo,funcionalidad_crear:getRoutes.funcionalidad_crear,funcionalidad_consultar:getRoutes.funcionalidad_consultar,from:from,muestra_atras:getRoutes.muestra_atras,selected_id_etapa:getRoutes.selected_id_etapa,mostrarBotonAgregar:mostrarBotonAgregar,disable:disable,muestra_inactivos:getRoutes.muestra_inactivos,muestra_agregar:getRoutes.muestra_agregar,rutaParametrizada:rutaParametrizada};return _this;}/**\r\n     * Se valida que la única fase que no puede agregar un registro nuevo es clasificacion del rádicado una vez la etapa se haya cerrado.\r\n     */_createClass(ListaBotones,[{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,crear_registro=_this$state.crear_registro,consultar_registros=_this$state.consultar_registros,adjuntar_documento=_this$state.adjuntar_documento,from=_this$state.from,selected_id_etapa=_this$state.selected_id_etapa,rutaParametrizada=_this$state.rutaParametrizada,mostrarBotonAgregar=_this$state.mostrarBotonAgregar;return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md text-right ms-auto\",children:/*#__PURE__*/_jsxs(_Fragment,{children:[this.state.mostrarBotonAgregar&&this.state.disable!=true?/*#__PURE__*/_jsx(Link,{to:this.state.crear_registro,state:{from:from,selected_id_etapa:selected_id_etapa,tipoActuacion:rutaParametrizada,rutaParametrizada:rutaParametrizada},children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",title:\"Agregar nuevo registro\",className:\"btn btn-primary\",children:[\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"}),\" \"]})}):null,hasAccess(this.state.modulo,this.state.funcionalidad_consultar)?/*#__PURE__*/_jsxs(\"button\",{type:\"button\",title:\"Listado de activos\",onClick:function onClick(){return _this2.refrescar('1');},className:\"btn btn-primary\",children:[\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-list\"}),\" \"]}):null,this.state.muestra_inactivos?hasAccess(this.state.modulo,this.state.funcionalidad_consultar,this.state.muestra_inactivos)?/*#__PURE__*/_jsxs(\"button\",{type:\"button\",title:\"Listado de inactivos\",onClick:function onClick(){return _this2.refrescar('0');},className:\"btn btn-danger\",children:[\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-list\"}),\" \"]}):null:null,this.state.muestra_atras?/*#__PURE__*/_jsx(Link,{to:'/RamasProceso/',title:\"Regresar a ramas del proceso\",state:{from:from,disable:this.state.disable},children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-primary\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-backward\"}),\" \"]})}):null]})})});}}]);return ListaBotones;}(Component);export default ListaBotones;","map":{"version":3,"names":["Link","React","Component","Fragment","hasAccess","ListaBotones","props","boton_add","id_etapa","id_fase","global","Constants","ETAPAS","EVALUACION_PD","state","modulo","funcionalidad_crear","CAPTURA_REPARTO","FASES","CLASIFICACION","refrescar","estado","parentCallback","error","console","getRoutes","from","disable","mostrarBotonAgregar","hasOwnProperty","rutaParametrizada","crear_registro","consultar_registros","adjuntar_documento","repositorio_documentos","funcionalidad_consultar","muestra_atras","selected_id_etapa","muestra_inactivos","muestra_agregar","tipoActuacion"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Utils/ListaBotones.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { hasAccess } from '../../components/Utils/Common';\r\nclass ListaBotones extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { getRoutes } = this.props;\r\n        const { from } = this.props;\r\n        const { disable } = this.props;\r\n\r\n        let { mostrarBotonAgregar } = true;\r\n        if (this.props.hasOwnProperty('mostrarBotonAgregar')) {\r\n            mostrarBotonAgregar = this.props.mostrarBotonAgregar;\r\n        } else {\r\n            mostrarBotonAgregar = true;\r\n        }\r\n\r\n        let { rutaParametrizada } = \"Actuación\";\r\n        if (this.props.hasOwnProperty('rutaParametrizada')) {\r\n            rutaParametrizada = this.props.rutaParametrizada;\r\n        } else {\r\n            rutaParametrizada = \"Comisorio\";\r\n        }\r\n\r\n        // console.log(mostrarBotonAgregar);\r\n        this.state = {\r\n            id_etapa: getRoutes.id_etapa,\r\n            id_fase: getRoutes.id_fase,\r\n            crear_registro: getRoutes.crear_registro,\r\n            consultar_registros: getRoutes.consultar_registros,\r\n            adjuntar_documento: getRoutes.adjuntar_documento,\r\n            repositorio_documentos: getRoutes.repositorio_documentos,\r\n            modulo: getRoutes.modulo,\r\n            funcionalidad_crear: getRoutes.funcionalidad_crear,\r\n            funcionalidad_consultar: getRoutes.funcionalidad_consultar,\r\n            from: from,\r\n            muestra_atras: getRoutes.muestra_atras,\r\n            selected_id_etapa: getRoutes.selected_id_etapa,\r\n            mostrarBotonAgregar: mostrarBotonAgregar,\r\n            disable: disable,\r\n            muestra_inactivos: getRoutes.muestra_inactivos,\r\n            muestra_agregar: getRoutes.muestra_agregar,\r\n            rutaParametrizada: rutaParametrizada,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Se valida que la única fase que no puede agregar un registro nuevo es clasificacion del rádicado una vez la etapa se haya cerrado.\r\n     */\r\n    boton_add = (id_etapa, id_fase) => {\r\n\r\n\r\n        // console.log(\"VALOR DE ID_ETAPA: \" + id_etapa);\r\n        // console.log(\"VALOR DE ID_FASE: \" + id_fase);\r\n        // console.log(\"MOSTRAR AGREGAR: \" + this.state.muestra_agregar);\r\n\r\n\r\n        if (id_etapa >= global.Constants.ETAPAS.EVALUACION_PD) {\r\n            return true;\r\n        } else {\r\n            if (hasAccess(this.state.modulo, this.state.funcionalidad_crear)) {\r\n\r\n                if (id_etapa != global.Constants.ETAPAS.CAPTURA_REPARTO && id_fase == global.Constants.FASES.CLASIFICACION) {\r\n                    return false;\r\n                }\r\n\r\n                else {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    refrescar = (estado) => {\r\n        try {\r\n            this.props.parentCallback(estado);\r\n        } catch (error) {\r\n            console.error(\"Error \" + error);\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const {\r\n            state: {\r\n                crear_registro,\r\n                consultar_registros,\r\n                adjuntar_documento,\r\n                from,\r\n                selected_id_etapa,\r\n                rutaParametrizada,\r\n                mostrarBotonAgregar\r\n            }\r\n        } = this;\r\n\r\n        return (\r\n            <Fragment>\r\n\r\n                <div className='col-md text-right ms-auto'>\r\n\r\n                    <>\r\n                        {/*\r\n                           (\r\n                                (this.state.mostrarBotonAgregar) ? (\r\n                                    (this.state.disable != true) ? (\r\n                                        <Link to={this.state.crear_registro} state={{ from: from, selected_id_etapa: selected_id_etapa, tipoActuacion: \"Actuación\" }}>\r\n                                            <button type=\"button\" title='Agregar nuevo registro' className=\"btn btn-primary\"> <i className=\"fas fa-plus\"></i> </button>\r\n                                        </Link>\r\n                                    ) : null\r\n                                ) : null\r\n\r\n\r\n                            ) : null*/\r\n                        }\r\n\r\n                        {\r\n                            (this.state.mostrarBotonAgregar && this.state.disable != true) ? (\r\n                                <Link to={this.state.crear_registro} state={{ from: from, selected_id_etapa: selected_id_etapa, tipoActuacion: rutaParametrizada, rutaParametrizada: rutaParametrizada }}>\r\n                                    <button type=\"button\" title='Agregar nuevo registro' className=\"btn btn-primary\"> <i className=\"fas fa-plus\"></i> </button>\r\n                                </Link>\r\n                            ) : null\r\n                        }\r\n\r\n                        {\r\n                            (hasAccess(this.state.modulo, this.state.funcionalidad_consultar)) ? (\r\n                                <button type=\"button\" title='Listado de activos' onClick={() => this.refrescar('1')} className=\"btn btn-primary\"> <i className=\"fas fa-list\"></i> </button>\r\n                            ) : null\r\n                        }\r\n\r\n                        {\r\n                            (this.state.muestra_inactivos ? (\r\n                                (hasAccess(this.state.modulo, this.state.funcionalidad_consultar, this.state.muestra_inactivos)) ? (\r\n                                    <button type=\"button\" title='Listado de inactivos' onClick={() => this.refrescar('0')} className=\"btn btn-danger\"> <i className=\"fas fa-list\"></i> </button>\r\n\r\n                                ) : null\r\n                            ) : null)\r\n                        }\r\n\r\n                        {\r\n                            (this.state.muestra_atras) ? (\r\n                                <Link to={'/RamasProceso/'} title='Regresar a ramas del proceso' state={{ from: from, disable: this.state.disable }}>\r\n                                    <button type=\"button\" className=\"btn btn-primary\"><i className=\"fas fa-backward\"></i> </button>\r\n                                </Link>\r\n                            ) : null\r\n                        }\r\n\r\n                    </>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListaBotones;"],"mappings":"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"},"metadata":{},"sourceType":"module"}