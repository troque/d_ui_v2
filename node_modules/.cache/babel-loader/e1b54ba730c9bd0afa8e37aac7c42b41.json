{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Herramientas\\\\CaratulasParametrosPlantillaForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport DataTable from 'react-data-table-component';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport '../../Utils/Constants';\nimport { getUser } from '../../Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CaratulasParametrosPlantillaForm(props) {\n  _s();\n\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  const caratulaId = props.caratulaId;\n  const radicado = from.radicado;\n  const procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const id_etapa = from.idEtapa;\n  const fechaRegistro = from.fechaRegistro;\n  const fechaIngreso = from.fechaIngreso;\n  const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\n  const registradoPor = from.registradoPor;\n  const vigencia = from.vigencia;\n  const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getListaParametros, setListaParametros] = useState({\n    params: []\n  });\n  const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({\n    data: []\n  });\n  const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({\n    data: []\n  }); //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\n\n  const [getAntecedentesLista, setAntecedentesLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getInteresadosLista, setInteresadosLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getParametrosCampos, setParametrosCampos] = useState(); // const campos = [\n  //     { title: \"N° Proceso\", value: radicado, type: \"N° Proceso\", check: false },\n  //     { title: \"Sinproc\", value: radicado, type: \"Sinproc\", check: false },\n  //     { title: 'Antecedentes', value: null, type: \"Antecedentes\", check: false },\n  //     { title: 'Usuario', value: registradoPor, type: \"Usuario\", check: false },\n  //     { title: 'Dependencia', value: dependencia, check: false },\n  //     { title: 'Vigencia', value: vigencia, type: \"Vigencia\", check: false },\n  //     { title: 'Fecha Registro', value: fechaRegistro, type: \"Fecha Registro\", check: false },\n  //     { title: 'Fecha Ingreso', value: fechaIngreso, type: \"Fecha Ingreso\", check: false },\n  //     { title: \"Generado\", value: generadoPor, type: \"Generado\", check: false },\n  // ];\n\n  useEffect(() => {\n    async function fetchData() {\n      cargarTablaParametrosCaratula();\n    }\n\n    fetchData();\n  }, [props.id_mas_actuacion]);\n\n  const selectCampos = parametro => {\n    return getListaParametrosBaseDatos.map((item, i) => {\n      var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\n\n      if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this);\n      }\n    });\n  };\n\n  const handleChangeInteresados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getInteresadosLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setInteresadosLista(valorId);\n    let val = getInteresadosLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.sujeto_procesal_nombre} ${p.attributes.primer_apellido} ${p.attributes.segundo_apellido} ${p.attributes.primer_nombre} ${p.attributes.segundo_nombre}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  function checkeoAutomaticoInteresados(parametro, id_campo) {\n    setInteresadosLista(getInteresadosLista);\n    var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoAntecedentes(parametro, id_campo) {\n    setAntecedentesLista(getAntecedentesLista);\n    var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\n    setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\n    var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\n    setCargosInvestigadoLista(getCargosInvestigadoLista);\n    var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\n    setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\n    var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  const handleChangeAntecedentes = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getAntecedentesLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setAntecedentesLista(valorId);\n    let val = getAntecedentesLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.descripcion}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadesInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_investigado) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setEntidadesInvestigadoLista(valorId);\n    let val = getEntidadesInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_investigado}`;\n        var nombre = `${p.attributes.nombre_investigado}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getCargosInvestigadoLista.map(item => {\n      if (value == item.attributes.cargo) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getCargosInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.cargo}`;\n        var nombre = `${p.attributes.cargo}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_entidad) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getEntidadInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_entidad}`;\n        var nombre = `${p.attributes.nombre_entidad}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const selectAntecedentes = (parametro, id_campo) => {\n    if (Array.isArray(getAntecedentesLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getAntecedentesLista && getAntecedentesLista.length == 1) {\n        checkeoAutomaticoAntecedentes(parametro, id_campo);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getAntecedentesLista[0].id,\n            name: 'check' + getAntecedentesLista[0].id,\n            value: getAntecedentesLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), \" \", getAntecedentesLista[0].attributes.descripcion]\n        }, 'keyCheck' + getAntecedentesLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this);\n      } else if (getAntecedentesLista.length > 1) {\n        return getAntecedentesLista.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + item.id,\n              name: 'check' + item.id,\n              value: item.id,\n              onChange: e => handleChangeAntecedentes(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this), \" \", item.attributes.descripcion]\n          }, 'keyCheck' + item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this) // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectInteresados = (parametro, id_campo) => {\n    if (Array.isArray(getInteresadosLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getInteresadosLista && getInteresadosLista.length == 1) {\n        checkeoAutomaticoInteresados(parametro, id_campo);\n        var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getInteresadosLista[0].id,\n            name: 'check' + getInteresadosLista[0].id,\n            value: getInteresadosLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getInteresadosLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this);\n      } else if (getInteresadosLista.length > 1) {\n        return getInteresadosLista.map((item, i) => {\n          var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + nombre,\n              name: 'check' + nombre,\n              value: item.id,\n              onChange: e => handleChangeInteresados(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this), \" \", nombre]\n          }, 'keyCheck' + nombre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this) // <option key={nombre} value={nombre}>{nombre}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadesInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\n        let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getEntidadesInvestigadoLista[0].id,\n            name: 'check' + getEntidadesInvestigadoLista[0].id,\n            value: getEntidadesInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getEntidadesInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this);\n      } else if (getEntidadesInvestigadoLista.length > 1) {\n        return getEntidadesInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.nombre_investigado}`;\n          var nombre = `${item.attributes.nombre_investigado}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 33\n            }, this) //<option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const selectCargosInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getCargosInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getCargosInvestigadoLista[0].id,\n            name: 'check' + getCargosInvestigadoLista[0].id,\n            value: getCargosInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getCargosInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this);\n      } else if (getCargosInvestigadoLista.length > 1) {\n        return getCargosInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.cargo}`;\n          var nombre = `${item.attributes.cargo}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeCargosInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 33\n            }, this) // <option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const selectEntidadesInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getEntidadInvestigadoLista[0].id,\n            name: 'check' + getEntidadInvestigadoLista[0].id,\n            value: getEntidadInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getEntidadInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this);\n      } else if (getEntidadInvestigadoLista.length > 1) {\n        return getEntidadInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.nombre_entidad}`;\n          var nombre = `${item.attributes.nombre_entidad}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeEntidadesInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 33\n            }, this) //<option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const cargarValoresDeParametro = parametro => {\n    const arrayOtherElements = [\"Dependencia Origen\", \"Delegada\", \"Radicado\", \"Radicación\", \"Auto\"];\n    var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\n      return item.parametro == parametro;\n    });\n    var tempCampo = campoParametro[0];\n\n    if (tempCampo != undefined && getListaParametrosBaseDatos[tempCampo.id_campo] != undefined) {\n      var itemCampo = getListaParametrosBaseDatos[tempCampo.id_campo]; // Tiene un valor por defecto\n\n      if (itemCampo.value != null) {\n        // Se asigna el valor a la lista temporal\n        var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\n          if (item.parametro == parametro) {\n            item.id_campo = tempCampo.id_campo;\n            var itemCampoId = getListaParametrosBaseDatos[tempCampo.id_campo];\n            item.valor = itemCampoId.value != null ? itemCampoId.value : \"\";\n            item.valorTemporal = itemCampoId.value != null ? itemCampoId.value : \"\";\n          }\n\n          return item;\n        }); // Se deshabilita cuando es sinproc o dependencia\n\n        var validarElemento = document.getElementById('id' + itemCampo.title);\n\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: itemCampo.value\n        }, void 0, false);\n      } else if (itemCampo.type == \"Antecedentes\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectAntecedentes(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }, this);\n      } else {\n        var validarElemento = document.getElementById('id' + itemCampo.title);\n\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Campo Inactivo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }, this);\n      }\n    } // let idLabelParametro = 'idValorSeleccionado' + tempCampo.parametro;\n\n\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" El campo debe estar dentro de la lista parametrizable para asignarle un valor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 17\n    }, this);\n  };\n\n  const cargarCheckParametro = parametro => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        id: 'check' + parametro + '1',\n        name: 'check' + parametro + '1',\n        value: parametro + '1',\n        onChange: e => handleChangeStatus(e, parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 17\n      }, this)\n    }, 'keyCheck' + parametro + '1', false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleChangeStatus = (e, parametro) => {\n    // Se captura el elemento enviado por parametros\n    var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro); // Se valida si esta checkeado\n\n    if (e.target.checked) {\n      // Se devuelve el valor a vacio\n      var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n        // Se valida que el item recorrido sea igual al parametro checkeado\n        if (item.parametro == parametro) {\n          // Se captura el id del campo\n          item.id_campo = itemFilter[0].id_campo;\n          var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo]; // Se redefine el valor del item a vacio\n\n          item.valor = \"\";\n          item.valorTemporal = itemCampo.value != null ? itemCampo.value : itemFilter[0].value;\n        } // Se retorna el item\n\n\n        return item;\n      });\n    } else {\n      // Se devuelve el valor a vacio\n      var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n        // Se valida que el item recorrido sea igual al parametro checkeado\n        if (item.parametro == parametro) {\n          // Se captura el id del campo\n          item.id_campo = itemFilter[0].id_campo;\n          var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo]; // Se redefine el valor del item a su valor original\n\n          item.valor = item.valorTemporal;\n          item.valorTemporal = itemCampo.value != null ? itemCampo.value : itemFilter[0].value;\n        } // Se retorna el item\n\n\n        return item;\n      });\n    }\n  };\n\n  const selectChangeListaCampos = (parametro, id_campo, value) => {\n    // console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\n    var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n      if (item.parametro == parametro) {\n        item.id_campo = id_campo;\n        var itemCampo = getListaParametrosBaseDatos[id_campo];\n        item.valor = itemCampo.value != null ? itemCampo.value : value;\n        item.valorTemporal = itemCampo.value != null ? itemCampo.value : value;\n      }\n\n      return item;\n    }); //setListaCamposPorParametroDefinitiva({ data: newParams });\n  };\n\n  const columns = [{\n    name: 'Parametros de la plantilla',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: parametro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 32\n    }, this),\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Campo',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      id: `id${parametro}`,\n      name: `name${parametro}`,\n      onChange: e => selectChangeListaCampos(parametro, e.target.value, \"\"),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Por favor seleccione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 21\n      }, this), selectCampos(parametro)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 17\n    }, this),\n    sortable: false,\n    width: \"25%\"\n  }, {\n    name: 'Valor seleccionado',\n    width: \"50%\",\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: cargarValoresDeParametro(parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 17\n    }, this)\n  } // {\n  //     name: 'Activar/Inactivar',\n  //     width: \"10%\",\n  //     cell: parametro =>\n  //         <div className='row'>\n  //             <div className='col'>\n  //                 {cargarCheckParametro(parametro)}\n  //             </div>\n  //         </div>\n  // }\n  ]; // Metodo encargado de cargar los parametros generales de la plantilla de la BD\n\n  const cargarTablaParametrosCaratula = () => {\n    // Se inicializa el array\n    var array = []; // Se inicializa la API\n\n    GenericApi.getGeneric('parametro_campos_caratula').then( // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se recorre el array para insertar los valores necesarios\n        for (let index = 0; index < datos.data.length; index++) {\n          // Se captura los datos por posicion\n          const element = datos.data[index].attributes;\n          const title = element.nombre_campo;\n          const estado = element.estado == \"1\" ? true : false;\n          const type = element.type;\n          const value = validarValueParametros(type, estado); // Se añade el dato al array general\n\n          array.push({\n            title: title,\n            value: value,\n            type: type,\n            check: estado\n          });\n        } // Se setea la respuesta en la constante\n\n\n        setListaParametrosBaseDatos(array); // Se generan la lista de parametros del documento\n\n        cargarParametros(array);\n      }\n    });\n  }; // Metodo encargado de retorna el valor por el elemento\n\n\n  const validarValueParametros = (element, estado) => {\n    // Se inicializa la variable\n    let valor; // Se valida por el elemento\n\n    if (element == \"Sinproc\" && estado) {\n      valor = radicado;\n    } else if (element == \"Usuario\" && estado) {\n      valor = registradoPor;\n    } else if (element == \"Dependencia\" && estado) {\n      valor = dependencia;\n    } else if (element == \"Vigencia\" && estado) {\n      valor = vigencia;\n    } else if (element == \"Fecha Registro\" && estado) {\n      valor = fechaRegistro;\n    } else if (element == \"Fecha Ingreso\" && estado) {\n      valor = fechaIngreso;\n    } else if (element == \"Generado\" && estado) {\n      valor = generadoPor;\n    } // Se retorna el valor\n\n\n    return valor;\n  }; // Metodo encargado de cargar la lista de parametros de la plantilla\n\n\n  const cargarParametros = listaParametrosBaseDatos => {\n    // Se setea el array en null\n    setListaParametros(null); // Se inicializa la data\n\n    const data = {\n      \"data\": {\n        \"type\": 'caratulas',\n        \"attributes\": {\n          \"id\": caratulaId\n        }\n      }\n    }; // Se inicializa la API que carga la lisata de parametros de la plantilla\n\n    GenericApi.getByDataGeneric('caratulas/parametros-plantilla/' + caratulaId, data).then( // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setea la lista\n        setListaParametros(datos); // Se recorre el array de datos\n\n        var parametrosCampos = datos.params.map((item, i) => {\n          // Se ejecuta una busqueda del elemento\n          var indexCampo = listaParametrosBaseDatos.findIndex(x => x.title == item);\n\n          if (indexCampo >= 0) {\n            return {\n              parametro: item,\n              id_campo: indexCampo,\n              valor: \"\"\n            };\n          } else {\n            return {\n              parametro: item,\n              id_campo: \"\",\n              valor: \"\"\n            };\n          }\n        });\n        setListaCamposPorParametroTemporal({\n          data: parametrosCampos\n        }); // Se cargan los antecedentes, interesados y entidades del investigado\n\n        cargarEntidadesInvestigado();\n        cargarAntecedentes();\n        cargarInteresados();\n      }\n    });\n  };\n\n  const cargarAntecedentes = () => {\n    const data = {\n      \"data\": {\n        \"type\": 'antecedente',\n        \"attributes\": {\n          \"antecedentes\": \"antecedentes\",\n          \"descripcion\": \"descripcion\",\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"fecha_registro\": Date.now(),\n          \"id_dependencia\": -1,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setAntecedentesLista(parametrosCampos);\n      }\n    });\n  };\n\n  const cargarInteresados = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"interesado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"tipo_documento\": \"1\",\n          \"numero_documento\": \"1\",\n          \"primer_nombre\": \"1\",\n          \"segundo_nombre\": \"1\",\n          \"primer_apellido\": \"1\",\n          \"segundo_apellido\": \"1\",\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setInteresadosLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Datos del interesado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const cargarEntidadesInvestigado = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"entidad_investigado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": \"1\",\n          \"requiere_registro\": true,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          var nombreInvestigado = item.attributes.nombre_investigado;\n          var cargoInvestigado = item.attributes.cargo;\n          var entidadInvestigado = item.attributes.nombre_entidad;\n\n          if (nombreInvestigado == null) {\n            item.attributes.nombre_investigado = \"NO_APLICA\";\n          }\n\n          if (cargoInvestigado == null) {\n            item.attributes.cargo = \"NO_APLICA\";\n          }\n\n          if (entidadInvestigado == null) {\n            item.attributes.nombre_entidad = \"NO_APLICA\";\n          }\n\n          item.checked = false;\n          return item;\n        });\n        setEntidadesInvestigadoLista(parametrosCampos);\n        setCargosInvestigadoLista(parametrosCampos);\n        setEntidadInvestigadoLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Entidades del investigado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const descargarArchivo = () => {\n    try {\n      window.showSpinner(true);\n      var params = getListaCamposPorParametroTemporal.data.map(item => {\n        return {\n          \"param\": item.parametro,\n          \"value\": item.valor\n        };\n      }); // console.log(\"######params#####\");\n      // console.log(params);\n\n      const data = {\n        \"data\": {\n          \"type\": \"caratulas\",\n          \"attributes\": {\n            \"params\": params\n          }\n        }\n      };\n      GenericApi.getByDataGeneric('caratulas/plantilla-diligenciada/' + caratulaId, data).then(datos => {\n        window.showSpinner(false);\n\n        if (!datos.error) {\n          downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"pdf\");\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: \",\n            message: datos.error.toString(),\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function downloadBase64File(contentType, base64Data, fileName) {\n    const linkSource = `data:${contentType};base64,${base64Data}`;\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = linkSource;\n    downloadLink.download = fileName;\n    downloadLink.click();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 13\n    }, this), getListaParametros != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Parametros de la plantilla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-2 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n          columns: columns,\n          data: getListaParametros.params,\n          noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n          striped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-4 mb-2 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => descargarArchivo(),\n          className: \"btn btn-rounded btn-primary\",\n          title: \"Descargar\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-file-pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 140\n          }, this), \" Descargar car\\xE1tula\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Cargando parametros de la plantilla...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CaratulasParametrosPlantillaForm, \"JeTjLsKnVBT4TaWrS7/SzNmMs3g=\", false, function () {\n  return [useLocation];\n});\n\n_c = CaratulasParametrosPlantillaForm;\nexport default CaratulasParametrosPlantillaForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CaratulasParametrosPlantillaForm\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","DataTable","GenericApi","Spinner","ModalGen","getUser","CaratulasParametrosPlantillaForm","props","location","from","state","caratulaId","radicado","procesoDisciplinarioId","id_etapa","idEtapa","fechaRegistro","fechaIngreso","dependencia","nombre_dependencia","nombre","registradoPor","vigencia","generadoPor","nombre_completo","modalState","setModalState","title","message","show","getListaParametros","setListaParametros","params","getListaCamposPorParametroTemporal","setListaCamposPorParametroTemporal","data","getListaParametrosBaseDatos","setListaParametrosBaseDatos","getAntecedentesLista","setAntecedentesLista","links","meta","getInteresadosLista","setInteresadosLista","getEntidadesInvestigadoLista","setEntidadesInvestigadoLista","getCargosInvestigadoLista","setCargosInvestigadoLista","getEntidadInvestigadoLista","setEntidadInvestigadoLista","getParametrosCampos","setParametrosCampos","fetchData","cargarTablaParametrosCaratula","id_mas_actuacion","selectCampos","parametro","map","item","i","itemFilter","filter","x","undefined","length","id_campo","handleChangeInteresados","e","value","checked","target","valorId","id","val","p","attributes","sujeto_procesal_nombre","primer_apellido","segundo_apellido","primer_nombre","segundo_nombre","selectChangeListaCampos","toString","checkeoAutomaticoInteresados","checkeoAutomaticoAntecedentes","descripcion","checkeoAutomaticoInvestigadosNombre","nombre_investigado","checkeoAutomaticoInvestigadosCargo","cargo","checkeoAutomaticoInvestigadosEntidad","nombre_entidad","handleChangeAntecedentes","handleChangeInvestigados","handleChangeCargosInvestigados","handleChangeEntidadesInvestigados","selectAntecedentes","Array","isArray","selectInteresados","selectInvestigados","selectCargosInvestigados","selectEntidadesInvestigados","cargarValoresDeParametro","arrayOtherElements","campoParametro","tempCampo","itemCampo","newParamsItem","itemCampoId","valor","valorTemporal","validarElemento","document","getElementById","hasAttribute","setAttribute","type","cargarCheckParametro","handleChangeStatus","newParams","columns","name","cell","sortable","width","array","getGeneric","then","datos","error","index","element","nombre_campo","estado","validarValueParametros","push","check","cargarParametros","listaParametrosBaseDatos","getByDataGeneric","parametrosCampos","indexCampo","findIndex","cargarEntidadesInvestigado","cargarAntecedentes","cargarInteresados","Date","now","redirect","nombreInvestigado","cargoInvestigado","entidadInvestigado","descargarArchivo","window","showSpinner","downloadBase64File","content_type","base_64","file_name","alert","global","Constants","TIPO_ALERTA","ERROR","console","contentType","base64Data","fileName","linkSource","downloadLink","createElement","href","download","click","DATA_TABLE","SIN_DATOS_TABLE"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Herramientas/CaratulasParametrosPlantillaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport '../../Utils/Constants';\r\nimport { getUser } from '../../Utils/Common';\r\n\r\nfunction CaratulasParametrosPlantillaForm(props) {\r\n\r\n    const location = useLocation()\r\n    const { from } = location.state;\r\n    const caratulaId = props.caratulaId;\r\n    const radicado = from.radicado;\r\n    const procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    const id_etapa = from.idEtapa;\r\n    const fechaRegistro = from.fechaRegistro;\r\n    const fechaIngreso = from.fechaIngreso;\r\n    const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\r\n    const registradoPor = from.registradoPor;\r\n    const vigencia = from.vigencia;\r\n    const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaParametros, setListaParametros] = useState({ params: [] });\r\n    const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({ data: [] });\r\n    const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({ data: [] });\r\n    //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getInteresadosLista, setInteresadosLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getParametrosCampos, setParametrosCampos] = useState();\r\n\r\n    // const campos = [\r\n    //     { title: \"N° Proceso\", value: radicado, type: \"N° Proceso\", check: false },\r\n    //     { title: \"Sinproc\", value: radicado, type: \"Sinproc\", check: false },\r\n    //     { title: 'Antecedentes', value: null, type: \"Antecedentes\", check: false },\r\n    //     { title: 'Usuario', value: registradoPor, type: \"Usuario\", check: false },\r\n    //     { title: 'Dependencia', value: dependencia, check: false },\r\n    //     { title: 'Vigencia', value: vigencia, type: \"Vigencia\", check: false },\r\n    //     { title: 'Fecha Registro', value: fechaRegistro, type: \"Fecha Registro\", check: false },\r\n    //     { title: 'Fecha Ingreso', value: fechaIngreso, type: \"Fecha Ingreso\", check: false },\r\n    //     { title: \"Generado\", value: generadoPor, type: \"Generado\", check: false },\r\n    // ];\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            cargarTablaParametrosCaratula();\r\n        }\r\n        fetchData();\r\n    }, [props.id_mas_actuacion]);\r\n\r\n    const selectCampos = (parametro) => {\r\n\r\n        return (\r\n            getListaParametrosBaseDatos.map((item, i) => {\r\n\r\n                var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n                if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\r\n                    return (\r\n                        <option selected key={i} value={i}>{item.title}</option>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <option key={i} value={i}>{item.title}</option>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleChangeInteresados = (e, parametro, id_campo) => {\r\n\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getInteresadosLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setInteresadosLista(valorId);\r\n        let val = getInteresadosLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.sujeto_procesal_nombre} ${p.attributes.primer_apellido} ${p.attributes.segundo_apellido} ${p.attributes.primer_nombre} ${p.attributes.segundo_nombre}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n    }\r\n\r\n    function checkeoAutomaticoInteresados(parametro, id_campo) {\r\n        setInteresadosLista(getInteresadosLista);\r\n        var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\r\n        setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\r\n        var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\r\n        setCargosInvestigadoLista(getCargosInvestigadoLista);\r\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\r\n        setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\r\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    const handleChangeAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.descripcion}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadesInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_investigado) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setEntidadesInvestigadoLista(valorId);\r\n        let val = getEntidadesInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_investigado}`;\r\n                var nombre = `${p.attributes.nombre_investigado}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getCargosInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.cargo) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getCargosInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.cargo}`;\r\n                var nombre = `${p.attributes.cargo}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_entidad) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getEntidadInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_entidad}`;\r\n                var nombre = `${p.attributes.nombre_entidad}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const selectAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].id}\r\n                            name={'check' + getAntecedentesLista[0].id}\r\n                            value={getAntecedentesLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.descripcion}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.id}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.id}\r\n                                    name={'check' + item.id}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.descripcion}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInteresados = (parametro, id_campo) => {\r\n        if (Array.isArray(getInteresadosLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getInteresadosLista && getInteresadosLista.length == 1) {\r\n                checkeoAutomaticoInteresados(parametro, id_campo);\r\n                var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getInteresadosLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getInteresadosLista[0].id}\r\n                            name={'check' + getInteresadosLista[0].id}\r\n                            value={getInteresadosLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getInteresadosLista.length > 1) {\r\n                return (\r\n                    getInteresadosLista.map((item, i) => {\r\n                        var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + nombre}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + nombre}\r\n                                    name={'check' + nombre}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeInteresados(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {nombre}\r\n                            </div>\r\n                            // <option key={nombre} value={nombre}>{nombre}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadesInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\r\n                let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadesInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            value={getEntidadesInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadesInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadesInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_investigado}`;\r\n                        var nombre = `${item.attributes.nombre_investigado}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectCargosInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getCargosInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\r\n                var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getCargosInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getCargosInvestigadoLista[0].id}\r\n                            name={'check' + getCargosInvestigadoLista[0].id}\r\n                            value={getCargosInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getCargosInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getCargosInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.cargo}`;\r\n                        var nombre = `${item.attributes.cargo}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeCargosInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                // <option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectEntidadesInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\r\n                var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadInvestigadoLista[0].id}\r\n                            value={getEntidadInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_entidad}`;\r\n                        var nombre = `${item.attributes.nombre_entidad}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeEntidadesInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const cargarValoresDeParametro = (parametro) => {\r\n\r\n        const arrayOtherElements = [\r\n            \"Dependencia Origen\",\r\n            \"Delegada\",\r\n            \"Radicado\",\r\n            \"Radicación\",\r\n            \"Auto\"\r\n        ];\r\n\r\n        var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\r\n            return item.parametro == parametro;\r\n        });\r\n\r\n        var tempCampo = campoParametro[0];\r\n\r\n        if (tempCampo != undefined && getListaParametrosBaseDatos[tempCampo.id_campo] != undefined) {\r\n            var itemCampo = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n\r\n            // Tiene un valor por defecto\r\n            if (itemCampo.value != null) {\r\n\r\n                // Se asigna el valor a la lista temporal\r\n                var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\r\n                    if (item.parametro == parametro) {\r\n                        item.id_campo = tempCampo.id_campo;\r\n                        var itemCampoId = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n                        item.valor = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                        item.valorTemporal = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                // Se deshabilita cuando es sinproc o dependencia\r\n                var validarElemento = document.getElementById('id' + itemCampo.title);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <>{itemCampo.value}</>\r\n                )\r\n            } else if (itemCampo.type == \"Antecedentes\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else {\r\n                var validarElemento = document.getElementById('id' + itemCampo.title);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <label>Campo Inactivo</label>\r\n                )\r\n            }\r\n        }\r\n\r\n        // let idLabelParametro = 'idValorSeleccionado' + tempCampo.parametro;\r\n\r\n        return (<label> El campo debe estar dentro de la lista parametrizable para asignarle un valor</label >)\r\n\r\n    }\r\n\r\n    const cargarCheckParametro = (parametro) => {\r\n\r\n        return (\r\n            <div className=\"col-md-12\" key={'keyCheck' + parametro + '1'} >\r\n                <input type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    id={'check' + parametro + '1'}\r\n                    name={'check' + parametro + '1'}\r\n                    value={parametro + '1'}\r\n                    onChange={(e) => handleChangeStatus(e, parametro)}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n\r\n    const handleChangeStatus = (e, parametro) => {\r\n\r\n        // Se captura el elemento enviado por parametros\r\n        var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n        // Se valida si esta checkeado\r\n        if (e.target.checked) {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a vacio\r\n                    item.valor = \"\";\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n\r\n\r\n        } else {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a su valor original\r\n                    item.valor = item.valorTemporal;\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n        }\r\n    }\r\n\r\n    const selectChangeListaCampos = (parametro, id_campo, value) => {\r\n\r\n        // console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\r\n\r\n        var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n            if (item.parametro == parametro) {\r\n                item.id_campo = id_campo;\r\n                var itemCampo = getListaParametrosBaseDatos[id_campo];\r\n\r\n                item.valor = (itemCampo.value != null) ? itemCampo.value : value;\r\n                item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : value;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        //setListaCamposPorParametroDefinitiva({ data: newParams });\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Parametros de la plantilla',\r\n            cell: parametro => <div><strong>{parametro}</strong></div>,\r\n            sortable: true,\r\n            width: \"20%\",\r\n        },\r\n        {\r\n            name: 'Campo',\r\n            cell: parametro =>\r\n                <select className=\"form-control\" id={`id${parametro}`} name={`name${parametro}`}\r\n                    onChange={e => selectChangeListaCampos(parametro, e.target.value, \"\")}>\r\n                    <option value=\"\">Por favor seleccione</option>\r\n                    {selectCampos(parametro)}\r\n                </select>,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'Valor seleccionado',\r\n            width: \"50%\",\r\n            cell: parametro =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresDeParametro(parametro)}\r\n                    </div>\r\n                </div>,\r\n        },\r\n        // {\r\n        //     name: 'Activar/Inactivar',\r\n        //     width: \"10%\",\r\n        //     cell: parametro =>\r\n        //         <div className='row'>\r\n        //             <div className='col'>\r\n        //                 {cargarCheckParametro(parametro)}\r\n        //             </div>\r\n        //         </div>\r\n        // }\r\n    ];\r\n\r\n    // Metodo encargado de cargar los parametros generales de la plantilla de la BD\r\n    const cargarTablaParametrosCaratula = () => {\r\n\r\n        // Se inicializa el array\r\n        var array = [];\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('parametro_campos_caratula').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se recorre el array para insertar los valores necesarios\r\n                    for (let index = 0; index < datos.data.length; index++) {\r\n\r\n                        // Se captura los datos por posicion\r\n                        const element = datos.data[index].attributes;\r\n                        const title = element.nombre_campo;\r\n                        const estado = element.estado == \"1\" ? true : false;\r\n                        const type = element.type;\r\n                        const value = validarValueParametros(type, estado);\r\n\r\n                        // Se añade el dato al array general\r\n                        array.push({ title: title, value: value, type: type, check: estado });\r\n                    }\r\n\r\n                    // Se setea la respuesta en la constante\r\n                    setListaParametrosBaseDatos(array);\r\n\r\n                    // Se generan la lista de parametros del documento\r\n                    cargarParametros(array);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de retorna el valor por el elemento\r\n    const validarValueParametros = (element, estado) => {\r\n\r\n        // Se inicializa la variable\r\n        let valor;\r\n\r\n        // Se valida por el elemento\r\n        if (element == \"Sinproc\" && estado) {\r\n            valor = radicado;\r\n        } else if (element == \"Usuario\" && estado) {\r\n            valor = registradoPor;\r\n        } else if (element == \"Dependencia\" && estado) {\r\n            valor = dependencia;\r\n        } else if (element == \"Vigencia\" && estado) {\r\n            valor = vigencia;\r\n        } else if (element == \"Fecha Registro\" && estado) {\r\n            valor = fechaRegistro;\r\n        } else if (element == \"Fecha Ingreso\" && estado) {\r\n            valor = fechaIngreso;\r\n        } else if (element == \"Generado\" && estado) {\r\n            valor = generadoPor;\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return valor;\r\n    }\r\n\r\n    // Metodo encargado de cargar la lista de parametros de la plantilla\r\n    const cargarParametros = (listaParametrosBaseDatos) => {\r\n\r\n        // Se setea el array en null\r\n        setListaParametros(null);\r\n\r\n        // Se inicializa la data\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'caratulas',\r\n                \"attributes\": {\r\n                    \"id\": caratulaId\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se inicializa la API que carga la lisata de parametros de la plantilla\r\n        GenericApi.getByDataGeneric('caratulas/parametros-plantilla/' + caratulaId, data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea la lista\r\n                    setListaParametros(datos);\r\n\r\n                    // Se recorre el array de datos\r\n                    var parametrosCampos = datos.params.map((item, i) => {\r\n\r\n                        // Se ejecuta una busqueda del elemento\r\n                        var indexCampo = listaParametrosBaseDatos.findIndex(\r\n                            x =>\r\n                                x.title == item);\r\n\r\n                        if (indexCampo >= 0) {\r\n                            return { parametro: item, id_campo: indexCampo, valor: \"\" };\r\n                        } else {\r\n                            return { parametro: item, id_campo: \"\", valor: \"\" };\r\n                        }\r\n                    });\r\n\r\n                    setListaCamposPorParametroTemporal({ data: parametrosCampos });\r\n\r\n                    // Se cargan los antecedentes, interesados y entidades del investigado\r\n                    cargarEntidadesInvestigado();\r\n                    cargarAntecedentes();\r\n                    cargarInteresados();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarAntecedentes = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'antecedente',\r\n                \"attributes\": {\r\n                    \"antecedentes\": \"antecedentes\",\r\n                    \"descripcion\": \"descripcion\",\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"fecha_registro\": Date.now(),\r\n                    \"id_dependencia\": -1,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n        GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n\r\n                    setAntecedentesLista(parametrosCampos);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarInteresados = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"interesado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"tipo_documento\": \"1\",\r\n                    \"numero_documento\": \"1\",\r\n                    \"primer_nombre\": \"1\",\r\n                    \"segundo_nombre\": \"1\",\r\n                    \"primer_apellido\": \"1\",\r\n                    \"segundo_apellido\": \"1\",\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setInteresadosLista(parametrosCampos);\r\n                } else {\r\n                    setModalState({ title: \"Datos del interesado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarEntidadesInvestigado = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"entidad_investigado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": \"1\",\r\n                    \"requiere_registro\": true,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n\r\n                        var nombreInvestigado = item.attributes.nombre_investigado;\r\n                        var cargoInvestigado = item.attributes.cargo;\r\n                        var entidadInvestigado = item.attributes.nombre_entidad;\r\n\r\n                        if (nombreInvestigado == null) {\r\n                            item.attributes.nombre_investigado = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (cargoInvestigado == null) {\r\n                            item.attributes.cargo = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (entidadInvestigado == null) {\r\n                            item.attributes.nombre_entidad = \"NO_APLICA\";\r\n                        }\r\n\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setEntidadesInvestigadoLista(parametrosCampos);\r\n                    setCargosInvestigadoLista(parametrosCampos);\r\n                    setEntidadInvestigadoLista(parametrosCampos);\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Entidades del investigado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const descargarArchivo = () => {\r\n        try {\r\n            window.showSpinner(true);\r\n\r\n            var params = getListaCamposPorParametroTemporal.data.map(item => {\r\n                return {\r\n                    \"param\": item.parametro,\r\n                    \"value\": item.valor\r\n                };\r\n            });\r\n            // console.log(\"######params#####\");\r\n            // console.log(params);\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"caratulas\",\r\n                    \"attributes\": {\r\n                        \"params\": params,\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.getByDataGeneric('caratulas/plantilla-diligenciada/' + caratulaId, data).then(\r\n                datos => {\r\n                    window.showSpinner(false);\r\n                    if (!datos.error) {\r\n                        downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"pdf\");\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: \", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    function downloadBase64File(contentType, base64Data, fileName) {\r\n        const linkSource = `data:${contentType};base64,${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <ModalGen data={modalState} />\r\n            {getListaParametros != null ?\r\n                <>\r\n                    <div className='col-md-12'>\r\n                        <label>Parametros de la plantilla</label>\r\n                    </div>\r\n                    <div className='col-md-12 mt-2 mb-2'>\r\n                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                            columns={columns}\r\n                            data={getListaParametros.params}\r\n                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                            striped\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='col-md-12 mt-4 mb-2 text-center'>\r\n                        <button type=\"button\" onClick={() => descargarArchivo()} className=\"btn btn-rounded btn-primary\" title='Descargar'><i className=\"fas fa-file-pdf\"></i> Descargar carátula</button>\r\n                    </div>\r\n                </>\r\n                :\r\n                <div className='col-md-12'>\r\n                    <label>Cargando parametros de la plantilla...</label>\r\n                </div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CaratulasParametrosPlantillaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}