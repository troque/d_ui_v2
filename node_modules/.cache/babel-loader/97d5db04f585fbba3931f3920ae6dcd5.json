{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Transacciones\\\\EnviaraAlguienDeMiDependencia.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useLocation } from 'react-router-dom';\nimport Spinner from '../../Utils/Spinner';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { getUser } from '../../Utils/Common';\nimport ClasificacionRadicadoApi from '../../Api/Services/ClasificacionRadicadoApi';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EnviaraAlguienDeMiDependencia() {\n  _s();\n  const [getUsuarioSleccionado, setUsuarioSleccionado] = useState(\"\");\n  const [getListaUusariosDependencia, setListaUusariosDependencia] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\n  const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\n  const [getUsuarioName, setUsuarioName] = useState(\"\");\n  const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getNombreProceso, setNombreProceso] = useState('');\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n\n  // Constante de modal general\n  const getMensajeTituloModal = from.nombreProcesoTransacciones && from.nombreProcesoTransacciones.length > 0 ? from.nombreProcesoTransacciones : \"\";\n\n  /**\r\n   * Funcion principal\r\n   */\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      nombreProceso();\n    }\n    fetchData();\n  }, []);\n  const nombreProceso = () => {\n    GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setNombreProceso(datos.data.attributes.nombre);\n        obtenerParametros();\n        cargarUsuariosDependencia();\n      }\n    });\n  };\n\n  // Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisión-\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n  const enviarDatos = valores => {\n    // Se captura el id de la dependencia del usuario\n    const iduserdependencia = getUser().id_dependencia;\n\n    // Se inicializa el cargando\n    window.showSpinner(true);\n\n    // Se inicializa la variable de respuesta\n    let data;\n\n    // Se redeclara los datos\n    data = {\n      \"data\": {\n        \"type\": \"transacciones\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_dependencia_origen\": iduserdependencia,\n          \"usuario_a_remitir\": getUsuarioSleccionado,\n          \"descripcion_a_remitir\": valores.informacion,\n          \"id_etapa\": 3\n        }\n      }\n    };\n\n    // Se consume la API\n    GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      /// Se valida que no haya error\n      if (!datos.error) {\n        // Se quita el cargando\n        window.showSpinner(false);\n\n        // Constante del mensaje de la modal\n        const mensajeModal = 'El proceso con radicado: ' + from.radicado + ' fue asignado al usuario: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ')  de la dependencia: ' + getUsuarioDependenciaNombre + '';\n\n        // Se setea el modal\n        setModalState({\n          title: getMensajeTituloModal.toUpperCase(),\n          message: mensajeModal.toUpperCase(),\n          show: true,\n          redirect: '/MisPendientes',\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        // Se setea el modal\n        setModalState({\n          title: getMensajeTituloModal.toUpperCase(),\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/AntecedentesLista',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n  const handleInputChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    if (name == \"usuario\") {\n      setUsuarioSleccionado(value);\n      datosDelUsuarioARemitir(value);\n    }\n  };\n  const datosDelUsuarioARemitir = name => {\n    GenericApi.getGeneric('usuario/get-usuario-por-name/' + name).then(datos => {\n      if (!datos.error) {\n        // console.log(datos);\n        setUsuarioNombre(datos.data[0].attributes.nombre);\n        setUsuarioApellido(datos.data[0].attributes.apellido);\n        setUsuarioName(datos.data[0].attributes.name);\n        setUsuarioDependenciaNombre(datos.data[0].attributes.dependencia.nombre);\n      }\n    });\n  };\n\n  // Obtenemos la lista de usuarios de la misma dependencia\n  const listaUsuariosPorDependencia = () => {\n    return getListaUusariosDependencia.data.map((usuario, i) => {\n      if (getUser().nombre != usuario.attributes.name) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: usuario.attributes.name,\n          children: [usuario.attributes.nombre, \" \", usuario.attributes.name]\n        }, usuario.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this);\n      }\n    });\n  };\n\n  // consultamos la cantidad maxima de caracteres para el textarea\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      };\n\n      //buscamos el parametro\n      GenericApi.getByDataGeneric('parametro/parametro-nombre', data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          window.showModal(1);\n        }\n      });\n    } catch (error) {\n      // console.log(error);\n    }\n  };\n  const cargarUsuariosDependencia = () => {\n    // Se captura el id de la dependencia del usuario\n    const iduserdependencia = getUser().id_dependencia;\n\n    // Se consume la API\n    GenericApi.getAllGeneric(\"usuario/get-todos-usuarios-dependencia-actuaciones/\" + iduserdependencia + \"/\" + procesoDisciplinarioId).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se quita el cargando\n      window.showSpinner(false);\n\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Constante de mensaje\n        const mensajeGeneralModal = \"No hay usuarios con permisos en la dependencia para asignar el proceso\";\n\n        // Se setea la lista de usuarios\n        setListaUusariosDependencia(datos);\n\n        // Se valida que haya informacion o si solo está el usuario actual muestra alerta \n        if (datos.data.length == 0 || datos.data.length == 1 && getUser().nombre == datos.data[0].attributes.name) {\n          // Se setea el modal\n          setModalState({\n            title: getMensajeTituloModal.toUpperCase(),\n            message: mensajeGeneralModal.toUpperCase(),\n            show: true,\n            redirect: '/Transacciones',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      } else {\n        // Se setea el modal\n        setModalState({\n          title: getMensajeTituloModal.toUpperCase(),\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/Transacciones',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        informacion: '',\n        usuario: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        setCountTextArea(valores.informacion.length);\n        let errores = {};\n        if (getUsuarioSleccionado == undefined || getUsuarioSleccionado == \"\") errores.usuario = 'Debe seleccionar un usuario';\n        if (!valores.informacion) {\n          errores.informacion = 'Debe ingresar un valor';\n        } else if (valores.informacion.length <= getMinimoTextArea) {\n          errores.informacion = 'La descripción debe tener almenos ' + getMinimoTextArea + ' caracteres';\n        }\n        if (valores.informacion) {\n          if (containsSpecialChars(valores.informacion)) errores.informacion = 'Tiene caracteres inválidos';\n        }\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        enviarDatos(valores);\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w2d_block let\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"breadcrumb\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"breadcrumb breadcrumb-alt push\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/MisPendientes`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Mis Pendientes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 138\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/RamasProceso/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Ramas del proceso\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 161\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"Enviar a alguien de mi dependencia\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-themed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: [getNombreProceso.toUpperCase(), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" :: ENVIAR A ALGUIEN DE MI DEPENDENCIA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 94\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"dependenciaDestino\",\n                      children: [\"SELECCIONE EL USUARIO AL QUE SE ENVIAR\\xC1 EL PROCESO PARA SU GESTI\\xD3N \", getUsuarioSleccionado.toUpperCase(), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 186\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      value: getUsuarioSleccionado,\n                      onChange: handleInputChange,\n                      as: \"select\",\n                      className: \"form-control\",\n                      id: \"usuario\",\n                      name: \"usuario\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"POR FAVOR SELECCIONE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 290,\n                        columnNumber: 49\n                      }, this), listaUsuariosPorDependencia()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"usuario\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.usuario\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 92\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"informacion\",\n                      children: [\"OBSERVACIONES \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 299,\n                        columnNumber: 88\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      as: \"textarea\",\n                      className: \"form-control\",\n                      id: \"informacion\",\n                      name: \"informacion\",\n                      rows: \"6\",\n                      placeholder: \"Informaci\\xF3n para su remisi\\xF3n....\",\n                      maxLength: getMaximoTextArea,\n                      minLength: getMinimoTextArea\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-right\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-primary\",\n                        children: [countTextArea, \" / \", getMaximoTextArea]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 303,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"informacion\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.informacion\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 96\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-rounded btn-primary\",\n                  children: \"ENVIAR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: '/Transacciones',\n                  state: {\n                    from: from\n                  },\n                  className: \"font-size-h5 font-w600\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-rounded btn-outline-primary\",\n                    children: \"CANCELAR\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EnviaraAlguienDeMiDependencia, \"5QDgcjLqCUrnI7uMDtJges8gClI=\", false, function () {\n  return [useLocation];\n});\n_c = EnviaraAlguienDeMiDependencia;\nexport default EnviaraAlguienDeMiDependencia;\nvar _c;\n$RefreshReg$(_c, \"EnviaraAlguienDeMiDependencia\");","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","useLocation","Spinner","GenericApi","getUser","ClasificacionRadicadoApi","ModalGen","Link","EnviaraAlguienDeMiDependencia","getUsuarioSleccionado","setUsuarioSleccionado","getListaUusariosDependencia","setListaUusariosDependencia","data","links","meta","getUsuarioNombre","setUsuarioNombre","getUsuarioApellido","setUsuarioApellido","getUsuarioName","setUsuarioName","getUsuarioDependenciaNombre","setUsuarioDependenciaNombre","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","getModalState","setModalState","title","message","show","getNombreProceso","setNombreProceso","location","from","state","procesoDisciplinarioId","getMensajeTituloModal","nombreProcesoTransacciones","length","fetchData","window","showSpinner","nombreProceso","getByIdGeneric","then","datos","error","attributes","nombre","obtenerParametros","cargarUsuariosDependencia","containsSpecialChars","str","result","global","Constants","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","enviarDatos","valores","iduserdependencia","id_dependencia","informacion","addGeneric","mensajeModal","radicado","toUpperCase","redirect","alert","TIPO_ALERTA","EXITO","toString","ERROR","handleInputChange","event","target","value","type","checked","name","datosDelUsuarioARemitir","getGeneric","apellido","dependencia","listaUsuariosPorDependencia","map","usuario","i","id","getByDataGeneric","filter","filteredName","showModal","getAllGeneric","mensajeGeneralModal","errores","undefined","resetForm","errors"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Transacciones/EnviaraAlguienDeMiDependencia.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport { getUser } from '../../Utils/Common';\r\nimport ClasificacionRadicadoApi from '../../Api/Services/ClasificacionRadicadoApi';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction EnviaraAlguienDeMiDependencia() {\r\n\r\n    const [getUsuarioSleccionado, setUsuarioSleccionado] = useState(\"\");\r\n    const [getListaUusariosDependencia, setListaUusariosDependencia] = useState({ data: [], links: [], meta: [] });\r\n    const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\r\n    const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\r\n    const [getUsuarioName, setUsuarioName] = useState(\"\");\r\n    const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n    // Constante de modal general\r\n    const getMensajeTituloModal = from.nombreProcesoTransacciones && from.nombreProcesoTransacciones.length > 0 ? from.nombreProcesoTransacciones : \"\";\r\n\r\n    /**\r\n     * Funcion principal\r\n     */\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            nombreProceso();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const nombreProceso = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                    obtenerParametros();\r\n                    cargarUsuariosDependencia();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    // Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisión-\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    const enviarDatos = (valores) => {\r\n\r\n        // Se captura el id de la dependencia del usuario\r\n        const iduserdependencia = getUser().id_dependencia;\r\n\r\n        // Se inicializa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa la variable de respuesta\r\n        let data;\r\n\r\n        // Se redeclara los datos\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"transacciones\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_dependencia_origen\": iduserdependencia,\r\n                    \"usuario_a_remitir\": getUsuarioSleccionado,\r\n                    \"descripcion_a_remitir\": valores.informacion,\r\n                    \"id_etapa\": 3\r\n                }\r\n            }\r\n        };\r\n\r\n        // Se consume la API\r\n        GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                /// Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n\r\n                    // Constante del mensaje de la modal\r\n                    const mensajeModal = 'El proceso con radicado: ' + from.radicado + ' fue asignado al usuario: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ')  de la dependencia: ' + getUsuarioDependenciaNombre + '';\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: getMensajeTituloModal.toUpperCase(), message: mensajeModal.toUpperCase(), show: true, redirect: '/MisPendientes', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: getMensajeTituloModal.toUpperCase(), message: datos.error.toString(), show: true, redirect: '/AntecedentesLista', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        if (name == \"usuario\") {\r\n            setUsuarioSleccionado(value);\r\n            datosDelUsuarioARemitir(value)\r\n        }\r\n    }\r\n\r\n    const datosDelUsuarioARemitir = (name) => {\r\n        GenericApi.getGeneric('usuario/get-usuario-por-name/' + name).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    // console.log(datos);\r\n                    setUsuarioNombre(datos.data[0].attributes.nombre);\r\n                    setUsuarioApellido(datos.data[0].attributes.apellido);\r\n                    setUsuarioName(datos.data[0].attributes.name);\r\n                    setUsuarioDependenciaNombre(datos.data[0].attributes.dependencia.nombre);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Obtenemos la lista de usuarios de la misma dependencia\r\n    const listaUsuariosPorDependencia = () => {\r\n        return (\r\n            getListaUusariosDependencia.data.map((usuario, i) => {\r\n                if (getUser().nombre != usuario.attributes.name) {\r\n                    return (\r\n                        <option key={usuario.id} value={usuario.attributes.name}>{usuario.attributes.nombre} {usuario.attributes.name}</option>\r\n                    )\r\n                }\r\n\r\n            })\r\n        )\r\n    }\r\n\r\n    // consultamos la cantidad maxima de caracteres para el textarea\r\n    const obtenerParametros = () => {\r\n        try {\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric('parametro/parametro-nombre', data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (datos[\"data\"].length > 0) {\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                        }\r\n                    } else {\r\n                        window.showModal(1);\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    const cargarUsuariosDependencia = () => {\r\n\r\n        // Se captura el id de la dependencia del usuario\r\n        const iduserdependencia = getUser().id_dependencia;\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric(\"usuario/get-todos-usuarios-dependencia-actuaciones/\" + iduserdependencia + \"/\" + procesoDisciplinarioId).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Constante de mensaje\r\n                    const mensajeGeneralModal = \"No hay usuarios con permisos en la dependencia para asignar el proceso\";\r\n\r\n                    // Se setea la lista de usuarios\r\n                    setListaUusariosDependencia(datos);\r\n\r\n                    // Se valida que haya informacion o si solo está el usuario actual muestra alerta \r\n                    if (datos.data.length == 0 || (datos.data.length == 1 && getUser().nombre == datos.data[0].attributes.name)) {\r\n\r\n                        // Se setea el modal\r\n                        setModalState({ title: getMensajeTituloModal.toUpperCase(), message: mensajeGeneralModal.toUpperCase(), show: true, redirect: '/Transacciones', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                } else {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({ title: getMensajeTituloModal.toUpperCase(), message: datos.error.toString(), show: true, redirect: '/Transacciones', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    informacion: '',\r\n                    usuario: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    setCountTextArea(valores.informacion.length)\r\n                    let errores = {}\r\n                    if (getUsuarioSleccionado == undefined || getUsuarioSleccionado == \"\")\r\n                        errores.usuario = 'Debe seleccionar un usuario'\r\n\r\n                    if (!valores.informacion) {\r\n                        errores.informacion = 'Debe ingresar un valor'\r\n                    }\r\n                    else if (valores.informacion.length <= getMinimoTextArea) {\r\n                        errores.informacion = 'La descripción debe tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                    }\r\n                    if (valores.informacion) {\r\n                        if (containsSpecialChars(valores.informacion))\r\n                            errores.informacion = 'Tiene caracteres inválidos'\r\n                    }\r\n\r\n                    return errores\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"w2d_block let\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <small>Enviar a alguien de mi dependencia</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">{getNombreProceso.toUpperCase()} <strong> :: ENVIAR A ALGUIEN DE MI DEPENDENCIA</strong></h3>\r\n                            </div>\r\n                            <div className=\"block-content\">\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"dependenciaDestino\">SELECCIONE EL USUARIO AL QUE SE ENVIARÁ EL PROCESO PARA SU GESTIÓN {getUsuarioSleccionado.toUpperCase()} <span className=\"text-danger\">*</span></label>\r\n                                            <Field value={getUsuarioSleccionado} onChange={handleInputChange} as=\"select\" className=\"form-control\" id=\"usuario\" name=\"usuario\">\r\n                                                <option value=\"\">POR FAVOR SELECCIONE</option>\r\n                                                {listaUsuariosPorDependencia()}\r\n                                            </Field>\r\n                                            <ErrorMessage name=\"usuario\" component={() => (<span className=\"text-danger\">{errors.usuario}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"informacion\">OBSERVACIONES <span className=\"text-danger\">*</span></label>\r\n                                            <Field as=\"textarea\" className=\"form-control\" id=\"informacion\" name=\"informacion\" rows=\"6\" placeholder=\"Información para su remisión....\"\r\n                                                maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                            <div className=\"text-right\">\r\n                                                <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                            </div>\r\n                                            <ErrorMessage name=\"informacion\" component={() => (<span className=\"text-danger\">{errors.informacion}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">ENVIAR</button>\r\n                                    <Link to={'/Transacciones'} state={{ from: from }} className=\"font-size-h5 font-w600\" >\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\" >CANCELAR</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EnviaraAlguienDeMiDependencia;"],"mappings":"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"},"metadata":{},"sourceType":"module"}