{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Utils\\\\Modals\\\\ModalAceptarActualizar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport '../../Utils/Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ModalAceptarActualizar(props) {\n  _s();\n  // Se setea la constante\n  const [show, setShow] = useState(props.data.show);\n\n  // Metodo encargado de cerrar el modal y recargar la pagina\n  const handleClose = () => {\n    // Se actualiza la pestaña\n    window.location.reload();\n\n    // Se cierra el modal\n    setShow(false);\n  };\n\n  // Se cargan los elementos\n  useEffect(() => {\n    // Se setea el elemento de ver modal en true\n    setShow(props.data.show);\n  }, [props.data.show]);\n\n  // Metodo encargado de mostrar las alertas\n  const getAlerta = id_alerta => {\n    // Se valida cuando es tipo exito\n    if (id_alerta == global.Constants.TIPO_ALERTA.EXITO) {\n      return \"fas fa-check-circle fa-3x txt-green\";\n    } else if (id_alerta == global.Constants.TIPO_ALERTA.ERROR) {\n      return \"fas fa-exclamation-circle fa-3x txt-red\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      style: {\n        paddingBottom: '0px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block block-themed block-transparent mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          className: \"block-header bg-primary-dark\",\n          children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n            className: \"block-title\",\n            children: [\" \", props.data.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"btn-block-option\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-fw fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-2\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: getAlerta(props.data.alert)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-10\",\n              children: props.data.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          style: {\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-rounded btn-primary\",\n            variant: \"primary\",\n            onClick: handleClose,\n            children: \"Aceptar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ModalAceptarActualizar, \"dOQ4uJmXt9rdbVxBzz+1e3PAx2E=\");\n_c = ModalAceptarActualizar;\nexport default ModalAceptarActualizar;\nvar _c;\n$RefreshReg$(_c, \"ModalAceptarActualizar\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Modal","Button","ModalAceptarActualizar","props","show","setShow","data","handleClose","window","location","reload","getAlerta","id_alerta","global","Constants","TIPO_ALERTA","EXITO","ERROR","paddingBottom","title","alert","message","display","justifyContent"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Utils/Modals/ModalAceptarActualizar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../Utils/Constants';\r\n\r\nfunction ModalAceptarActualizar(props) {\r\n\r\n    // Se setea la constante\r\n    const [show, setShow] = useState(props.data.show);\r\n\r\n    // Metodo encargado de cerrar el modal y recargar la pagina\r\n    const handleClose = () => {\r\n\r\n        // Se actualiza la pestaña\r\n        window.location.reload();\r\n\r\n        // Se cierra el modal\r\n        setShow(false);\r\n    };\r\n\r\n    // Se cargan los elementos\r\n    useEffect(() => {\r\n\r\n        // Se setea el elemento de ver modal en true\r\n        setShow(props.data.show);\r\n    }, [props.data.show])\r\n\r\n\r\n    // Metodo encargado de mostrar las alertas\r\n    const getAlerta = (id_alerta) => {\r\n\r\n        // Se valida cuando es tipo exito\r\n        if (id_alerta == global.Constants.TIPO_ALERTA.EXITO) {\r\n            return \"fas fa-check-circle fa-3x txt-green\";\r\n        } else if (id_alerta == global.Constants.TIPO_ALERTA.ERROR) {\r\n            return \"fas fa-exclamation-circle fa-3x txt-red\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} style={{ paddingBottom: '0px' }}>\r\n                <div className=\"block block-themed block-transparent mb-0\">\r\n                    <Modal.Header className=\"block-header bg-primary-dark\">\r\n                        <Modal.Title className='block-title'> {props.data.title}</Modal.Title>\r\n                        <Button variant=\"primary\" className='btn-block-option'>\r\n                            <i className=\"fa fa-fw fa-times\"></i>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className='row'>\r\n                            <div className='col-2'><i className={getAlerta(props.data.alert)}></i></div>\r\n                            <div className='col-10'>{props.data.message}</div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <Button className='btn btn-rounded btn-primary' variant=\"primary\" onClick={handleClose}>\r\n                            Aceptar\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalAceptarActualizar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAO,uBAAuB;AAAC;AAAA;AAE/B,SAASC,sBAAsB,CAACC,KAAK,EAAE;EAAA;EAEnC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAACM,KAAK,CAACG,IAAI,CAACF,IAAI,CAAC;;EAEjD;EACA,MAAMG,WAAW,GAAG,MAAM;IAEtB;IACAC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;;IAExB;IACAL,OAAO,CAAC,KAAK,CAAC;EAClB,CAAC;;EAED;EACAP,SAAS,CAAC,MAAM;IAEZ;IACAO,OAAO,CAACF,KAAK,CAACG,IAAI,CAACF,IAAI,CAAC;EAC5B,CAAC,EAAE,CAACD,KAAK,CAACG,IAAI,CAACF,IAAI,CAAC,CAAC;;EAGrB;EACA,MAAMO,SAAS,GAAIC,SAAS,IAAK;IAE7B;IACA,IAAIA,SAAS,IAAIC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACC,KAAK,EAAE;MACjD,OAAO,qCAAqC;IAChD,CAAC,MAAM,IAAIJ,SAAS,IAAIC,MAAM,CAACC,SAAS,CAACC,WAAW,CAACE,KAAK,EAAE;MACxD,OAAO,yCAAyC;IACpD;EACJ,CAAC;EAED,oBACI;IAAA,uBACI,QAAC,KAAK;MAAC,IAAI,EAAEb,IAAK;MAAC,KAAK,EAAE;QAAEc,aAAa,EAAE;MAAM,CAAE;MAAA,uBAC/C;QAAK,SAAS,EAAC,2CAA2C;QAAA,wBACtD,QAAC,KAAK,CAAC,MAAM;UAAC,SAAS,EAAC,8BAA8B;UAAA,wBAClD,QAAC,KAAK,CAAC,KAAK;YAAC,SAAS,EAAC,aAAa;YAAA,gBAAGf,KAAK,CAACG,IAAI,CAACa,KAAK;UAAA;YAAA;YAAA;YAAA;UAAA,QAAe,eACtE,QAAC,MAAM;YAAC,OAAO,EAAC,SAAS;YAAC,SAAS,EAAC,kBAAkB;YAAA,uBAClD;cAAG,SAAS,EAAC;YAAmB;cAAA;cAAA;cAAA;YAAA;UAAK;YAAA;YAAA;YAAA;UAAA,QAChC;QAAA;UAAA;UAAA;UAAA;QAAA,QACE,eACf,QAAC,KAAK,CAAC,IAAI;UAAA,uBACP;YAAK,SAAS,EAAC,KAAK;YAAA,wBAChB;cAAK,SAAS,EAAC,OAAO;cAAA,uBAAC;gBAAG,SAAS,EAAER,SAAS,CAACR,KAAK,CAACG,IAAI,CAACc,KAAK;cAAE;gBAAA;gBAAA;gBAAA;cAAA;YAAK;cAAA;cAAA;cAAA;YAAA,QAAM,eAC5E;cAAK,SAAS,EAAC,QAAQ;cAAA,UAAEjB,KAAK,CAACG,IAAI,CAACe;YAAO;cAAA;cAAA;cAAA;YAAA,QAAO;UAAA;YAAA;YAAA;YAAA;UAAA;QAChD;UAAA;UAAA;UAAA;QAAA,QACG,eACb,QAAC,KAAK,CAAC,MAAM;UAAC,KAAK,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE;UAAS,CAAE;UAAA,uBAC/D,QAAC,MAAM;YAAC,SAAS,EAAC,6BAA6B;YAAC,OAAO,EAAC,SAAS;YAAC,OAAO,EAAEhB,WAAY;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAE9E;UAAA;UAAA;UAAA;QAAA,QACE;MAAA;QAAA;QAAA;QAAA;MAAA;IACb;MAAA;MAAA;MAAA;IAAA;EACF,iBACT;AAEX;AAAC,GA3DQL,sBAAsB;AAAA,KAAtBA,sBAAsB;AA6D/B,eAAeA,sBAAsB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}