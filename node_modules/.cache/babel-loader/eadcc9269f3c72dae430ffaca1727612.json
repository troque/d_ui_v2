{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Maestras\\\\DiasNoLaborablesLista.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport ModalCalendar from '../Utils/Modals/ModalCalendar';\nimport Calendar from 'react-calendar';\nimport ParametrosMasApi from \"./../Api/Services/ParametrosMasApi\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport es from \"date-fns/locale/es\"; // the locale you want\nimport Spinner from '../Utils/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nregisterLocale(\"es\", es); // register it with the name you want\n\nfunction DiasNoLaborablesLista() {\n  _s();\n  const [getFecha, setFecha] = useState();\n  const [getId, setId] = useState();\n  const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState(['']);\n  const [startDate, setStartDate] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      setStartDate(new Date());\n      cargarDias();\n    }\n    fetchData();\n  }, []);\n  const cargarDias = () => {\n    window.showSpinner(true);\n    setResultDiasNoLaborales([]);\n    ParametrosMasApi.getAllDiasNoLaborales().then(datos => {\n      if (!datos.error) {\n        var data = [];\n        for (var i in datos.data) {\n          var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\n          var id = datos.data[i][\"id\"];\n          var result = new Date(date);\n          result.setDate(result.getDate() + 1);\n          data.push(i, id + \"|\" + date);\n        }\n        window.showSpinner(false);\n        setResultDiasNoLaborales(data);\n      } else {\n        window.showSpinner(false);\n        window.showModal(1);\n      }\n    });\n  };\n  const shwModalPipe = (value, estado) => {\n    setId(value[0].split(\"|\")[0]);\n    setFecha(value[0].split(\"|\")[1]);\n    setEstado(estado);\n    window.showModalCalendar(value);\n  };\n  const shwModalCreate = (value, estado) => {\n    setFecha(value);\n    setEstado(estado);\n    window.showModalCalendar(value);\n  };\n  const handleCallback = fecha => {\n    try {\n      // console.log(fecha);\n      setStartDate(fecha);\n      cargarDias();\n    } catch (error) {}\n  };\n  const [getEstado, setEstado] = useState(null);\n  const renderDayContents = (day, date) => {\n    const fecha = resultDiasNoLaborales.filter(fecha => fecha.split(\"|\")[1] == moment(date).format(\"YYYY-MM-DD\"));\n    if (fecha.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => shwModalPipe(fecha, '1'),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"p-2 mb-1 bg-danger text-white\",\n          children: date.getDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => shwModalCreate(date, '0'),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: date.getDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalCalendar, {\n      getFecha: getFecha,\n      getEstado: getEstado,\n      getId: getId,\n      parentCallback: handleCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block block-themed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"block-title\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ADMINISTRACI\\xD3N :: CONFIGURACI\\xD3N DE D\\xCDAS NNO H\\xC1BILES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"alert alert-primary\",\n              role: \"alert\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"mb-0\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Nota: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"1.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 49\n                }, this), \" El nombre del par\\xE1metro debe ser igual al establecido en el documento de word.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"2.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 49\n                }, this), \" El nombre del par\\xE1metro no debe ser ingresado con los car\\xE1cteres especiales.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                selected: startDate,\n                inline: true,\n                monthsShown: 3,\n                locale: \"es\",\n                renderDayContents: renderDayContents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  /*const [diasNoLaborablesLista, setDiasNoLaborablesLista] = useState({data: [] });\r\n          const [diasNoLaborablesListaTotal, setDiasNoLaborablesListaTotal] = useState({data: [], links: [], meta: [] });\r\n    useEffect(() => {\r\n              async function fetchData() {\r\n                  cargarDias();\r\n              }\r\n      fetchData();\r\n  }, []);\r\n    const cargarDias = () => {\r\n              window.showSpinner(true);\r\n          GenericApi.getAllGeneric('dias-no-laborales').then(\r\n          datos => {\r\n              if (!datos.error) {\r\n              setDiasNoLaborablesLista(datos);\r\n          setDiasNoLaborablesListaTotal(datos);\r\n          window.showSpinner(false);\r\n              }\r\n          else{\r\n              window.showModal();\r\n          window.showSpinner(false);\r\n              }\r\n                  \r\n          }\r\n          )\r\n  }\r\n      const cambiarEstado = (objeto, estado) => {\r\n        const data = {\r\n              \"data\": {\r\n              \"type\": \"mas_dependencia_origen\",\r\n          \"attributes\": {\r\n              \"fecha\": objeto.attributes.fecha,\r\n          \"estado\": estado,\r\n              }\r\n          }\r\n      }\r\n            GenericApi.updateGeneric('dias-no-laborales', objeto.id, data).then(\r\n          datos => {\r\n              if (!datos.error) {\r\n              cargarDias();\r\n              }\r\n          else\r\n          window.showModal();\r\n          }\r\n          )\r\n    }\r\n    const diasNoLaborables = () => {\r\n      return (\r\n          diasNoLaborablesLista.data.map((diaNoLaborable, i) => {\r\n              return (\r\n          <tr key={diaNoLaborable.id}>\r\n              <td>\r\n                  {moment(diaNoLaborable.attributes.fecha).format(\"DD/MM/YYYY\")}\r\n              </td>\r\n              <td>\r\n                  {diaNoLaborable.attributes.estado == \"1\" ? 'Activo' : 'Inactivo'}\r\n              </td>\r\n              <td>\r\n                  <Link to={`${diaNoLaborable.id}`}>\r\n                      <button type=\"button\" className=\"btn btn-primary btn-sm\" title='Editar'>\r\n                          <i className=\"fa fa-fw fa-edit\"></i>\r\n                      </button>\r\n                  </Link>\r\n                  {\r\n                      (diaNoLaborable.attributes.estado == 0) ? (\r\n                            <button type='button' title='Activar Antecedente' className='btn btn-sm btn-success' onClick={() => cambiarEstado(diaNoLaborable, 1)}><i className=\"fas fa-plus-circle\"></i></button>\r\n                        ) : null\r\n                  }\r\n                    {\r\n                      (diaNoLaborable.attributes.estado == 1) ? (\r\n                            <button type='button' title='Inactivar Día' className='btn btn-sm btn-danger' onClick={() => cambiarEstado(diaNoLaborable, 0)}><i className=\"fas fa-minus-circle\"></i></button>\r\n  \r\n                      ) : null\r\n                  }\r\n              </td>\r\n          </tr>\r\n          )\r\n          })\r\n          )\r\n  }\r\n    const handleSearch = (event) => {\r\n      try {\r\n          if ((event.target.value.trim().trim() == \"\") || (event.target.value.trim().length == 0)) {\r\n              setDiasNoLaborablesLista(diasNoLaborablesListaTotal);\r\n          }\r\n          else {\r\n              var filteredData = {\r\n              data: diasNoLaborablesListaTotal.data.filter(\r\n                      suggestion => ((suggestion.id\r\n          + suggestion.attributes.fecha\r\n          + (suggestion.attributes.estado == \"1\" ? 'Activo' : 'Inactivo')).toLowerCase().includes(event.target.value.toLowerCase()))\r\n          )\r\n              };\r\n          setDiasNoLaborablesLista(filteredData)\r\n          }\r\n      } catch (error) {\r\n              console.error(error);\r\n      }\r\n  };\r\n            return (\r\n          <div className=\"block block-rounded block-bordered\">\r\n              {<InfoErrorApi />}\r\n              {<Spinner />}\r\n                <div className=\"block block-themed\">\r\n                  <div className=\"col-md-12\">\r\n                      <div className=\"block-content\">\r\n                          <nav aria-label=\"breadcrumb\">\r\n                              <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                  <li class=\"breadcrumb-item\"> <small>Lista de días no laborables</small></li>\r\n                              </ol>\r\n                          </nav>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"block-header\">\r\n                      <h3 className=\"block-title\">Días no laborables registrados</h3>\r\n                      <Link to={`/DiasNoLaborables/Add`} >\r\n                          <button type=\"button\" className=\"btn btn-sm btn-dark mr-1 mb-3\"><i class=\"far fa-plus-square\"></i> Agregar día no laborable</button>\r\n                      </Link>\r\n                  </div>\r\n                  <div className=\"block-content\">\r\n                      <div className='row'>\r\n                          <div className='col-md-12'>\r\n                              <div className=\"form-group \">\r\n                                  <label htmlFor='search'>Buscar: </label>\r\n                                  <input type=\"text\" id=\"search\" name=\"search\" onChange={handleSearch} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} className=\"form-control border border-success\" placeholder=\"Buscar\" />\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                          <div className=\"col-sm-12\">\r\n                              <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                  <thead>\r\n                                      <tr>\r\n                                          <th>Dia No Laborable</th>\r\n                                          <th>Estado</th>\r\n                                          <th>Acciones</th>\r\n                                      </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                      {diasNoLaborables()}\r\n                                  </tbody>\r\n                              </table>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          )*/\n}\n_s(DiasNoLaborablesLista, \"EOMA77SXWqjL7RftBTZ4Vd1o0y4=\");\n_c = DiasNoLaborablesLista;\nexport default DiasNoLaborablesLista;\nvar _c;\n$RefreshReg$(_c, \"DiasNoLaborablesLista\");","map":{"version":3,"names":["React","useEffect","useState","moment","ModalCalendar","Calendar","ParametrosMasApi","DatePicker","registerLocale","es","Spinner","DiasNoLaborablesLista","getFecha","setFecha","getId","setId","resultDiasNoLaborales","setResultDiasNoLaborales","startDate","setStartDate","fetchData","Date","cargarDias","window","showSpinner","getAllDiasNoLaborales","then","datos","error","data","i","date","split","id","result","setDate","getDate","push","showModal","shwModalPipe","value","estado","setEstado","showModalCalendar","shwModalCreate","handleCallback","fecha","getEstado","renderDayContents","day","filter","format","length"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/DiasNoLaborablesLista.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport ModalCalendar from '../Utils/Modals/ModalCalendar';\r\nimport Calendar from 'react-calendar';\r\nimport ParametrosMasApi from \"./../Api/Services/ParametrosMasApi\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport es from \"date-fns/locale/es\"; // the locale you want\r\nimport Spinner from '../Utils/Spinner';\r\nregisterLocale(\"es\", es); // register it with the name you want\r\n\r\n\r\nfunction DiasNoLaborablesLista() {\r\n    const [getFecha, setFecha] = useState();\r\n    const [getId, setId] = useState();\r\n    const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState(['']);\r\n    const [startDate, setStartDate] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setStartDate(new Date());\r\n            cargarDias();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const cargarDias = () => {\r\n        window.showSpinner(true);\r\n        setResultDiasNoLaborales([]);\r\n            ParametrosMasApi.getAllDiasNoLaborales().then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        var data = [];\r\n                        for (var i in datos.data) {\r\n                            var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\r\n                            var id = datos.data[i][\"id\"];\r\n                            var result = new Date(date);\r\n                            result.setDate(result.getDate() + 1);\r\n                            data.push(i, id+\"|\"+date);\r\n                        }\r\n                        window.showSpinner(false);\r\n                        setResultDiasNoLaborales(data);\r\n                    } else {\r\n                        window.showSpinner(false);\r\n                        window.showModal(1);\r\n                    }\r\n\r\n                }\r\n\r\n            )\r\n    }\r\n\r\n    const shwModalPipe = (value, estado) => {\r\n      \r\n        setId(value[0].split(\"|\")[0]);\r\n        setFecha(value[0].split(\"|\")[1]);\r\n        setEstado(estado);\r\n        window.showModalCalendar(value);\r\n    }\r\n\r\n    const shwModalCreate = (value, estado) => {\r\n\r\n\r\n        setFecha(value);\r\n        setEstado(estado);\r\n        window.showModalCalendar(value);\r\n    }\r\n\r\n\r\n    const handleCallback = (fecha) => {\r\n        try {\r\n            // console.log(fecha);\r\n            setStartDate(fecha);\r\n            cargarDias();\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const [getEstado, setEstado] = useState(null);\r\n\r\n\r\n    const renderDayContents = (day, date) => {\r\n        const fecha = resultDiasNoLaborales.filter(fecha => fecha.split(\"|\")[1] == moment(date).format(\"YYYY-MM-DD\"));\r\n        if (fecha.length > 0) {\r\n            return <div onClick={() => shwModalPipe(fecha, '1')}>\r\n                <span  className='p-2 mb-1 bg-danger text-white'>{date.getDate()}</span>\r\n            </div>;\r\n        }\r\n        return <div onClick={() => shwModalCreate(date, '0')}>\r\n            <span >{date.getDate()}</span>\r\n        </div>\r\n    };\r\n    return (\r\n        <>\r\n            {<ModalCalendar getFecha={getFecha} getEstado = {getEstado} getId={getId} parentCallback={handleCallback}/>}\r\n            {<Spinner/>}\r\n            <div className=\"block block-themed\">\r\n                <div className=\"block-header\">\r\n                    <h3 className=\"block-title\"><strong>ADMINISTRACIÓN :: CONFIGURACIÓN DE DÍAS NNO HÁBILES</strong></h3>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"block-content\">\r\n\r\n                <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div class=\"alert alert-primary\" role=\"alert\">\r\n                                <p class=\"mb-0\"><strong>Nota: </strong></p>\r\n                                <p class=\"mb-0\"><strong>1.</strong> El nombre del parámetro debe ser igual al establecido en el documento de word.</p>\r\n                                <p class=\"mb-0\"><strong>2.</strong> El nombre del parámetro no debe ser ingresado con los carácteres especiales.</p> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n         \r\n\r\n                    <div className=\"row text-center\">\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"form-group\">\r\n\r\n\r\n                                <DatePicker\r\n                                    selected={startDate}\r\n                                    inline\r\n                                    monthsShown={3}\r\n                                    locale='es'\r\n                                    renderDayContents={renderDayContents}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div >\r\n\r\n\r\n\r\n\r\n\r\n            </div >\r\n\r\n        </>\r\n    );\r\n\r\n\r\n    /*const [diasNoLaborablesLista, setDiasNoLaborablesLista] = useState({data: [] });\r\n            const [diasNoLaborablesListaTotal, setDiasNoLaborablesListaTotal] = useState({data: [], links: [], meta: [] });\r\n\r\n    useEffect(() => {\r\n                async function fetchData() {\r\n                    cargarDias();\r\n                }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const cargarDias = () => {\r\n                window.showSpinner(true);\r\n            GenericApi.getAllGeneric('dias-no-laborales').then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                setDiasNoLaborablesLista(datos);\r\n            setDiasNoLaborablesListaTotal(datos);\r\n            window.showSpinner(false);\r\n                }\r\n            else{\r\n                window.showModal();\r\n            window.showSpinner(false);\r\n                }\r\n                    \r\n            }\r\n            )\r\n    }\r\n\r\n\r\n    const cambiarEstado = (objeto, estado) => {\r\n\r\n        const data = {\r\n                \"data\": {\r\n                \"type\": \"mas_dependencia_origen\",\r\n            \"attributes\": {\r\n                \"fecha\": objeto.attributes.fecha,\r\n            \"estado\": estado,\r\n                }\r\n            }\r\n        }\r\n\r\n            GenericApi.updateGeneric('dias-no-laborales', objeto.id, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                cargarDias();\r\n                }\r\n            else\r\n            window.showModal();\r\n            }\r\n            )\r\n\r\n    }\r\n\r\n    const diasNoLaborables = () => {\r\n        return (\r\n            diasNoLaborablesLista.data.map((diaNoLaborable, i) => {\r\n                return (\r\n            <tr key={diaNoLaborable.id}>\r\n                <td>\r\n                    {moment(diaNoLaborable.attributes.fecha).format(\"DD/MM/YYYY\")}\r\n                </td>\r\n                <td>\r\n                    {diaNoLaborable.attributes.estado == \"1\" ? 'Activo' : 'Inactivo'}\r\n                </td>\r\n                <td>\r\n                    <Link to={`${diaNoLaborable.id}`}>\r\n                        <button type=\"button\" className=\"btn btn-primary btn-sm\" title='Editar'>\r\n                            <i className=\"fa fa-fw fa-edit\"></i>\r\n                        </button>\r\n                    </Link>\r\n                    {\r\n                        (diaNoLaborable.attributes.estado == 0) ? (\r\n\r\n                            <button type='button' title='Activar Antecedente' className='btn btn-sm btn-success' onClick={() => cambiarEstado(diaNoLaborable, 1)}><i className=\"fas fa-plus-circle\"></i></button>\r\n\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        (diaNoLaborable.attributes.estado == 1) ? (\r\n\r\n                            <button type='button' title='Inactivar Día' className='btn btn-sm btn-danger' onClick={() => cambiarEstado(diaNoLaborable, 0)}><i className=\"fas fa-minus-circle\"></i></button>\r\n\r\n\r\n\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n            )\r\n            })\r\n            )\r\n    }\r\n\r\n    const handleSearch = (event) => {\r\n        try {\r\n            if ((event.target.value.trim().trim() == \"\") || (event.target.value.trim().length == 0)) {\r\n                setDiasNoLaborablesLista(diasNoLaborablesListaTotal);\r\n            }\r\n            else {\r\n                var filteredData = {\r\n                data: diasNoLaborablesListaTotal.data.filter(\r\n                        suggestion => ((suggestion.id\r\n            + suggestion.attributes.fecha\r\n            + (suggestion.attributes.estado == \"1\" ? 'Activo' : 'Inactivo')).toLowerCase().includes(event.target.value.toLowerCase()))\r\n            )\r\n                };\r\n            setDiasNoLaborablesLista(filteredData)\r\n            }\r\n        } catch (error) {\r\n                console.error(error);\r\n        }\r\n    };\r\n\r\n            return (\r\n            <div className=\"block block-rounded block-bordered\">\r\n                {<InfoErrorApi />}\r\n                {<Spinner />}\r\n\r\n                <div className=\"block block-themed\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"block-content\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li class=\"breadcrumb-item\"> <small>Lista de días no laborables</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"block-header\">\r\n                        <h3 className=\"block-title\">Días no laborables registrados</h3>\r\n                        <Link to={`/DiasNoLaborables/Add`} >\r\n                            <button type=\"button\" className=\"btn btn-sm btn-dark mr-1 mb-3\"><i class=\"far fa-plus-square\"></i> Agregar día no laborable</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"block-content\">\r\n                        <div className='row'>\r\n                            <div className='col-md-12'>\r\n                                <div className=\"form-group \">\r\n                                    <label htmlFor='search'>Buscar: </label>\r\n                                    <input type=\"text\" id=\"search\" name=\"search\" onChange={handleSearch} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} className=\"form-control border border-success\" placeholder=\"Buscar\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Dia No Laborable</th>\r\n                                            <th>Estado</th>\r\n                                            <th>Acciones</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {diasNoLaborables()}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )*/\r\n}\r\n\r\nexport default DiasNoLaborablesLista;"],"mappings":"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A,QAAmB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAmF,eACtH;gBAAG,KAAK,EAAC,MAAM;gBAAA,wBAAC;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAmB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAiF;YAAA;cAAA;cAAA;cAAA;YAAA;UAClH;YAAA;YAAA;YAAA;UAAA;QACJ;UAAA;UAAA;UAAA;QAAA,QACJ,eAIN;UAAK,SAAS,EAAC,iBAAiB;UAAA,uBAE5B;YAAK,SAAS,EAAC,WAAW;YAAA,uBACtB;cAAK,SAAS,EAAC,YAAY;cAAA,uBAGvB,QAAC,UAAU;gBACP,QAAQ,EAAE3B,SAAU;gBACpB,MAAM;gBACN,WAAW,EAAE,CAAE;gBACf,MAAM,EAAC,IAAI;gBACX,iBAAiB,EAAE8B;cAAkB;gBAAA;gBAAA;gBAAA;cAAA;YACvC;cAAA;cAAA;cAAA;YAAA;UACA;YAAA;YAAA;YAAA;UAAA;QACJ;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAEH;IAAA;MAAA;MAAA;MAAA;IAAA,QAMJ;EAAA,gBAER;;EAIP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AAAC,GA7SQrC,qBAAqB;AAAA,KAArBA,qBAAqB;AA+S9B,eAAeA,qBAAqB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}