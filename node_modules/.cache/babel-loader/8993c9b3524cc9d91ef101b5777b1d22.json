{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Herramientas\\\\CaratulasParametrosPlantillaForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport DataTable from 'react-data-table-component';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport '../../Utils/Constants';\nimport { getUser } from '../../Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CaratulasParametrosPlantillaForm(props) {\n  _s();\n\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  const caratulaId = props.caratulaId;\n  const radicado = from.radicado;\n  const procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const id_etapa = from.idEtapa;\n  const fechaRegistro = from.fechaRegistro;\n  const fechaIngreso = from.fechaIngreso;\n  const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\n  const registradoPor = from.registradoPor;\n  const vigencia = from.vigencia;\n  const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getListaParametros, setListaParametros] = useState({\n    params: []\n  });\n  const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({\n    data: []\n  }); //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\n\n  const [getAntecedentesLista, setAntecedentesLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getInteresadosLista, setInteresadosLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getParametrosCampos, setParametrosCampos] = useState();\n  const campos = [{\n    title: \"N° Proceso\",\n    value: radicado,\n    type: \"N° Proceso\",\n    check: false\n  }, {\n    title: \"SINPROC\",\n    value: radicado,\n    type: \"Sinproc\",\n    check: false\n  }, {\n    title: 'Antecedentes',\n    value: null,\n    type: \"Antecedentes\",\n    check: false\n  }, {\n    title: 'Usuario',\n    value: registradoPor,\n    type: \"Usuario\",\n    check: false\n  }, {\n    title: 'Dependencia',\n    value: dependencia,\n    check: false\n  }, {\n    title: 'Vigencia',\n    value: vigencia,\n    type: \"Vigencia\",\n    check: false\n  }, {\n    title: 'Fecha Registro',\n    value: fechaRegistro,\n    type: \"Fecha Registro\",\n    check: false\n  }, {\n    title: 'Fecha Ingreso',\n    value: fechaIngreso,\n    type: \"Fecha Ingreso\",\n    check: false\n  }, {\n    title: \"Generado\",\n    value: generadoPor,\n    type: \"Generado\",\n    check: false\n  }];\n  useEffect(() => {\n    async function fetchData() {\n      cargarParametros();\n    }\n\n    fetchData();\n  }, [props.id_mas_actuacion]);\n\n  const selectCampos = parametro => {\n    return campos.map((item, i) => {\n      var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\n\n      if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this);\n      }\n    });\n  };\n\n  const handleChangeInteresados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getInteresadosLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setInteresadosLista(valorId);\n    let val = getInteresadosLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.sujeto_procesal_nombre} ${p.attributes.primer_apellido} ${p.attributes.segundo_apellido} ${p.attributes.primer_nombre} ${p.attributes.segundo_nombre}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  function checkeoAutomaticoInteresados(parametro, id_campo) {\n    setInteresadosLista(getInteresadosLista);\n    var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoAntecedentes(parametro, id_campo) {\n    setAntecedentesLista(getAntecedentesLista);\n    var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\n    setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\n    var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\n    setCargosInvestigadoLista(getCargosInvestigadoLista);\n    var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\n    setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\n    var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  const handleChangeAntecedentes = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getAntecedentesLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setAntecedentesLista(valorId);\n    let val = getAntecedentesLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.descripcion}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadesInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_investigado) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setEntidadesInvestigadoLista(valorId);\n    let val = getEntidadesInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_investigado}`;\n        var nombre = `${p.attributes.nombre_investigado}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getCargosInvestigadoLista.map(item => {\n      if (value == item.attributes.cargo) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getCargosInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.cargo}`;\n        var nombre = `${p.attributes.cargo}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_entidad) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getEntidadInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_entidad}`;\n        var nombre = `${p.attributes.nombre_entidad}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const selectAntecedentes = (parametro, id_campo) => {\n    if (Array.isArray(getAntecedentesLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getAntecedentesLista && getAntecedentesLista.length == 1) {\n        checkeoAutomaticoAntecedentes(parametro, id_campo);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getAntecedentesLista[0].id,\n            name: 'check' + getAntecedentesLista[0].id,\n            value: getAntecedentesLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), \" \", getAntecedentesLista[0].attributes.descripcion]\n        }, 'keyCheck' + getAntecedentesLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this);\n      } else if (getAntecedentesLista.length > 1) {\n        return getAntecedentesLista.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + item.id,\n              name: 'check' + item.id,\n              value: item.id,\n              onChange: e => handleChangeAntecedentes(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 33\n            }, this), \" \", item.attributes.descripcion]\n          }, 'keyCheck' + item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this) // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectInteresados = (parametro, id_campo) => {\n    if (Array.isArray(getInteresadosLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getInteresadosLista && getInteresadosLista.length == 1) {\n        checkeoAutomaticoInteresados(parametro, id_campo);\n        var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getInteresadosLista[0].id,\n            name: 'check' + getInteresadosLista[0].id,\n            value: getInteresadosLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getInteresadosLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this);\n      } else if (getInteresadosLista.length > 1) {\n        return getInteresadosLista.map((item, i) => {\n          var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + nombre,\n              name: 'check' + nombre,\n              value: item.id,\n              onChange: e => handleChangeInteresados(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 33\n            }, this), \" \", nombre]\n          }, 'keyCheck' + nombre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 29\n          }, this) // <option key={nombre} value={nombre}>{nombre}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadesInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\n        let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getEntidadesInvestigadoLista[0].id,\n            name: 'check' + getEntidadesInvestigadoLista[0].id,\n            value: getEntidadesInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getEntidadesInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this);\n      } else if (getEntidadesInvestigadoLista.length > 1) {\n        return getEntidadesInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.nombre_investigado}`;\n          var nombre = `${item.attributes.nombre_investigado}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 33\n            }, this) //<option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const selectCargosInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getCargosInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getCargosInvestigadoLista[0].id,\n            name: 'check' + getCargosInvestigadoLista[0].id,\n            value: getCargosInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getCargosInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this);\n      } else if (getCargosInvestigadoLista.length > 1) {\n        return getCargosInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.cargo}`;\n          var nombre = `${item.attributes.cargo}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeCargosInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 33\n            }, this) // <option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const selectEntidadesInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getEntidadInvestigadoLista[0].id,\n            name: 'check' + getEntidadInvestigadoLista[0].id,\n            value: getEntidadInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getEntidadInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this);\n      } else if (getEntidadInvestigadoLista.length > 1) {\n        return getEntidadInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.nombre_entidad}`;\n          var nombre = `${item.attributes.nombre_entidad}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeEntidadesInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 33\n            }, this) //<option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const cargarValoresDeParametro = parametro => {\n    const arrayOtherElements = [\"Dependencia Origen\", \"Delegada\", \"Radicado\", \"Radicación\", \"Auto\"];\n    var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\n      return item.parametro == parametro;\n    });\n    var tempCampo = campoParametro[0];\n\n    if (tempCampo != undefined && campos[tempCampo.id_campo] != undefined) {\n      var itemCampo = campos[tempCampo.id_campo]; // Tiene un valor por defecto\n\n      if (itemCampo.value != null) {\n        // Se asigna el valor a la lista temporal\n        var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\n          if (item.parametro == parametro) {\n            item.id_campo = tempCampo.id_campo;\n            var itemCampoId = campos[tempCampo.id_campo];\n            item.valor = itemCampoId.value != null ? itemCampoId.value : \"\";\n            item.valorTemporal = itemCampoId.value != null ? itemCampoId.value : \"\";\n          }\n\n          return item;\n        }); // Se deshabilita cuando es sinproc o dependencia\n\n        if (itemCampo.type == \"Sinproc\") {\n          var validarElemento = document.getElementById('id' + itemCampo.type);\n\n          if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n            console.log(\"Se deshabilita sinproc\");\n            validarElemento.setAttribute(\"disabled\", \"true\");\n          }\n        } else if (itemCampo.title == \"N° Proceso\" || itemCampo.title == \"Dependencia\" || itemCampo.title == \"Usuario\" || itemCampo.title == \"Vigencia\" || itemCampo.title == \"Fecha Registro\" || itemCampo.title == \"Fecha Ingreso\" || itemCampo.title == \"Generado\") {\n          var validarElemento = document.getElementById('id' + itemCampo.title);\n\n          if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n            validarElemento.setAttribute(\"disabled\", \"true\");\n          }\n        }\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: itemCampo.value\n        }, void 0, false);\n      } else if (itemCampo.type == \"Antecedentes\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectAntecedentes(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Seleccione un campo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const cargarCheckParametro = parametro => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        id: 'check' + parametro + '1',\n        name: 'check' + parametro + '1',\n        value: parametro + '1',\n        onChange: e => handleChangeStatus(e, parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 17\n      }, this)\n    }, 'keyCheck' + parametro + '1', false, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleChangeStatus = (e, parametro) => {\n    console.log(\"e.target.checked -> \", e.target.checked); // Se captura el elemento enviado por parametros\n\n    var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro); // Se valida si esta checkeado\n\n    if (e.target.checked) {\n      // Se devuelve el valor a vacio\n      var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n        // Se valida que el item recorrido sea igual al parametro checkeado\n        if (item.parametro == parametro) {\n          // Se captura el id del campo\n          item.id_campo = itemFilter[0].id_campo;\n          var itemCampo = campos[itemFilter[0].id_campo]; // Se redefine el valor del item a vacio\n\n          item.valor = \"\";\n          item.valorTemporal = itemCampo.value != null ? itemCampo.value : itemFilter[0].value;\n        } // Se retorna el item\n\n\n        return item;\n      });\n    } else {\n      // Se devuelve el valor a vacio\n      var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n        // Se valida que el item recorrido sea igual al parametro checkeado\n        if (item.parametro == parametro) {\n          // Se captura el id del campo\n          item.id_campo = itemFilter[0].id_campo;\n          var itemCampo = campos[itemFilter[0].id_campo]; // Se redefine el valor del item a su valor original\n\n          item.valor = item.valorTemporal;\n          item.valorTemporal = itemCampo.value != null ? itemCampo.value : itemFilter[0].value;\n        } // Se retorna el item\n\n\n        return item;\n      });\n    }\n  };\n\n  const selectChangeListaCampos = (parametro, id_campo, value) => {\n    console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\n    var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n      if (item.parametro == parametro) {\n        item.id_campo = id_campo;\n        var itemCampo = campos[id_campo];\n        item.valor = itemCampo.value != null ? itemCampo.value : value;\n        item.valorTemporal = itemCampo.value != null ? itemCampo.value : value;\n      }\n\n      return item;\n    }); //setListaCamposPorParametroDefinitiva({ data: newParams });\n    //console.log(newParams);\n  };\n\n  const columns = [{\n    name: 'Parametros de la plantilla',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: parametro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 32\n    }, this),\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Campo',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      id: `id${parametro}`,\n      name: `name${parametro}`,\n      onChange: e => selectChangeListaCampos(parametro, e.target.value, \"\"),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Por favor seleccione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 21\n      }, this), selectCampos(parametro)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 17\n    }, this),\n    sortable: false,\n    width: \"25%\"\n  }, {\n    name: 'Valor seleccionado',\n    width: \"50%\",\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: cargarValoresDeParametro(parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 17\n    }, this)\n  }, {\n    name: 'Activar/Inactivar',\n    width: \"10%\",\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: cargarCheckParametro(parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 17\n    }, this)\n  }];\n\n  const cargarParametros = () => {\n    setListaParametros(null);\n    const data = {\n      \"data\": {\n        \"type\": 'caratulas',\n        \"attributes\": {\n          \"id\": caratulaId\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('caratulas/parametros-plantilla/' + caratulaId, data).then(datos => {\n      if (!datos.error) {\n        setListaParametros(datos);\n        var parametrosCampos = datos.params.map((item, i) => {\n          var indexCampo = campos.findIndex(x => x.title == item || item == \"N° Proceso\" && x.title == \"N° Proceso\" || item == \"Sinproc\" && x.title == \"SINPROC\" || item == \"Usuario\" && x.title == \"Usuario\" || item == \"Vigencia\" && x.title == \"Vigencia\" || item == \"Generado\" && x.title == \"Generado\");\n\n          if (indexCampo >= 0) {\n            return {\n              parametro: item,\n              id_campo: indexCampo,\n              valor: \"\"\n            };\n          } else {\n            return {\n              parametro: item,\n              id_campo: \"\",\n              valor: \"\"\n            };\n          }\n        });\n        setListaCamposPorParametroTemporal({\n          data: parametrosCampos\n        }); // Se cargan los antecedentes, interesados y entidades del investigado\n\n        cargarEntidadesInvestigado();\n        cargarAntecedentes();\n        cargarInteresados();\n      }\n    });\n  };\n\n  const cargarAntecedentes = () => {\n    const data = {\n      \"data\": {\n        \"type\": 'antecedente',\n        \"attributes\": {\n          \"antecedentes\": \"antecedentes\",\n          \"descripcion\": \"descripcion\",\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"fecha_registro\": Date.now(),\n          \"id_dependencia\": -1,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setAntecedentesLista(parametrosCampos);\n      }\n    });\n  };\n\n  const cargarInteresados = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"interesado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"tipo_documento\": \"1\",\n          \"numero_documento\": \"1\",\n          \"primer_nombre\": \"1\",\n          \"segundo_nombre\": \"1\",\n          \"primer_apellido\": \"1\",\n          \"segundo_apellido\": \"1\",\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setInteresadosLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Datos del interesado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const cargarEntidadesInvestigado = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"entidad_investigado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": \"1\",\n          \"requiere_registro\": true,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          var nombreInvestigado = item.attributes.nombre_investigado;\n          var cargoInvestigado = item.attributes.cargo;\n          var entidadInvestigado = item.attributes.nombre_entidad;\n\n          if (nombreInvestigado == null) {\n            item.attributes.nombre_investigado = \"NO_APLICA\";\n          }\n\n          if (cargoInvestigado == null) {\n            item.attributes.cargo = \"NO_APLICA\";\n          }\n\n          if (entidadInvestigado == null) {\n            item.attributes.nombre_entidad = \"NO_APLICA\";\n          }\n\n          item.checked = false;\n          return item;\n        });\n        setEntidadesInvestigadoLista(parametrosCampos);\n        setCargosInvestigadoLista(parametrosCampos);\n        setEntidadInvestigadoLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Entidades del investigado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const descargarArchivo = () => {\n    try {\n      window.showSpinner(true);\n      var params = getListaCamposPorParametroTemporal.data.map(item => {\n        return {\n          \"param\": item.parametro,\n          \"value\": item.valor\n        };\n      });\n      console.log(\"######params#####\");\n      console.log(params);\n      const data = {\n        \"data\": {\n          \"type\": \"caratulas\",\n          \"attributes\": {\n            \"params\": params\n          }\n        }\n      };\n      GenericApi.getByDataGeneric('caratulas/plantilla-diligenciada/' + caratulaId, data).then(datos => {\n        window.showSpinner(false);\n\n        if (!datos.error) {\n          downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"pdf\");\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: \",\n            message: datos.error.toString(),\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const descargarArchivo2 = () => {\n    let nombre = \"01-FR-01 Plantilla Documento Firma.docx\";\n\n    try {\n      GenericApi.getGeneric('wordDoc/imagen-documento/' + nombre).then(datos => {\n        console.log(\"datos 2 -> \", datos);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function downloadBase64File(contentType, base64Data, fileName) {\n    const linkSource = `data:${contentType};base64,${base64Data}`;\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = linkSource;\n    downloadLink.download = fileName;\n    downloadLink.click();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 13\n    }, this), getListaParametros != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Parametros de la plantilla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-2 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n          columns: columns,\n          data: getListaParametros.params,\n          noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n          striped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-4 mb-2 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => descargarArchivo2(),\n          className: \"btn btn-rounded btn-primary\",\n          title: \"Imagen Word\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 143\n          }, this), \" Imagen Word\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => descargarArchivo(),\n          className: \"btn btn-rounded btn-primary\",\n          title: \"Descargar\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-file-pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 140\n          }, this), \" Descargar car\\xE1tula\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Cargando parametros de la plantilla...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CaratulasParametrosPlantillaForm, \"z0IgF+3jNS82foB9OXJiTnLFq8o=\", false, function () {\n  return [useLocation];\n});\n\n_c = CaratulasParametrosPlantillaForm;\nexport default CaratulasParametrosPlantillaForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CaratulasParametrosPlantillaForm\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","DataTable","GenericApi","Spinner","ModalGen","getUser","CaratulasParametrosPlantillaForm","props","location","from","state","caratulaId","radicado","procesoDisciplinarioId","id_etapa","idEtapa","fechaRegistro","fechaIngreso","dependencia","nombre_dependencia","nombre","registradoPor","vigencia","generadoPor","nombre_completo","modalState","setModalState","title","message","show","getListaParametros","setListaParametros","params","getListaCamposPorParametroTemporal","setListaCamposPorParametroTemporal","data","getAntecedentesLista","setAntecedentesLista","links","meta","getInteresadosLista","setInteresadosLista","getEntidadesInvestigadoLista","setEntidadesInvestigadoLista","getCargosInvestigadoLista","setCargosInvestigadoLista","getEntidadInvestigadoLista","setEntidadInvestigadoLista","getParametrosCampos","setParametrosCampos","campos","value","type","check","fetchData","cargarParametros","id_mas_actuacion","selectCampos","parametro","map","item","i","itemFilter","filter","x","undefined","length","id_campo","handleChangeInteresados","e","checked","target","valorId","id","val","p","attributes","sujeto_procesal_nombre","primer_apellido","segundo_apellido","primer_nombre","segundo_nombre","selectChangeListaCampos","toString","checkeoAutomaticoInteresados","checkeoAutomaticoAntecedentes","descripcion","checkeoAutomaticoInvestigadosNombre","nombre_investigado","checkeoAutomaticoInvestigadosCargo","cargo","checkeoAutomaticoInvestigadosEntidad","nombre_entidad","handleChangeAntecedentes","handleChangeInvestigados","handleChangeCargosInvestigados","handleChangeEntidadesInvestigados","selectAntecedentes","Array","isArray","selectInteresados","selectInvestigados","selectCargosInvestigados","selectEntidadesInvestigados","cargarValoresDeParametro","arrayOtherElements","campoParametro","tempCampo","itemCampo","newParamsItem","itemCampoId","valor","valorTemporal","validarElemento","document","getElementById","hasAttribute","console","log","setAttribute","cargarCheckParametro","handleChangeStatus","newParams","columns","name","cell","sortable","width","getByDataGeneric","then","datos","error","parametrosCampos","indexCampo","findIndex","cargarEntidadesInvestigado","cargarAntecedentes","cargarInteresados","Date","now","redirect","nombreInvestigado","cargoInvestigado","entidadInvestigado","descargarArchivo","window","showSpinner","downloadBase64File","content_type","base_64","file_name","alert","global","Constants","TIPO_ALERTA","ERROR","descargarArchivo2","getGeneric","contentType","base64Data","fileName","linkSource","downloadLink","createElement","href","download","click","DATA_TABLE","SIN_DATOS_TABLE"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Herramientas/CaratulasParametrosPlantillaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport '../../Utils/Constants';\r\nimport { getUser } from '../../Utils/Common';\r\n\r\nfunction CaratulasParametrosPlantillaForm(props) {\r\n\r\n    const location = useLocation()\r\n    const { from } = location.state;\r\n    const caratulaId = props.caratulaId;\r\n    const radicado = from.radicado;\r\n    const procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    const id_etapa = from.idEtapa;\r\n    const fechaRegistro = from.fechaRegistro;\r\n    const fechaIngreso = from.fechaIngreso;\r\n    const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\r\n    const registradoPor = from.registradoPor;\r\n    const vigencia = from.vigencia;\r\n    const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaParametros, setListaParametros] = useState({ params: [] });\r\n    const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({ data: [] });\r\n    //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getInteresadosLista, setInteresadosLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getParametrosCampos, setParametrosCampos] = useState();\r\n\r\n    const campos = [\r\n        { title: \"N° Proceso\", value: radicado, type: \"N° Proceso\", check: false },\r\n        { title: \"SINPROC\", value: radicado, type: \"Sinproc\", check: false },\r\n        { title: 'Antecedentes', value: null, type: \"Antecedentes\", check: false },\r\n        { title: 'Usuario', value: registradoPor, type: \"Usuario\", check: false },\r\n        { title: 'Dependencia', value: dependencia, check: false },\r\n        { title: 'Vigencia', value: vigencia, type: \"Vigencia\", check: false },\r\n        { title: 'Fecha Registro', value: fechaRegistro, type: \"Fecha Registro\", check: false },\r\n        { title: 'Fecha Ingreso', value: fechaIngreso, type: \"Fecha Ingreso\", check: false },\r\n        { title: \"Generado\", value: generadoPor, type: \"Generado\", check: false },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            cargarParametros();\r\n        }\r\n        fetchData();\r\n    }, [props.id_mas_actuacion]);\r\n\r\n    const selectCampos = (parametro) => {\r\n        return (\r\n            campos.map((item, i) => {\r\n\r\n                var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n                if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\r\n                    return (\r\n                        <option selected key={i} value={i}>{item.title}</option>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <option key={i} value={i}>{item.title}</option>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleChangeInteresados = (e, parametro, id_campo) => {\r\n\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getInteresadosLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setInteresadosLista(valorId);\r\n        let val = getInteresadosLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.sujeto_procesal_nombre} ${p.attributes.primer_apellido} ${p.attributes.segundo_apellido} ${p.attributes.primer_nombre} ${p.attributes.segundo_nombre}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n    }\r\n\r\n    function checkeoAutomaticoInteresados(parametro, id_campo) {\r\n        setInteresadosLista(getInteresadosLista);\r\n        var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\r\n        setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\r\n        var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\r\n        setCargosInvestigadoLista(getCargosInvestigadoLista);\r\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\r\n        setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\r\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    const handleChangeAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.descripcion}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadesInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_investigado) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setEntidadesInvestigadoLista(valorId);\r\n        let val = getEntidadesInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_investigado}`;\r\n                var nombre = `${p.attributes.nombre_investigado}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getCargosInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.cargo) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getCargosInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.cargo}`;\r\n                var nombre = `${p.attributes.cargo}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_entidad) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getEntidadInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_entidad}`;\r\n                var nombre = `${p.attributes.nombre_entidad}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const selectAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].id}\r\n                            name={'check' + getAntecedentesLista[0].id}\r\n                            value={getAntecedentesLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.descripcion}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.id}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.id}\r\n                                    name={'check' + item.id}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.descripcion}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInteresados = (parametro, id_campo) => {\r\n        if (Array.isArray(getInteresadosLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getInteresadosLista && getInteresadosLista.length == 1) {\r\n                checkeoAutomaticoInteresados(parametro, id_campo);\r\n                var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getInteresadosLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getInteresadosLista[0].id}\r\n                            name={'check' + getInteresadosLista[0].id}\r\n                            value={getInteresadosLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getInteresadosLista.length > 1) {\r\n                return (\r\n                    getInteresadosLista.map((item, i) => {\r\n                        var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + nombre}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + nombre}\r\n                                    name={'check' + nombre}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeInteresados(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {nombre}\r\n                            </div>\r\n                            // <option key={nombre} value={nombre}>{nombre}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadesInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\r\n                let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadesInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            value={getEntidadesInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadesInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadesInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_investigado}`;\r\n                        var nombre = `${item.attributes.nombre_investigado}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectCargosInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getCargosInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\r\n                var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getCargosInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getCargosInvestigadoLista[0].id}\r\n                            name={'check' + getCargosInvestigadoLista[0].id}\r\n                            value={getCargosInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getCargosInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getCargosInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.cargo}`;\r\n                        var nombre = `${item.attributes.cargo}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeCargosInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                // <option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectEntidadesInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\r\n                var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadInvestigadoLista[0].id}\r\n                            value={getEntidadInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_entidad}`;\r\n                        var nombre = `${item.attributes.nombre_entidad}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeEntidadesInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const cargarValoresDeParametro = (parametro) => {\r\n\r\n        const arrayOtherElements = [\r\n            \"Dependencia Origen\",\r\n            \"Delegada\",\r\n            \"Radicado\",\r\n            \"Radicación\",\r\n            \"Auto\"\r\n        ];\r\n\r\n        var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\r\n            return item.parametro == parametro;\r\n        });\r\n\r\n        var tempCampo = campoParametro[0];\r\n\r\n        if (tempCampo != undefined && campos[tempCampo.id_campo] != undefined) {\r\n            var itemCampo = campos[tempCampo.id_campo];\r\n\r\n            // Tiene un valor por defecto\r\n            if (itemCampo.value != null) {\r\n\r\n                // Se asigna el valor a la lista temporal\r\n                var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\r\n                    if (item.parametro == parametro) {\r\n                        item.id_campo = tempCampo.id_campo;\r\n                        var itemCampoId = campos[tempCampo.id_campo];\r\n                        item.valor = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                        item.valorTemporal = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                // Se deshabilita cuando es sinproc o dependencia\r\n                if (itemCampo.type == \"Sinproc\") {\r\n                    var validarElemento = document.getElementById('id' + itemCampo.type);\r\n                    if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                        console.log(\"Se deshabilita sinproc\");\r\n                        validarElemento.setAttribute(\"disabled\", \"true\");\r\n                    }\r\n                } else if ((itemCampo.title == \"N° Proceso\") ||\r\n                    (itemCampo.title == \"Dependencia\") ||\r\n                    (itemCampo.title == \"Usuario\") ||\r\n                    (itemCampo.title == \"Vigencia\") ||\r\n                    (itemCampo.title == \"Fecha Registro\") ||\r\n                    (itemCampo.title == \"Fecha Ingreso\") ||\r\n                    (itemCampo.title == \"Generado\")) {\r\n\r\n                    var validarElemento = document.getElementById('id' + itemCampo.title);\r\n                    if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                        validarElemento.setAttribute(\"disabled\", \"true\");\r\n                    }\r\n                }\r\n\r\n                return (\r\n                    <>{itemCampo.value}</>\r\n                )\r\n            } else if (itemCampo.type == \"Antecedentes\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <label>Seleccione un campo</label>\r\n                )\r\n            }\r\n        }\r\n        return (<></>)\r\n    }\r\n\r\n    const cargarCheckParametro = (parametro) => {\r\n\r\n        return (\r\n            <div className=\"col-md-12\" key={'keyCheck' + parametro + '1'} >\r\n                <input type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    id={'check' + parametro + '1'}\r\n                    name={'check' + parametro + '1'}\r\n                    value={parametro + '1'}\r\n                    onChange={(e) => handleChangeStatus(e, parametro)}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n\r\n    const handleChangeStatus = (e, parametro) => {\r\n\r\n        console.log(\"e.target.checked -> \", e.target.checked);\r\n\r\n        // Se captura el elemento enviado por parametros\r\n        var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n        // Se valida si esta checkeado\r\n        if (e.target.checked) {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = campos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a vacio\r\n                    item.valor = \"\";\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n\r\n\r\n        } else {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = campos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a su valor original\r\n                    item.valor = item.valorTemporal;\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n        }\r\n    }\r\n\r\n    const selectChangeListaCampos = (parametro, id_campo, value) => {\r\n\r\n        console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\r\n\r\n        var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n            if (item.parametro == parametro) {\r\n                item.id_campo = id_campo;\r\n                var itemCampo = campos[id_campo];\r\n\r\n                item.valor = (itemCampo.value != null) ? itemCampo.value : value;\r\n                item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : value;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        //setListaCamposPorParametroDefinitiva({ data: newParams });\r\n        //console.log(newParams);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Parametros de la plantilla',\r\n            cell: parametro => <div><strong>{parametro}</strong></div>,\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            name: 'Campo',\r\n            cell: parametro =>\r\n                <select className=\"form-control\" id={`id${parametro}`} name={`name${parametro}`}\r\n                    onChange={e => selectChangeListaCampos(parametro, e.target.value, \"\")}>\r\n                    <option value=\"\">Por favor seleccione</option>\r\n                    {selectCampos(parametro)}\r\n                </select>,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'Valor seleccionado',\r\n            width: \"50%\",\r\n            cell: parametro =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresDeParametro(parametro)}\r\n                    </div>\r\n                </div>\r\n        },\r\n        {\r\n            name: 'Activar/Inactivar',\r\n            width: \"10%\",\r\n            cell: parametro =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarCheckParametro(parametro)}\r\n                    </div>\r\n                </div>\r\n        }\r\n    ];\r\n\r\n    const cargarParametros = () => {\r\n\r\n        setListaParametros(null);\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'caratulas',\r\n                \"attributes\": {\r\n                    \"id\": caratulaId\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('caratulas/parametros-plantilla/' + caratulaId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaParametros(datos);\r\n\r\n                    var parametrosCampos = datos.params.map((item, i) => {\r\n                        var indexCampo = campos.findIndex(\r\n                            x =>\r\n                                x.title == item ||\r\n                                (item == \"N° Proceso\" && x.title == \"N° Proceso\") ||\r\n                                (item == \"Sinproc\" && x.title == \"SINPROC\") ||\r\n                                (item == \"Usuario\" && x.title == \"Usuario\") ||\r\n                                (item == \"Vigencia\" && x.title == \"Vigencia\") ||\r\n                                (item == \"Generado\" && x.title == \"Generado\"));\r\n\r\n                        if (indexCampo >= 0) {\r\n                            return { parametro: item, id_campo: indexCampo, valor: \"\" };\r\n                        } else {\r\n                            return { parametro: item, id_campo: \"\", valor: \"\" };\r\n                        }\r\n                    });\r\n\r\n                    setListaCamposPorParametroTemporal({ data: parametrosCampos });\r\n\r\n                    // Se cargan los antecedentes, interesados y entidades del investigado\r\n                    cargarEntidadesInvestigado();\r\n                    cargarAntecedentes();\r\n                    cargarInteresados();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarAntecedentes = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'antecedente',\r\n                \"attributes\": {\r\n                    \"antecedentes\": \"antecedentes\",\r\n                    \"descripcion\": \"descripcion\",\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"fecha_registro\": Date.now(),\r\n                    \"id_dependencia\": -1,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n        GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n\r\n                    setAntecedentesLista(parametrosCampos);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarInteresados = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"interesado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"tipo_documento\": \"1\",\r\n                    \"numero_documento\": \"1\",\r\n                    \"primer_nombre\": \"1\",\r\n                    \"segundo_nombre\": \"1\",\r\n                    \"primer_apellido\": \"1\",\r\n                    \"segundo_apellido\": \"1\",\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setInteresadosLista(parametrosCampos);\r\n                } else {\r\n                    setModalState({ title: \"Datos del interesado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarEntidadesInvestigado = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"entidad_investigado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": \"1\",\r\n                    \"requiere_registro\": true,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n\r\n                        var nombreInvestigado = item.attributes.nombre_investigado;\r\n                        var cargoInvestigado = item.attributes.cargo;\r\n                        var entidadInvestigado = item.attributes.nombre_entidad;\r\n\r\n                        if (nombreInvestigado == null) {\r\n                            item.attributes.nombre_investigado = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (cargoInvestigado == null) {\r\n                            item.attributes.cargo = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (entidadInvestigado == null) {\r\n                            item.attributes.nombre_entidad = \"NO_APLICA\";\r\n                        }\r\n\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setEntidadesInvestigadoLista(parametrosCampos);\r\n                    setCargosInvestigadoLista(parametrosCampos);\r\n                    setEntidadInvestigadoLista(parametrosCampos);\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Entidades del investigado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const descargarArchivo = () => {\r\n        try {\r\n            window.showSpinner(true);\r\n\r\n            var params = getListaCamposPorParametroTemporal.data.map(item => {\r\n                return {\r\n                    \"param\": item.parametro,\r\n                    \"value\": item.valor\r\n                };\r\n            });\r\n            console.log(\"######params#####\");\r\n            console.log(params);\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"caratulas\",\r\n                    \"attributes\": {\r\n                        \"params\": params,\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.getByDataGeneric('caratulas/plantilla-diligenciada/' + caratulaId, data).then(\r\n                datos => {\r\n                    window.showSpinner(false);\r\n                    if (!datos.error) {\r\n                        downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"pdf\");\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: \", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const descargarArchivo2 = () => {\r\n\r\n        let nombre = \"01-FR-01 Plantilla Documento Firma.docx\";\r\n\r\n        try {\r\n\r\n            GenericApi.getGeneric('wordDoc/imagen-documento/' + nombre).then(\r\n                datos => {\r\n\r\n                    console.log(\"datos 2 -> \", datos);\r\n\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    function downloadBase64File(contentType, base64Data, fileName) {\r\n        const linkSource = `data:${contentType};base64,${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <ModalGen data={modalState} />\r\n            {getListaParametros != null ?\r\n                <>\r\n                    <div className='col-md-12'>\r\n                        <label>Parametros de la plantilla</label>\r\n                    </div>\r\n                    <div className='col-md-12 mt-2 mb-2'>\r\n                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                            columns={columns}\r\n                            data={getListaParametros.params}\r\n                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                            striped\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='col-md-12 mt-4 mb-2 text-center'>\r\n                        {/* <label className='mr-2' htmlFor=\"documento_ruta\">Descargar documento pre-diligenciado con los valores seleccionados </label> */}\r\n                        <button type=\"button\" onClick={() => descargarArchivo2()} className=\"btn btn-rounded btn-primary\" title='Imagen Word'><i className=\"fas fa-upload\"></i> Imagen Word</button>\r\n                        <button type=\"button\" onClick={() => descargarArchivo()} className=\"btn btn-rounded btn-primary\" title='Descargar'><i className=\"fas fa-file-pdf\"></i> Descargar carátula</button>\r\n                    </div>\r\n                </>\r\n                :\r\n                <div className='col-md-12'>\r\n                    <label>Cargando parametros de la plantilla...</label>\r\n                </div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CaratulasParametrosPlantillaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}