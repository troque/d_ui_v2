{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ClasificacionRadicado\\\\ClasificacionRadicado.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { Link } from \"react-router-dom\";\nimport 'react-datetime/css/react-datetime.css';\nimport 'moment/locale/es';\nimport { getUser } from '../../../components/Utils/Common';\nimport { useLocation } from 'react-router-dom';\nimport DatePerson from \"../../DatePerson/DatePerson\";\nimport '../../Utils/Constants';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ClasificacionRadicado(props) {\n  _s();\n\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [listaTipoExpediente, setListaTipoExpediente] = useState({\n    data: {}\n  });\n  const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\n  const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({\n    data: {}\n  });\n  const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\n  const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\n  const [listaTipoRespuesta, setListaTipoRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\n  const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\n  const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\n  const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\n  const [listaTiposQueja, setListaTiposQueja] = useState({\n    data: {}\n  });\n  const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\n  const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\n  const [fechaTermino, setFechaTermino] = useState(null);\n  const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\n  const [getNombreUsuario, setNombreUsuario] = useState(\"\");\n  const [getNombreRol, setNombreRol] = useState(\"\");\n  const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\n  const [getAlerta, setAlerta] = useState(\"\");\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let radicado = from.radicado;\n  /**\r\n   * Validación de los caracteres especiales en los campos de texto\r\n   * @param {*} str \r\n   * @returns \r\n   */\n\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n  /**\r\n   * Funcion principal\r\n   */\n\n\n  useEffect(() => {\n    async function fetchData() {\n      //window.showSpinner(true);\n      setNombreUsuario(getUser().nombre);\n      setNombreRol(getUser().roles);\n      GenericApi.getGeneric(\"tipo-respuesta\").then(datos => {\n        if (!datos.error) {\n          setListaTipoRespuesta(datos);\n          setRespuestaTipoRespuesta(true);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n      GenericApi.getGeneric(\"lista-tipo-expediente/\" + procesoDisciplinarioId).then(datos => {\n        if (!datos.error) {\n          setListaTipoExpediente(datos);\n          setRespuestaTipoExpediente(true);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n      GenericApi.getGeneric(\"lista-tipo-derecho-peticion/\" + procesoDisciplinarioId).then(datos => {\n        if (!datos.error) {\n          setListaDerechoPeticion(datos);\n          setRespuestaDerechoPeticion(true);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n      GenericApi.getGeneric(\"lista-terminos-respuesta/\" + procesoDisciplinarioId).then(datos => {\n        if (!datos.error) {\n          setListaTerminosRespuesta(datos);\n          setRespuestaTerminosRespuesta(true);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n      GenericApi.getGeneric(\"lista-tipo-queja/\" + procesoDisciplinarioId).then(datos => {\n        if (!datos.error) {\n          setListaTiposQueja(datos);\n          setRespuestaTiposQueja(true);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n      setResultDiasNoLaborales([]);\n      GenericApi.getGeneric(\"dias-no-laborales?estado=1\").then(datos => {\n        if (!datos.error) {\n          var data = [];\n\n          for (var i in datos.data) {\n            var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\n            var result = new Date(date);\n            result.setDate(result.getDate() + 1);\n            data.push(i, date);\n          }\n\n          setResultDiasNoLaborales(data); //console.log(resultDiasNoLaborales);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoForm',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n      obtenerParametros();\n    }\n\n    fetchData();\n  }, []);\n  /**\r\n   * Funcion que obtiene información de las parámetricas.\r\n   * Ejm: número máximo y mínimo de caracteres \r\n   */\n\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      }; //buscamos el parametro\n\n      GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoForm',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const disableCustomDt = current => {\n    return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));\n  };\n\n  let selectChangeTipoRespuesta = e => {\n    setSelectedTipoRespuesta(e);\n  };\n\n  let selectChangeTipoExpediente = e => {\n    setCountTextArea(0);\n    setSelectedTipoExpediente(e);\n  };\n\n  let selectChangeTipoDerechoPeticion = e => {\n    setCountTextArea(0);\n    setSelectedDerechoPeticion(e);\n  };\n\n  let selectChangeTerminoRespuesta = e => {\n    setSelectedTerminosRespuesta(e);\n  };\n\n  let selectChangeTiposQueja = e => {\n    setSelectedTiposQueja(e);\n  }; //Componetes\n\n\n  const selectTipoRespuesta = () => {\n    return listaTipoRespuesta.data.map((tipo_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: tipo_respuesta.id,\n        children: tipo_respuesta.attributes.nombre\n      }, tipo_respuesta.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTipoExpediente = () => {\n    return listaTipoExpediente.data.map((expediente, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: expediente.id,\n        children: expediente.attributes.nombre\n      }, expediente.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTipoDerechoPeticion = () => {\n    return listaTipoDerechoPeticion.data.map((derecho_peticion, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: derecho_peticion.id,\n        children: derecho_peticion.attributes.nombre\n      }, derecho_peticion.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTerminosRespuesta = () => {\n    return listaTerminosRespuesta.data.map((termino_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: termino_respuesta.id,\n        children: termino_respuesta.attributes.nombre\n      }, termino_respuesta.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTiposQueja = () => {\n    return listaTiposQueja.data.map((tipo_queja, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: tipo_queja.id,\n        children: tipo_queja.attributes.nombre\n      }, tipo_queja.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const alertaPorTipoDerechoPeticion = i => {\n    for (let cont = 0; cont < listaTipoDerechoPeticion.data.length; cont++) {\n      if (listaTipoDerechoPeticion.data[cont].id == i) {\n        return listaTipoDerechoPeticion.data[cont].attributes.observacion;\n      }\n    }\n  };\n\n  const enviarDatos = datos => {\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"clasificacion_radicado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n          \"id_etapa\": props.getParametros.id_etapa,\n          \"id_tipo_expediente\": selectedTipoExpediente,\n          \"observaciones\": datos.observaciones != null ? datos.observaciones : null,\n          \"id_tipo_queja\": datos.tipo_queja,\n          \"id_termino_respuesta\": selectedTerminosRespuesta,\n          \"fecha_termino\": datos.fechaTermino != null ? datos.fechaTermino : null,\n          \"hora_termino\": datos.horasTermino != null ? datos.horasTermino : null,\n          \"gestion_juridica\": datos.gestion_juridica === 'true' ? true : false,\n          \"estado\": true,\n          \"id_estado_reparto\": 2,\n          \"id_tipo_derecho_peticion\": datos.tipo_derecho_peticion,\n          \"oficina_control_interno\": false,\n          \"created_user\": getNombreUsuario,\n          \"reclasificacion\": props.getParametros.reclasificacion\n        }\n      }\n    };\n    GenericApi.addGeneric(\"clasificacion-radicado\", data).then(datos => {\n      if (!datos.error) {\n        from.cambiaColorClasificacionRadicado = \"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";\n\n        if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION) {\n          if (datos.data.attributes.funcionario_actual.name === getNombreUsuario) {\n            setModalState({\n              title: \"SINPROC No \" + radicado + \" :: Re-Clasificación del radicado\",\n              message: \"El proceso disciplinario se asigna a: \" + datos.data.attributes.funcionario_actual.nombre + \" \" + datos.data.attributes.funcionario_actual.apellido,\n              show: true,\n              redirect: '/RamasProceso',\n              from: {\n                from\n              }\n            });\n          } else {\n            setModalState({\n              title: \"SINPROC No \" + radicado + \" :: Re-Clasificación del radicado\",\n              message: \"El proceso disciplinario se asigna a: \" + datos.data.attributes.funcionario_actual.nombre + \" \" + datos.data.attributes.funcionario_actual.apellido,\n              show: true,\n              redirect: '/MisPendientes'\n            });\n          }\n        } else if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.CLASIFICACION) {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: \"Registro Exitoso\",\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.EXITO\n          });\n        }\n      } else {\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoLista',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n    window.showSpinner(false);\n  };\n\n  const handleCallbackFechaTermino = childData => {\n    try {\n      setFechaTermino(childData);\n    } catch (error) {}\n  }; // COMPOENENTE TIPO EXPEDIENTE\n\n\n  const componenteTipoExpediente = tipo_expediente => {\n    // TIPO DE EXPEDIENTE = DERECHO DE PETICION\n    if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ingresoDerechoPeticion\",\n            children: [\"Tipo de derecho de petici\\xF3n \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 93\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"ingresoDerechoPeticion\",\n            name: \"ingresoDerechoPeticion\",\n            value: selectedTipoDerechoPeticion,\n            onChange: e => selectChangeTipoDerechoPeticion(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Por favor seleccione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 29\n            }, this), respuestaTipoDerechoPeticion ? selectTipoDerechoPeticion() : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }, this), selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.COPIAS ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.COPIAS) : '', selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.GENERAL ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.GENERAL) : '', selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.ALERTA ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.ALERTA) : '']\n      }, void 0, true);\n    } // TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            tipo_queja: global.Constants.TIPO_QUEJA.EXTERNA\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            return errores;\n          },\n          onSubmit: (valores, _ref) => {\n            let {\n              resetForm\n            } = _ref;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-window-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 86\n                  }, this), \" Cancelar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } // TIPO DE EXPEDIENTE = QUEJA\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            tipo_queja: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.tipo_queja) {\n              errores.tipo_queja = 'Debe seleccionar un tipo de queja';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref2) => {\n            let {\n              resetForm\n            } = _ref2;\n            console.log(valores);\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"tipo_queja\",\n                children: [\"Ingrese Tipo de Queja \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 83\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: \"select\",\n                className: \"form-control\",\n                id: \"tipo_queja\",\n                name: \"tipo_queja\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Por favor seleccione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 37\n                }, this), respuestaTiposQueja ? selectTiposQueja() : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-window-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 86\n                  }, this), \" Cancelar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } // TIPO DE EXPEDIENTE = TUTELA\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ingresoTipoRtaTutela\",\n          children: [\"Ingrese termino de respuesta \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 88\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"termino_rta\",\n          name: \"termino_rta\",\n          value: selectedTerminosRespuesta,\n          onChange: e => selectChangeTerminoRespuesta(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"{selectedTerminosRespuesta}\",\n            children: \"Por favor seleccione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 25\n          }, this), respuestaTerminosRespuesta ? selectTerminosRespuesta() : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 21\n        }, this), selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.DIAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS) : '', selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.HORAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS) : '']\n      }, void 0, true);\n    }\n  }; // COMOPNENTE TIPO DERECHO DE PETICION\n\n\n  const componenteTipoDerechoPeticion = tipo_derecho_peticion => {\n    alertaPorTipoDerechoPeticion(tipo_derecho_peticion); // TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\n\n    if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.COPIAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            gestion_juridica: false,\n            tipo_derecho_peticion: tipo_derecho_peticion\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref3) => {\n            let {\n              resetForm\n            } = _ref3;\n            enviarDatos(valores);\n          },\n          children: _ref4 => {\n            let {\n              errors\n            } = _ref4;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: alertaPorTipoDerechoPeticion(tipo_derecho_peticion)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Observaciones\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    as: \"textarea\",\n                    className: \"form-control\",\n                    id: \"observaciones\",\n                    name: \"observaciones\",\n                    rows: \"4\",\n                    placeholder: \"Escriba en este espacio las observaciones\",\n                    maxLength: getMaximoTextArea,\n                    minLength: getMinimoTextArea\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-right\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-primary\",\n                      children: [countTextArea, \" / \", getMaximoTextArea]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"observaciones\",\n                    component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: errors.observaciones\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 573,\n                      columnNumber: 94\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 87\n                  }, this), \" Registrar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/ClasificacionRadicadoLista/`,\n                  state: {\n                    from: from\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-window-close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 582,\n                      columnNumber: 90\n                    }, this), \" Cancelar\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } // TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\n    else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.GENERAL) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            gestion_juridica: '',\n            tipo_derecho_peticion: tipo_derecho_peticion\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n\n            if (!valores.gestion_juridica) {\n              errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref5) => {\n            let {\n              resetForm\n            } = _ref5;\n            enviarDatos(valores);\n          },\n          children: _ref6 => {\n            let {\n              errors\n            } = _ref6;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: alertaPorTipoDerechoPeticion(tipo_derecho_peticion)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"ingresoTipoExpediente\",\n                  children: [\"Requiere gesti\\xF3n juridica \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 640,\n                    columnNumber: 102\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"select\",\n                  className: \"form-control\",\n                  id: \"gestion_juridica\",\n                  name: \"gestion_juridica\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Por favor seleccione\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"true\",\n                    children: \"Si\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"false\",\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 644,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Observaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 37\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"textarea\",\n                  className: \"form-control\",\n                  id: \"observaciones\",\n                  name: \"observaciones\",\n                  rows: \"4\",\n                  placeholder: \"Escriba en este espacio las observaciones\",\n                  maxLength: getMaximoTextArea,\n                  minLength: getMinimoTextArea\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-primary\",\n                    children: [countTextArea, \" / \", getMaximoTextArea]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"observaciones\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.observaciones\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 653,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 658,\n                    columnNumber: 87\n                  }, this), \" Registrar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/ClasificacionRadicadoLista/`,\n                  state: {\n                    from: from\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-window-close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 660,\n                      columnNumber: 90\n                    }, this), \" Cancelar\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 660,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } // TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\n    else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.ALERTA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            gestion_juridica: '',\n            tipo_derecho_peticion: tipo_derecho_peticion\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n\n            if (!valores.gestion_juridica) {\n              errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref7) => {\n            let {\n              resetForm\n            } = _ref7;\n            enviarDatos(valores);\n          },\n          children: _ref8 => {\n            let {\n              errors\n            } = _ref8;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 714,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: alertaPorTipoDerechoPeticion(tipo_derecho_peticion)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 715,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 713,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"ingresoTipoExpediente\",\n                  children: [\"Requiere gesti\\xF3n juridica \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 718,\n                    columnNumber: 102\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"select\",\n                  className: \"form-control\",\n                  id: \"gestion_juridica\",\n                  name: \"gestion_juridica\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Por favor seleccione\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 720,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"true\",\n                    children: \"Si\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 721,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"false\",\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 722,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Observaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 37\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"textarea\",\n                  className: \"form-control\",\n                  id: \"observaciones\",\n                  name: \"observaciones\",\n                  rows: \"4\",\n                  placeholder: \"Escriba en este espacio las observaciones\",\n                  maxLength: getMaximoTextArea,\n                  minLength: getMinimoTextArea\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-primary\",\n                    children: [countTextArea, \" / \", getMaximoTextArea]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 729,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"observaciones\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.observaciones\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 731,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-content block-content-full text-right\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 734,\n                      columnNumber: 91\n                    }, this), \" Registrar\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 734,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/ClasificacionRadicadoLista/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn btn-danger\",\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fas fa-window-close\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 736,\n                        columnNumber: 94\n                      }, this), \" Cancelar\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 736,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 735,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  }; // COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\n\n\n  const componenteTerminosRespuesta = termino_respuesta => {\n    //TERMINO TUTELA = DIAS      \n    if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            termino_rta: termino_respuesta,\n            horasTermino: null,\n            fechaTermino: fechaTermino\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.fechaTermino && !fechaTermino) {\n              errores.fechaTermino = 'Debe seleccionar el termino de respuesta';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref9) => {\n            let {\n              resetForm\n            } = _ref9;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Fecha para termino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 33\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(DatePerson, {\n                resultDiasNoLaborales: resultDiasNoLaborales,\n                getAnosAtrasInvalidos: getAnosAtrasInvalidos,\n                parentCallback: handleCallbackFechaTermino,\n                id: \"fechaTermino\",\n                name: \"fechaTermino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 791,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-window-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 793,\n                    columnNumber: 86\n                  }, this), \" Cancelar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 793,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } //TERMINO TUTELA = HORAS     \n    else if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            termino_rta: termino_respuesta,\n            horasTermino: '',\n            fechaTermino: new Date()\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.horasTermino) {\n              errores.horasTermino = 'Debe seleccionar el termino de respuesta';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref10) => {\n            let {\n              resetForm\n            } = _ref10;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Horas para termino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 834,\n                columnNumber: 33\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 834,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"number\",\n                min: \"1\",\n                max: \"23\",\n                id: \"horasTermino\",\n                name: \"horasTermino\",\n                className: \"form-control\",\n                placeholder: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 835,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 839,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ingresoTipoExpediente\",\n              children: [\"Tipo de expediente \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 87\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"ingresoTipoExpediente\",\n              name: \"ingresoTipoExpediente\",\n              value: selectedTipoExpediente,\n              onChange: e => selectChangeTipoExpediente(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Por favor seleccione\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 865,\n                columnNumber: 33\n              }, this), respuestaTipoExpediente ? selectTipoExpediente() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 17\n      }, this), selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClasificacionRadicado, \"OuMriUP2DsONYA1ju7vM8Q0xEuM=\", false, function () {\n  return [useLocation];\n});\n\n_c = ClasificacionRadicado;\nexport default ClasificacionRadicado;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClasificacionRadicado\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ClasificacionRadicado/ClasificacionRadicado.js"],"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","Link","getUser","useLocation","DatePerson","ModalGen","GenericApi","ClasificacionRadicado","props","getModalState","setModalState","title","message","show","listaTipoExpediente","setListaTipoExpediente","data","respuestaTipoExpediente","setRespuestaTipoExpediente","selectedTipoExpediente","setSelectedTipoExpediente","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","listaTipoDerechoPeticion","setListaDerechoPeticion","selectedTipoDerechoPeticion","setSelectedDerechoPeticion","respuestaTipoDerechoPeticion","setRespuestaDerechoPeticion","listaTipoRespuesta","setListaTipoRespuesta","selectedTipoRespuesta","setSelectedTipoRespuesta","respuestaTipoRespuesta","setRespuestaTipoRespuesta","listaTerminosRespuesta","setListaTerminosRespuesta","selectedTerminosRespuesta","setSelectedTerminosRespuesta","respuestaTerminosRespuesta","setRespuestaTerminosRespuesta","listaTiposQueja","setListaTiposQueja","selectedTiposQueja","setSelectedTiposQueja","respuestaTiposQueja","setRespuestaTiposQueja","fechaTermino","setFechaTermino","resultDiasNoLaborales","setResultDiasNoLaborales","getNombreUsuario","setNombreUsuario","getNombreRol","setNombreRol","getAnosAtrasInvalidos","setAnosAtrasInvalidos","getAlerta","setAlerta","location","from","state","procesoDisciplinarioId","radicado","containsSpecialChars","str","result","global","Constants","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","fetchData","nombre","roles","getGeneric","then","datos","error","toString","redirect","alert","TIPO_ALERTA","ERROR","i","date","Date","setDate","getDate","push","obtenerParametros","getByDataGeneric","length","filter","map","filteredName","console","log","disableCustomDt","current","format","selectChangeTipoRespuesta","e","selectChangeTipoExpediente","selectChangeTipoDerechoPeticion","selectChangeTerminoRespuesta","selectChangeTiposQueja","selectTipoRespuesta","tipo_respuesta","id","attributes","selectTipoExpediente","expediente","selectTipoDerechoPeticion","derecho_peticion","selectTerminosRespuesta","termino_respuesta","selectTiposQueja","tipo_queja","alertaPorTipoDerechoPeticion","cont","observacion","enviarDatos","window","showSpinner","getParametros","id_proceso_disciplinario","id_etapa","observaciones","horasTermino","gestion_juridica","tipo_derecho_peticion","reclasificacion","addGeneric","cambiaColorClasificacionRadicado","tipo_clasificacion","TIPO_CLASIFICACION","VALIDAR_CLASIFICACION","funcionario_actual","name","apellido","CLASIFICACION","EXITO","handleCallbackFechaTermino","childData","componenteTipoExpediente","tipo_expediente","TIPOS_EXPEDIENTES","DERECHO_PETICION","target","value","DERECHOS_PETICION","COPIAS","componenteTipoDerechoPeticion","GENERAL","ALERTA","PODER_REFERENTE","TIPO_QUEJA","EXTERNA","valores","errores","resetForm","QUEJA","TUTELA","TERMINOS_RESPUESTA","DIAS","componenteTerminosRespuesta","HORAS","errors","termino_rta"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport 'moment/locale/es';\r\nimport { getUser } from '../../../components/Utils/Common';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DatePerson from \"../../DatePerson/DatePerson\";\r\nimport '../../Utils/Constants';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\n\r\nfunction ClasificacionRadicado (props){\r\n    \r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n\r\n    const [listaTipoExpediente, setListaTipoExpediente] = useState({ data: {} });\r\n\r\n    const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\r\n    const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\r\n\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n\r\n    const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({ data: {} });\r\n    const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\r\n    const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\r\n\r\n    const [listaTipoRespuesta, setListaTipoRespuesta] = useState({ data: {} });\r\n    const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\r\n    const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\r\n\r\n    const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({ data: {} });\r\n    const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\r\n    const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\r\n\r\n    const [listaTiposQueja, setListaTiposQueja] = useState({ data: {} });\r\n    const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\r\n    const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\r\n\r\n    const [fechaTermino, setFechaTermino] = useState(null);\r\n    const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\r\n\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [getNombreRol, setNombreRol] = useState(\"\");\r\n    const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\r\n\r\n    const [getAlerta, setAlerta] = useState(\"\");\r\n    \r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let radicado = from.radicado;\r\n\r\n    /**\r\n     * Validación de los caracteres especiales en los campos de texto\r\n     * @param {*} str \r\n     * @returns \r\n     */\r\n    function containsSpecialChars(str) {\r\n        \r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Funcion principal\r\n     */\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            //window.showSpinner(true);\r\n            setNombreUsuario(getUser().nombre);\r\n            setNombreRol(getUser().roles);\r\n\r\n            GenericApi.getGeneric(\"tipo-respuesta\").then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n                        setListaTipoRespuesta(datos);\r\n                        setRespuestaTipoRespuesta(true);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n            \r\n            GenericApi.getGeneric(\"lista-tipo-expediente/\"+procesoDisciplinarioId).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setListaTipoExpediente(datos);\r\n                        setRespuestaTipoExpediente(true);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n\r\n            GenericApi.getGeneric(\"lista-tipo-derecho-peticion/\"+procesoDisciplinarioId).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setListaDerechoPeticion(datos);\r\n                        setRespuestaDerechoPeticion(true);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n\r\n            GenericApi.getGeneric(\"lista-terminos-respuesta/\"+procesoDisciplinarioId).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setListaTerminosRespuesta(datos);\r\n                        setRespuestaTerminosRespuesta(true);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n\r\n            GenericApi.getGeneric(\"lista-tipo-queja/\"+procesoDisciplinarioId).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setListaTiposQueja(datos);\r\n                        setRespuestaTiposQueja(true);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n\r\n            setResultDiasNoLaborales([]);\r\n            GenericApi.getGeneric(\"dias-no-laborales?estado=1\").then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        var data = [];\r\n                        for (var i in datos.data) {\r\n                            var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\r\n                            var result = new Date(date);\r\n                            result.setDate(result.getDate() + 1);\r\n                            data.push(i, date);\r\n                        }\r\n\r\n                        setResultDiasNoLaborales(data);\r\n                        //console.log(resultDiasNoLaborales);\r\n                    } else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoForm', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n\r\n                }\r\n\r\n            )\r\n\r\n            obtenerParametros();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    /**\r\n     * Funcion que obtiene información de las parámetricas.\r\n     * Ejm: número máximo y mínimo de caracteres \r\n     */\r\n    const obtenerParametros = () => {\r\n        try {\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => (\r\n                                setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoForm', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const disableCustomDt = current => {\r\n        return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));\r\n    }\r\n\r\n    let selectChangeTipoRespuesta = (e) => {\r\n        setSelectedTipoRespuesta(e);\r\n    }\r\n\r\n    let selectChangeTipoExpediente = (e) => {\r\n        setCountTextArea(0)\r\n        setSelectedTipoExpediente(e);\r\n    }\r\n\r\n    let selectChangeTipoDerechoPeticion = (e) => {\r\n        setCountTextArea(0)\r\n        setSelectedDerechoPeticion(e);\r\n    }\r\n\r\n    let selectChangeTerminoRespuesta = (e) => {\r\n        setSelectedTerminosRespuesta(e);\r\n    }\r\n\r\n    let selectChangeTiposQueja = (e) => {\r\n        setSelectedTiposQueja(e);\r\n    }\r\n\r\n       //Componetes\r\n\r\n       const selectTipoRespuesta = () => {\r\n        return (\r\n            listaTipoRespuesta.data.map((tipo_respuesta, i) => {\r\n                return (\r\n                    <option key={tipo_respuesta.id} value={tipo_respuesta.id}>{tipo_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTipoExpediente = () => {\r\n        return (\r\n            listaTipoExpediente.data.map((expediente, i) => {\r\n                return (\r\n                    <option key={expediente.id} value={expediente.id}>{expediente.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTipoDerechoPeticion = () => {\r\n        return (\r\n            listaTipoDerechoPeticion.data.map((derecho_peticion, i) => {\r\n                \r\n                return (\r\n                    <option key={derecho_peticion.id} value={derecho_peticion.id}>{derecho_peticion.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTerminosRespuesta = () => {\r\n        return (\r\n            listaTerminosRespuesta.data.map((termino_respuesta, i) => {\r\n                return (\r\n                    <option key={termino_respuesta.id} value={termino_respuesta.id}>{termino_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTiposQueja = () => {\r\n        return (\r\n            listaTiposQueja.data.map((tipo_queja, i) => {\r\n                return (\r\n                    <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const alertaPorTipoDerechoPeticion = (i) => {\r\n\r\n        for (let cont = 0; cont < listaTipoDerechoPeticion.data.length; cont++) {\r\n       \r\n            if(listaTipoDerechoPeticion.data[cont].id == i){\r\n                return (listaTipoDerechoPeticion.data[cont].attributes.observacion);\r\n            }\r\n        }\r\n    }\r\n\r\n    const enviarDatos = (datos) => {\r\n        window.showSpinner(true);\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                    \"id_etapa\": props.getParametros.id_etapa,\r\n                    \"id_tipo_expediente\": selectedTipoExpediente,\r\n                    \"observaciones\": (datos.observaciones != null ? datos.observaciones: null),\r\n                    \"id_tipo_queja\": datos.tipo_queja,\r\n                    \"id_termino_respuesta\": selectedTerminosRespuesta,\r\n                    \"fecha_termino\": (datos.fechaTermino !=null ? datos.fechaTermino: null),\r\n                    \"hora_termino\": (datos.horasTermino !=null ? datos.horasTermino: null),\r\n                    \"gestion_juridica\": (datos.gestion_juridica === 'true' ? true: false),\r\n                    \"estado\": true,\r\n                    \"id_estado_reparto\": 2,\r\n                    \"id_tipo_derecho_peticion\": datos.tipo_derecho_peticion,\r\n                    \"oficina_control_interno\": false,\r\n                    \"created_user\": getNombreUsuario,\r\n                    \"reclasificacion\": props.getParametros.reclasificacion,\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.addGeneric(\"clasificacion-radicado\",data).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    from.cambiaColorClasificacionRadicado = \"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";\r\n               \r\n                    if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION){   \r\n\r\n                        if(datos.data.attributes.funcionario_actual.name === getNombreUsuario){\r\n                            setModalState({ title: \"SINPROC No \"+radicado+\" :: Re-Clasificación del radicado\", message: \"El proceso disciplinario se asigna a: \"+datos.data.attributes.funcionario_actual.nombre +\" \"+ datos.data.attributes.funcionario_actual.apellido, show: true, redirect: '/RamasProceso',  from: {from} });\r\n                        }\r\n                        else{\r\n                            setModalState({ title: \"SINPROC No \"+radicado+\" :: Re-Clasificación del radicado\", message: \"El proceso disciplinario se asigna a: \"+datos.data.attributes.funcionario_actual.nombre +\" \"+ datos.data.attributes.funcionario_actual.apellido, show: true, redirect: '/MisPendientes' });\r\n                        }   \r\n                    }\r\n\r\n                    else if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.CLASIFICACION){\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: \"Registro Exitoso\", show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                    }  \r\n                }\r\n                else {\r\n                    setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n \r\n            }\r\n        )\r\n        window.showSpinner(false);\r\n    }\r\n\r\n    const handleCallbackFechaTermino = (childData) => {\r\n        try {\r\n            setFechaTermino(childData)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // COMPOENENTE TIPO EXPEDIENTE\r\n    const componenteTipoExpediente = (tipo_expediente) => {\r\n\r\n        // TIPO DE EXPEDIENTE = DERECHO DE PETICION\r\n        if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) {\r\n            return (\r\n                <>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ingresoDerechoPeticion\">Tipo de derecho de petición <span className=\"text-danger\">*</span></label>\r\n                        <select className=\"form-control\" id=\"ingresoDerechoPeticion\" name=\"ingresoDerechoPeticion\"\r\n                            value={selectedTipoDerechoPeticion} onChange={e => selectChangeTipoDerechoPeticion(e.target.value)}>\r\n                            <option value=\"\">Por favor seleccione</option>\r\n                            {respuestaTipoDerechoPeticion ? selectTipoDerechoPeticion() : null}\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/*COPIAS*/}\r\n                    {selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.COPIAS ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.COPIAS) : ''}\r\n                    {/*GENERAL*/}\r\n                    {selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.GENERAL ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.GENERAL) : ''}\r\n                    {/*ALERTA CONTROL POLITICO*/}\r\n                    {selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.ALERTA ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.ALERTA) : ''}\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: global.Constants.TIPO_QUEJA.EXTERNA\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = QUEJA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: '',\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.tipo_queja) {\r\n                                errores.tipo_queja = 'Debe seleccionar un tipo de queja'\r\n                            }\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            console.log(valores);\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tipo_queja\">Ingrese Tipo de Queja <span className=\"text-danger\">*</span></label>\r\n\r\n                                <Field as=\"select\" className=\"form-control\" id=\"tipo_queja\" name=\"tipo_queja\">\r\n                                    <option value=\"\">Por favor seleccione</option>\r\n                                    {respuestaTiposQueja ? selectTiposQueja() : null}\r\n                                </Field>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = TUTELA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA) {\r\n            return (\r\n                <>\r\n                    <label htmlFor=\"ingresoTipoRtaTutela\">Ingrese termino de respuesta <span className=\"text-danger\">*</span></label>\r\n\r\n                    <select className=\"form-control\" id=\"termino_rta\" name=\"termino_rta\"\r\n                        value={selectedTerminosRespuesta}\r\n                        onChange={e => selectChangeTerminoRespuesta(e.target.value)}>\r\n                        <option value=\"{selectedTerminosRespuesta}\">Por favor seleccione</option>\r\n                        {respuestaTerminosRespuesta ? selectTerminosRespuesta() : null}\r\n                    </select>\r\n\r\n                    {/*DIAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.DIAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS) : ''}\r\n                    {/*HORAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.HORAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS) : ''}\r\n\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    // COMOPNENTE TIPO DERECHO DE PETICION\r\n    const componenteTipoDerechoPeticion = (tipo_derecho_peticion) => {\r\n\r\n        alertaPorTipoDerechoPeticion(tipo_derecho_peticion);\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\r\n        if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.COPIAS) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: false,\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n\r\n\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n\r\n                            return errores\r\n                        }}\r\n\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{alertaPorTipoDerechoPeticion(tipo_derecho_peticion)}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Observaciones</label>\r\n                                        <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                            placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                        <div className=\"text-right\">\r\n                                            <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                        </div>\r\n                                        <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"block-content block-content-full text-right\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                    \r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.GENERAL) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: '',\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n\r\n                            if (!valores.gestion_juridica) {\r\n                                errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{alertaPorTipoDerechoPeticion(tipo_derecho_peticion)}</p>\r\n                                    </div>\r\n\r\n                                    <label htmlFor=\"ingresoTipoExpediente\">Requiere gestión juridica <span className=\"text-danger\">*</span></label>\r\n                                    <Field as=\"select\" className=\"form-control\" id=\"gestion_juridica\" name=\"gestion_juridica\">\r\n                                        <option value=\"\">Por favor seleccione</option>\r\n                                        <option value=\"true\">Si</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </Field>\r\n\r\n                                    <label>Observaciones</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                </div>\r\n\r\n                                <div className=\"block-content block-content-full text-right\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.ALERTA) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: '',\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n                            if (!valores.gestion_juridica) {\r\n                                errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{alertaPorTipoDerechoPeticion(tipo_derecho_peticion)}</p>\r\n                                    </div>\r\n\r\n                                    <label htmlFor=\"ingresoTipoExpediente\">Requiere gestión juridica <span className=\"text-danger\">*</span></label>\r\n                                    <Field as=\"select\" className=\"form-control\" id=\"gestion_juridica\" name=\"gestion_juridica\">\r\n                                        <option value=\"\">Por favor seleccione</option>\r\n                                        <option value=\"true\">Si</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </Field>\r\n\r\n                                    <label>Observaciones</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n\r\n                                    <div className=\"block-content block-content-full text-right\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                        <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                            <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    // COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\r\n    const componenteTerminosRespuesta = (termino_respuesta) => {\r\n\r\n        //TERMINO TUTELA = DIAS      \r\n        if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: null,\r\n                            fechaTermino: fechaTermino\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.fechaTermino && !fechaTermino) {\r\n                                errores.fechaTermino = 'Debe seleccionar el termino de respuesta'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label>Fecha para termino</label>  <span className=\"text-danger\">*</span>\r\n\r\n                                {/*<DatePicker id=\"fechaTermino\" locale='es' name=\"fechaTermino\" dateFormat=\"DD/MM/YYYY\" closeOnSelect={true} placeholder=\"dd/mm/yyyy\" onChange={(date) => setFechaTermino(date)} timeFormat={false} isValidDate={disableCustomDt} />*/}\r\n                                <DatePerson resultDiasNoLaborales={resultDiasNoLaborales} getAnosAtrasInvalidos={getAnosAtrasInvalidos} parentCallback={handleCallbackFechaTermino} id=\"fechaTermino\" name=\"fechaTermino\" />\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n\r\n            )\r\n        }\r\n\r\n        //TERMINO TUTELA = HORAS     \r\n        else if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\r\n\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: '',\r\n                            fechaTermino: new Date(),\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.horasTermino) {\r\n                                errores.horasTermino = 'Debe seleccionar el termino de respuesta'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label>Horas para termino</label>  <span className=\"text-danger\">*</span>\r\n                                <Field type=\"number\" min=\"1\" max='23' id=\"horasTermino\" name=\"horasTermino\" className=\"form-control\" placeholder=\"\" />\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n    };\r\n\r\n    \r\n    return (\r\n        <>\r\n\r\n        {<ModalGen data={getModalState} />}\r\n\r\n            <div className=\"block-content\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"ingresoTipoExpediente\">Tipo de expediente <span className=\"text-danger\">*</span></label>\r\n                            <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                                value={selectedTipoExpediente} onChange={e => selectChangeTipoExpediente(e.target.value)}>\r\n                                <option value=\"\">Por favor seleccione</option>\r\n                                {respuestaTipoExpediente ? selectTipoExpediente() : null}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*DERECHO DE PETICION*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : ''}\r\n                {/*PODER REFERENTE A SOLIICTUD*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : ''}\r\n                {/*QUEJA*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : ''}\r\n                {/*TUTELA*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : ''}\r\n\r\n            </div>\r\n        </>\r\n                    \r\n            \r\n    );\r\n \r\n    \r\n}\r\n\r\nexport default ClasificacionRadicado;"]},"metadata":{},"sourceType":"module"}