{"ast":null,"code":"/**\n * index.js\n *\n * a request API compatible with window.fetch\n */\n\nvar parse_url = require('url').parse;\nvar resolve_url = require('url').resolve;\nvar http = require('http');\nvar https = require('https');\nvar zlib = require('zlib');\nvar stream = require('stream');\nvar Body = require('./lib/body');\nvar Response = require('./lib/response');\nvar Headers = require('./lib/headers');\nvar Request = require('./lib/request');\nvar FetchError = require('./lib/fetch-error');\n\n// commonjs\nmodule.exports = Fetch;\n// es6 default export compatibility\nmodule.exports.default = module.exports;\n\n/**\n * Fetch class\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction Fetch(url, opts) {\n  // allow call as function\n  if (!(this instanceof Fetch)) return new Fetch(url, opts);\n\n  // allow custom promise\n  if (!Fetch.Promise) {\n    throw new Error('native promise missing, set Fetch.Promise to your favorite alternative');\n  }\n  Body.Promise = Fetch.Promise;\n  var self = this;\n\n  // wrap http.request into fetch\n  return new Fetch.Promise(function (resolve, reject) {\n    // build request object\n    var options = new Request(url, opts);\n    if (!options.protocol || !options.hostname) {\n      throw new Error('only absolute urls are supported');\n    }\n    if (options.protocol !== 'http:' && options.protocol !== 'https:') {\n      throw new Error('only http(s) protocols are supported');\n    }\n    var send;\n    if (options.protocol === 'https:') {\n      send = https.request;\n    } else {\n      send = http.request;\n    }\n\n    // normalize headers\n    var headers = new Headers(options.headers);\n    if (options.compress) {\n      headers.set('accept-encoding', 'gzip,deflate');\n    }\n    if (!headers.has('user-agent')) {\n      headers.set('user-agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n    }\n    if (!headers.has('connection') && !options.agent) {\n      headers.set('connection', 'close');\n    }\n    if (!headers.has('accept')) {\n      headers.set('accept', '*/*');\n    }\n\n    // detect form data input from form-data module, this hack avoid the need to pass multipart header manually\n    if (!headers.has('content-type') && options.body && typeof options.body.getBoundary === 'function') {\n      headers.set('content-type', 'multipart/form-data; boundary=' + options.body.getBoundary());\n    }\n\n    // bring node-fetch closer to browser behavior by setting content-length automatically\n    if (!headers.has('content-length') && /post|put|patch|delete/i.test(options.method)) {\n      if (typeof options.body === 'string') {\n        headers.set('content-length', Buffer.byteLength(options.body));\n        // detect form data input from form-data module, this hack avoid the need to add content-length header manually\n      } else if (options.body && typeof options.body.getLengthSync === 'function') {\n        // for form-data 1.x\n        if (options.body._lengthRetrievers && options.body._lengthRetrievers.length == 0) {\n          headers.set('content-length', options.body.getLengthSync().toString());\n          // for form-data 2.x\n        } else if (options.body.hasKnownLength && options.body.hasKnownLength()) {\n          headers.set('content-length', options.body.getLengthSync().toString());\n        }\n        // this is only necessary for older nodejs releases (before iojs merge)\n      } else if (options.body === undefined || options.body === null) {\n        headers.set('content-length', '0');\n      }\n    }\n    options.headers = headers.raw();\n\n    // http.request only support string as host header, this hack make custom host header possible\n    if (options.headers.host) {\n      options.headers.host = options.headers.host[0];\n    }\n\n    // send request\n    var req = send(options);\n    var reqTimeout;\n    if (options.timeout) {\n      req.once('socket', function (socket) {\n        reqTimeout = setTimeout(function () {\n          req.abort();\n          reject(new FetchError('network timeout at: ' + options.url, 'request-timeout'));\n        }, options.timeout);\n      });\n    }\n    req.on('error', function (err) {\n      clearTimeout(reqTimeout);\n      reject(new FetchError('request to ' + options.url + ' failed, reason: ' + err.message, 'system', err));\n    });\n    req.on('response', function (res) {\n      clearTimeout(reqTimeout);\n\n      // handle redirect\n      if (self.isRedirect(res.statusCode) && options.redirect !== 'manual') {\n        if (options.redirect === 'error') {\n          reject(new FetchError('redirect mode is set to error: ' + options.url, 'no-redirect'));\n          return;\n        }\n        if (options.counter >= options.follow) {\n          reject(new FetchError('maximum redirect reached at: ' + options.url, 'max-redirect'));\n          return;\n        }\n        if (!res.headers.location) {\n          reject(new FetchError('redirect location header missing at: ' + options.url, 'invalid-redirect'));\n          return;\n        }\n\n        // per fetch spec, for POST request with 301/302 response, or any request with 303 response, use GET when following redirect\n        if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && options.method === 'POST') {\n          options.method = 'GET';\n          delete options.body;\n          delete options.headers['content-length'];\n        }\n        options.counter++;\n        resolve(Fetch(resolve_url(options.url, res.headers.location), options));\n        return;\n      }\n\n      // normalize location header for manual redirect mode\n      var headers = new Headers(res.headers);\n      if (options.redirect === 'manual' && headers.has('location')) {\n        headers.set('location', resolve_url(options.url, headers.get('location')));\n      }\n\n      // prepare response\n      var body = res.pipe(new stream.PassThrough());\n      var response_options = {\n        url: options.url,\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: headers,\n        size: options.size,\n        timeout: options.timeout\n      };\n\n      // response object\n      var output;\n\n      // in following scenarios we ignore compression support\n      // 1. compression support is disabled\n      // 2. HEAD request\n      // 3. no content-encoding header\n      // 4. no content response (204)\n      // 5. content not modified response (304)\n      if (!options.compress || options.method === 'HEAD' || !headers.has('content-encoding') || res.statusCode === 204 || res.statusCode === 304) {\n        output = new Response(body, response_options);\n        resolve(output);\n        return;\n      }\n\n      // otherwise, check for gzip or deflate\n      var name = headers.get('content-encoding');\n\n      // for gzip\n      if (name == 'gzip' || name == 'x-gzip') {\n        body = body.pipe(zlib.createGunzip());\n        output = new Response(body, response_options);\n        resolve(output);\n        return;\n\n        // for deflate\n      } else if (name == 'deflate' || name == 'x-deflate') {\n        // handle the infamous raw deflate response from old servers\n        // a hack for old IIS and Apache servers\n        var raw = res.pipe(new stream.PassThrough());\n        raw.once('data', function (chunk) {\n          // see http://stackoverflow.com/questions/37519828\n          if ((chunk[0] & 0x0F) === 0x08) {\n            body = body.pipe(zlib.createInflate());\n          } else {\n            body = body.pipe(zlib.createInflateRaw());\n          }\n          output = new Response(body, response_options);\n          resolve(output);\n        });\n        return;\n      }\n\n      // otherwise, use response as-is\n      output = new Response(body, response_options);\n      resolve(output);\n      return;\n    });\n\n    // accept string, buffer or readable stream as body\n    // per spec we will call tostring on non-stream objects\n    if (typeof options.body === 'string') {\n      req.write(options.body);\n      req.end();\n    } else if (options.body instanceof Buffer) {\n      req.write(options.body);\n      req.end();\n    } else if (typeof options.body === 'object' && options.body.pipe) {\n      options.body.pipe(req);\n    } else if (typeof options.body === 'object') {\n      req.write(options.body.toString());\n      req.end();\n    } else {\n      req.end();\n    }\n  });\n}\n;\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nFetch.prototype.isRedirect = function (code) {\n  return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nFetch.Promise = global.Promise;\nFetch.Response = Response;\nFetch.Headers = Headers;\nFetch.Request = Request;","map":{"version":3,"names":["parse_url","require","parse","resolve_url","resolve","http","https","zlib","stream","Body","Response","Headers","Request","FetchError","module","exports","Fetch","default","url","opts","Promise","Error","self","reject","options","protocol","hostname","send","request","headers","compress","set","has","agent","body","getBoundary","test","method","Buffer","byteLength","getLengthSync","_lengthRetrievers","length","toString","hasKnownLength","undefined","raw","host","req","reqTimeout","timeout","once","socket","setTimeout","abort","on","err","clearTimeout","message","res","isRedirect","statusCode","redirect","counter","follow","location","get","pipe","PassThrough","response_options","status","statusText","statusMessage","size","output","name","createGunzip","chunk","createInflate","createInflateRaw","write","end","prototype","code","global"],"sources":["C:/w2d/personeria/personeria-ui/node_modules/node-fetch/index.js"],"sourcesContent":["\n/**\n * index.js\n *\n * a request API compatible with window.fetch\n */\n\nvar parse_url = require('url').parse;\nvar resolve_url = require('url').resolve;\nvar http = require('http');\nvar https = require('https');\nvar zlib = require('zlib');\nvar stream = require('stream');\n\nvar Body = require('./lib/body');\nvar Response = require('./lib/response');\nvar Headers = require('./lib/headers');\nvar Request = require('./lib/request');\nvar FetchError = require('./lib/fetch-error');\n\n// commonjs\nmodule.exports = Fetch;\n// es6 default export compatibility\nmodule.exports.default = module.exports;\n\n/**\n * Fetch class\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction Fetch(url, opts) {\n\n\t// allow call as function\n\tif (!(this instanceof Fetch))\n\t\treturn new Fetch(url, opts);\n\n\t// allow custom promise\n\tif (!Fetch.Promise) {\n\t\tthrow new Error('native promise missing, set Fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = Fetch.Promise;\n\n\tvar self = this;\n\n\t// wrap http.request into fetch\n\treturn new Fetch.Promise(function(resolve, reject) {\n\t\t// build request object\n\t\tvar options = new Request(url, opts);\n\n\t\tif (!options.protocol || !options.hostname) {\n\t\t\tthrow new Error('only absolute urls are supported');\n\t\t}\n\n\t\tif (options.protocol !== 'http:' && options.protocol !== 'https:') {\n\t\t\tthrow new Error('only http(s) protocols are supported');\n\t\t}\n\n\t\tvar send;\n\t\tif (options.protocol === 'https:') {\n\t\t\tsend = https.request;\n\t\t} else {\n\t\t\tsend = http.request;\n\t\t}\n\n\t\t// normalize headers\n\t\tvar headers = new Headers(options.headers);\n\n\t\tif (options.compress) {\n\t\t\theaders.set('accept-encoding', 'gzip,deflate');\n\t\t}\n\n\t\tif (!headers.has('user-agent')) {\n\t\t\theaders.set('user-agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t\t}\n\n\t\tif (!headers.has('connection') && !options.agent) {\n\t\t\theaders.set('connection', 'close');\n\t\t}\n\n\t\tif (!headers.has('accept')) {\n\t\t\theaders.set('accept', '*/*');\n\t\t}\n\n\t\t// detect form data input from form-data module, this hack avoid the need to pass multipart header manually\n\t\tif (!headers.has('content-type') && options.body && typeof options.body.getBoundary === 'function') {\n\t\t\theaders.set('content-type', 'multipart/form-data; boundary=' + options.body.getBoundary());\n\t\t}\n\n\t\t// bring node-fetch closer to browser behavior by setting content-length automatically\n\t\tif (!headers.has('content-length') && /post|put|patch|delete/i.test(options.method)) {\n\t\t\tif (typeof options.body === 'string') {\n\t\t\t\theaders.set('content-length', Buffer.byteLength(options.body));\n\t\t\t// detect form data input from form-data module, this hack avoid the need to add content-length header manually\n\t\t\t} else if (options.body && typeof options.body.getLengthSync === 'function') {\n\t\t\t\t// for form-data 1.x\n\t\t\t\tif (options.body._lengthRetrievers && options.body._lengthRetrievers.length == 0) {\n\t\t\t\t\theaders.set('content-length', options.body.getLengthSync().toString());\n\t\t\t\t// for form-data 2.x\n\t\t\t\t} else if (options.body.hasKnownLength && options.body.hasKnownLength()) {\n\t\t\t\t\theaders.set('content-length', options.body.getLengthSync().toString());\n\t\t\t\t}\n\t\t\t// this is only necessary for older nodejs releases (before iojs merge)\n\t\t\t} else if (options.body === undefined || options.body === null) {\n\t\t\t\theaders.set('content-length', '0');\n\t\t\t}\n\t\t}\n\n\t\toptions.headers = headers.raw();\n\n\t\t// http.request only support string as host header, this hack make custom host header possible\n\t\tif (options.headers.host) {\n\t\t\toptions.headers.host = options.headers.host[0];\n\t\t}\n\n\t\t// send request\n\t\tvar req = send(options);\n\t\tvar reqTimeout;\n\n\t\tif (options.timeout) {\n\t\t\treq.once('socket', function(socket) {\n\t\t\t\treqTimeout = setTimeout(function() {\n\t\t\t\t\treq.abort();\n\t\t\t\t\treject(new FetchError('network timeout at: ' + options.url, 'request-timeout'));\n\t\t\t\t}, options.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function(err) {\n\t\t\tclearTimeout(reqTimeout);\n\t\t\treject(new FetchError('request to ' + options.url + ' failed, reason: ' + err.message, 'system', err));\n\t\t});\n\n\t\treq.on('response', function(res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\t// handle redirect\n\t\t\tif (self.isRedirect(res.statusCode) && options.redirect !== 'manual') {\n\t\t\t\tif (options.redirect === 'error') {\n\t\t\t\t\treject(new FetchError('redirect mode is set to error: ' + options.url, 'no-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (options.counter >= options.follow) {\n\t\t\t\t\treject(new FetchError('maximum redirect reached at: ' + options.url, 'max-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!res.headers.location) {\n\t\t\t\t\treject(new FetchError('redirect location header missing at: ' + options.url, 'invalid-redirect'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// per fetch spec, for POST request with 301/302 response, or any request with 303 response, use GET when following redirect\n\t\t\t\tif (res.statusCode === 303\n\t\t\t\t\t|| ((res.statusCode === 301 || res.statusCode === 302) && options.method === 'POST'))\n\t\t\t\t{\n\t\t\t\t\toptions.method = 'GET';\n\t\t\t\t\tdelete options.body;\n\t\t\t\t\tdelete options.headers['content-length'];\n\t\t\t\t}\n\n\t\t\t\toptions.counter++;\n\n\t\t\t\tresolve(Fetch(resolve_url(options.url, res.headers.location), options));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// normalize location header for manual redirect mode\n\t\t\tvar headers = new Headers(res.headers);\n\t\t\tif (options.redirect === 'manual' && headers.has('location')) {\n\t\t\t\theaders.set('location', resolve_url(options.url, headers.get('location')));\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tvar body = res.pipe(new stream.PassThrough());\n\t\t\tvar response_options = {\n\t\t\t\turl: options.url\n\t\t\t\t, status: res.statusCode\n\t\t\t\t, statusText: res.statusMessage\n\t\t\t\t, headers: headers\n\t\t\t\t, size: options.size\n\t\t\t\t, timeout: options.timeout\n\t\t\t};\n\n\t\t\t// response object\n\t\t\tvar output;\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no content-encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!options.compress || options.method === 'HEAD' || !headers.has('content-encoding') || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\tresolve(output);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, check for gzip or deflate\n\t\t\tvar name = headers.get('content-encoding');\n\n\t\t\t// for gzip\n\t\t\tif (name == 'gzip' || name == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip());\n\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\tresolve(output);\n\t\t\t\treturn;\n\n\t\t\t// for deflate\n\t\t\t} else if (name == 'deflate' || name == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tvar raw = res.pipe(new stream.PassThrough());\n\t\t\t\traw.once('data', function(chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\toutput = new Response(body, response_options);\n\t\t\t\t\tresolve(output);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\toutput = new Response(body, response_options);\n\t\t\tresolve(output);\n\t\t\treturn;\n\t\t});\n\n\t\t// accept string, buffer or readable stream as body\n\t\t// per spec we will call tostring on non-stream objects\n\t\tif (typeof options.body === 'string') {\n\t\t\treq.write(options.body);\n\t\t\treq.end();\n\t\t} else if (options.body instanceof Buffer) {\n\t\t\treq.write(options.body);\n\t\t\treq.end();\n\t\t} else if (typeof options.body === 'object' && options.body.pipe) {\n\t\t\toptions.body.pipe(req);\n\t\t} else if (typeof options.body === 'object') {\n\t\t\treq.write(options.body.toString());\n\t\t\treq.end();\n\t\t} else {\n\t\t\treq.end();\n\t\t}\n\t});\n\n};\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nFetch.prototype.isRedirect = function(code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n}\n\n// expose Promise\nFetch.Promise = global.Promise;\nFetch.Response = Response;\nFetch.Headers = Headers;\nFetch.Request = Request;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}