{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Herramientas\\\\ActuacionParametrosPlantillaForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport DataTable from 'react-data-table-component';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport '../../Utils/Constants';\nimport { getUser } from '../../Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ActuacionParametrosPlantillaForm(props) {\n  _s();\n\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let id_etapa = from.idEtapa;\n  const fechaRegistro = from.fechaRegistro;\n  const fechaIngreso = from.fechaIngreso;\n  const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\n  const registradoPor = from.registradoPor;\n  const vigencia = from.vigencia;\n  const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getListaParametros, setListaParametros] = useState({\n    params: []\n  });\n  const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({\n    data: []\n  }); //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\n\n  const [getAntecedentesLista, setAntecedentesLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getInteresadosLista, setInteresadosLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getParametrosCampos, setParametrosCampos] = useState();\n  const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({\n    data: []\n  });\n  const campos = [{\n    title: 'Antecedentes',\n    value: null,\n    type: \"Antecedentes\"\n  }, {\n    title: 'Dependencia',\n    value: dependencia\n  }, {\n    title: 'Nombre',\n    value: null,\n    type: \"Investigados\"\n  }, {\n    title: 'Cargo',\n    value: null,\n    type: \"CargosInvestigados\"\n  }, {\n    title: 'Entidad',\n    value: null,\n    type: \"EntidadesInvestigados\"\n  }, {\n    title: 'Interesados',\n    value: null,\n    type: \"Interesados\"\n  }, {\n    title: 'Fecha de ingreso',\n    value: fechaIngreso\n  }, {\n    title: 'Fecha de registro',\n    value: fechaRegistro\n  }, {\n    title: 'Número de auto (generado despues de aprobación)',\n    value: '${numero_de_auto}'\n  }, {\n    title: 'Número de radicado',\n    value: radicado\n  } //{ id: 8, title: 'Campo de entrada por usuario', value: null },\n  ];\n  useEffect(() => {\n    async function fetchData() {\n      cargarTablaParametrosActuaciones(); //cargarCampos();\n    }\n\n    fetchData();\n  }, [props.id_mas_actuacion]); // Metodo encargado de cargar los parametros generales de la plantilla de la BD\n\n  const cargarTablaParametrosActuaciones = () => {\n    // Se inicializa el array\n    var array = []; // Se inicializa la API\n\n    GenericApi.getGeneric('parametro-campos').then( // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se recorre el array para insertar los valores necesarios\n        for (let index = 0; index < datos.data.length; index++) {\n          // Se captura los datos por posicion\n          const element = datos.data[index].attributes;\n          const title = element.nombre_campo;\n          const estado = element.estado == \"1\" ? true : false;\n          const type = element.type;\n          const value = validarValueParametros(type, estado); // Se añade el dato al array general\n\n          array.push({\n            title: title,\n            value: value,\n            type: type,\n            check: estado\n          });\n        } // Se setea la respuesta en la constante\n\n\n        setListaParametrosBaseDatos(array); // Se generan la lista de parametros del documento\n\n        cargarParametros(array);\n      }\n    });\n  }; // Metodo encargado de retorna el valor por el elemento\n\n\n  const validarValueParametros = (element, estado) => {\n    // Se inicializa la variable\n    let valor; // Se valida por el elemento\n\n    if ((element == \"Sinproc\" || element == \"Número de radicado\" || element == \"Radicación\" || element == \"Radicado\") && estado) {\n      valor = radicado;\n    } else if (element == \"Usuario\" && estado) {\n      valor = registradoPor;\n    } else if ((element == \"Dependencia Origen\" || element == \"Dependencia\") && estado) {\n      valor = dependencia;\n    } else if (element == \"Vigencia\" && estado) {\n      valor = vigencia;\n    } else if (element == \"Fecha de Registro\" && estado) {\n      valor = fechaRegistro;\n    } else if (element == \"Fecha de Ingreso\" && estado) {\n      valor = fechaIngreso;\n    } else if (element == \"Generado\" && estado) {\n      valor = generadoPor;\n    } else if ((element == \"Número de auto (generado despues de aprobación)\" || element == \"Auto\") && estado) {\n      valor = \"${numero_de_auto}\";\n    } // Se retorna el valor\n\n\n    return valor;\n  };\n\n  const selectCampos = parametro => {\n    return getListaParametrosBaseDatos.map((item, i) => {\n      var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\n\n      if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this);\n      }\n    });\n  };\n\n  const handleChangeInteresados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getInteresadosLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setInteresadosLista(valorId);\n    let val = getInteresadosLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.sujeto_procesal_nombre} ${p.attributes.primer_apellido} ${p.attributes.segundo_apellido} ${p.attributes.primer_nombre} ${p.attributes.segundo_nombre}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  function checkeoAutomaticoInteresados(parametro, id_campo) {\n    setInteresadosLista(getInteresadosLista);\n    var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoAntecedentes(parametro, id_campo) {\n    setAntecedentesLista(getAntecedentesLista);\n    var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\n    setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\n    var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\n    setCargosInvestigadoLista(getCargosInvestigadoLista);\n    var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\n    setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\n    var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  function checkeoAutomaticoFechaAntecedentes(parametro, id_campo) {\n    setAntecedentesLista(getAntecedentesLista);\n    var nombre = `${getAntecedentesLista[0].attributes.fecha_creado}`;\n\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n\n  const handleChangeAntecedentes = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getAntecedentesLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setAntecedentesLista(valorId);\n    let val = getAntecedentesLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.descripcion}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeFechaAntecedentes = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getAntecedentesLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setAntecedentesLista(valorId);\n    let val = getAntecedentesLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.fecha_creado}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadesInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_investigado) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setEntidadesInvestigadoLista(valorId);\n    let val = getEntidadesInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_investigado}`;\n        var nombre = `${p.attributes.nombre_investigado}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getCargosInvestigadoLista.map(item => {\n      if (value == item.attributes.cargo) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getCargosInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.cargo}`;\n        var nombre = `${p.attributes.cargo}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_entidad) {\n        item.checked = checked;\n      }\n\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getEntidadInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_entidad}`;\n        var nombre = `${p.attributes.nombre_entidad}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n\n  const selectAntecedentes = (parametro, id_campo) => {\n    if (Array.isArray(getAntecedentesLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getAntecedentesLista && getAntecedentesLista.length == 1) {\n        checkeoAutomaticoAntecedentes(parametro, id_campo);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getAntecedentesLista[0].id,\n            name: 'check' + getAntecedentesLista[0].id,\n            value: getAntecedentesLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this), \" \", getAntecedentesLista[0].attributes.descripcion]\n        }, 'keyCheck' + getAntecedentesLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this);\n      } else if (getAntecedentesLista.length > 1) {\n        return getAntecedentesLista.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + item.id,\n              name: 'check' + item.id,\n              value: item.id,\n              onChange: e => handleChangeAntecedentes(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 33\n            }, this), \" \", item.attributes.descripcion]\n          }, 'keyCheck' + item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }, this) // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectFechaAntecedentes = (parametro, id_campo) => {\n    if (Array.isArray(getAntecedentesLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getAntecedentesLista && getAntecedentesLista.length == 1) {\n        checkeoAutomaticoFechaAntecedentes(parametro, id_campo);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getAntecedentesLista[0].attributes.fecha_creado,\n            name: 'check' + getAntecedentesLista[0].attributes.fecha_creado,\n            value: getAntecedentesLista[0].attributes.fecha_creado,\n            onChange: e => handleChangeFechaAntecedentes(0, parametro, id_campo),\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this), \" \", getAntecedentesLista[0].attributes.fecha_creado]\n        }, 'keyCheck' + getAntecedentesLista[0].attributes.fecha_creado, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this);\n      } else if (getAntecedentesLista.length > 1) {\n        return getAntecedentesLista.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + item.fecha_creado,\n              name: 'check' + item.fecha_creado,\n              value: item.fecha_creado //onChange={(e) => handleChangeFechaAntecedentes(e, parametro, id_campo)}\n              ,\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 33\n            }, this), \" \", item.attributes.fecha_creado]\n          }, 'keyCheck' + item.fecha_creado, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 29\n          }, this) // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectInteresados = (parametro, id_campo) => {\n    if (Array.isArray(getInteresadosLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getInteresadosLista && getInteresadosLista.length == 1) {\n        checkeoAutomaticoInteresados(parametro, id_campo);\n        var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getInteresadosLista[0].id,\n            name: 'check' + getInteresadosLista[0].id,\n            value: getInteresadosLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getInteresadosLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this);\n      } else if (getInteresadosLista.length > 1) {\n        return getInteresadosLista.map((item, i) => {\n          var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + nombre,\n              name: 'check' + nombre,\n              value: item.id,\n              onChange: e => handleChangeInteresados(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 33\n            }, this), \" \", nombre]\n          }, 'keyCheck' + nombre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 29\n          }, this) // <option key={nombre} value={nombre}>{nombre}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadesInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\n        let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getEntidadesInvestigadoLista[0].id,\n            name: 'check' + getEntidadesInvestigadoLista[0].id,\n            value: getEntidadesInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getEntidadesInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }, this);\n      } else if (getEntidadesInvestigadoLista.length > 1) {\n        return getEntidadesInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.nombre_investigado}`;\n          var nombre = `${item.attributes.nombre_investigado}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 33\n            }, this) //<option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const selectCargosInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getCargosInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getCargosInvestigadoLista[0].id,\n            name: 'check' + getCargosInvestigadoLista[0].id,\n            value: getCargosInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getCargosInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }, this);\n      } else if (getCargosInvestigadoLista.length > 1) {\n        return getCargosInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.cargo}`;\n          var nombre = `${item.attributes.cargo}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeCargosInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 33\n            }, this) // <option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const selectEntidadesInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\n\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getEntidadInvestigadoLista[0].id,\n            name: 'check' + getEntidadInvestigadoLista[0].id,\n            value: getEntidadInvestigadoLista[0].id //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getEntidadInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 21\n        }, this);\n      } else if (getEntidadInvestigadoLista.length > 1) {\n        return getEntidadInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.nombre_entidad}`;\n          var nombre = `${item.attributes.nombre_entidad}`;\n\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeEntidadesInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 33\n            }, this) //<option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const cargarValoresDeParametro = parametro => {\n    const arrayOtherElements = [\"Dependencia Origen\", \"Delegada\", \"Radicado\", \"Radicación\", \"Auto\"];\n    var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\n      return item.parametro == parametro;\n    });\n    var tempCampo = campoParametro[0]; // console.log(\"tempCampo -> \", tempCampo);\n\n    if (tempCampo != undefined && getListaParametrosBaseDatos[tempCampo.id_campo] != undefined) {\n      var itemCampo = getListaParametrosBaseDatos[tempCampo.id_campo]; // Tiene un valor por defecto\n\n      if (itemCampo.value != null) {\n        var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\n          if (item.parametro == parametro) {\n            item.id_campo = tempCampo.id_campo;\n            var itemCampoId = getListaParametrosBaseDatos[tempCampo.id_campo];\n            item.valor = itemCampoId.value != null ? itemCampoId.value : \"\";\n            item.valorTemporal = itemCampoId.value != null ? itemCampoId.value : \"\";\n          }\n\n          return item;\n        });\n        var validarElemento = document.getElementById('id' + itemCampo.title);\n\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        } // setListaCamposPorParametro({ data: newParams });\n\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: itemCampo.value\n        }, void 0, false);\n      } else if (itemCampo.title == \"Fecha Hechos\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectFechaAntecedentes(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Antecedentes\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectAntecedentes(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Interesados\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (getInteresadosLista[0] && getInteresadosLista.length == 1 && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectInteresados(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Investigado\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (getEntidadesInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1 && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectInvestigados(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Cargo\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (getCargosInvestigadoLista[0] && getCargosInvestigadoLista.length == 1 && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectCargosInvestigados(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 21\n        }, this);\n      } else if (itemCampo.type == \"Entidad\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n\n        if (getEntidadInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1 && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectEntidadesInvestigados(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Seleccione un campo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 21\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const selectChangeListaCampos = (parametro, id_campo, value) => {\n    //console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\n    var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n      if (item.parametro == parametro) {\n        item.id_campo = id_campo;\n        var itemCampo = getListaParametrosBaseDatos[id_campo];\n        item.valor = itemCampo.value != null ? itemCampo.value : value;\n        item.valorTemporal = itemCampo.value != null ? itemCampo.value : value;\n      }\n\n      return item;\n    }); //setListaCamposPorParametroDefinitiva({ data: newParams });\n    //console.log(newParams);\n  };\n\n  const columns = [{\n    name: 'Parametros de la plantilla',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: parametro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 32\n    }, this),\n    sortable: true,\n    width: \"15%\"\n  }, {\n    name: 'Campo',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      id: `id${parametro}`,\n      name: `name${parametro}`,\n      onChange: e => selectChangeListaCampos(parametro, e.target.value, \"\"),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Por favor seleccione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 21\n      }, this), selectCampos(parametro)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 17\n    }, this),\n    sortable: false,\n    width: \"25%\"\n  }, {\n    name: 'Valor seleccionado',\n    width: \"50%\",\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: cargarValoresDeParametro(parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 17\n    }, this)\n  } // {\n  //     name: 'Activar/Inactivar',\n  //     width: \"10%\",\n  //     cell: parametro =>\n  //         <div className='row'>\n  //             <div className='col'>\n  //                 {cargarCheckParametro(parametro)}\n  //             </div>\n  //         </div>\n  // }\n  ];\n\n  const cargarParametros = listaParametrosBaseDatos => {\n    setListaParametros(null);\n    const data = {\n      \"data\": {\n        \"type\": 'mas_actuaciones',\n        \"attributes\": {\n          \"id\": props.id_mas_actuacion\n        }\n      }\n    }; // Se ejecuta una busqueda del elemento\n    // var indexCampo = listaParametrosBaseDatos.findIndex(\n    //     x =>\n    //         x.title == item);\n\n    GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + props.id_mas_actuacion, data).then(datos => {\n      if (!datos.error) {\n        setListaParametros(datos);\n        var parametrosCampos = datos.params.map((item, i) => {\n          // QUEDA PENDIENTE VALIDAR CON LOS DATOS DE LA TABLA MAS_PARAMETRO_CAMPOS\n          var indexCampo = listaParametrosBaseDatos.findIndex(x => x.title == item);\n\n          if (indexCampo >= 0) {\n            return {\n              parametro: item,\n              id_campo: indexCampo,\n              valor: \"\"\n            };\n          } else {\n            return {\n              parametro: item,\n              id_campo: \"\",\n              valor: \"\"\n            };\n          }\n        });\n        setListaCamposPorParametroTemporal({\n          data: parametrosCampos\n        }); // Se cargan los antecedentes, interesados y entidades del investigado\n\n        cargarEntidadesInvestigado();\n        cargarAntecedentes();\n        cargarInteresados();\n      }\n    });\n  };\n\n  const cargarAntecedentes = () => {\n    const data = {\n      \"data\": {\n        \"type\": 'antecedente',\n        \"attributes\": {\n          \"antecedentes\": \"antecedentes\",\n          \"descripcion\": \"descripcion\",\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"fecha_registro\": Date.now(),\n          \"id_dependencia\": -1,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setAntecedentesLista(parametrosCampos);\n      }\n    });\n  };\n\n  const cargarInteresados = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"interesado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"tipo_documento\": \"1\",\n          \"numero_documento\": \"1\",\n          \"primer_nombre\": \"1\",\n          \"segundo_nombre\": \"1\",\n          \"primer_apellido\": \"1\",\n          \"segundo_apellido\": \"1\",\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setInteresadosLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Datos del interesado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const cargarEntidadesInvestigado = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"entidad_investigado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": \"1\",\n          \"requiere_registro\": true,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          var nombreInvestigado = item.attributes.nombre_investigado;\n          var cargoInvestigado = item.attributes.cargo;\n          var entidadInvestigado = item.attributes.nombre_entidad;\n\n          if (nombreInvestigado == null) {\n            item.attributes.nombre_investigado = \"NO_APLICA\";\n          }\n\n          if (cargoInvestigado == null) {\n            item.attributes.cargo = \"NO_APLICA\";\n          }\n\n          if (entidadInvestigado == null) {\n            item.attributes.nombre_entidad = \"NO_APLICA\";\n          }\n\n          item.checked = false;\n          return item;\n        });\n        setEntidadesInvestigadoLista(parametrosCampos);\n        setCargosInvestigadoLista(parametrosCampos);\n        setEntidadInvestigadoLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Entidades del investigado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n\n  const descargarArchivo = () => {\n    try {\n      window.showSpinner(true);\n      var params = getListaCamposPorParametroTemporal.data.map(item => {\n        return {\n          \"param\": item.parametro,\n          \"value\": item.valor\n        };\n      });\n      const data = {\n        \"data\": {\n          \"type\": \"mas_actuaciones\",\n          \"attributes\": {\n            \"params\": params\n          }\n        }\n      };\n      GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + props.id_mas_actuacion, data).then(datos => {\n        if (!datos.error) {\n          downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"docx\");\n          window.showSpinner(false);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: \",\n            message: datos.error.toString(),\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function downloadBase64File(contentType, base64Data, fileName, extension) {\n    const linkSource = `data:${contentType};base64,${base64Data}`;\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = linkSource;\n    downloadLink.download = fileName;\n    downloadLink.click();\n  }\n\n  const cargarCheckParametro = parametro => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        id: 'check' + parametro + '1',\n        name: 'check' + parametro + '1',\n        value: parametro + '1',\n        onChange: e => handleChangeStatus(e, parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 17\n      }, this)\n    }, 'keyCheck' + parametro + '1', false, {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleChangeStatus = (e, parametro) => {\n    // Se captura el elemento enviado por parametros\n    var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro); // Se valida si esta checkeado\n\n    if (e.target.checked) {\n      // Se devuelve el valor a vacio\n      var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n        // Se valida que el item recorrido sea igual al parametro checkeado\n        if (item.parametro == parametro) {\n          // Se captura el id del campo\n          item.id_campo = itemFilter[0].id_campo;\n          var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo]; // Se redefine el valor del item a vacio\n\n          item.valor = \"\";\n          item.valorTemporal = itemCampo.value != null ? itemCampo.value : itemFilter[0].value;\n        } // Se retorna el item\n\n\n        return item;\n      });\n    } else {\n      // Se devuelve el valor a vacio\n      var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n        // Se valida que el item recorrido sea igual al parametro checkeado\n        if (item.parametro == parametro) {\n          // Se captura el id del campo\n          item.id_campo = itemFilter[0].id_campo;\n          var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo]; // Se redefine el valor del item a su valor original\n\n          item.valor = item.valorTemporal;\n          item.valorTemporal = itemCampo.value != null ? itemCampo.value : itemFilter[0].value;\n        } // Se retorna el item\n\n\n        return item;\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 13\n    }, this), getListaParametros != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Parametros de la plantilla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1059,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-2 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n          columns: columns,\n          data: getListaParametros.params,\n          noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n          striped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-2 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mr-2\",\n          htmlFor: \"documento_ruta\",\n          children: \"Descargar documento pre-diligenciado con los valores seleccionados \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          title: \"Descargar documento diligenciado\",\n          onClick: () => descargarArchivo(),\n          className: \"btn btn-rounded btn-primary\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-file-word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 164\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1072,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Cargando parametros de la plantilla...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1077,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1076,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ActuacionParametrosPlantillaForm, \"rm4oCnoklqqkVuxcb8F9nyTiDuM=\", false, function () {\n  return [useLocation];\n});\n\n_c = ActuacionParametrosPlantillaForm;\nexport default ActuacionParametrosPlantillaForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActuacionParametrosPlantillaForm\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","DataTable","GenericApi","Spinner","ModalGen","getUser","ActuacionParametrosPlantillaForm","props","location","from","state","radicado","procesoDisciplinarioId","id_etapa","idEtapa","fechaRegistro","fechaIngreso","dependencia","nombre_dependencia","nombre","registradoPor","vigencia","generadoPor","nombre_completo","modalState","setModalState","title","message","show","getListaParametros","setListaParametros","params","getListaCamposPorParametroTemporal","setListaCamposPorParametroTemporal","data","getAntecedentesLista","setAntecedentesLista","links","meta","getInteresadosLista","setInteresadosLista","getEntidadesInvestigadoLista","setEntidadesInvestigadoLista","getCargosInvestigadoLista","setCargosInvestigadoLista","getEntidadInvestigadoLista","setEntidadInvestigadoLista","getParametrosCampos","setParametrosCampos","getListaParametrosBaseDatos","setListaParametrosBaseDatos","campos","value","type","fetchData","cargarTablaParametrosActuaciones","id_mas_actuacion","array","getGeneric","then","datos","error","index","length","element","attributes","nombre_campo","estado","validarValueParametros","push","check","cargarParametros","valor","selectCampos","parametro","map","item","i","itemFilter","filter","x","undefined","id_campo","handleChangeInteresados","e","checked","target","valorId","id","val","p","sujeto_procesal_nombre","primer_apellido","segundo_apellido","primer_nombre","segundo_nombre","selectChangeListaCampos","toString","checkeoAutomaticoInteresados","checkeoAutomaticoAntecedentes","descripcion","checkeoAutomaticoInvestigadosNombre","nombre_investigado","checkeoAutomaticoInvestigadosCargo","cargo","checkeoAutomaticoInvestigadosEntidad","nombre_entidad","checkeoAutomaticoFechaAntecedentes","fecha_creado","handleChangeAntecedentes","handleChangeFechaAntecedentes","handleChangeInvestigados","handleChangeCargosInvestigados","handleChangeEntidadesInvestigados","selectAntecedentes","Array","isArray","selectFechaAntecedentes","selectInteresados","selectInvestigados","selectCargosInvestigados","selectEntidadesInvestigados","cargarValoresDeParametro","arrayOtherElements","campoParametro","tempCampo","itemCampo","newParamsItem","itemCampoId","valorTemporal","validarElemento","document","getElementById","hasAttribute","setAttribute","newParams","columns","name","cell","sortable","width","listaParametrosBaseDatos","getByDataGeneric","parametrosCampos","indexCampo","findIndex","cargarEntidadesInvestigado","cargarAntecedentes","cargarInteresados","Date","now","redirect","nombreInvestigado","cargoInvestigado","entidadInvestigado","descargarArchivo","window","showSpinner","downloadBase64File","content_type","base_64","file_name","alert","global","Constants","TIPO_ALERTA","ERROR","console","contentType","base64Data","fileName","extension","linkSource","downloadLink","createElement","href","download","click","cargarCheckParametro","handleChangeStatus","DATA_TABLE","SIN_DATOS_TABLE"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Herramientas/ActuacionParametrosPlantillaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport '../../Utils/Constants';\r\nimport { getUser } from '../../Utils/Common';\r\n\r\nfunction ActuacionParametrosPlantillaForm(props) {\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let id_etapa = from.idEtapa;\r\n    const fechaRegistro = from.fechaRegistro;\r\n    const fechaIngreso = from.fechaIngreso;\r\n    const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\r\n    const registradoPor = from.registradoPor;\r\n    const vigencia = from.vigencia;\r\n    const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaParametros, setListaParametros] = useState({ params: [] });\r\n    const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({ data: [] });\r\n    //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getInteresadosLista, setInteresadosLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getParametrosCampos, setParametrosCampos] = useState();\r\n    const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({ data: [] });\r\n\r\n    const campos = [\r\n        { title: 'Antecedentes', value: null, type: \"Antecedentes\" },\r\n        { title: 'Dependencia', value: dependencia },\r\n        { title: 'Nombre', value: null, type: \"Investigados\" },\r\n        { title: 'Cargo', value: null, type: \"CargosInvestigados\" },\r\n        { title: 'Entidad', value: null, type: \"EntidadesInvestigados\" },\r\n        { title: 'Interesados', value: null, type: \"Interesados\" },\r\n        { title: 'Fecha de ingreso', value: fechaIngreso },\r\n        { title: 'Fecha de registro', value: fechaRegistro },\r\n        { title: 'Número de auto (generado despues de aprobación)', value: '${numero_de_auto}' },\r\n        { title: 'Número de radicado', value: radicado },\r\n        //{ id: 8, title: 'Campo de entrada por usuario', value: null },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            cargarTablaParametrosActuaciones();\r\n            //cargarCampos();\r\n        }\r\n        fetchData();\r\n    }, [props.id_mas_actuacion]);\r\n\r\n    // Metodo encargado de cargar los parametros generales de la plantilla de la BD\r\n    const cargarTablaParametrosActuaciones = () => {\r\n\r\n        // Se inicializa el array\r\n        var array = [];\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('parametro-campos').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se recorre el array para insertar los valores necesarios\r\n                    for (let index = 0; index < datos.data.length; index++) {\r\n\r\n                        // Se captura los datos por posicion\r\n                        const element = datos.data[index].attributes;\r\n                        const title = element.nombre_campo;\r\n                        const estado = element.estado == \"1\" ? true : false;\r\n                        const type = element.type;\r\n                        const value = validarValueParametros(type, estado);\r\n\r\n                        // Se añade el dato al array general\r\n                        array.push({ title: title, value: value, type: type, check: estado });\r\n                    }\r\n\r\n                    // Se setea la respuesta en la constante\r\n                    setListaParametrosBaseDatos(array);\r\n\r\n                    // Se generan la lista de parametros del documento\r\n                    cargarParametros(array);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de retorna el valor por el elemento\r\n    const validarValueParametros = (element, estado) => {\r\n\r\n        // Se inicializa la variable\r\n        let valor;\r\n\r\n        // Se valida por el elemento\r\n        if ((element == \"Sinproc\" || element == \"Número de radicado\"\r\n            || element == \"Radicación\" || element == \"Radicado\") && estado) {\r\n            valor = radicado;\r\n        } else if (element == \"Usuario\" && estado) {\r\n            valor = registradoPor;\r\n        } else if ((element == \"Dependencia Origen\" || element == \"Dependencia\") && estado) {\r\n            valor = dependencia;\r\n        } else if (element == \"Vigencia\" && estado) {\r\n            valor = vigencia;\r\n        } else if (element == \"Fecha de Registro\" && estado) {\r\n            valor = fechaRegistro;\r\n        } else if (element == \"Fecha de Ingreso\" && estado) {\r\n            valor = fechaIngreso;\r\n        } else if (element == \"Generado\" && estado) {\r\n            valor = generadoPor;\r\n        } else if ((element == \"Número de auto (generado despues de aprobación)\" || element == \"Auto\") && estado) {\r\n            valor = \"${numero_de_auto}\";\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return valor;\r\n    }\r\n\r\n    const selectCampos = (parametro) => {\r\n        return (\r\n            getListaParametrosBaseDatos.map((item, i) => {\r\n\r\n                var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n                if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\r\n                    return (\r\n                        <option selected key={i} value={i}>{item.title}</option>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <option key={i} value={i}>{item.title}</option>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleChangeInteresados = (e, parametro, id_campo) => {\r\n\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getInteresadosLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setInteresadosLista(valorId);\r\n        let val = getInteresadosLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.sujeto_procesal_nombre} ${p.attributes.primer_apellido} ${p.attributes.segundo_apellido} ${p.attributes.primer_nombre} ${p.attributes.segundo_nombre}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n    }\r\n\r\n    function checkeoAutomaticoInteresados(parametro, id_campo) {\r\n        setInteresadosLista(getInteresadosLista);\r\n        var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\r\n        setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\r\n        var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\r\n        setCargosInvestigadoLista(getCargosInvestigadoLista);\r\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\r\n        setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\r\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoFechaAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.fecha_creado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    const handleChangeAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.descripcion}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeFechaAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.fecha_creado}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadesInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_investigado) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setEntidadesInvestigadoLista(valorId);\r\n        let val = getEntidadesInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_investigado}`;\r\n                var nombre = `${p.attributes.nombre_investigado}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getCargosInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.cargo) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getCargosInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.cargo}`;\r\n                var nombre = `${p.attributes.cargo}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_entidad) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getEntidadInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_entidad}`;\r\n                var nombre = `${p.attributes.nombre_entidad}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const selectAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].id}\r\n                            name={'check' + getAntecedentesLista[0].id}\r\n                            value={getAntecedentesLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.descripcion}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.id}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.id}\r\n                                    name={'check' + item.id}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.descripcion}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectFechaAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoFechaAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].attributes.fecha_creado} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].attributes.fecha_creado}\r\n                            name={'check' + getAntecedentesLista[0].attributes.fecha_creado}\r\n                            value={getAntecedentesLista[0].attributes.fecha_creado}\r\n                            onChange={(e) => handleChangeFechaAntecedentes(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.fecha_creado}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.fecha_creado}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.fecha_creado}\r\n                                    name={'check' + item.fecha_creado}\r\n                                    value={item.fecha_creado}\r\n                                    //onChange={(e) => handleChangeFechaAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.fecha_creado}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInteresados = (parametro, id_campo) => {\r\n        if (Array.isArray(getInteresadosLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getInteresadosLista && getInteresadosLista.length == 1) {\r\n                checkeoAutomaticoInteresados(parametro, id_campo);\r\n                var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getInteresadosLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getInteresadosLista[0].id}\r\n                            name={'check' + getInteresadosLista[0].id}\r\n                            value={getInteresadosLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getInteresadosLista.length > 1) {\r\n                return (\r\n                    getInteresadosLista.map((item, i) => {\r\n                        var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + nombre}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + nombre}\r\n                                    name={'check' + nombre}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeInteresados(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {nombre}\r\n                            </div>\r\n                            // <option key={nombre} value={nombre}>{nombre}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadesInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\r\n                let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadesInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            value={getEntidadesInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadesInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadesInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_investigado}`;\r\n                        var nombre = `${item.attributes.nombre_investigado}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectCargosInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getCargosInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\r\n                var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getCargosInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getCargosInvestigadoLista[0].id}\r\n                            name={'check' + getCargosInvestigadoLista[0].id}\r\n                            value={getCargosInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getCargosInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getCargosInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.cargo}`;\r\n                        var nombre = `${item.attributes.cargo}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeCargosInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                // <option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectEntidadesInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\r\n                var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadInvestigadoLista[0].id}\r\n                            value={getEntidadInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_entidad}`;\r\n                        var nombre = `${item.attributes.nombre_entidad}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeEntidadesInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const cargarValoresDeParametro = (parametro) => {\r\n\r\n        const arrayOtherElements = [\r\n            \"Dependencia Origen\",\r\n            \"Delegada\",\r\n            \"Radicado\",\r\n            \"Radicación\",\r\n            \"Auto\"\r\n        ];\r\n\r\n        var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\r\n            return item.parametro == parametro;\r\n        });\r\n\r\n        var tempCampo = campoParametro[0];\r\n\r\n        // console.log(\"tempCampo -> \", tempCampo);\r\n\r\n        if (tempCampo != undefined && getListaParametrosBaseDatos[tempCampo.id_campo] != undefined) {\r\n            var itemCampo = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n\r\n            // Tiene un valor por defecto\r\n            if (itemCampo.value != null) {\r\n\r\n                var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\r\n                    if (item.parametro == parametro) {\r\n                        item.id_campo = tempCampo.id_campo;\r\n                        var itemCampoId = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n                        item.valor = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                        item.valorTemporal = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                var validarElemento = document.getElementById('id' + itemCampo.title);\r\n\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                // setListaCamposPorParametro({ data: newParams });\r\n\r\n                return (\r\n                    <>{itemCampo.value}</>\r\n                )\r\n            } else if (itemCampo.title == \"Fecha Hechos\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectFechaAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Antecedentes\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Interesados\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getInteresadosLista[0] && getInteresadosLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectInteresados(parametro, tempCampo.id_campo)}\r\n                        {/* {handleChangeInteresados(0, parametro, tempCampo.id_campo)} */}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Investigado\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getEntidadesInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Cargo\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getCargosInvestigadoLista[0] && getCargosInvestigadoLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectCargosInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else if (itemCampo.type == \"Entidad\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if ((getEntidadInvestigadoLista[0] && getEntidadInvestigadoLista.length == 1) && validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectEntidadesInvestigados(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <label>Seleccione un campo</label>\r\n                )\r\n            }\r\n        }\r\n        return (<></>)\r\n    }\r\n\r\n    const selectChangeListaCampos = (parametro, id_campo, value) => {\r\n\r\n        //console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\r\n\r\n        var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n            if (item.parametro == parametro) {\r\n                item.id_campo = id_campo;\r\n                var itemCampo = getListaParametrosBaseDatos[id_campo];\r\n\r\n                item.valor = (itemCampo.value != null) ? itemCampo.value : value;\r\n                item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : value;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        //setListaCamposPorParametroDefinitiva({ data: newParams });\r\n        //console.log(newParams);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Parametros de la plantilla',\r\n            cell: parametro => <div><strong>{parametro}</strong></div>,\r\n            sortable: true,\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            name: 'Campo',\r\n            cell: parametro =>\r\n                <select className=\"form-control\" id={`id${parametro}`} name={`name${parametro}`}\r\n                    onChange={e => selectChangeListaCampos(parametro, e.target.value, \"\")}>\r\n                    <option value=\"\">Por favor seleccione</option>\r\n                    {selectCampos(parametro)}\r\n                </select>,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'Valor seleccionado',\r\n            width: \"50%\",\r\n            cell: parametro =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresDeParametro(parametro)}\r\n                    </div>\r\n                </div>\r\n        },\r\n        // {\r\n        //     name: 'Activar/Inactivar',\r\n        //     width: \"10%\",\r\n        //     cell: parametro =>\r\n        //         <div className='row'>\r\n        //             <div className='col'>\r\n        //                 {cargarCheckParametro(parametro)}\r\n        //             </div>\r\n        //         </div>\r\n        // }\r\n    ];\r\n\r\n    const cargarParametros = (listaParametrosBaseDatos) => {\r\n\r\n        setListaParametros(null);\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'mas_actuaciones',\r\n                \"attributes\": {\r\n                    \"id\": props.id_mas_actuacion\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se ejecuta una busqueda del elemento\r\n        // var indexCampo = listaParametrosBaseDatos.findIndex(\r\n        //     x =>\r\n        //         x.title == item);\r\n\r\n        GenericApi.getByDataGeneric('mas_actuaciones/parametros-plantilla/' + props.id_mas_actuacion, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaParametros(datos);\r\n\r\n                    var parametrosCampos = datos.params.map((item, i) => {\r\n\r\n                        // QUEDA PENDIENTE VALIDAR CON LOS DATOS DE LA TABLA MAS_PARAMETRO_CAMPOS\r\n                        var indexCampo = listaParametrosBaseDatos.findIndex(\r\n                            x =>\r\n\r\n                                x.title == item\r\n\r\n                        );\r\n\r\n                        if (indexCampo >= 0) {\r\n                            return { parametro: item, id_campo: indexCampo, valor: \"\" };\r\n                        } else {\r\n                            return { parametro: item, id_campo: \"\", valor: \"\" };\r\n                        }\r\n                    });\r\n\r\n                    setListaCamposPorParametroTemporal({ data: parametrosCampos });\r\n\r\n                    // Se cargan los antecedentes, interesados y entidades del investigado\r\n                    cargarEntidadesInvestigado();\r\n                    cargarAntecedentes();\r\n                    cargarInteresados();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarAntecedentes = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'antecedente',\r\n                \"attributes\": {\r\n                    \"antecedentes\": \"antecedentes\",\r\n                    \"descripcion\": \"descripcion\",\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"fecha_registro\": Date.now(),\r\n                    \"id_dependencia\": -1,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n        GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n\r\n                    setAntecedentesLista(parametrosCampos);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarInteresados = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"interesado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"tipo_documento\": \"1\",\r\n                    \"numero_documento\": \"1\",\r\n                    \"primer_nombre\": \"1\",\r\n                    \"segundo_nombre\": \"1\",\r\n                    \"primer_apellido\": \"1\",\r\n                    \"segundo_apellido\": \"1\",\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setInteresadosLista(parametrosCampos);\r\n                } else {\r\n                    setModalState({ title: \"Datos del interesado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarEntidadesInvestigado = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"entidad_investigado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": \"1\",\r\n                    \"requiere_registro\": true,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n\r\n                        var nombreInvestigado = item.attributes.nombre_investigado;\r\n                        var cargoInvestigado = item.attributes.cargo;\r\n                        var entidadInvestigado = item.attributes.nombre_entidad;\r\n\r\n                        if (nombreInvestigado == null) {\r\n                            item.attributes.nombre_investigado = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (cargoInvestigado == null) {\r\n                            item.attributes.cargo = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (entidadInvestigado == null) {\r\n                            item.attributes.nombre_entidad = \"NO_APLICA\";\r\n                        }\r\n\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setEntidadesInvestigadoLista(parametrosCampos);\r\n                    setCargosInvestigadoLista(parametrosCampos);\r\n                    setEntidadInvestigadoLista(parametrosCampos);\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Entidades del investigado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const descargarArchivo = () => {\r\n        try {\r\n            window.showSpinner(true);\r\n\r\n            var params = getListaCamposPorParametroTemporal.data.map(item => {\r\n                return {\r\n                    \"param\": item.parametro,\r\n                    \"value\": item.valor\r\n                };\r\n            });\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"mas_actuaciones\",\r\n                    \"attributes\": {\r\n                        \"params\": params,\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.getByDataGeneric('mas_actuaciones/plantilla-diligenciada/' + props.id_mas_actuacion, data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"docx\");\r\n                        window.showSpinner(false);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: \", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    function downloadBase64File(contentType, base64Data, fileName, extension) {\r\n        const linkSource = `data:${contentType};base64,${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    const cargarCheckParametro = (parametro) => {\r\n\r\n        return (\r\n            <div className=\"col-md-12\" key={'keyCheck' + parametro + '1'} >\r\n                <input type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    id={'check' + parametro + '1'}\r\n                    name={'check' + parametro + '1'}\r\n                    value={parametro + '1'}\r\n                    onChange={(e) => handleChangeStatus(e, parametro)}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n\r\n    const handleChangeStatus = (e, parametro) => {\r\n\r\n        // Se captura el elemento enviado por parametros\r\n        var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n        // Se valida si esta checkeado\r\n        if (e.target.checked) {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a vacio\r\n                    item.valor = \"\";\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n\r\n\r\n        } else {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a su valor original\r\n                    item.valor = item.valorTemporal;\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <ModalGen data={modalState} />\r\n            {getListaParametros != null ?\r\n                <>\r\n                    <div className='col-md-12'>\r\n                        <label>Parametros de la plantilla</label>\r\n                    </div>\r\n                    <div className='col-md-12 mt-2 mb-2'>\r\n                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                            columns={columns}\r\n                            data={getListaParametros.params}\r\n                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                            striped\r\n                        />\r\n                    </div>\r\n                    <div className='col-md-12 mt-2 mb-2'>\r\n                        <label className='mr-2' htmlFor=\"documento_ruta\">Descargar documento pre-diligenciado con los valores seleccionados </label>\r\n                        <button type=\"button\" title='Descargar documento diligenciado' onClick={() => descargarArchivo()} className=\"btn btn-rounded btn-primary\"> <i className=\"fas fa-file-word\"></i></button>\r\n                    </div>\r\n                </>\r\n                :\r\n                <div className='col-md-12'>\r\n                    <label>Cargando parametros de la plantilla...</label>\r\n                </div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ActuacionParametrosPlantillaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}