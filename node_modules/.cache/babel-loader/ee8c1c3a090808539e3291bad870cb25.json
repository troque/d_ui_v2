{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Actuaciones\\\\SolicitudDeAnulacion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { Link } from \"react-router-dom\";\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { useLocation } from 'react-router-dom';\nimport { getUser } from '../../../components/Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SolicitudDeAnulacion() {\n  _s();\n  const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\n  const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\n  const [getUsuarioName, setUsuarioName] = useState(\"\");\n  const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getIdDependenciaAtiendaAnulaciones, setIdDependenciaAtiendaAnulaciones] = useState(0);\n  const [getNameUsuario, setNameUsuario] = useState(\"\");\n  const [getIdActuacion, setIdActuacion] = useState(\"\");\n  const [getNombreUsuario, setNombreUsuario] = useState(\"\");\n  const location = useLocation();\n  const {\n    from,\n    selected_id_etapa,\n    id,\n    nombre,\n    estadoActualActuacion,\n    activacion\n  } = location.state;\n  const [getRoutes, setRoutes] = useState({\n    ver_detalle: \"/ActuacionesVer/\" + from.procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/1\"\n  });\n  const [getEnviarDatos, setEnviarDatos] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      setNombreUsuario(getUser().nombre);\n      obtenerParametros();\n      IdDependenciaAceptaSolicitudesDeAnulacion();\n      obtenerTodosLosDatosDeLaActuacion();\n    }\n    fetchData();\n  }, []);\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      };\n\n      //buscamos el parametro\n      GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          setModalState({\n            title: \"ANTECEDENTES\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/AntecedentesForm',\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      // console.log(error);\n    }\n  };\n  const IdDependenciaAceptaSolicitudesDeAnulacion = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"mas_parametro\",\n        \"attributes\": {\n          \"nombre\": \"id_dependencia_que_atiende_solicitud_de_anulacion\"\n        }\n      }\n    };\n\n    //buscamos el parametro\n    GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(datos => {\n      if (!datos.error) {\n        setIdDependenciaAtiendaAnulaciones(datos.data[0].attributes.valor);\n        IdUsuarioJefeDependencia(datos.data[0].attributes.valor);\n      } else {\n        // Aqui tengo que colocar algun mensaje de que no existe una dependencia asignada \n        // para atender las solicitudes de anulacion\n      }\n    });\n  };\n  const IdUsuarioJefeDependencia = id => {\n    GenericApi.getByIdGeneric(\"mas-dependencia-origen\", id).then(datos => {\n      if (!datos.error) {\n        consultarUsuario(datos.data.attributes.id_usuario_jefe);\n      } else {}\n    });\n  };\n  const consultarUsuario = id => {\n    GenericApi.getByIdGeneric(\"usuario\", id).then(datos => {\n      if (!datos.error) {\n        setNameUsuario(datos.data.attributes.name);\n        datosDelUsuarioARemitir(datos.data.attributes.name);\n      } else {}\n      window.showSpinner(false);\n    });\n  };\n  const enviarDatos = () => {\n    let valores = getEnviarDatos;\n\n    // Se usa el cargando\n    window.showSpinner(true);\n\n    // Se inicializa la data\n    let data = {\n      \"data\": {\n        \"type\": \"transacciones\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\n          \"id_dependencia_origen\": getIdDependenciaAtiendaAnulaciones,\n          \"usuario_a_remitir\": getNameUsuario,\n          \"descripcion_a_remitir\": valores.informacion,\n          \"id_etapa\": 3\n        }\n      }\n    };\n\n    // Se consume la API\n    GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no hay error\n      if (!datos.error) {\n        // Se llama el metodo\n        guardarTrazabilidadActuaciones();\n      }\n    });\n  };\n  const guardarTrazabilidadActuaciones = () => {\n    // Se inicializa la data\n    let data = {\n      \"data\": {\n        \"type\": \"trazabilidad-actuaciones\",\n        \"attributes\": {\n          \"uuid_actuacion\": id,\n          \"id_estado_actuacion\": activacion ? global.Constants.ESTADO_ACTUACION.SOLICITUD_ACTIVACION : global.Constants.ESTADO_ACTUACION.SOLICITUD_INACTIVACION,\n          \"observacion\": \"Solicitud de \" + (activacion ? 'activación' : 'inactivación'),\n          \"estado\": 1,\n          \"envia_correo\": 1,\n          \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\n          \"activacion\": activacion\n        }\n      }\n    };\n\n    // Se consume la API\n    GenericApi.addGeneric('trazabilidad-actuaciones', data).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no hay error\n      if (!datos.error) {\n        // Se cambia el estado\n        cambiarEstadoEnActuaciones();\n\n        // Se quita el cargando\n        window.showSpinner(false);\n\n        // constante\n        const menasjeModal = 'EL PROCESO CON RADICADO: ' + from.radicado.toUpperCase() + ' es enviado por Solicitud de ' + (activacion ? 'activación' : 'inactivación') + ' al usuario: ' + getUsuarioNombre.toUpperCase() + ' ' + getUsuarioApellido.toUpperCase() + ' (' + getUsuarioName.toUpperCase() + ')  de la dependencia: ' + getUsuarioDependenciaNombre.toUpperCase() + '';\n\n        // Se setea el modal\n        setModalState({\n          title: \"SINPROC N° \" + from.radicado.toUpperCase() + \" :: ENVIAR SOLICITUD DE \" + (activacion ? 'ACTIVACIÓN' : 'INACTIVACIÓN'),\n          message: menasjeModal.toUpperCase(),\n          show: true,\n          redirect: '/MisPendientes',\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        // Se setea el modal\n        setModalState({\n          title: \"SINPROC N° \" + from.radicado.toUpperCase() + \" :: ENVIAR SOLICITUD DE \" + (activacion ? 'ACTIVACIÓN' : 'INACTIVACIÓN'),\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/MisPendientes',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n  const cambiarEstadoEnActuaciones = () => {\n    // Se inicializa la data\n    let data = {\n      \"data\": {\n        \"type\": \"actuaciones\",\n        \"attributes\": {\n          \"id_actuacion\": getIdActuacion,\n          \"usuario_accion\": getNombreUsuario,\n          \"id_estado_actuacion\": activacion ? global.Constants.ESTADO_ACTUACION.SOLICITUD_ACTIVACION : global.Constants.ESTADO_ACTUACION.SOLICITUD_INACTIVACION,\n          \"estado\": 1,\n          \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\n          \"id_etapa\": selected_id_etapa\n        }\n      }\n    };\n\n    // Se consume la API\n    GenericApi.updateGeneric(\"actuaciones\", id, data);\n  };\n  const obtenerTodosLosDatosDeLaActuacion = () => {\n    // Se consume la API\n    GenericApi.getGeneric(\"actuaciones/\" + id).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya errores\n      if (!datos.error) {\n        // Se setean los valores\n        setIdActuacion(datos.data.attributes.id_actuacion);\n      }\n    });\n  };\n  const datosDelUsuarioARemitir = name => {\n    GenericApi.getGeneric('usuario/get-usuario-por-name/' + name).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya errores\n      if (!datos.error) {\n        // Se setean los valores\n        setUsuarioNombre(datos.data[0].attributes.nombre);\n        setUsuarioApellido(datos.data[0].attributes.apellido);\n        setUsuarioName(datos.data[0].attributes.name);\n        setUsuarioDependenciaNombre(datos.data[0].attributes.dependencia.nombre);\n      }\n    });\n  };\n  const showModalAnulacion = () => {\n    window.showConfirmacionAnulacionActuacion(true);\n  };\n\n  /*Modal: mensaje de confirmación para realizar el cambio de etapa */\n  const componentAlertConfirmacion = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal fade\",\n        id: \"modal-block-popout-confirmacion-anulacion-actuacion\",\n        tabIndex: \"-1\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"modal-block-popout\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog modal-dialog-popout\",\n          role: \"document\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block block-themed block-transparent mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-header bg-primary-dark\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"block-title\",\n                  children: \"CONFIRMACI\\xD3N\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-options\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn-block-option\",\n                    \"data-dismiss\": \"modal\",\n                    \"aria-label\": \"Close\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-fw fa-times\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 317,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content\",\n                children: activacion ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\xBFEST\\xC1 SEGURO QUE DESEA ACTIVAR ESTA ACTUACI\\xD3N?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\xBFEST\\xC1 SEGURO QUE DESEA INACTIVAR ESTA ACTUACI\\xD3N?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right bg-light\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-primary\",\n                  \"data-dismiss\": \"modal\",\n                  onClick: () => enviarDatos(),\n                  children: global.Constants.BOTON_NOMBRE.ACEPTAR\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  \"data-dismiss\": \"modal\",\n                  onClick: () => setEnviarDatos(null),\n                  children: global.Constants.BOTON_NOMBRE.CANCELAR\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [componentAlertConfirmacion(), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        informacion: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        setCountTextArea(valores.informacion.length);\n        let errores = {};\n        if (!valores.informacion) {\n          errores.informacion = 'Debe ingresar un valor';\n        } else if (valores.informacion.length <= getMinimoTextArea) {\n          errores.informacion = 'La descripción debe tener almenos ' + getMinimoTextArea + ' caracteres';\n        }\n        if (valores.informacion) {\n          if (containsSpecialChars(valores.informacion)) errores.informacion = 'Tiene caracteres inválidos';\n        }\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        setEnviarDatos(valores);\n        showModalAnulacion();\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w2d_block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"breadcrumb\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"breadcrumb breadcrumb-alt push\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/MisPendientes`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Mis pendientes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 379,\n                      columnNumber: 138\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/RamasProceso/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Ramas del proceso\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 161\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/ActuacionesLista/`,\n                    state: {\n                      from: from,\n                      selected_id_etapa: selected_id_etapa\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Actuaciones\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 203\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: getRoutes.ver_detalle,\n                    state: {\n                      from: from,\n                      selected_id_etapa: selected_id_etapa,\n                      id: id,\n                      nombre: nombre,\n                      estadoActualActuacion: estadoActualActuacion\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: [\"Actuaci\\xF3n \", nombre.toLowerCase()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 274\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [\"Solicitar \", activacion ? 'Activación' : 'Inactivación']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-themed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: [\"ACTUACI\\xD3N \", nombre.toUpperCase(), \" :: SOLICITUD DE \", activacion ? 'ACTIVACIÓN' : 'INACTIVACIÓN', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"informacion\",\n                      children: [\"MOTIVO PORQU\\xC9 SE SOLICITA \", activacion ? 'ACTIVACIÓN' : 'INACTIVACIÓN', \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 396,\n                        columnNumber: 145\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      as: \"textarea\",\n                      className: \"form-control\",\n                      id: \"informacion\",\n                      name: \"informacion\",\n                      rows: \"6\",\n                      placeholder: activacion ? 'INFORMACIÓN PARA SU SOLICITUD DE ACTIVACIÓN....' : 'INFORMACIÓN PARA SU SOLICITUD DE INACTIVACIÓN....',\n                      maxLength: getMaximoTextArea,\n                      minLength: getMinimoTextArea\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-right\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-primary\",\n                        children: [countTextArea, \" / \", getMaximoTextArea]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 400,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"informacion\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.informacion\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 96\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-rounded btn-primary\",\n                  children: \"ACEPTAR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: getRoutes.ver_detalle,\n                  state: {\n                    from: from,\n                    selected_id_etapa: selected_id_etapa,\n                    id: id,\n                    nombre: nombre,\n                    estadoActualActuacion: estadoActualActuacion\n                  },\n                  className: \"font-size-h5 font-w600\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-rounded btn-outline-primary\",\n                    children: \"CANCELAR\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SolicitudDeAnulacion, \"1d+s50tfPlnJr00L5vHCTW1iwv0=\", false, function () {\n  return [useLocation];\n});\n_c = SolicitudDeAnulacion;\nexport default SolicitudDeAnulacion;\nvar _c;\n$RefreshReg$(_c, \"SolicitudDeAnulacion\");","map":{"version":3,"names":["React","useEffect","useState","Spinner","ModalGen","ErrorMessage","Field","Form","Formik","Link","GenericApi","useLocation","getUser","SolicitudDeAnulacion","getUsuarioNombre","setUsuarioNombre","getUsuarioApellido","setUsuarioApellido","getUsuarioName","setUsuarioName","getUsuarioDependenciaNombre","setUsuarioDependenciaNombre","getModalState","setModalState","title","message","show","countTextArea","setCountTextArea","getMinimoTextArea","setMinimoTextArea","getMaximoTextArea","setMaximoTextArea","getIdDependenciaAtiendaAnulaciones","setIdDependenciaAtiendaAnulaciones","getNameUsuario","setNameUsuario","getIdActuacion","setIdActuacion","getNombreUsuario","setNombreUsuario","location","from","selected_id_etapa","id","nombre","estadoActualActuacion","activacion","state","getRoutes","setRoutes","ver_detalle","procesoDisciplinarioId","getEnviarDatos","setEnviarDatos","fetchData","window","showSpinner","obtenerParametros","IdDependenciaAceptaSolicitudesDeAnulacion","obtenerTodosLosDatosDeLaActuacion","containsSpecialChars","str","result","global","Constants","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","data","getByDataGeneric","then","datos","error","length","filter","map","filteredName","toString","redirect","alert","TIPO_ALERTA","ERROR","attributes","valor","IdUsuarioJefeDependencia","getByIdGeneric","consultarUsuario","id_usuario_jefe","name","datosDelUsuarioARemitir","enviarDatos","valores","informacion","addGeneric","guardarTrazabilidadActuaciones","ESTADO_ACTUACION","SOLICITUD_ACTIVACION","SOLICITUD_INACTIVACION","cambiarEstadoEnActuaciones","menasjeModal","radicado","toUpperCase","EXITO","updateGeneric","getGeneric","id_actuacion","apellido","dependencia","showModalAnulacion","showConfirmacionAnulacionActuacion","componentAlertConfirmacion","BOTON_NOMBRE","ACEPTAR","CANCELAR","errores","resetForm","errors","toLowerCase"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Actuaciones/SolicitudDeAnulacion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Link } from \"react-router-dom\";\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getUser } from '../../../components/Utils/Common';\r\n\r\nfunction SolicitudDeAnulacion() {\r\n\r\n    const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\r\n    const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\r\n    const [getUsuarioName, setUsuarioName] = useState(\"\");\r\n    const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\r\n\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getIdDependenciaAtiendaAnulaciones, setIdDependenciaAtiendaAnulaciones] = useState(0);\r\n    const [getNameUsuario, setNameUsuario] = useState(\"\");\r\n    const [getIdActuacion, setIdActuacion] = useState(\"\");\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const location = useLocation()\r\n    const { from, selected_id_etapa, id, nombre, estadoActualActuacion, activacion } = location.state;\r\n    const [getRoutes, setRoutes] = useState({\r\n        ver_detalle: \"/ActuacionesVer/\" + from.procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/1\"\r\n    });\r\n    const [getEnviarDatos, setEnviarDatos] = useState()\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            setNombreUsuario(getUser().nombre);\r\n            obtenerParametros();\r\n            IdDependenciaAceptaSolicitudesDeAnulacion();\r\n            obtenerTodosLosDatosDeLaActuacion();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    const obtenerParametros = () => {\r\n        try {\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: \"ANTECEDENTES\", message: datos.error.toString(), show: true, redirect: '/AntecedentesForm', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n        }\r\n    }\r\n\r\n    const IdDependenciaAceptaSolicitudesDeAnulacion = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"mas_parametro\",\r\n                \"attributes\": {\r\n                    \"nombre\": \"id_dependencia_que_atiende_solicitud_de_anulacion\"\r\n                }\r\n            }\r\n        }\r\n\r\n        //buscamos el parametro\r\n        GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n            datos => {\r\n\r\n                if (!datos.error) {\r\n                    setIdDependenciaAtiendaAnulaciones(datos.data[0].attributes.valor);\r\n                    IdUsuarioJefeDependencia(datos.data[0].attributes.valor);\r\n                } else {\r\n                    // Aqui tengo que colocar algun mensaje de que no existe una dependencia asignada \r\n                    // para atender las solicitudes de anulacion\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const IdUsuarioJefeDependencia = (id) => {\r\n        GenericApi.getByIdGeneric(\"mas-dependencia-origen\", id).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    consultarUsuario(datos.data.attributes.id_usuario_jefe);\r\n                } else {\r\n\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const consultarUsuario = (id) => {\r\n        GenericApi.getByIdGeneric(\"usuario\", id).then(\r\n            datos => {\r\n\r\n                if (!datos.error) {\r\n                    setNameUsuario(datos.data.attributes.name);\r\n                    datosDelUsuarioARemitir(datos.data.attributes.name);\r\n                } else {\r\n\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    const enviarDatos = () => {\r\n        \r\n        let valores = getEnviarDatos;\r\n\r\n        // Se usa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa la data\r\n        let data = {\r\n            \"data\": {\r\n                \"type\": \"transacciones\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                    \"id_dependencia_origen\": getIdDependenciaAtiendaAnulaciones,\r\n                    \"usuario_a_remitir\": getNameUsuario,\r\n                    \"descripcion_a_remitir\": valores.informacion,\r\n                    \"id_etapa\": 3\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se consume la API\r\n        GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no hay error\r\n                if (!datos.error) {\r\n\r\n                    // Se llama el metodo\r\n                    guardarTrazabilidadActuaciones();\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const guardarTrazabilidadActuaciones = () => {\r\n\r\n        // Se inicializa la data\r\n        let data = {\r\n            \"data\": {\r\n                \"type\": \"trazabilidad-actuaciones\",\r\n                \"attributes\": {\r\n                    \"uuid_actuacion\": id,\r\n                    \"id_estado_actuacion\": (activacion ? global.Constants.ESTADO_ACTUACION.SOLICITUD_ACTIVACION : global.Constants.ESTADO_ACTUACION.SOLICITUD_INACTIVACION),\r\n                    \"observacion\": \"Solicitud de \" + (activacion ? 'activación' : 'inactivación'),\r\n                    \"estado\": 1,\r\n                    \"envia_correo\": 1,\r\n                    \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                    \"activacion\": activacion\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se consume la API\r\n        GenericApi.addGeneric('trazabilidad-actuaciones', data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no hay error\r\n                if (!datos.error) {\r\n\r\n                    // Se cambia el estado\r\n                    cambiarEstadoEnActuaciones();\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n\r\n                    // constante\r\n                    const menasjeModal = 'EL PROCESO CON RADICADO: ' + from.radicado.toUpperCase() + ' es enviado por Solicitud de ' + (activacion ? 'activación' : 'inactivación') + ' al usuario: ' + getUsuarioNombre.toUpperCase() + ' ' + getUsuarioApellido.toUpperCase() + ' (' + getUsuarioName.toUpperCase() + ')  de la dependencia: ' + getUsuarioDependenciaNombre.toUpperCase() + '';\r\n\r\n                    // Se setea el modal\r\n                    setModalState({\r\n                        title: \"SINPROC N° \" + from.radicado.toUpperCase() + \" :: ENVIAR SOLICITUD DE \" + (activacion ? 'ACTIVACIÓN' : 'INACTIVACIÓN'),\r\n                        message: menasjeModal.toUpperCase(),\r\n                        show: true,\r\n                        redirect: '/MisPendientes',\r\n                        alert: global.Constants.TIPO_ALERTA.EXITO\r\n                    });\r\n                } else {\r\n\r\n                    // Se setea el modal\r\n                    setModalState({\r\n                        title: \"SINPROC N° \" + from.radicado.toUpperCase() + \" :: ENVIAR SOLICITUD DE \" + (activacion ? 'ACTIVACIÓN' : 'INACTIVACIÓN'),\r\n                        message: datos.error.toString(),\r\n                        show: true,\r\n                        redirect: '/MisPendientes',\r\n                        alert: global.Constants.TIPO_ALERTA.ERROR\r\n                    });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cambiarEstadoEnActuaciones = () => {\r\n\r\n        // Se inicializa la data\r\n        let data = {\r\n            \"data\": {\r\n                \"type\": \"actuaciones\",\r\n                \"attributes\": {\r\n                    \"id_actuacion\": getIdActuacion,\r\n                    \"usuario_accion\": getNombreUsuario,\r\n                    \"id_estado_actuacion\": (activacion ? global.Constants.ESTADO_ACTUACION.SOLICITUD_ACTIVACION : global.Constants.ESTADO_ACTUACION.SOLICITUD_INACTIVACION),\r\n                    \"estado\": 1,\r\n                    \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                    \"id_etapa\": selected_id_etapa\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se consume la API\r\n        GenericApi.updateGeneric(\"actuaciones\", id, data);\r\n    }\r\n\r\n    const obtenerTodosLosDatosDeLaActuacion = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getGeneric(\"actuaciones/\" + id).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya errores\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los valores\r\n                    setIdActuacion(datos.data.attributes.id_actuacion);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const datosDelUsuarioARemitir = (name) => {\r\n        GenericApi.getGeneric('usuario/get-usuario-por-name/' + name).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya errores\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los valores\r\n                    setUsuarioNombre(datos.data[0].attributes.nombre);\r\n                    setUsuarioApellido(datos.data[0].attributes.apellido);\r\n                    setUsuarioName(datos.data[0].attributes.name);\r\n                    setUsuarioDependenciaNombre(datos.data[0].attributes.dependencia.nombre);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const showModalAnulacion = () => {\r\n        window.showConfirmacionAnulacionActuacion(true)\r\n    }\r\n\r\n    /*Modal: mensaje de confirmación para realizar el cambio de etapa */\r\n    const componentAlertConfirmacion = () => {\r\n        return (\r\n            <>\r\n                <div className=\"modal fade\" id=\"modal-block-popout-confirmacion-anulacion-actuacion\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"modal-block-popout\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-popout\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"block block-themed block-transparent mb-0\">\r\n                                <div className=\"block-header bg-primary-dark\">\r\n                                    <h3 className=\"block-title\">CONFIRMACIÓN</h3>\r\n                                    <div className=\"block-options\">\r\n                                        <button type=\"button\" className=\"btn-block-option\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <i className=\"fa fa-fw fa-times\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-content\">\r\n                                    {\r\n                                        activacion\r\n                                        ?\r\n                                            <p>¿ESTÁ SEGURO QUE DESEA ACTIVAR ESTA ACTUACIÓN?</p>\r\n                                        :\r\n                                            <p>¿ESTÁ SEGURO QUE DESEA INACTIVAR ESTA ACTUACIÓN?</p>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right bg-light\">\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-primary\" data-dismiss=\"modal\" onClick={() => enviarDatos()}>{global.Constants.BOTON_NOMBRE.ACEPTAR}</button>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\" data-dismiss=\"modal\" onClick={() => setEnviarDatos(null)}>{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>        \r\n            { componentAlertConfirmacion() }\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    informacion: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    setCountTextArea(valores.informacion.length);\r\n                    let errores = {}\r\n                    if (!valores.informacion) {\r\n                        errores.informacion = 'Debe ingresar un valor';\r\n                    }\r\n                    else if (valores.informacion.length <= getMinimoTextArea) {\r\n                        errores.informacion = 'La descripción debe tener almenos ' + getMinimoTextArea + ' caracteres';\r\n                    }\r\n                    if (valores.informacion) {\r\n                        if (containsSpecialChars(valores.informacion))\r\n                            errores.informacion = 'Tiene caracteres inválidos';\r\n                    }\r\n\r\n                    return errores;\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    setEnviarDatos(valores)\r\n                    showModalAnulacion()\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis pendientes</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}><small>Actuaciones</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={getRoutes.ver_detalle} state={{ from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion }}><small>Actuación {nombre.toLowerCase()}</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <small>Solicitar {activacion ? 'Activación' : 'Inactivación'}</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">ACTUACIÓN {nombre.toUpperCase()} :: SOLICITUD DE {activacion ? 'ACTIVACIÓN' : 'INACTIVACIÓN'} </h3>\r\n                            </div>\r\n                            <div className=\"block-content\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"informacion\">MOTIVO PORQUÉ SE SOLICITA {activacion ? 'ACTIVACIÓN' : 'INACTIVACIÓN'} <span className=\"text-danger\">*</span></label>\r\n                                            <Field as=\"textarea\" className=\"form-control\" id=\"informacion\" name=\"informacion\" rows=\"6\" placeholder={activacion ? 'INFORMACIÓN PARA SU SOLICITUD DE ACTIVACIÓN....' : 'INFORMACIÓN PARA SU SOLICITUD DE INACTIVACIÓN....'}\r\n                                                maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                            <div className=\"text-right\">\r\n                                                <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                            </div>\r\n                                            <ErrorMessage name=\"informacion\" component={() => (<span className=\"text-danger\">{errors.informacion}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"block-content block-content-full text-right\">\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\" >ACEPTAR</button>\r\n                                    <Link to={getRoutes.ver_detalle} state={{ from: from, selected_id_etapa: selected_id_etapa, id: id, nombre: nombre, estadoActualActuacion: estadoActualActuacion }} className=\"font-size-h5 font-w600\" >\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\" >CANCELAR</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default SolicitudDeAnulacion;"],"mappings":"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"},"metadata":{},"sourceType":"module"}