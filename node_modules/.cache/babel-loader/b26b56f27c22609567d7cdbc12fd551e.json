{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\LogSistema\\\\LogEtapaLista.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useLocation } from 'react-router-dom';\nimport LogApi from '../Api/Services/LogApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LogEtapaLista() {\n  _s();\n\n  const [errorApi, setErrorApi] = useState('');\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const [getRespuestaLog, setRespuestaLog] = useState(false);\n  const [getLogLista, setLogLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  useEffect(() => {\n    async function fetchData() {\n      const data = {\n        \"data\": {\n          \"type\": \"log_etapa\",\n          \"attributes\": {\n            \"descripcion\": \"descripcion\",\n            \"id_etapa\": \"fecha_registro\",\n            \"id_fase\": \"id_dependencia\",\n            \"id_proceso_disciplinario\": \"id_proceso_disciplinario\",\n            \"id_tipo_log\": \"id_tipo_log\",\n            \"id_estado\": \"id_estado\",\n            \"created_user\": \"created_user\",\n            \"id_dependencia_origen\": \"id_dependencia_origen\"\n          }\n        }\n      };\n      LogApi.getLogEtapaProcesoDisciplinario(data, procesoDisciplinarioId).then(datos => !datos.error ? (setLogLista(datos), setRespuestaLog(true)) : window.showModal(1));\n    }\n\n    fetchData();\n  }, []);\n\n  const listaLog = () => {\n    if (getLogLista.data != null && typeof getLogLista.data != 'undefined') {\n      return getLogLista.data.map((log, i) => {\n        return cargarLog(log, i);\n      });\n    } else {\n      return getLogLista.map((log, i) => {\n        return cargarLog(log, i);\n      });\n    }\n  };\n\n  const cargarLog = (log, i) => {\n    //from.idAntecedente = antecedente.id;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"timeline-event\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"timeline-event-icon bg-info\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-cog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"timeline-event-block block block-rounded block-fx-pop\",\n          \"data-toggle\": \"appear\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"block-header block-header-default\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              class: \"block-title\",\n              children: log.attributes.etapa.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"block-options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"block-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"media font-size-sm\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"media-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Descripci\\xF3n: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this), log.attributes.descripcion, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 96\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Dependencia: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), log.attributes.dependencia_origen.nombre, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 110\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Fecha: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), log.attributes.dependencia_origen.nombre, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 104\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Estado: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this), log.attributes.estado_etapa.nombre, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 99\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 104\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Funcionario:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \" Rol:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 59\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"timeline timeline-alt\",\n      children: getRespuestaLog ? listaLog() : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(LogEtapaLista, \"0NnCQkeCjetghv0R0HLQ48/2zOA=\", false, function () {\n  return [useLocation];\n});\n\n_c = LogEtapaLista;\nexport default LogEtapaLista;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogEtapaLista\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/LogSistema/LogEtapaLista.js"],"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","useLocation","LogApi","LogEtapaLista","errorApi","setErrorApi","location","from","state","radicado","procesoDisciplinarioId","getRespuestaLog","setRespuestaLog","getLogLista","setLogLista","data","links","meta","fetchData","getLogEtapaProcesoDisciplinario","then","datos","error","window","showModal","listaLog","map","log","i","cargarLog","attributes","etapa","nombre","descripcion","dependencia_origen","estado_etapa"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useLocation } from 'react-router-dom'\r\nimport LogApi from '../Api/Services/LogApi';\r\n\r\n\r\nfunction LogEtapaLista() {\r\n\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n\r\n    const location = useLocation()\r\n    const { from } = location.state\r\n\tlet radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n    const [getRespuestaLog, setRespuestaLog] = useState(false);\r\n    const [getLogLista, setLogLista] = useState({ data: [], links: [], meta: [] });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"log_etapa\",\r\n                    \"attributes\": {\r\n                        \"descripcion\": \"descripcion\",\r\n                        \"id_etapa\": \"fecha_registro\",\r\n                        \"id_fase\": \"id_dependencia\",\r\n                        \"id_proceso_disciplinario\": \"id_proceso_disciplinario\",\r\n                        \"id_tipo_log\": \"id_tipo_log\",\r\n                        \"id_estado\": \"id_estado\",\r\n                        \"created_user\": \"created_user\",\r\n                        \"id_dependencia_origen\": \"id_dependencia_origen\"\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            LogApi.getLogEtapaProcesoDisciplinario(data, procesoDisciplinarioId).then(\r\n                datos => !datos.error ? (setLogLista(datos), setRespuestaLog(true)) : window.showModal(1)\r\n            )\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const listaLog = () => {\r\n\r\n        if (getLogLista.data != null && typeof (getLogLista.data) != 'undefined') {\r\n            return (\r\n\r\n                getLogLista.data.map((log, i) => {\r\n                    return (\r\n                        cargarLog(log, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                getLogLista.map((log, i) => {\r\n                    return (\r\n                        cargarLog(log, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const cargarLog = (log, i) => {\r\n\r\n        //from.idAntecedente = antecedente.id;\r\n\r\n        return (\r\n            <>\r\n                <li class=\"timeline-event\">\r\n                    <div class=\"timeline-event-icon bg-info\"><i class=\"fas fa-cog\"></i></div>\r\n                    <div class=\"timeline-event-block block block-rounded block-fx-pop\" data-toggle=\"appear\">\r\n                        <div class=\"block-header block-header-default\">\r\n                            <h3 class=\"block-title\">{log.attributes.etapa.nombre}</h3>\r\n                            <div class=\"block-options\">\r\n                            \r\n                            </div>\r\n                        </div>\r\n                        <div class=\"block-content\">\r\n                            <div class=\"media font-size-sm\">\r\n                                <div class=\"media-body\">\r\n                                    <strong> Descripción: </strong>{log.attributes.descripcion}<br/>\r\n                                    <strong> Dependencia: </strong>{log.attributes.dependencia_origen.nombre}<br/>\r\n                                    <strong> Fecha: </strong>{log.attributes.dependencia_origen.nombre}<br/>\r\n                                    <strong> Estado: </strong>{log.attributes.estado_etapa.nombre}<br/><br/>\r\n                                    <strong> Funcionario:</strong><br/>\r\n                                    <strong> Rol:</strong><br/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <> \r\n\r\n        <ul class=\"timeline timeline-alt\">\r\n            {getRespuestaLog ? listaLog() : null}\r\n            \r\n        </ul>\r\n\r\n\r\n\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default LogEtapaLista;"]},"metadata":{},"sourceType":"module"}