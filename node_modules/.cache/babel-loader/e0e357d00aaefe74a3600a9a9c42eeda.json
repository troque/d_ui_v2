{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\RequerimientoJuzgado\\\\RequerimientoJuzgadoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useLocation } from 'react-router-dom';\nimport Spinner from '../../Utils/Spinner';\nimport { Link } from \"react-router-dom\";\nimport CambiarDependencia from '../../Utils/CambiarDependencia';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RequerimientoJuzgadoForm() {\n  _s();\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [listaTipoRespuesta, setListaTipoRespuesta] = useState({\n    data: {}\n  });\n  const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\n  const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getExisteRequerimiento, setExisteRequerimiento] = useState(false);\n  const [getRtaListaRequerimiento, setRtaListaRequerimiento] = useState(false);\n  const [getListaRequerimiento, setListaRequerimiento] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const location = useLocation();\n  const {\n    from,\n    disable\n  } = location.state;\n  const [getNombreProceso, setNombreProceso] = useState('');\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const [getParametros, setParametros] = useState({\n    id_proceso_disciplinario: procesoDisciplinarioId,\n    id_etapa: global.Constants.ETAPAS.CAPTURA_REPARTO,\n    reclasificacion: false,\n    route: \"/RequerimientojuzgadoLista/\",\n    proceso: \"requerimiento_juzgado\"\n  });\n\n  //Funcion principal\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      GenericApi.getGeneric('tipo-respuesta').then(datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1));\n      nombreProceso();\n    }\n    fetchData();\n  }, []);\n  const nombreProceso = () => {\n    GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setNombreProceso(datos.data.attributes.nombre);\n        obtenerParametros();\n        consultarRequerimientoJuzgado();\n      }\n    });\n  };\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      };\n\n      //buscamos el parametro\n      GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          setModalState({\n            title: getNombreProceso.toUpperCase() + \" :: REQUERIMIENTO JUZGADO\",\n            message: datos.error.toString().toUpperCase(),\n            show: true,\n            redirect: '/RamasProceso',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  /**\r\n   * Se consulta si la clasificación ya fue aceptada en la etapa de Evaluación.\r\n   * @returns \r\n   */\n  const consultarRequerimientoJuzgado = () => {\n    return GenericApi.getGeneric(\"requerimiento-juzgado/get-requerimiento-by-id-proceso-disciplinario/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error && datos.data.length > 0) {\n        console.log(\"EXISTE REGISTRO\");\n        setExisteRequerimiento(true);\n        listaRequerimientos();\n      } else {\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  /**\r\n   * Se trae toda la lista de las reclasificaciones realizadas por el sistema\r\n   */\n  const listaRequerimientos = () => {\n    GenericApi.getGeneric(\"requerimiento-juzgado/get-requerimiento-by-id-proceso-disciplinario/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setListaRequerimiento(datos);\n        setRtaListaRequerimiento(true);\n      } else {\n        setModalState({\n          title: getNombreProceso.toUpperCase() + \" :: REQUERIMIENTO JUZGADO\",\n          message: datos.error.toString().toUpperCase(),\n          show: true,\n          redirect: '/RequerimientoJuzgadoForm',\n          from: {\n            from\n          }\n        });\n      }\n      window.showSpinner(false);\n    });\n  };\n  const TablaRequerimientos = () => {\n    if (getListaRequerimiento.data != null && typeof getListaRequerimiento.data != 'undefined') {\n      return getListaRequerimiento.data.map((requerimiento, i) => {\n        return cargarTabla(requerimiento, i);\n      });\n    } else {\n      return getListaRequerimiento.map((requerimiento, i) => {\n        return cargarTabla(requerimiento, i);\n      });\n    }\n  };\n  const cargarTabla = (requerimiento, i) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"text-uppercase\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Usuario: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), \" \", requerimiento.attributes.funcionario_registra.nombre, \" \", requerimiento.attributes.funcionario_registra.apellido, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 159\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Etapa: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), \" \", requerimiento.attributes.etapa.nombre, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 85\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Dependencia origen: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), \" \", requerimiento.attributes.dependencia_origen.nombre, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 111\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Fecha: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), \" \", requerimiento.attributes.created_at, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 83\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: requerimiento.attributes.dependencia_destino.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [requerimiento.attributes.funcionario_asignado.nombre, \" \", requerimiento.attributes.funcionario_asignado.apellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: requerimiento.attributes.descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this);\n  };\n  let selectChangeTipoRespuesta = e => {\n    setSelectedTipoRespuesta(e);\n  };\n  const selectTipoRespuesta = () => {\n    return listaTipoRespuesta.data.map((tipo_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tipo_respuesta.id,\n          children: tipo_respuesta.attributes.nombre\n        }, tipo_respuesta.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this)\n      }, void 0, false);\n    });\n  };\n  const enviarDatos = valores => {\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"requerimiento_juzgado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_dependencia_origen\": null,\n          \"id_dependencia_destino\": null,\n          \"id_funcionario_asignado\": null,\n          \"enviar_otra_dependencia\": true,\n          \"descripcion\": valores.informacion\n        }\n      }\n    };\n    GenericApi.addGeneric('requerimiento-juzgado', data).then(datos => {\n      if (!datos.error) {\n        setModalState({\n          title: getNombreProceso.toUpperCase() + \" :: REQUERIMIENTO JUZGADO\",\n          message: global.Constants.MENSAJES_MODAL.EXITOSO,\n          show: true,\n          redirect: '/RamasProceso',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        setModalState({\n          title: getNombreProceso.toUpperCase() + \" :: REQUERIMIENTO JUZGADO\",\n          message: datos.error.toString().toUpperCase(),\n          show: true,\n          redirect: '/RamasProceso',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n      window.showSpinner(false);\n    });\n  };\n\n  // Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisión-\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n\n  // COMPONENTE CONFIRMACION ENVIAR A OTRA DEPENDENCIA\n  const componenteTipoRespuesta = tipo_respuesta => {\n    // CONFIRMACION ENVIAR A OTRA DEPENDENCIA = SI\n    if (tipo_respuesta === 1) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(CambiarDependencia, {\n          getParametros: getParametros,\n          name_boton: \"REGISTRAR\",\n          name_txt_descripcion: \"DESCRIPCI\\xD3N DEL REQUERIMIENTO\",\n          id: \"ev_cambiar_dependencia\",\n          name: \"ev_cambiar_dependencia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n\n    // CONFIRMACION ENVIAR A OTRA DEPENDENCIA = NO\n    else if (tipo_respuesta === 2) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            informacion: '',\n            enviar_otra_dependiencia: false\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            setCountTextArea(valores.informacion.length);\n            let errores = {};\n            if (!valores.informacion) {\n              errores.informacion = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n            } else if (valores.informacion.length <= getMinimoTextArea) {\n              errores.informacion = global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES + ' ' + getMinimoTextArea;\n            }\n            if (valores.informacion) {\n              if (containsSpecialChars(valores.informacion)) errores.informacion = global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS;\n            }\n            return errores;\n          },\n          onSubmit: (valores, _ref) => {\n            let {\n              resetForm\n            } = _ref;\n            enviarDatos(valores);\n          },\n          children: _ref2 => {\n            let {\n              errors\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"informacion\",\n                  children: [\"DESCRIPCI\\xD3N DEL REQUERIMIENTO\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 95\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"textarea\",\n                  className: \"form-control\",\n                  id: \"informacion\",\n                  name: \"informacion\",\n                  rows: \"6\",\n                  placeholder: \"Descripci\\xF3n del requerimiento\",\n                  maxLength: getMaximoTextArea,\n                  minLength: getMinimoTextArea\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-primary\",\n                    children: [countTextArea, \" / \", getMaximoTextArea]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"informacion\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.informacion\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 88\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-rounded btn-primary\",\n                  children: global.Constants.BOTON_NOMBRE.REGISTRAR\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/ValidarClasificacionRadicadoLista/`,\n                  state: {\n                    from: from\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-rounded btn-outline-primary\",\n                    children: global.Constants.BOTON_NOMBRE.CANCELAR\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w2d_block let\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb breadcrumb-alt push\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"hover\",\n              className: \"text-dark\",\n              to: `/MisPendientes`,\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Mis Pendientes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 126\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"hover\",\n              className: \"text-dark\",\n              to: `/RamasProceso/`,\n              state: {\n                from: from\n              },\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Ramas del proceso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 149\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Enviar a otra dependencia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block block-themed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"block-title\",\n          children: [getNombreProceso, \" :: ENVIAR A OTRA DEPENDENDIA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 text-right my-2\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/RamasProceso/',\n            title: \"Regresar a ramas del proceso\",\n            state: {\n              from: from,\n              disable: disable\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-backward\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 79\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this), getExisteRequerimiento ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-vcenter\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"REGISTRADO POR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DEPENDENCIA DESTINO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ASIGNADO A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"OBSERVACIONES\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: getRtaListaRequerimiento ? TablaRequerimientos() : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 25\n        }, this) : null, !getExisteRequerimiento && from.mismoUsuarioBuscador ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"ingresoTipoExpediente\",\n                children: [\"EL TR\\xC1MITE DE ESTE EXPEDIENTE CONTINUA EN OTRA DEPENDENCIA?\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 135\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                id: \"ingresoTipoExpediente\",\n                name: \"ingresoTipoExpediente\",\n                value: selectedTipoRespuesta,\n                onChange: e => selectChangeTipoRespuesta(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Por favor seleccione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 41\n                }, this), respuestaTipoRespuesta ? selectTipoRespuesta() : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 25\n        }, this) : null, selectedTipoRespuesta === '1' && from.mismoUsuarioBuscador ? componenteTipoRespuesta(1) : '', selectedTipoRespuesta === '2' && from.mismoUsuarioBuscador ? componenteTipoRespuesta(2) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(RequerimientoJuzgadoForm, \"Ukw9VGU8yU/COaaCO7TVvmVsTB8=\", false, function () {\n  return [useLocation];\n});\n_c = RequerimientoJuzgadoForm;\nexport default RequerimientoJuzgadoForm;\nvar _c;\n$RefreshReg$(_c, \"RequerimientoJuzgadoForm\");","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","useLocation","Spinner","Link","CambiarDependencia","GenericApi","ModalGen","RequerimientoJuzgadoForm","getModalState","setModalState","title","message","show","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","listaTipoRespuesta","setListaTipoRespuesta","data","respuestaTipoRespuesta","setRespuestaTipoRespuesta","selectedTipoRespuesta","setSelectedTipoRespuesta","countTextArea","setCountTextArea","getExisteRequerimiento","setExisteRequerimiento","getRtaListaRequerimiento","setRtaListaRequerimiento","getListaRequerimiento","setListaRequerimiento","links","meta","location","from","disable","state","getNombreProceso","setNombreProceso","procesoDisciplinarioId","getParametros","setParametros","id_proceso_disciplinario","id_etapa","global","Constants","ETAPAS","CAPTURA_REPARTO","reclasificacion","route","proceso","fetchData","window","showSpinner","getGeneric","then","datos","error","showModal","nombreProceso","getByIdGeneric","attributes","nombre","obtenerParametros","consultarRequerimientoJuzgado","getByDataGeneric","length","filter","includes","map","filteredName","toUpperCase","toString","redirect","alert","TIPO_ALERTA","ERROR","console","log","listaRequerimientos","TablaRequerimientos","requerimiento","i","cargarTabla","funcionario_registra","apellido","etapa","dependencia_origen","created_at","dependencia_destino","funcionario_asignado","descripcion","selectChangeTipoRespuesta","e","selectTipoRespuesta","tipo_respuesta","id","enviarDatos","valores","informacion","addGeneric","MENSAJES_MODAL","EXITOSO","EXITO","containsSpecialChars","str","result","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","componenteTipoRespuesta","enviar_otra_dependiencia","errores","MENSAJE_ERROR","CAMPO_OBLIGATORIO","ERROR_FORMATO_CARACTERES","ERROR_FORMATO_CARACTERES_INVALIDOS","resetForm","errors","BOTON_NOMBRE","REGISTRAR","CANCELAR","mismoUsuarioBuscador","target","value"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/RequerimientoJuzgado/RequerimientoJuzgadoForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport { Link } from \"react-router-dom\";\r\nimport CambiarDependencia from '../../Utils/CambiarDependencia';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\n\r\nfunction RequerimientoJuzgadoForm() {\r\n\r\n\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [listaTipoRespuesta, setListaTipoRespuesta] = useState({ data: {} });\r\n    const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\r\n    const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getExisteRequerimiento, setExisteRequerimiento] = useState(false);\r\n    const [getRtaListaRequerimiento, setRtaListaRequerimiento] = useState(false);\r\n    const [getListaRequerimiento, setListaRequerimiento] = useState({ data: [], links: [], meta: [] });\r\n    const location = useLocation();\r\n    const { from, disable } = location.state;\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n\r\n    const [getParametros, setParametros] = useState({\r\n        id_proceso_disciplinario: procesoDisciplinarioId,\r\n        id_etapa: global.Constants.ETAPAS.CAPTURA_REPARTO,\r\n        reclasificacion: false,\r\n        route: \"/RequerimientojuzgadoLista/\",\r\n        proceso: \"requerimiento_juzgado\",\r\n    });\r\n\r\n    //Funcion principal\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            window.showSpinner(true);\r\n\r\n            GenericApi.getGeneric('tipo-respuesta').then(\r\n                datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1)\r\n            )\r\n\r\n            nombreProceso();\r\n\r\n\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const nombreProceso = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                    obtenerParametros();\r\n                    consultarRequerimientoJuzgado();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const obtenerParametros = () => {\r\n        try {\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: getNombreProceso.toUpperCase() + \" :: REQUERIMIENTO JUZGADO\", message: datos.error.toString().toUpperCase(), show: true, redirect: '/RamasProceso', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Se consulta si la clasificación ya fue aceptada en la etapa de Evaluación.\r\n     * @returns \r\n     */\r\n    const consultarRequerimientoJuzgado = () => {\r\n\r\n        return (\r\n            GenericApi.getGeneric(\"requerimiento-juzgado/get-requerimiento-by-id-proceso-disciplinario/\" + procesoDisciplinarioId).then(\r\n                datos => {\r\n\r\n                    if (!datos.error && datos.data.length > 0) {\r\n\r\n                        console.log(\"EXISTE REGISTRO\");\r\n                        setExisteRequerimiento(true);\r\n                        listaRequerimientos();\r\n                    }\r\n                    else{\r\n                        window.showSpinner(false);\r\n                    }\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n\r\n    /**\r\n     * Se trae toda la lista de las reclasificaciones realizadas por el sistema\r\n     */\r\n    const listaRequerimientos = () => {\r\n\r\n        GenericApi.getGeneric(\"requerimiento-juzgado/get-requerimiento-by-id-proceso-disciplinario/\" + procesoDisciplinarioId).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaRequerimiento(datos);\r\n                    setRtaListaRequerimiento(true);\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso.toUpperCase() + \" :: REQUERIMIENTO JUZGADO\", message: datos.error.toString().toUpperCase(), show: true, redirect: '/RequerimientoJuzgadoForm', from: { from } });\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const TablaRequerimientos = () => {\r\n\r\n        if (getListaRequerimiento.data != null && typeof (getListaRequerimiento.data) != 'undefined') {\r\n            return (\r\n\r\n                getListaRequerimiento.data.map((requerimiento, i) => {\r\n                    return (\r\n                        cargarTabla(requerimiento, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                getListaRequerimiento.map((requerimiento, i) => {\r\n                    return (\r\n                        cargarTabla(requerimiento, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const cargarTabla = (requerimiento, i) => {\r\n\r\n        return (\r\n            <tr className='text-uppercase'>\r\n                <td><strong>Usuario: </strong> {requerimiento.attributes.funcionario_registra.nombre} {requerimiento.attributes.funcionario_registra.apellido}<br />\r\n                    <strong>Etapa: </strong> {requerimiento.attributes.etapa.nombre}<br />\r\n                    <strong>Dependencia origen: </strong> {requerimiento.attributes.dependencia_origen.nombre}<br />\r\n                    <strong>Fecha: </strong> {requerimiento.attributes.created_at}<br />\r\n                </td>\r\n                <td>{requerimiento.attributes.dependencia_destino.nombre}</td>\r\n                <td>{requerimiento.attributes.funcionario_asignado.nombre} {requerimiento.attributes.funcionario_asignado.apellido}</td>\r\n                <td>{requerimiento.attributes.descripcion}</td>\r\n\r\n            </tr>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    let selectChangeTipoRespuesta = (e) => {\r\n        setSelectedTipoRespuesta(e);\r\n    }\r\n\r\n    const selectTipoRespuesta = () => {\r\n        return (\r\n            listaTipoRespuesta.data.map((tipo_respuesta, i) => {\r\n                return (\r\n                    <>\r\n                        <option key={tipo_respuesta.id} value={tipo_respuesta.id}>{tipo_respuesta.attributes.nombre}</option>\r\n                    </>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const enviarDatos = (valores) => {\r\n\r\n        window.showSpinner(true);\r\n\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"requerimiento_juzgado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_dependencia_origen\": null,\r\n                    \"id_dependencia_destino\": null,\r\n                    \"id_funcionario_asignado\": null,\r\n                    \"enviar_otra_dependencia\": true,\r\n                    \"descripcion\": valores.informacion,\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.addGeneric('requerimiento-juzgado', data).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setModalState({ title: getNombreProceso.toUpperCase() + \" :: REQUERIMIENTO JUZGADO\", message: global.Constants.MENSAJES_MODAL.EXITOSO, show: true, redirect: '/RamasProceso', from: { from }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso.toUpperCase() + \" :: REQUERIMIENTO JUZGADO\", message: datos.error.toString().toUpperCase(), show: true, redirect: '/RamasProceso', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    // Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisión-\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    // COMPONENTE CONFIRMACION ENVIAR A OTRA DEPENDENCIA\r\n    const componenteTipoRespuesta = (tipo_respuesta) => {\r\n\r\n        // CONFIRMACION ENVIAR A OTRA DEPENDENCIA = SI\r\n        if (tipo_respuesta === 1) {\r\n            return (\r\n                <>\r\n                    <CambiarDependencia getParametros={getParametros} name_boton=\"REGISTRAR\" name_txt_descripcion=\"DESCRIPCIÓN DEL REQUERIMIENTO\" id=\"ev_cambiar_dependencia\" name=\"ev_cambiar_dependencia\" />\r\n                </>\r\n            );\r\n        }\r\n\r\n        // CONFIRMACION ENVIAR A OTRA DEPENDENCIA = NO\r\n        else if (tipo_respuesta === 2) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            informacion: '',\r\n                            enviar_otra_dependiencia: false,\r\n                        }}\r\n                        enableReinitialize\r\n                        validate={(valores) => {\r\n\r\n                            setCountTextArea(valores.informacion.length)\r\n                            let errores = {}\r\n\r\n                            if (!valores.informacion) {\r\n                                errores.informacion = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                            }\r\n                            else if (valores.informacion.length <= getMinimoTextArea) {\r\n                                errores.informacion = global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES +' ' + getMinimoTextArea ;\r\n                            }\r\n                            if (valores.informacion) {\r\n                                if (containsSpecialChars(valores.informacion))\r\n                                    errores.informacion = global.Constants.MENSAJE_ERROR.ERROR_FORMATO_CARACTERES_INVALIDOS;\r\n                            }\r\n\r\n                            return errores;\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"informacion\">DESCRIPCIÓN DEL REQUERIMIENTO<span className=\"text-danger\">*</span></label>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"informacion\" name=\"informacion\" rows=\"6\" placeholder=\"Descripción del requerimiento\"\r\n                                        maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"informacion\" component={() => (<span className=\"text-danger\">{errors.informacion}</span>)} />\r\n                                </div>\r\n\r\n                                <div className=\"block-content block-content-full text-right\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\">{global.Constants.BOTON_NOMBRE.REGISTRAR}</button>\r\n\r\n                                    <Link to={`/ValidarClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n\r\n                    </Formik>\r\n\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <div className=\"w2d_block let\">\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                        <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                        <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                        <li className=\"breadcrumb-item\"> <small>Enviar a otra dependencia</small></li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            <div className=\"block block-themed\">\r\n                <div className=\"block-header\">\r\n                    <h3 className=\"block-title\">{getNombreProceso} :: ENVIAR A OTRA DEPENDENDIA</h3>\r\n                </div>\r\n                <div className=\"block-content\">\r\n                    <div className='col-md-12 text-right my-2'>\r\n                        <Link to={'/RamasProceso/'} title='Regresar a ramas del proceso' state={{ from: from, disable: disable }}>\r\n                            <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                        </Link>\r\n                    </div>\r\n                    {getExisteRequerimiento ?\r\n                        <table className=\"table table-vcenter\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>REGISTRADO POR</th>\r\n                                    <th>DEPENDENCIA DESTINO</th>\r\n                                    <th>ASIGNADO A</th>\r\n                                    <th>OBSERVACIONES</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {getRtaListaRequerimiento ? TablaRequerimientos() : null}\r\n                            </tbody>\r\n                        </table>\r\n                        : null}\r\n                    {!getExisteRequerimiento && from.mismoUsuarioBuscador ?\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"ingresoTipoExpediente\">EL TRÁMITE DE ESTE EXPEDIENTE CONTINUA EN OTRA DEPENDENCIA?<span className=\"text-danger\">*</span></label>\r\n                                    <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                                        value={selectedTipoRespuesta} onChange={e => selectChangeTipoRespuesta(e.target.value)}>\r\n                                        <option value=\"\">Por favor seleccione</option>\r\n                                        {respuestaTipoRespuesta ? selectTipoRespuesta() : null}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        : null}\r\n                        \r\n                    {/*SI APLICA RECLASIFIFCACION*/}\r\n                    {selectedTipoRespuesta === '1' && from.mismoUsuarioBuscador ? componenteTipoRespuesta(1) : ''}\r\n\r\n                    {/*NO APLICA RECLASIFIFCACION*/}\r\n                    {selectedTipoRespuesta === '2' && from.mismoUsuarioBuscador ? componenteTipoRespuesta(2) : ''}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default RequerimientoJuzgadoForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}