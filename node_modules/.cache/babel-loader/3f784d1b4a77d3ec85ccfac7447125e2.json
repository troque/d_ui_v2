{"ast":null,"code":"import axios from 'axios';\nimport { getBearerToken, handleError } from '../../../components/Utils/Common';\nconst baseUrl = process.env.REACT_APP_API_URL;\nconst headers = {\n  'Content-Type': 'application/vnd.api+json',\n  'Accept': 'application/vnd.api+json'\n};\n\nasync function getGeneric(relativeUrl) {\n  const url = baseUrl + relativeUrl;\n  headers['Authorization'] = getBearerToken();\n  console.log(\"URL: \" + relativeUrl);\n  return await axios.get(url, {\n    headers: headers\n  }).then(response => {\n    console.log(response.data);\n    return response.data;\n  }).catch(error => {\n    console.log(error);\n    handleError(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function getAllGeneric(serviceName) {\n  const url = serviceName;\n  return getGeneric(url);\n}\n\nasync function getByIdGeneric(serviceName, id) {\n  const url = serviceName + \"/\" + id;\n  return getGeneric(url);\n}\n\nasync function getByDataGeneric(serviceName, data) {\n  const url = baseUrl + serviceName;\n  headers['Authorization'] = getBearerToken(); //console.log(\"URL: \"+serviceName);\n  //console.log(\"DATA: \"+JSON.stringify(data));\n\n  return await axios.post(url, data, {\n    headers: headers\n  }).then(response => {\n    console.log(\"RTA OK : \" + response.data);\n    return response.data;\n  }).catch(error => {\n    console.log(\"RTA ERROR: \" + error);\n    handleError(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function addGeneric(serviceName, data) {\n  const url = baseUrl + serviceName;\n  headers['Authorization'] = getBearerToken();\n  return await axios.post(url, data, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    handleError(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nasync function updateGeneric(serviceName, id, data) {\n  const url = baseUrl + serviceName + \"/\" + id;\n  headers['Authorization'] = getBearerToken();\n  return await axios.put(url, data, {\n    headers: headers\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    handleError(error);\n    return {\n      estado: false,\n      error: error\n    };\n  });\n}\n\nexport default {\n  getGeneric,\n  getAllGeneric,\n  getByIdGeneric,\n  addGeneric,\n  updateGeneric,\n  getByDataGeneric\n};","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/Api/Services/GenericApi.js"],"names":["axios","getBearerToken","handleError","baseUrl","process","env","REACT_APP_API_URL","headers","getGeneric","relativeUrl","url","console","log","get","then","response","data","catch","error","estado","getAllGeneric","serviceName","getByIdGeneric","id","getByDataGeneric","post","addGeneric","updateGeneric","put"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { getBearerToken, handleError } from '../../../components/Utils/Common';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst headers = {\r\n    'Content-Type': 'application/vnd.api+json',\r\n    'Accept': 'application/vnd.api+json'\r\n}\r\n\r\nasync function getGeneric(relativeUrl){\r\n    const url = baseUrl + relativeUrl;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    console.log(\"URL: \"+relativeUrl);\r\n\r\n    return await axios.get(url, {\r\n        headers: headers\r\n    })\r\n    .then(response => {\r\n        console.log(response.data);\r\n        return response.data;\r\n    })\r\n    .catch(error => {\r\n        console.log(error);\r\n        handleError(error);\r\n        return {estado: false, error: error}\r\n    });\r\n}\r\n\r\nasync function getAllGeneric(serviceName){\r\n    const url = serviceName;\r\n    return getGeneric(url);\r\n}\r\n\r\nasync function getByIdGeneric(serviceName, id){\r\n    const url = serviceName + \"/\" + id;\r\n    return getGeneric(url);\r\n}\r\n\r\nasync function getByDataGeneric(serviceName, data){\r\n   \r\n    const url = baseUrl + serviceName;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    //console.log(\"URL: \"+serviceName);\r\n    //console.log(\"DATA: \"+JSON.stringify(data));\r\n\r\n    return await axios.post(url, data, {\r\n        headers: headers\r\n    })\r\n    .then(response => {\r\n        console.log(\"RTA OK : \"+response.data);\r\n        return response.data;\r\n    })\r\n    .catch(error => {\r\n        console.log(\"RTA ERROR: \"+error);\r\n        handleError(error);\r\n        return {estado: false, error: error}\r\n    });\r\n}\r\n\r\nasync function addGeneric(serviceName, data){\r\n    const url = baseUrl + serviceName;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    return await axios.post(url, data, {\r\n        headers: headers\r\n    })\r\n    .then(response => {\r\n        return response.data;\r\n    })\r\n    .catch(error => {\r\n        handleError(error);\r\n        return {estado: false, error: error}\r\n    });\r\n}\r\n\r\nasync function updateGeneric(serviceName, id, data){\r\n\r\n    const url = baseUrl + serviceName + \"/\" + id;\r\n    headers['Authorization'] = getBearerToken();\r\n\r\n    return await axios.put(url, data, {\r\n        headers: headers\r\n    })\r\n    .then(response => {\r\n        return response.data;\r\n    })\r\n    .catch(error => {\r\n        handleError(error);\r\n        return {estado: false, error: error}\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nexport default { getGeneric, getAllGeneric, getByIdGeneric, addGeneric, updateGeneric, getByDataGeneric}\r\n"]},"metadata":{},"sourceType":"module"}