{"ast":null,"code":"import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Modal from'react-bootstrap/Modal';import Button from'react-bootstrap/Button';import'../../Utils/Constants';import ModalAceptarActualizar from'./ModalAceptarActualizar';import{useLocation}from'react-router-dom';import moment from'moment';import DataTable from'react-data-table-component';import GenericApi from'../../Api/Services/GenericApi';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ModalItemsEditar(props){// Se inicializan las constantes\nvar _useState=useState(props.data.show),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useState3=useState({title:\"\",message:\"\",show:false}),_useState4=_slicedToArray(_useState3,2),getModalState=_useState4[0],setModalState=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),getCamposAdicionales=_useState6[0],setCamposAdicionales=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),getMaxDate=_useState8[0],setMaxDate=_useState8[1];var _useState9=useState(props.data.uuidActuacion),_useState10=_slicedToArray(_useState9,2),getUuidActuacion=_useState10[0],setUuidActuacion=_useState10[1];// Metodo encargado de generar el modal\nuseEffect(function(){// Se setea el maximo de fecha\nsetMaxDate(new Date().toISOString().split(\"T\")[0]);// Se setea el valor para mostrar el modal\nsetShow(props.data.show);// Se captura el array de los items\nvar arrayInformacionData=props.data.data;// Se setea el uuid de la actuacion a modificar\nsetUuidActuacion(props.data.uuidActuacion);// Se setea la lista\nsetCamposAdicionales(arrayInformacionData);},[props.data.show]);// Metodo encargado de cerrar el modal\nvar handleClose=function handleClose(){// Se setea la propiedad en false\nprops.data.show=false;// Se quita el modal\nsetShow(false);};// Metodo encargado de guardar los valores de la lista\nvar guardar=function guardar(){// Se quita el cargando\nwindow.showSpinner(true);// Se cierra el modal\nhandleClose();var data={\"data\":{\"type\":\"mas_actuaciones\",\"attributes\":{\"campos_finales\":getCamposAdicionales}}};// Se inicializa la API\nGenericApi.getByDataGeneric('actuaciones/update-campos-finales/'+getUuidActuacion,data).then(// Se inicializa la variable de respuesta\nfunction(datos){// Se quita el cargando\nwindow.showSpinner(false);// Se valida que no haya error\nif(!datos.error){// Se setea y muestra la modal\nsetModalState({title:\"Editar :: Campos adicionales\",message:\"Actualizado con éxito\",show:true,alert:global.Constants.TIPO_ALERTA.EXITO});}else{// Se setea y muestra la modal\nsetModalState({title:\"Editar :: Campos adicionales\",message:datos.error.toString(),show:true,alert:global.Constants.TIPO_ALERTA.ERROR});}});};// Metodo encargado de cargar los valores de los campos\nvar cargarValoresCampos=function cargarValoresCampos(campo){// Se inicializa la variable de campos\nvar campoParametro=campo;// Se capturan la informacion del campo\nvar tipoCampo=campoParametro.tipoCampo;var nombreCampo=campoParametro.nombreCampo;var itemCampo=campoParametro.items;// Se valida cuando el tipo campo es un listado\nif(tipoCampo==2){// Se declara un array\nvar array=[];var arrayUnicos=[];// Se capturan los items ya seleccionados\nvar itemSeleccionados=campoParametro.itemsSeleccionado;// Se captura la diferencia entre los dos arreglos\nvar itemDiferente=diferenciaItems(itemCampo,itemSeleccionados);// Se recorre el array de items seleccionados\nitemSeleccionados.forEach(function(e,i){// Se añade el elemento en la lista\narray.push({nombre:e,checked:true});});// Se combinar los arrays\nvar arrayFinal=array.concat(itemDiferente);// Se retorna el mapeo\nreturn(// Se recorre los elementos\narrayFinal.map(function(x,i){// se captura el nombre del item\nvar item=x.nombre;var checked=x.checked;// Se retorna el HTML\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12 mt-1 ml-2 mb-1\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"form-check-input\",id:item,name:item,value:item,onChange:function onChange(e){return changeCheckInput(e,nombreCampo);},defaultChecked:checked}),\" \",item]},item);}));}else if(tipoCampo==1){// Se retorna el html del tipo fecha \nreturn/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mt-2 mb-2\",children:/*#__PURE__*/_jsx(\"input\",{type:\"date\",className:\"form-control\",id:nombreCampo,name:nombreCampo,onChange:changeDateInput,max:getMaxDate,defaultValue:returnFormatDate(itemCampo,nombreCampo)})});}else if(tipoCampo==0){// Se retorna el html del tipo texto\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"custom-control custom-switch custom-control-lg mt-2 mb-2\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:nombreCampo,name:nombreCampo,placeholder:itemCampo,defaultValue:itemCampo,onChange:function onChange(e){return changeTextInput(e,campo);}})});}};// Metodo encargado de sacar las diferencias de 2 arreglos\nvar diferenciaItems=function diferenciaItems(arr1,arr2){// Se inicializa la variable\nvar arreglo=[];// Se recorre para validar\narr1.filter(function(elemento){// Se valida cuando captura la diferencia\nif(arr2.indexOf(elemento)==-1){arreglo.push({nombre:elemento,checked:false});}});// Se retorna el arreglo\nreturn arreglo;};// Metodo encargado de formatear la fecha\nvar returnFormatDate=function returnFormatDate(fecha,nombreCampo){// Se extrae la fecha parte por parte\nvar año=fecha[0].slice(6,10);var mes=fecha[0].slice(3,5);var dia=fecha[0].slice(0,2);// Se concadena la fecha para convertirla a string\nvar newDate=año+\"-\"+mes+\"-\"+dia;// Se retorna\nreturn newDate;};// Metodo encargado de setear el valor al mismo input\nvar changeTextInput=function changeTextInput(e,arrayDatos){// Se setea temporalmente\nvar elementoHtml=document.getElementById(e.target.name);var nombreElemento=e.target.name;// Se captura el valor escrito\nvar valor=e.target.value;// El elemento existe\nif(elementoHtml){// Se setea el nuevo valor\nelementoHtml.title=valor;// Se asigna el item dentro del array para enviarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;// Se valida que la key sea igual al elemento modificado\nif(key==nombreElemento){// Se añade el item\ne.items=[valor];}});}};// Metodo encargado de cambiar el valor de la fecha\nvar changeDateInput=function changeDateInput(e){// Se formatea\nvar newDate=moment(e.target.value).format('DD/MM/YYYY');// Se captura el nombre del elemento\nvar nombreElemento=e.target.name;// Se asigna el item dentro del array para enviarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;// Se valida que la key sea igual al elemento modificado\nif(key==nombreElemento){// Se añade el item\ne.items=[newDate];}});};// Metodo encargado de cambiar el valor del input\nvar changeCheckInput=function changeCheckInput(e,value){// Se captura el elemento html\nvar nombreElemento=value;// Se captura el elemento del check true o false\nvar checkeado=e.target.checked;// Se captura el valor chequeado html\nvar valorCheck=e.target.value;// Se valida cuando esta chequeado\nif(checkeado==true){// Se asigna el item dentro del array para enviarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;// Se valida que la key sea igual al elemento modificado\nif(key==nombreElemento){// Se valida la primera vez\nif(!e.itemsSeleccionado){// Se añade el item\ne.itemsSeleccionado=[valorCheck];}else{// Se añade el item al array\ne.itemsSeleccionado.push(valorCheck);}}});}else if(checkeado==false){// Se asigna el item dentro del array para quitarlo\ngetCamposAdicionales.forEach(function(e){// Se captura la key\nvar key=e.nombreCampo;var items=e.itemsSeleccionado?e.itemsSeleccionado:[];// Continua el proceso para quitarlo del array\nif(items.length>0&&key==nombreElemento){// Se busca la posicion del elemento\nvar index=items.indexOf(valorCheck);// Se quita el elemento\nitems.splice(index,1);}});}};// Metodo encargado de generar las columnas de los parametros de la plantilla\nvar columnsCampos=[{name:'Campo',cell:function cell(campo){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"strong\",{children:campo.nombreCampo?campo.nombreCampo:\"\"})});}},{name:'Items',cell:function cell(campo){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:cargarValoresCampos(campo)})});}}];// Metodo encargado de validar que haya al menos un elemento en la lista\nvar cerrarVentana=function cerrarVentana(){// Se llama el metodo a cerrar\nhandleClose();};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ModalAceptarActualizar,{data:getModalState}),/*#__PURE__*/_jsxs(Modal,{show:show,style:{marginLeft:'-11px',marginTop:'55px'},children:[/*#__PURE__*/_jsxs(Modal.Header,{className:\"block-header bg-primary-dark\",children:[/*#__PURE__*/_jsxs(Modal.Title,{className:\"block-title\",children:[\" \",props.data.title]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:cerrarVentana,className:\"btn-block-option\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-fw fa-times\"})})]}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12 mt-2 mb-2\",children:/*#__PURE__*/_jsx(DataTable,{className:\"table table-bordered table-striped table-vcenter js-dataTable-full\",columns:columnsCampos,data:getCamposAdicionales,noDataComponent:global.Constants.DATA_TABLE.SIN_DATOS_TABLE,striped:true})})}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center'},children:/*#__PURE__*/_jsx(Button,{className:\"btn btn-rounded btn-primary\",variant:\"primary\",onClick:guardar,children:\"Guardar\"})})]})]});}export default ModalItemsEditar;","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","ModalAceptarActualizar","useLocation","moment","DataTable","GenericApi","ModalItemsEditar","props","data","show","setShow","title","message","getModalState","setModalState","getCamposAdicionales","setCamposAdicionales","getMaxDate","setMaxDate","uuidActuacion","getUuidActuacion","setUuidActuacion","Date","toISOString","split","arrayInformacionData","handleClose","guardar","window","showSpinner","getByDataGeneric","then","datos","error","alert","global","Constants","TIPO_ALERTA","EXITO","toString","ERROR","cargarValoresCampos","campo","campoParametro","tipoCampo","nombreCampo","itemCampo","items","array","arrayUnicos","itemSeleccionados","itemsSeleccionado","itemDiferente","diferenciaItems","forEach","e","i","push","nombre","checked","arrayFinal","concat","map","x","item","changeCheckInput","changeDateInput","returnFormatDate","changeTextInput","arr1","arr2","arreglo","filter","elemento","indexOf","fecha","año","slice","mes","dia","newDate","arrayDatos","elementoHtml","document","getElementById","target","name","nombreElemento","valor","value","key","format","checkeado","valorCheck","length","index","splice","columnsCampos","cell","cerrarVentana","marginLeft","marginTop","DATA_TABLE","SIN_DATOS_TABLE","display","justifyContent"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Utils/Modals/ModalItemsEditar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../Utils/Constants';\r\nimport ModalAceptarActualizar from './ModalAceptarActualizar';\r\nimport { useLocation } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\n\r\nfunction ModalItemsEditar(props) {\r\n\r\n    // Se inicializan las constantes\r\n    const [show, setShow] = useState(props.data.show);\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getCamposAdicionales, setCamposAdicionales] = useState([]);\r\n    const [getMaxDate, setMaxDate] = useState();\r\n    const [getUuidActuacion, setUuidActuacion] = useState(props.data.uuidActuacion);\r\n\r\n    // Metodo encargado de generar el modal\r\n    useEffect(() => {\r\n\r\n        // Se setea el maximo de fecha\r\n        setMaxDate(new Date().toISOString().split(\"T\")[0]);\r\n\r\n        // Se setea el valor para mostrar el modal\r\n        setShow(props.data.show);\r\n\r\n        // Se captura el array de los items\r\n        let arrayInformacionData = props.data.data;\r\n\r\n        // Se setea el uuid de la actuacion a modificar\r\n        setUuidActuacion(props.data.uuidActuacion);\r\n\r\n        // Se setea la lista\r\n        setCamposAdicionales(arrayInformacionData);\r\n\r\n    }, [props.data.show]);\r\n\r\n    // Metodo encargado de cerrar el modal\r\n    const handleClose = () => {\r\n\r\n        // Se setea la propiedad en false\r\n        props.data.show = false;\r\n\r\n        // Se quita el modal\r\n        setShow(false);\r\n    };\r\n\r\n    // Metodo encargado de guardar los valores de la lista\r\n    const guardar = () => {\r\n\r\n        // Se quita el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se cierra el modal\r\n        handleClose();\r\n\r\n        let data = {\r\n            \"data\": {\r\n                \"type\": \"mas_actuaciones\",\r\n                \"attributes\": {\r\n                    \"campos_finales\": getCamposAdicionales\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getByDataGeneric('actuaciones/update-campos-finales/' + getUuidActuacion, data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea y muestra la modal\r\n                    setModalState({ title: \"Editar :: Campos adicionales\", message: \"Actualizado con éxito\", show: true, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n\r\n                    // Se setea y muestra la modal\r\n                    setModalState({ title: \"Editar :: Campos adicionales\", message: datos.error.toString(), show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los valores de los campos\r\n    const cargarValoresCampos = (campo) => {\r\n\r\n        // Se inicializa la variable de campos\r\n        const campoParametro = campo;\r\n\r\n        // Se capturan la informacion del campo\r\n        const tipoCampo = campoParametro.tipoCampo;\r\n        const nombreCampo = campoParametro.nombreCampo;\r\n        const itemCampo = campoParametro.items;\r\n\r\n        // Se valida cuando el tipo campo es un listado\r\n        if (tipoCampo == 2) {\r\n\r\n            // Se declara un array\r\n            let array = [];\r\n            let arrayUnicos = [];\r\n\r\n            // Se capturan los items ya seleccionados\r\n            const itemSeleccionados = campoParametro.itemsSeleccionado;\r\n\r\n            // Se captura la diferencia entre los dos arreglos\r\n            let itemDiferente = diferenciaItems(itemCampo, itemSeleccionados);\r\n\r\n            // Se recorre el array de items seleccionados\r\n            itemSeleccionados.forEach((e, i) => {\r\n\r\n                // Se añade el elemento en la lista\r\n                array.push({ nombre: e, checked: true });\r\n            });\r\n\r\n            // Se combinar los arrays\r\n            let arrayFinal = array.concat(itemDiferente);\r\n\r\n            // Se retorna el mapeo\r\n            return (\r\n\r\n                // Se recorre los elementos\r\n                arrayFinal.map((x, i) => {\r\n\r\n                    // se captura el nombre del item\r\n                    let item = x.nombre;\r\n                    let checked = x.checked;\r\n\r\n                    // Se retorna el HTML\r\n                    return (\r\n                        <div className=\"col-md-12 mt-1 ml-2 mb-1\" key={item}>\r\n                            <input type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id={item}\r\n                                name={item}\r\n                                value={item}\r\n                                onChange={(e) => changeCheckInput(e, nombreCampo)}\r\n                                defaultChecked={checked} /> {item}\r\n                        </div>\r\n                    )\r\n                })\r\n            )\r\n        } else if (tipoCampo == 1) {\r\n\r\n            // Se retorna el html del tipo fecha \r\n            return (\r\n                <div className=\"custom-control custom-switch custom-control-lg mt-2 mb-2\">\r\n                    <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        id={nombreCampo}\r\n                        name={nombreCampo}\r\n                        onChange={changeDateInput}\r\n                        max={getMaxDate}\r\n                        defaultValue={returnFormatDate(itemCampo, nombreCampo)}\r\n                    />\r\n                </div>\r\n            )\r\n        } else if (tipoCampo == 0) {\r\n\r\n            // Se retorna el html del tipo texto\r\n            return (\r\n                <div className=\"custom-control custom-switch custom-control-lg mt-2 mb-2\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        id={nombreCampo}\r\n                        name={nombreCampo}\r\n                        placeholder={itemCampo}\r\n                        defaultValue={itemCampo}\r\n                        onChange={e => changeTextInput(e, campo)} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de sacar las diferencias de 2 arreglos\r\n    const diferenciaItems = (arr1, arr2) => {\r\n\r\n        // Se inicializa la variable\r\n        let arreglo = [];\r\n\r\n        // Se recorre para validar\r\n        arr1.filter(elemento => {\r\n\r\n            // Se valida cuando captura la diferencia\r\n            if (arr2.indexOf(elemento) == -1) {\r\n\r\n                arreglo.push({ nombre: elemento, checked: false })\r\n            }\r\n        });\r\n\r\n        // Se retorna el arreglo\r\n        return arreglo;\r\n    }\r\n\r\n    // Metodo encargado de formatear la fecha\r\n    const returnFormatDate = (fecha, nombreCampo) => {\r\n\r\n        // Se extrae la fecha parte por parte\r\n        let año = fecha[0].slice(6, 10);\r\n        let mes = fecha[0].slice(3, 5);\r\n        let dia = fecha[0].slice(0, 2);\r\n\r\n        // Se concadena la fecha para convertirla a string\r\n        let newDate = año + \"-\" + mes + \"-\" + dia;\r\n\r\n        // Se retorna\r\n        return newDate;\r\n    }\r\n\r\n    // Metodo encargado de setear el valor al mismo input\r\n    const changeTextInput = (e, arrayDatos) => {\r\n\r\n        // Se setea temporalmente\r\n        let elementoHtml = document.getElementById(e.target.name);\r\n        let nombreElemento = e.target.name;\r\n\r\n        // Se captura el valor escrito\r\n        let valor = e.target.value;\r\n\r\n        // El elemento existe\r\n        if (elementoHtml) {\r\n\r\n            // Se setea el nuevo valor\r\n            elementoHtml.title = valor;\r\n\r\n            // Se asigna el item dentro del array para enviarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n\r\n                // Se valida que la key sea igual al elemento modificado\r\n                if (key == nombreElemento) {\r\n\r\n                    // Se añade el item\r\n                    e.items = [valor];\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de cambiar el valor de la fecha\r\n    const changeDateInput = (e) => {\r\n\r\n        // Se formatea\r\n        const newDate = moment(e.target.value).format('DD/MM/YYYY');\r\n\r\n        // Se captura el nombre del elemento\r\n        let nombreElemento = e.target.name;\r\n\r\n        // Se asigna el item dentro del array para enviarlo\r\n        getCamposAdicionales.forEach(e => {\r\n\r\n            // Se captura la key\r\n            let key = e.nombreCampo;\r\n\r\n            // Se valida que la key sea igual al elemento modificado\r\n            if (key == nombreElemento) {\r\n\r\n                // Se añade el item\r\n                e.items = [newDate];\r\n            }\r\n        })\r\n    };\r\n\r\n    // Metodo encargado de cambiar el valor del input\r\n    const changeCheckInput = (e, value) => {\r\n\r\n        // Se captura el elemento html\r\n        let nombreElemento = value;\r\n\r\n        // Se captura el elemento del check true o false\r\n        let checkeado = e.target.checked;\r\n\r\n        // Se captura el valor chequeado html\r\n        let valorCheck = e.target.value;\r\n\r\n        // Se valida cuando esta chequeado\r\n        if (checkeado == true) {\r\n\r\n            // Se asigna el item dentro del array para enviarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n\r\n                // Se valida que la key sea igual al elemento modificado\r\n                if (key == nombreElemento) {\r\n\r\n                    // Se valida la primera vez\r\n                    if (!e.itemsSeleccionado) {\r\n\r\n                        // Se añade el item\r\n                        e.itemsSeleccionado = [valorCheck];\r\n                    } else {\r\n\r\n                        // Se añade el item al array\r\n                        e.itemsSeleccionado.push(valorCheck);\r\n                    }\r\n                }\r\n            })\r\n        } else if (checkeado == false) {\r\n\r\n            // Se asigna el item dentro del array para quitarlo\r\n            getCamposAdicionales.forEach(e => {\r\n\r\n                // Se captura la key\r\n                let key = e.nombreCampo;\r\n                let items = e.itemsSeleccionado ? e.itemsSeleccionado : [];\r\n\r\n                // Continua el proceso para quitarlo del array\r\n                if (items.length > 0 && (key == nombreElemento)) {\r\n\r\n                    // Se busca la posicion del elemento\r\n                    var index = items.indexOf(valorCheck);\r\n\r\n                    // Se quita el elemento\r\n                    items.splice(index, 1);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de generar las columnas de los parametros de la plantilla\r\n    const columnsCampos = [\r\n        {\r\n            name: 'Campo',\r\n            cell: campo =>\r\n                <div>\r\n                    <strong>{campo.nombreCampo ? campo.nombreCampo : \"\"}</strong>\r\n                </div>,\r\n        },\r\n        {\r\n            name: 'Items',\r\n            cell: campo =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresCampos(campo)}\r\n                    </div>\r\n                </div>\r\n        },\r\n    ];\r\n\r\n    // Metodo encargado de validar que haya al menos un elemento en la lista\r\n    const cerrarVentana = () => {\r\n\r\n        // Se llama el metodo a cerrar\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<ModalAceptarActualizar data={getModalState} />}\r\n            <Modal show={show} style={{ marginLeft: '-11px', marginTop: '55px' }}>\r\n                <Modal.Header className=\"block-header bg-primary-dark\">\r\n                    <Modal.Title className='block-title'> {props.data.title}</Modal.Title>\r\n                    <Button variant=\"primary\" onClick={cerrarVentana} className='btn-block-option'>\r\n                        <i className=\"fa fa-fw fa-times\"></i>\r\n                    </Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='col-md-12 mt-2 mb-2'>\r\n                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                            columns={columnsCampos}\r\n                            data={getCamposAdicionales}\r\n                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                            striped\r\n                        />\r\n                    </div>\r\n                </Modal.Body>\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Button className='btn btn-rounded btn-primary' variant=\"primary\" onClick={guardar}>\r\n                        Guardar\r\n                    </Button>\r\n                </div>\r\n            </Modal >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalItemsEditar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}