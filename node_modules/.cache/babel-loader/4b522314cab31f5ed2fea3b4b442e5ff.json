{"ast":null,"code":"\"use strict\";\n\nconst allowedProperties = {\n  title: \"dc:title\",\n  subject: \"dc:subject\",\n  author: \"dc:creator\",\n  creator: \"dc:creator\",\n  description: \"dc:description\",\n  keywords: \"cp:keywords\",\n  category: \"cp:category\"\n};\n\n/**\n * Core properties\n * @ignore\n */\nclass CoreProperties {\n  constructor(node) {\n    this._node = node;\n    this._properties = {};\n  }\n\n  /**\n   * Sets a specific property.\n   * @param {string} name - The name of the property.\n   * @param {*} value - The value of the property.\n   * @returns {CoreProperties} CoreProperties.\n   */\n  set(name, value) {\n    const key = name.toLowerCase();\n    if (typeof allowedProperties[key] === \"undefined\") {\n      throw new Error(`Unknown property name: \"${name}\"`);\n    }\n    this._properties[key] = value;\n    return this;\n  }\n\n  /**\n   * Get a specific property.\n   * @param {string} name - The name of the property.\n   * @returns {*} The property value.\n   */\n  get(name) {\n    const key = name.toLowerCase();\n    if (typeof allowedProperties[key] === \"undefined\") {\n      throw new Error(`Unknown property name: \"${name}\"`);\n    }\n    return this._properties[key];\n  }\n\n  /**\n   * Convert the collection to an XML object.\n   * @returns {{}} The XML.\n   */\n  toXml() {\n    for (const key in this._properties) {\n      if (!this._properties.hasOwnProperty(key)) continue;\n      this._node.children.push({\n        name: allowedProperties[key],\n        children: [this._properties[key]]\n      });\n    }\n    return this._node;\n  }\n}\nmodule.exports = CoreProperties;\n\n/*\ndocProps/core.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<cp:coreProperties xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<dc:title>Title</dc:title>\n<dc:subject>Subject</dc:subject>\n<dc:creator>Creator</dc:creator>\n<cp:keywords>Keywords</cp:keywords>\n<dc:description>Description</dc:description>\n<cp:category>Category</cp:category>\n</cp:coreProperties>\n */","map":{"version":3,"names":["allowedProperties","title","subject","author","creator","description","keywords","category","CoreProperties","constructor","node","_node","_properties","set","name","value","key","toLowerCase","Error","get","toXml","hasOwnProperty","children","push","module","exports"],"sources":["C:/w2d/personeria/personeria-ui/node_modules/xlsx-populate/lib/CoreProperties.js"],"sourcesContent":["\"use strict\";\n\nconst allowedProperties = {\n    title: \"dc:title\",\n    subject: \"dc:subject\",\n    author: \"dc:creator\",\n    creator: \"dc:creator\",\n    description: \"dc:description\",\n    keywords: \"cp:keywords\",\n    category: \"cp:category\"\n};\n\n/**\n * Core properties\n * @ignore\n */\nclass CoreProperties {\n    constructor(node) {\n        this._node = node;\n        this._properties = {};\n    }\n\n    /**\n     * Sets a specific property.\n     * @param {string} name - The name of the property.\n     * @param {*} value - The value of the property.\n     * @returns {CoreProperties} CoreProperties.\n     */\n    set(name, value) {\n        const key = name.toLowerCase();\n\n        if (typeof allowedProperties[key] === \"undefined\") {\n            throw new Error(`Unknown property name: \"${name}\"`);\n        }\n\n        this._properties[key] = value;\n\n        return this;\n    }\n\n    /**\n     * Get a specific property.\n     * @param {string} name - The name of the property.\n     * @returns {*} The property value.\n     */\n    get(name) {\n        const key = name.toLowerCase();\n\n        if (typeof allowedProperties[key] === \"undefined\") {\n            throw new Error(`Unknown property name: \"${name}\"`);\n        }\n\n        return this._properties[key];\n    }\n\n    /**\n     * Convert the collection to an XML object.\n     * @returns {{}} The XML.\n     */\n    toXml() {\n        for (const key in this._properties) {\n            if (!this._properties.hasOwnProperty(key)) continue;\n            this._node.children.push({\n                name: allowedProperties[key],\n                children: [this._properties[key]]\n            });\n        }\n\n        return this._node;\n    }\n}\n\nmodule.exports = CoreProperties;\n\n/*\ndocProps/core.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<cp:coreProperties xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n<dc:title>Title</dc:title>\n<dc:subject>Subject</dc:subject>\n<dc:creator>Creator</dc:creator>\n<cp:keywords>Keywords</cp:keywords>\n<dc:description>Description</dc:description>\n<cp:category>Category</cp:category>\n</cp:coreProperties>\n */\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,iBAAiB,GAAG;EACtBC,KAAK,EAAE,UAAU;EACjBC,OAAO,EAAE,YAAY;EACrBC,MAAM,EAAE,YAAY;EACpBC,OAAO,EAAE,YAAY;EACrBC,WAAW,EAAE,gBAAgB;EAC7BC,QAAQ,EAAE,aAAa;EACvBC,QAAQ,EAAE;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMC,cAAc,CAAC;EACjBC,WAAW,CAACC,IAAI,EAAE;IACd,IAAI,CAACC,KAAK,GAAGD,IAAI;IACjB,IAAI,CAACE,WAAW,GAAG,CAAC,CAAC;EACzB;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACIC,GAAG,CAACC,IAAI,EAAEC,KAAK,EAAE;IACb,MAAMC,GAAG,GAAGF,IAAI,CAACG,WAAW,EAAE;IAE9B,IAAI,OAAOjB,iBAAiB,CAACgB,GAAG,CAAC,KAAK,WAAW,EAAE;MAC/C,MAAM,IAAIE,KAAK,CAAE,2BAA0BJ,IAAK,GAAE,CAAC;IACvD;IAEA,IAAI,CAACF,WAAW,CAACI,GAAG,CAAC,GAAGD,KAAK;IAE7B,OAAO,IAAI;EACf;;EAEA;AACJ;AACA;AACA;AACA;EACII,GAAG,CAACL,IAAI,EAAE;IACN,MAAME,GAAG,GAAGF,IAAI,CAACG,WAAW,EAAE;IAE9B,IAAI,OAAOjB,iBAAiB,CAACgB,GAAG,CAAC,KAAK,WAAW,EAAE;MAC/C,MAAM,IAAIE,KAAK,CAAE,2BAA0BJ,IAAK,GAAE,CAAC;IACvD;IAEA,OAAO,IAAI,CAACF,WAAW,CAACI,GAAG,CAAC;EAChC;;EAEA;AACJ;AACA;AACA;EACII,KAAK,GAAG;IACJ,KAAK,MAAMJ,GAAG,IAAI,IAAI,CAACJ,WAAW,EAAE;MAChC,IAAI,CAAC,IAAI,CAACA,WAAW,CAACS,cAAc,CAACL,GAAG,CAAC,EAAE;MAC3C,IAAI,CAACL,KAAK,CAACW,QAAQ,CAACC,IAAI,CAAC;QACrBT,IAAI,EAAEd,iBAAiB,CAACgB,GAAG,CAAC;QAC5BM,QAAQ,EAAE,CAAC,IAAI,CAACV,WAAW,CAACI,GAAG,CAAC;MACpC,CAAC,CAAC;IACN;IAEA,OAAO,IAAI,CAACL,KAAK;EACrB;AACJ;AAEAa,MAAM,CAACC,OAAO,GAAGjB,cAAc;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script"}