{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Administracion\\\\Evaluacion\\\\EvaluacionFasesLista.js\",\n  _s = $RefreshSig$();\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport ClasificacionRadicadoApi from '../../Api/Services/ClasificacionRadicadoApi';\nimport { Navigate } from \"react-router-dom\";\nimport CierreEtapaApi from '../../Api/Services/CierreEtapaApi';\nimport { useLocation } from 'react-router-dom';\nimport { hasAccess } from '../../../components/Utils/Common';\nimport ListaBotones from '../../Utils/ListaBotones';\nimport DataTable from 'react-data-table-component';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../../Utils/Spinner';\nimport ParametroModel from '../../Models/ParametroModel';\nimport { quitarAcentos } from '../../Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EvaluacionFasesLista() {\n  _s();\n  const [errorApi, setErrorApi] = useState('');\n  const [estadoEtapaCapturaReparto, setEstadoEtapaCapturaReparto] = useState(false);\n  const [getEstadoLista, setEstadoLista] = useState('');\n  const [getSeach, setSeach] = useState('');\n  const paganationPerPages = global.Constants.DATA_TABLE.PAGINATION_PER_PAGE;\n  const [perPage, setPerPage] = useState(global.Constants.DATA_TABLE.PAGINATION_PER_PAGE);\n  const [pageActual, setPageActual] = useState(1);\n  const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const columns = [{\n    name: 'TIPO DE EVALUACIÓN',\n    cell: clasificacion_radicado => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [clasificacion_radicado.attributes.nombre_resultado_evaluacion, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 80\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 45\n    }, this),\n    selector: clasificacion_radicado => clasificacion_radicado.attributes.nombre_resultado_evaluacion,\n    sortable: true,\n    width: \"40%\"\n  }, {\n    name: 'TIPO DE EXPEDIENTE',\n    cell: clasificacion_radicado => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [clasificacion_radicado.attributes.nombre_tipo_expediente + ' ' + clasificacion_radicado.attributes.nombre_sub_tipo_expediente, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 140\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 45\n    }, this),\n    selector: clasificacion_radicado => clasificacion_radicado.attributes.nombre_tipo_expediente,\n    sortable: true,\n    width: \"40%\"\n  }, {\n    name: 'ACCIONES',\n    cell: row => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `${row.attributes.id_tipo_expediente}/${row.attributes.id_sub_tipo_expediente}/${row.attributes.id_resultado_evaluacion}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn btn-primary\",\n          title: \"Editar\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-fw fa-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn btn-primary\",\n        title: \"Eliminar\",\n        onClick: () => getEliminarEvaluacionFases(row.attributes.id_tipo_expediente, row.attributes.id_sub_tipo_expediente, row.attributes.id_resultado_evaluacion),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-fw fa-trash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this),\n    width: \"20%\"\n  }];\n  const [getRoutes, setRoutes] = useState({\n    id_fase: global.Constants.FASES.CLASIFICACION,\n    crear_registro: \"/EvaluacionFasesAdd\",\n    consultar_registros: \"/EvaluacionFasesLista\",\n    mostrarBotonAgregar: true,\n    muestra_activos: false,\n    muestra_inactivos: false\n  });\n  useEffect(() => {\n    async function fetchData() {\n      getListaExpedientes();\n    }\n    fetchData();\n  }, []);\n  const getListaExpedientes = () => {\n    window.showSpinner(true);\n    GenericApi.getGeneric(\"administracion/evaluacion/lista-expedientes\").then(datos => {\n      if (!datos.error) {\n        setClasificacionRadicadoLista(datos);\n        //console.log(\"Daticos\", datos);\n      } else {\n        setModalState({\n          title: \"ADMINISTRACIÓN :: CONFIGURACIÓN DE FASES ETAPA EVALUACIÓN PQR\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoLista',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n      window.showSpinner(false);\n    });\n  };\n  const getEliminarEvaluacionFases = ($idTipoExpediente, $idSubExpediente, $idEvaluacion) => {\n    window.showSpinner(true);\n    GenericApi.getGeneric(\"eliminar-fases-evaluacion-lista/\" + $idTipoExpediente + '/' + $idSubExpediente + '/' + $idEvaluacion).then(datos => {\n      if (!datos.error) {\n        setClasificacionRadicadoLista({\n          data: [],\n          links: [],\n          meta: []\n        });\n        getListaExpedientes();\n      } else {\n        setModalState({\n          title: \"ADMINITRACIÓN :: CONFIGURACIÓN DE FASES ETAPA EVALUACIÓN PQR\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoLista',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false);\n      }\n    });\n  };\n  const handlePageChange = page => {\n    //window.showSpinner(true);\n    setPageActual(page);\n    //cargarClasificaciones(page, perPage, (getEstadoLista == \"Inactivos\" ? '0' : \"1\"));\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    //window.showSpinner(true);\n    setPerPage(newPerPage);\n    setPageActual(page);\n    //cargarClasificaciones(page, newPerPage, (getEstadoLista == \"Inactivos\" ? '0' : \"1\"));\n  };\n\n  const handleCallback = childData => {\n    try {\n      window.showSpinner(true);\n      setEstadoLista(childData == global.Constants.ESTADOS.INACTIVO ? \"Inactivos\" : \"Activos\");\n      //cargarClasificaciones(1, paganationPerPages, childData);\n    } catch (error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w2d_block\",\n          children: /*#__PURE__*/_jsxDEV(\"nav\", {\n            \"aria-label\": \"breadcrumb\",\n            children: /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"breadcrumb breadcrumb-alt push\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"breadcrumb-item\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                  underline: \"hover\",\n                  className: \"text-dark\",\n                  to: ``,\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"Etapas del proceso\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 120\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 66\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"breadcrumb-item\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                  underline: \"hover\",\n                  className: \"text-dark\",\n                  to: `/EvaluacionFasesLista/`,\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"Configuraci\\xF3n de fases de la etapa evaluaci\\xF3n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 142\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 66\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block block-themed\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"block-title\",\n              children: \"ADMINISTRACI\\xD3N :: CONFIGURACI\\xD3N DE FASES DE LA ETAPA EVALUACI\\xD3N PQR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group \",\n                    children: /*#__PURE__*/_jsxDEV(Field, {\n                      type: \"text\",\n                      id: \"search\",\n                      name: \"search\",\n                      value: getSeach,\n                      onChange: e => setSeach(e.target.value),\n                      onKeyPress: e => {\n                        e.key === 'Enter' && e.preventDefault();\n                      },\n                      className: \"form-control border border-success\",\n                      placeholder: \"Buscar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ListaBotones, {\n                  getRoutes: getRoutes,\n                  parentCallback: handleCallback,\n                  mostrarBotonAgregar: true,\n                  id: \"botonesNavegacion\",\n                  name: \"botonesNavegacion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this), hasAccess('CR_ClasificacionRadicado', 'Consultar') ? /*#__PURE__*/_jsxDEV(DataTable, {\n                className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                columns: columns,\n                data: clasificacionRadicadoLista.data.filter(suggestion => {\n                  if (getSeach === \"\") {\n                    return suggestion;\n                  } else if ((quitarAcentos(suggestion.attributes.nombre_tipo_expediente) + quitarAcentos(suggestion.attributes.nombre_sub_tipo_expediente) + quitarAcentos(suggestion.attributes.nombre_resultado_evaluacion)).toLowerCase().includes(quitarAcentos(getSeach.toLowerCase()))) {\n                    return suggestion;\n                  }\n                }),\n                perPage: perPage,\n                page: pageActual,\n                pagination: true,\n                noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n                paginationTotalRows: clasificacionRadicadoLista.data.length,\n                onChangePage: handlePageChange,\n                onChangeRowsPerPage: handlePerRowsChange,\n                defaultSortFieldId: \"Nombre\",\n                striped: true,\n                paginationComponentOptions: {\n                  rowsPerPageText: global.Constants.DATA_TABLE.FILTRO_POR_PAGINA\n                },\n                defaultSortAsc: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 41\n              }, this) : null]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EvaluacionFasesLista, \"F4od749WJ/rKIZmmvf1i69nqzCw=\");\n_c = EvaluacionFasesLista;\nexport default EvaluacionFasesLista;\nvar _c;\n$RefreshReg$(_c, \"EvaluacionFasesLista\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","Link","ClasificacionRadicadoApi","Navigate","CierreEtapaApi","useLocation","hasAccess","ListaBotones","DataTable","ModalGen","GenericApi","Spinner","ParametroModel","quitarAcentos","EvaluacionFasesLista","errorApi","setErrorApi","estadoEtapaCapturaReparto","setEstadoEtapaCapturaReparto","getEstadoLista","setEstadoLista","getSeach","setSeach","paganationPerPages","global","Constants","DATA_TABLE","PAGINATION_PER_PAGE","perPage","setPerPage","pageActual","setPageActual","clasificacionRadicadoLista","setClasificacionRadicadoLista","data","links","meta","getModalState","setModalState","title","message","show","columns","name","cell","clasificacion_radicado","attributes","nombre_resultado_evaluacion","selector","sortable","width","nombre_tipo_expediente","nombre_sub_tipo_expediente","row","id_tipo_expediente","id_sub_tipo_expediente","id_resultado_evaluacion","getEliminarEvaluacionFases","getRoutes","setRoutes","id_fase","FASES","CLASIFICACION","crear_registro","consultar_registros","mostrarBotonAgregar","muestra_activos","muestra_inactivos","fetchData","getListaExpedientes","window","showSpinner","getGeneric","then","datos","error","toString","redirect","alert","TIPO_ALERTA","ERROR","$idTipoExpediente","$idSubExpediente","$idEvaluacion","handlePageChange","page","handlePerRowsChange","newPerPage","handleCallback","childData","ESTADOS","INACTIVO","e","target","value","key","preventDefault","filter","suggestion","toLowerCase","includes","SIN_DATOS_TABLE","length","rowsPerPageText","FILTRO_POR_PAGINA"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Administracion/Evaluacion/EvaluacionFasesLista.js"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport ClasificacionRadicadoApi from '../../Api/Services/ClasificacionRadicadoApi';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport CierreEtapaApi from '../../Api/Services/CierreEtapaApi';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { hasAccess } from '../../../components/Utils/Common';\r\nimport ListaBotones from '../../Utils/ListaBotones';\r\nimport DataTable from 'react-data-table-component';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ParametroModel from '../../Models/ParametroModel';\r\nimport { quitarAcentos } from '../../Utils/Common';\r\n\r\nfunction EvaluacionFasesLista() {\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [estadoEtapaCapturaReparto, setEstadoEtapaCapturaReparto] = useState(false);\r\n    const [getEstadoLista, setEstadoLista] = useState('');\r\n    const [getSeach, setSeach] = useState('');\r\n    const paganationPerPages = global.Constants.DATA_TABLE.PAGINATION_PER_PAGE;\r\n    const [perPage, setPerPage] = useState(global.Constants.DATA_TABLE.PAGINATION_PER_PAGE);\r\n    const [pageActual, setPageActual] = useState(1);\r\n    const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n \r\n    const columns = [\r\n\r\n        {\r\n            name: 'TIPO DE EVALUACIÓN',\r\n            cell: clasificacion_radicado => <div>\r\n                {clasificacion_radicado.attributes.nombre_resultado_evaluacion}<br/>\r\n            </div>,\r\n            selector: clasificacion_radicado => clasificacion_radicado.attributes.nombre_resultado_evaluacion,\r\n            sortable: true,\r\n            width: \"40%\"\r\n        },\r\n\r\n        {\r\n            name: 'TIPO DE EXPEDIENTE',\r\n            cell: clasificacion_radicado => <div>\r\n                {clasificacion_radicado.attributes.nombre_tipo_expediente+' '+clasificacion_radicado.attributes.nombre_sub_tipo_expediente}<br/>\r\n            </div>,\r\n            selector: clasificacion_radicado => clasificacion_radicado.attributes.nombre_tipo_expediente,\r\n            sortable: true,\r\n            width: \"40%\"\r\n        },\r\n\r\n        {\r\n            name: 'ACCIONES',\r\n            cell: row => <div>\r\n                <Link to={`${row.attributes.id_tipo_expediente}/${row.attributes.id_sub_tipo_expediente}/${row.attributes.id_resultado_evaluacion}`}>\r\n                    <button type=\"button\" className=\"btn btn btn-primary\" title='Editar'>\r\n                        <i className=\"fa fa-fw fa-edit\"></i>\r\n                    </button>\r\n                </Link>\r\n                <button type=\"button\" className=\"btn btn btn-primary\" title='Eliminar' onClick={() => getEliminarEvaluacionFases(row.attributes.id_tipo_expediente, row.attributes.id_sub_tipo_expediente, row.attributes.id_resultado_evaluacion)}>\r\n                    <i className=\"fa fa-fw fa-trash\"></i>\r\n                </button>\r\n            </div>,\r\n            width: \"20%\"\r\n\r\n        }\r\n    \r\n    ];\r\n\r\n\r\n    const [getRoutes, setRoutes] = useState({\r\n        id_fase: global.Constants.FASES.CLASIFICACION,\r\n        crear_registro: \"/EvaluacionFasesAdd\",\r\n        consultar_registros: \"/EvaluacionFasesLista\",\r\n        mostrarBotonAgregar: true,\r\n        muestra_activos: false,\r\n        muestra_inactivos: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            getListaExpedientes();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const getListaExpedientes = () => {\r\n        window.showSpinner(true);\r\n        GenericApi.getGeneric(\"administracion/evaluacion/lista-expedientes\").then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setClasificacionRadicadoLista(datos);\r\n                    //console.log(\"Daticos\", datos);\r\n                }\r\n                else {\r\n                    setModalState({ title: \"ADMINISTRACIÓN :: CONFIGURACIÓN DE FASES ETAPA EVALUACIÓN PQR\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', alert: global.Constants.TIPO_ALERTA.ERROR }); \r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    const getEliminarEvaluacionFases = ($idTipoExpediente, $idSubExpediente, $idEvaluacion) => {\r\n        window.showSpinner(true);\r\n        GenericApi.getGeneric(\"eliminar-fases-evaluacion-lista/\"+$idTipoExpediente+'/'+$idSubExpediente+'/'+$idEvaluacion).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setClasificacionRadicadoLista({ data: [], links: [], meta: [] });\r\n                    getListaExpedientes();\r\n                }\r\n                else {\r\n                    setModalState({ title: \"ADMINITRACIÓN :: CONFIGURACIÓN DE FASES ETAPA EVALUACIÓN PQR\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', alert: global.Constants.TIPO_ALERTA.ERROR }); \r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handlePageChange = page => {\r\n        //window.showSpinner(true);\r\n        setPageActual(page);\r\n        //cargarClasificaciones(page, perPage, (getEstadoLista == \"Inactivos\" ? '0' : \"1\"));\r\n    }\r\n\r\n    const handlePerRowsChange = async (newPerPage, page) => {\r\n        //window.showSpinner(true);\r\n        setPerPage(newPerPage);\r\n        setPageActual(page);\r\n        //cargarClasificaciones(page, newPerPage, (getEstadoLista == \"Inactivos\" ? '0' : \"1\"));\r\n\r\n    }\r\n\r\n    const handleCallback = (childData) => {\r\n        try {\r\n            window.showSpinner(true);\r\n            setEstadoLista(childData == global.Constants.ESTADOS.INACTIVO ? \"Inactivos\" : \"Activos\")\r\n            //cargarClasificaciones(1, paganationPerPages, childData);\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <Formik>\r\n                <Form>\r\n                    \r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={``}><small>Etapas del proceso</small></Link></li>\r\n                                    <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/EvaluacionFasesLista/`}><small>Configuración de fases de la etapa evaluación</small></Link></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div> \r\n                    \r\n                        \r\n\r\n                    <div className=\"block block-themed\">\r\n                        <div className=\"block-header\">\r\n                            <h3 className=\"block-title\">ADMINISTRACIÓN :: CONFIGURACIÓN DE FASES DE LA ETAPA EVALUACIÓN PQR</h3>\r\n                        </div>\r\n\r\n                        <div className=\"block-content\">\r\n                            <>\r\n                                <div className='row'>\r\n\r\n                                    <div className='col-md-3'>\r\n                                        <div className=\"form-group \">\r\n                                            <Field type=\"text\" id=\"search\" name=\"search\" value={getSeach} onChange={e => setSeach(e.target.value)} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} className=\"form-control border border-success\" placeholder=\"Buscar\" />\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <ListaBotones getRoutes={getRoutes} parentCallback={handleCallback} mostrarBotonAgregar={true} id=\"botonesNavegacion\" name=\"botonesNavegacion\" />\r\n\r\n                                </div>\r\n\r\n                                {\r\n                                    (hasAccess('CR_ClasificacionRadicado', 'Consultar')) ? (\r\n\r\n                                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                            columns={columns}\r\n                                            data={clasificacionRadicadoLista.data.filter((suggestion) => {\r\n                                                if (getSeach === \"\") {\r\n                                                    return suggestion;\r\n                                                } else if (\r\n\r\n                                                    (( quitarAcentos(suggestion.attributes.nombre_tipo_expediente) +\r\n                                                        quitarAcentos(suggestion.attributes.nombre_sub_tipo_expediente) + \r\n                                                            quitarAcentos(suggestion.attributes.nombre_resultado_evaluacion)\r\n                                                        ).toLowerCase().includes(quitarAcentos(getSeach.toLowerCase())))\r\n\r\n                                                ) {\r\n                                                    return suggestion;\r\n                                                }\r\n                                            })}\r\n                                            perPage={perPage}\r\n                                            page={pageActual}\r\n                                            pagination\r\n                                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                                            paginationTotalRows={clasificacionRadicadoLista.data.length}\r\n                                            onChangePage={handlePageChange}\r\n                                            onChangeRowsPerPage={handlePerRowsChange}\r\n                                            defaultSortFieldId=\"Nombre\"\r\n                                            striped\r\n                                            paginationComponentOptions={{ rowsPerPageText: global.Constants.DATA_TABLE.FILTRO_POR_PAGINA }}\r\n                                            defaultSortAsc={false}\r\n                                        />\r\n                                    ) : null\r\n                                }\r\n                            </>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\nexport default EvaluacionFasesLista;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}