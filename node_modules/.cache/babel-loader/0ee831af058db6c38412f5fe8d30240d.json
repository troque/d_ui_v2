{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ClasificacionRadicado\\\\ClasificacionRadicado.js\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../../Utils/Spinner';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ClasificacionRadicado(props) {\n  _s();\n\n  const [errorApi, setErrorApi] = useState('');\n  const [isRedirect, setIsRedirect] = useState(false);\n  const [listaTipoExpediente, setListaTipoExpediente] = useState({\n    data: {}\n  });\n  const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\n  const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({\n    data: {}\n  });\n  const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\n  const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\n  const [listaTipoRespuesta, setListaTipoRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\n  const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\n  const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\n  const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\n  const [listaTiposQueja, setListaTiposQueja] = useState({\n    data: {}\n  });\n  const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\n  const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\n  const [fechaTermino, setFechaTermino] = useState(null);\n  const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\n  const [getNombreUsuario, setNombreUsuario] = useState(\"\");\n  const [getNombreRol, setNombreRol] = useState(\"\");\n  const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\n  console.log(\"PROCESO DISCIPLINARIO: \" + props.getIdProcesoDisciplinario);\n  console.log(\"ETAPA: \" + props.getIdEtapa);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: hasAccess('TiposUsuario', 'Control interno disciplinario') ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ingresoTipoExpediente\",\n              children: [\"Tipo de expediente \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 107\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"ingresoTipoExpediente\",\n              name: \"ingresoTipoExpediente\",\n              value: selectedTipoExpediente,\n              onChange: e => selectChangeTipoExpediente(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Por favor seleccione\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 53\n              }, this), respuestaTipoExpediente ? selectTipoExpediente() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }, this), selectedTipoExpediente === '1' ? componenteTipoExpediente(1) : '', selectedTipoExpediente === '2' ? componenteTipoExpediente(2) : '', selectedTipoExpediente === '3' ? componenteTipoExpediente(3) : '', selectedTipoExpediente === '4' ? componenteTipoExpediente(4) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(ClasificacionRadicado, \"nmMtnvJ4mkFH4H0gtsEkzbqEvSs=\");\n\n_c = ClasificacionRadicado;\nexport default ClasificacionRadicado;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClasificacionRadicado\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ClasificacionRadicado/ClasificacionRadicado.js"],"names":["moment","GenericApi","Spinner","React","useEffect","useState","ClasificacionRadicado","props","errorApi","setErrorApi","isRedirect","setIsRedirect","listaTipoExpediente","setListaTipoExpediente","data","respuestaTipoExpediente","setRespuestaTipoExpediente","selectedTipoExpediente","setSelectedTipoExpediente","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","listaTipoDerechoPeticion","setListaDerechoPeticion","selectedTipoDerechoPeticion","setSelectedDerechoPeticion","respuestaTipoDerechoPeticion","setRespuestaDerechoPeticion","listaTipoRespuesta","setListaTipoRespuesta","selectedTipoRespuesta","setSelectedTipoRespuesta","respuestaTipoRespuesta","setRespuestaTipoRespuesta","listaTerminosRespuesta","setListaTerminosRespuesta","selectedTerminosRespuesta","setSelectedTerminosRespuesta","respuestaTerminosRespuesta","setRespuestaTerminosRespuesta","listaTiposQueja","setListaTiposQueja","selectedTiposQueja","setSelectedTiposQueja","respuestaTiposQueja","setRespuestaTiposQueja","fechaTermino","setFechaTermino","resultDiasNoLaborales","setResultDiasNoLaborales","getNombreUsuario","setNombreUsuario","getNombreRol","setNombreRol","getAnosAtrasInvalidos","setAnosAtrasInvalidos","console","log","getIdProcesoDisciplinario","getIdEtapa","hasAccess","e","selectChangeTipoExpediente","target","value","selectTipoExpediente","componenteTipoExpediente"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction ClasificacionRadicado (props){\r\n    \r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n    const [listaTipoExpediente, setListaTipoExpediente] = useState({ data: {} });\r\n\r\n    const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\r\n    const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\r\n\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n\r\n    const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({ data: {} });\r\n    const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\r\n    const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\r\n\r\n    const [listaTipoRespuesta, setListaTipoRespuesta] = useState({ data: {} });\r\n    const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\r\n    const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\r\n\r\n    const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({ data: {} });\r\n    const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\r\n    const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\r\n\r\n    const [listaTiposQueja, setListaTiposQueja] = useState({ data: {} });\r\n    const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\r\n    const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\r\n\r\n    const [fechaTermino, setFechaTermino] = useState(null);\r\n    const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\r\n\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [getNombreRol, setNombreRol] = useState(\"\");\r\n    const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\r\n\r\n\r\n\r\n    console.log(\"PROCESO DISCIPLINARIO: \"+props.getIdProcesoDisciplinario)\r\n    console.log(\"ETAPA: \"+props.getIdEtapa)\r\n\r\n        \r\n\r\n        return (\r\n                \r\n\r\n                <>\r\n                    {\r\n                        (hasAccess('TiposUsuario', 'Control interno disciplinario')) ?\r\n                            (\r\n\r\n                                <div className=\"block-content\">\r\n\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"ingresoTipoExpediente\">Tipo de expediente <span className=\"text-danger\">*</span></label>\r\n                                                <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                                                    value={selectedTipoExpediente} onChange={e => selectChangeTipoExpediente(e.target.value)}>\r\n                                                    <option value=\"\">Por favor seleccione</option>\r\n                                                    {respuestaTipoExpediente ? selectTipoExpediente() : null}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/*DERECHO DE PETICION*/}\r\n                                    {selectedTipoExpediente === '1' ? componenteTipoExpediente(1) : ''}\r\n                                    {/*PODER REFERENTE A SOLIICTUD*/}\r\n                                    {selectedTipoExpediente === '2' ? componenteTipoExpediente(2) : ''}\r\n                                    {/*QUEJA*/}\r\n                                    {selectedTipoExpediente === '3' ? componenteTipoExpediente(3) : ''}\r\n                                    {/*TUTELA*/}\r\n                                    {selectedTipoExpediente === '4' ? componenteTipoExpediente(4) : ''}\r\n\r\n                                </div>\r\n                            ) : null\r\n                    }\r\n\r\n                </>\r\n                        \r\n               \r\n        );\r\n \r\n    \r\n}\r\n\r\nexport default ClasificacionRadicado;"]},"metadata":{},"sourceType":"module"}