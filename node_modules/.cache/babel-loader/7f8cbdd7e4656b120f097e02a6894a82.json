{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ClasificacionRadicado\\\\ClasificacionRadicado.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { Link } from \"react-router-dom\";\nimport 'react-datetime/css/react-datetime.css';\nimport 'moment/locale/es';\nimport { getUser } from '../../../components/Utils/Common';\nimport { useLocation } from 'react-router-dom';\nimport DatePerson from \"../../DatePerson/DatePerson\";\nimport '../../Utils/Constants';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ClasificacionRadicado(props) {\n  _s();\n\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [listaTipoExpediente, setListaTipoExpediente] = useState({\n    data: {}\n  });\n  const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\n  const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({\n    data: {}\n  });\n  const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\n  const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\n  const [listaTipoRespuesta, setListaTipoRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\n  const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\n  const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\n  const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\n  const [listaTiposQueja, setListaTiposQueja] = useState({\n    data: {}\n  });\n  const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\n  const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\n  const [fechaTermino, setFechaTermino] = useState(null);\n  const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\n  const [getNombreUsuario, setNombreUsuario] = useState(\"\");\n  const [getNombreRol, setNombreRol] = useState(\"\");\n  const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\n  const [getAlerta, setAlerta] = useState(\"\");\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let radicado = from.radicado;\n  let id_etapa = from.id_etapa;\n  /**\r\n   * Validación de los caracteres especiales en los campos de texto\r\n   * @param {*} str \r\n   * @returns \r\n   */\n\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n  /**\r\n   * Funcion principal\r\n   */\n\n\n  useEffect(() => {\n    async function fetchData() {\n      //window.showSpinner(true);\n      setNombreUsuario(getUser().nombre);\n      setNombreRol(getUser().roles);\n      GenericApi.getGeneric(\"tipo-respuesta\").then(datos => {\n        if (!datos.error) {\n          setListaTipoRespuesta(datos);\n          setRespuestaTipoRespuesta(true);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      }); //GenericApi.getGeneric(\"lista-tipo-expediente/\"+procesoDisciplinarioId).then(\n\n      GenericApi.getGeneric(\"proceso-disciplinario/tipo-expdiente/\" + procesoDisciplinarioId).then(datos => {\n        if (!datos.error) {\n          setListaTipoExpediente(datos);\n          setRespuestaTipoExpediente(true);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n      GenericApi.getGeneric(\"lista-tipo-derecho-peticion/\" + procesoDisciplinarioId).then(datos => {\n        if (!datos.error) {\n          setListaDerechoPeticion(datos);\n          setRespuestaDerechoPeticion(true);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n      GenericApi.getGeneric(\"lista-terminos-respuesta/\" + procesoDisciplinarioId).then(datos => {\n        if (!datos.error) {\n          setListaTerminosRespuesta(datos);\n          setRespuestaTerminosRespuesta(true);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n      GenericApi.getGeneric(\"lista-tipo-queja/\" + procesoDisciplinarioId).then(datos => {\n        if (!datos.error) {\n          setListaTiposQueja(datos);\n          setRespuestaTiposQueja(true);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n      setResultDiasNoLaborales([]);\n      GenericApi.getGeneric(\"dias-no-laborales?estado=1\").then(datos => {\n        if (!datos.error) {\n          var data = [];\n\n          for (var i in datos.data) {\n            var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\n            var result = new Date(date);\n            result.setDate(result.getDate() + 1);\n            data.push(i, date);\n          }\n\n          setResultDiasNoLaborales(data); //console.log(resultDiasNoLaborales);\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoForm',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n      obtenerParametros();\n    }\n\n    fetchData();\n  }, []);\n  /**\r\n   * Funcion que obtiene información de las parámetricas.\r\n   * Ejm: número máximo y mínimo de caracteres \r\n   */\n\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      }; //buscamos el parametro\n\n      GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ClasificacionRadicadoForm',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const disableCustomDt = current => {\n    return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));\n  };\n\n  let selectChangeTipoRespuesta = e => {\n    setSelectedTipoRespuesta(e);\n  };\n\n  let selectChangeTipoExpediente = e => {\n    setCountTextArea(0);\n    setSelectedTipoExpediente(e);\n  };\n\n  let selectChangeTipoDerechoPeticion = e => {\n    setCountTextArea(0);\n    setSelectedDerechoPeticion(e);\n  };\n\n  let selectChangeTerminoRespuesta = e => {\n    setSelectedTerminosRespuesta(e);\n  };\n\n  let selectChangeTiposQueja = e => {\n    setSelectedTiposQueja(e);\n  }; //Componetes\n\n\n  const selectTipoRespuesta = () => {\n    return listaTipoRespuesta.data.map((tipo_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: tipo_respuesta.id,\n        children: tipo_respuesta.attributes.nombre\n      }, tipo_respuesta.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTipoExpediente = () => {\n    return listaTipoExpediente.data.map((expediente, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: expediente.id,\n        children: expediente.attributes.nombre\n      }, expediente.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTipoDerechoPeticion = () => {\n    return listaTipoDerechoPeticion.data.map((derecho_peticion, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: derecho_peticion.id,\n        children: derecho_peticion.attributes.nombre\n      }, derecho_peticion.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTerminosRespuesta = () => {\n    return listaTerminosRespuesta.data.map((termino_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: termino_respuesta.id,\n        children: termino_respuesta.attributes.nombre\n      }, termino_respuesta.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const selectTiposQueja = () => {\n    return listaTiposQueja.data.map((tipo_queja, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: tipo_queja.id,\n        children: tipo_queja.attributes.nombre\n      }, tipo_queja.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const alertaPorTipoDerechoPeticion = i => {\n    for (let cont = 0; cont < listaTipoDerechoPeticion.data.length; cont++) {\n      if (listaTipoDerechoPeticion.data[cont].id == i) {\n        return listaTipoDerechoPeticion.data[cont].attributes.observacion;\n      }\n    }\n  };\n\n  const enviarDatos = datos => {\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"clasificacion_radicado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\n          \"id_etapa\": props.getParametros.id_etapa,\n          \"id_tipo_expediente\": selectedTipoExpediente,\n          \"observaciones\": datos.observaciones != null ? datos.observaciones : null,\n          \"id_tipo_queja\": datos.tipo_queja,\n          \"id_termino_respuesta\": selectedTerminosRespuesta,\n          \"fecha_termino\": datos.fechaTermino != null ? datos.fechaTermino : null,\n          \"hora_termino\": datos.horasTermino != null ? datos.horasTermino : null,\n          \"gestion_juridica\": datos.gestion_juridica === 'true' ? true : false,\n          \"estado\": true,\n          \"id_estado_reparto\": 2,\n          \"id_tipo_derecho_peticion\": datos.tipo_derecho_peticion,\n          \"oficina_control_interno\": false,\n          \"created_user\": getNombreUsuario,\n          \"reclasificacion\": props.getParametros.reclasificacion\n        }\n      }\n    };\n    GenericApi.addGeneric(\"clasificacion-radicado\", data).then(datos => {\n      if (!datos.error) {\n        console.log(datos);\n        from.cambiaColorClasificacionRadicado = \"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";\n\n        if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION) {\n          if (datos.data.attributes.funcionario_actual.name === getNombreUsuario) {\n            setModalState({\n              title: \"SINPROC No \" + radicado + \" :: Re-Clasificación del radicado\",\n              message: \"El proceso disciplinario se asigna a: \" + datos.data.attributes.funcionario_actual.nombre + \" \" + datos.data.attributes.funcionario_actual.apellido,\n              show: true,\n              redirect: '/RamasProceso',\n              from: {\n                from\n              }\n            });\n          } else {\n            setModalState({\n              title: \"SINPROC No \" + radicado + \" :: Re-Clasificación del radicado\",\n              message: \"El proceso disciplinario se asigna a: \" + datos.data.attributes.funcionario_actual.nombre + \" \" + datos.data.attributes.funcionario_actual.apellido,\n              show: true,\n              redirect: '/MisPendientes'\n            });\n          }\n        } else if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.CLASIFICACION) {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n            message: \"Registro Exitoso\",\n            show: true,\n            redirect: '/ClasificacionRadicadoLista',\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.EXITO\n          });\n        }\n      } else {\n        setModalState({\n          title: \"SINPROC No \" + radicado + \" :: Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ClasificacionRadicadoLista',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n    window.showSpinner(false);\n  };\n\n  const handleCallbackFechaTermino = childData => {\n    try {\n      setFechaTermino(childData);\n    } catch (error) {}\n  }; // COMPOENENTE TIPO EXPEDIENTE\n\n\n  const componenteTipoExpediente = tipo_expediente => {\n    // TIPO DE EXPEDIENTE = DERECHO DE PETICION\n    if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ingresoDerechoPeticion\",\n            children: [\"Tipo de derecho de petici\\xF3n \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 93\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"ingresoDerechoPeticion\",\n            name: \"ingresoDerechoPeticion\",\n            value: selectedTipoDerechoPeticion,\n            onChange: e => selectChangeTipoDerechoPeticion(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Por favor seleccione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 29\n            }, this), respuestaTipoDerechoPeticion ? selectTipoDerechoPeticion() : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this), selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.COPIAS ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.COPIAS) : '', selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.GENERAL ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.GENERAL) : '', selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.ALERTA ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.ALERTA) : '']\n      }, void 0, true);\n    } // TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            tipo_queja: global.Constants.TIPO_QUEJA.EXTERNA\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            return errores;\n          },\n          onSubmit: (valores, _ref) => {\n            let {\n              resetForm\n            } = _ref;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } // TIPO DE EXPEDIENTE = QUEJA\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            tipo_queja: ''\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.tipo_queja) {\n              errores.tipo_queja = 'Debe seleccionar un tipo de queja';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref2) => {\n            let {\n              resetForm\n            } = _ref2;\n            console.log(valores);\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"tipo_queja\",\n                children: [\"Ingrese Tipo de Queja \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 83\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: \"select\",\n                className: \"form-control\",\n                id: \"tipo_queja\",\n                name: \"tipo_queja\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Por favor seleccione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 37\n                }, this), respuestaTiposQueja ? selectTiposQueja() : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-window-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 86\n                  }, this), \" Cancelar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } // TIPO DE EXPEDIENTE = TUTELA\n    else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ingresoTipoRtaTutela\",\n          children: [\"Ingrese termino de respuesta \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 88\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"termino_rta\",\n          name: \"termino_rta\",\n          value: selectedTerminosRespuesta,\n          onChange: e => selectChangeTerminoRespuesta(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"{selectedTerminosRespuesta}\",\n            children: \"Por favor seleccione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 25\n          }, this), respuestaTerminosRespuesta ? selectTerminosRespuesta() : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 21\n        }, this), selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.DIAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS) : '', selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.HORAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS) : '']\n      }, void 0, true);\n    }\n  }; // COMOPNENTE TIPO DERECHO DE PETICION\n\n\n  const componenteTipoDerechoPeticion = tipo_derecho_peticion => {\n    alertaPorTipoDerechoPeticion(tipo_derecho_peticion); // TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\n\n    if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.COPIAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            gestion_juridica: false,\n            tipo_derecho_peticion: tipo_derecho_peticion\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref3) => {\n            let {\n              resetForm\n            } = _ref3;\n            enviarDatos(valores);\n          },\n          children: _ref4 => {\n            let {\n              errors\n            } = _ref4;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: alertaPorTipoDerechoPeticion(tipo_derecho_peticion)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Observaciones\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 571,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    as: \"textarea\",\n                    className: \"form-control\",\n                    id: \"observaciones\",\n                    name: \"observaciones\",\n                    rows: \"4\",\n                    placeholder: \"Escriba en este espacio las observaciones\",\n                    maxLength: getMaximoTextArea,\n                    minLength: getMinimoTextArea\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-right\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-primary\",\n                      children: [countTextArea, \" / \", getMaximoTextArea]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 575,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"observaciones\",\n                    component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-danger\",\n                      children: errors.observaciones\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 577,\n                      columnNumber: 94\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 577,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 87\n                  }, this), \" Registrar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/ClasificacionRadicadoLista/`,\n                  state: {\n                    from: from\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-window-close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 586,\n                      columnNumber: 90\n                    }, this), \" Cancelar\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } // TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\n    else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.GENERAL) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            gestion_juridica: false,\n            tipo_derecho_peticion: tipo_derecho_peticion\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref5) => {\n            let {\n              resetForm\n            } = _ref5;\n            enviarDatos(valores);\n          },\n          children: _ref6 => {\n            let {\n              errors\n            } = _ref6;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: alertaPorTipoDerechoPeticion(tipo_derecho_peticion)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Observaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 37\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"textarea\",\n                  className: \"form-control\",\n                  id: \"observaciones\",\n                  name: \"observaciones\",\n                  rows: \"4\",\n                  placeholder: \"Escriba en este espacio las observaciones\",\n                  maxLength: getMaximoTextArea,\n                  minLength: getMinimoTextArea\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-primary\",\n                    children: [countTextArea, \" / \", getMaximoTextArea]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 644,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"observaciones\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.observaciones\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 646,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content block-content-full text-right\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-rounded btn-primary\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 99\n                  }, this), \" Registrar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/ClasificacionRadicadoLista/`,\n                  state: {\n                    from: from\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-rounded btn-outline-primary\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-window-close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 653,\n                      columnNumber: 111\n                    }, this), \" Cancelar\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 653,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } // TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\n    else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.ALERTA) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            observaciones: '',\n            gestion_juridica: '',\n            tipo_derecho_peticion: tipo_derecho_peticion\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            setCountTextArea(valores.observaciones.length);\n\n            if (!valores.observaciones) {\n              errores.observaciones = 'Debe diligenciar el campo observaciones';\n            } else if (valores.observaciones.length <= getMinimoTextArea) {\n              errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres';\n            }\n\n            if (valores.observaciones) {\n              if (containsSpecialChars(valores.observaciones)) errores.observaciones = 'Tiene caracteres inválidos';\n            }\n\n            if (!valores.gestion_juridica) {\n              errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref7) => {\n            let {\n              resetForm\n            } = _ref7;\n            enviarDatos(valores);\n          },\n          children: _ref8 => {\n            let {\n              errors\n            } = _ref8;\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"Alerta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 707,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: alertaPorTipoDerechoPeticion(tipo_derecho_peticion)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 708,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"ingresoTipoExpediente\",\n                  children: [\"Requiere gesti\\xF3n juridica \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 102\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"select\",\n                  className: \"form-control\",\n                  id: \"gestion_juridica\",\n                  name: \"gestion_juridica\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Por favor seleccione\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"true\",\n                    children: \"Si\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 714,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"false\",\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 715,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Observaciones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 37\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 67\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: \"textarea\",\n                  className: \"form-control\",\n                  id: \"observaciones\",\n                  name: \"observaciones\",\n                  rows: \"4\",\n                  placeholder: \"Escriba en este espacio las observaciones\",\n                  maxLength: getMaximoTextArea,\n                  minLength: getMinimoTextArea\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-primary\",\n                    children: [countTextArea, \" / \", getMaximoTextArea]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 722,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"observaciones\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.observaciones\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 724,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-content block-content-full text-right\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-rounded btn-primary\",\n                    children: \"Registrar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 727,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/ClasificacionRadicadoLista/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn btn-rounded btn-outline-primary\",\n                      children: \"Cancelar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 729,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 728,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  }; // COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\n\n\n  const componenteTerminosRespuesta = termino_respuesta => {\n    //TERMINO TUTELA = DIAS      \n    if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            termino_rta: termino_respuesta,\n            horasTermino: null,\n            fechaTermino: fechaTermino\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.fechaTermino && !fechaTermino) {\n              errores.fechaTermino = 'Debe seleccionar el termino de respuesta';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref9) => {\n            let {\n              resetForm\n            } = _ref9;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Fecha para termino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 33\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(DatePerson, {\n                resultDiasNoLaborales: resultDiasNoLaborales,\n                getAnosAtrasInvalidos: getAnosAtrasInvalidos,\n                parentCallback: handleCallbackFechaTermino,\n                id: \"fechaTermino\",\n                name: \"fechaTermino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: \"Registrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } //TERMINO TUTELA = HORAS     \n    else if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            termino_rta: termino_respuesta,\n            horasTermino: '',\n            fechaTermino: new Date()\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n\n            if (!valores.horasTermino) {\n              errores.horasTermino = 'Debe seleccionar el termino de respuesta';\n            }\n\n            return errores;\n          },\n          onSubmit: (valores, _ref10) => {\n            let {\n              resetForm\n            } = _ref10;\n            enviarDatos(valores);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Horas para termino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 33\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"number\",\n                min: \"1\",\n                max: \"23\",\n                id: \"horasTermino\",\n                name: \"horasTermino\",\n                className: \"form-control\",\n                placeholder: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: \"Registrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ingresoTipoExpediente\",\n              children: [\"Tipo de expediente \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 87\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"ingresoTipoExpediente\",\n              name: \"ingresoTipoExpediente\",\n              value: selectedTipoExpediente,\n              onChange: e => selectChangeTipoExpediente(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Por favor seleccione\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 33\n              }, this), respuestaTipoExpediente ? selectTipoExpediente() : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 17\n      }, this), selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : '', selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClasificacionRadicado, \"OuMriUP2DsONYA1ju7vM8Q0xEuM=\", false, function () {\n  return [useLocation];\n});\n\n_c = ClasificacionRadicado;\nexport default ClasificacionRadicado;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClasificacionRadicado\");","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","Link","getUser","useLocation","DatePerson","ModalGen","GenericApi","ClasificacionRadicado","props","getModalState","setModalState","title","message","show","listaTipoExpediente","setListaTipoExpediente","data","respuestaTipoExpediente","setRespuestaTipoExpediente","selectedTipoExpediente","setSelectedTipoExpediente","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","listaTipoDerechoPeticion","setListaDerechoPeticion","selectedTipoDerechoPeticion","setSelectedDerechoPeticion","respuestaTipoDerechoPeticion","setRespuestaDerechoPeticion","listaTipoRespuesta","setListaTipoRespuesta","selectedTipoRespuesta","setSelectedTipoRespuesta","respuestaTipoRespuesta","setRespuestaTipoRespuesta","listaTerminosRespuesta","setListaTerminosRespuesta","selectedTerminosRespuesta","setSelectedTerminosRespuesta","respuestaTerminosRespuesta","setRespuestaTerminosRespuesta","listaTiposQueja","setListaTiposQueja","selectedTiposQueja","setSelectedTiposQueja","respuestaTiposQueja","setRespuestaTiposQueja","fechaTermino","setFechaTermino","resultDiasNoLaborales","setResultDiasNoLaborales","getNombreUsuario","setNombreUsuario","getNombreRol","setNombreRol","getAnosAtrasInvalidos","setAnosAtrasInvalidos","getAlerta","setAlerta","location","from","state","procesoDisciplinarioId","radicado","id_etapa","containsSpecialChars","str","result","global","Constants","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","fetchData","nombre","roles","getGeneric","then","datos","error","toString","redirect","alert","TIPO_ALERTA","ERROR","i","date","Date","setDate","getDate","push","obtenerParametros","getByDataGeneric","length","filter","map","filteredName","console","log","disableCustomDt","current","format","selectChangeTipoRespuesta","e","selectChangeTipoExpediente","selectChangeTipoDerechoPeticion","selectChangeTerminoRespuesta","selectChangeTiposQueja","selectTipoRespuesta","tipo_respuesta","id","attributes","selectTipoExpediente","expediente","selectTipoDerechoPeticion","derecho_peticion","selectTerminosRespuesta","termino_respuesta","selectTiposQueja","tipo_queja","alertaPorTipoDerechoPeticion","cont","observacion","enviarDatos","window","showSpinner","getParametros","id_proceso_disciplinario","observaciones","horasTermino","gestion_juridica","tipo_derecho_peticion","reclasificacion","addGeneric","cambiaColorClasificacionRadicado","tipo_clasificacion","TIPO_CLASIFICACION","VALIDAR_CLASIFICACION","funcionario_actual","name","apellido","CLASIFICACION","EXITO","handleCallbackFechaTermino","childData","componenteTipoExpediente","tipo_expediente","TIPOS_EXPEDIENTES","DERECHO_PETICION","target","value","DERECHOS_PETICION","COPIAS","componenteTipoDerechoPeticion","GENERAL","ALERTA","PODER_REFERENTE","TIPO_QUEJA","EXTERNA","valores","errores","resetForm","QUEJA","TUTELA","TERMINOS_RESPUESTA","DIAS","componenteTerminosRespuesta","HORAS","errors","termino_rta"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ClasificacionRadicado/ClasificacionRadicado.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport 'moment/locale/es';\r\nimport { getUser } from '../../../components/Utils/Common';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DatePerson from \"../../DatePerson/DatePerson\";\r\nimport '../../Utils/Constants';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\n\r\nfunction ClasificacionRadicado (props){\r\n    \r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n\r\n    const [listaTipoExpediente, setListaTipoExpediente] = useState({ data: {} });\r\n\r\n    const [respuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\r\n    const [selectedTipoExpediente, setSelectedTipoExpediente] = useState(\"\");\r\n\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n\r\n    const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({ data: {} });\r\n    const [selectedTipoDerechoPeticion, setSelectedDerechoPeticion] = useState(\"\");\r\n    const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\r\n\r\n    const [listaTipoRespuesta, setListaTipoRespuesta] = useState({ data: {} });\r\n    const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\r\n    const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\r\n\r\n    const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({ data: {} });\r\n    const [selectedTerminosRespuesta, setSelectedTerminosRespuesta] = useState(\"\");\r\n    const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\r\n\r\n    const [listaTiposQueja, setListaTiposQueja] = useState({ data: {} });\r\n    const [selectedTiposQueja, setSelectedTiposQueja] = useState(\"\");\r\n    const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\r\n\r\n    const [fechaTermino, setFechaTermino] = useState(null);\r\n    const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\r\n\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [getNombreRol, setNombreRol] = useState(\"\");\r\n    const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\r\n\r\n    const [getAlerta, setAlerta] = useState(\"\");\r\n    \r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let radicado = from.radicado;\r\n    let id_etapa = from.id_etapa;\r\n\r\n    /**\r\n     * Validación de los caracteres especiales en los campos de texto\r\n     * @param {*} str \r\n     * @returns \r\n     */\r\n    function containsSpecialChars(str) {\r\n        \r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Funcion principal\r\n     */\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            //window.showSpinner(true);\r\n            setNombreUsuario(getUser().nombre);\r\n            setNombreRol(getUser().roles);\r\n\r\n            GenericApi.getGeneric(\"tipo-respuesta\").then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n                        setListaTipoRespuesta(datos);\r\n                        setRespuestaTipoRespuesta(true);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n            \r\n            //GenericApi.getGeneric(\"lista-tipo-expediente/\"+procesoDisciplinarioId).then(\r\n            GenericApi.getGeneric(\"proceso-disciplinario/tipo-expdiente/\"+procesoDisciplinarioId).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setListaTipoExpediente(datos);\r\n                        setRespuestaTipoExpediente(true);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n\r\n            GenericApi.getGeneric(\"lista-tipo-derecho-peticion/\"+procesoDisciplinarioId).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setListaDerechoPeticion(datos);\r\n                        setRespuestaDerechoPeticion(true);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n\r\n            GenericApi.getGeneric(\"lista-terminos-respuesta/\"+procesoDisciplinarioId).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setListaTerminosRespuesta(datos);\r\n                        setRespuestaTerminosRespuesta(true);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n\r\n            GenericApi.getGeneric(\"lista-tipo-queja/\"+procesoDisciplinarioId).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setListaTiposQueja(datos);\r\n                        setRespuestaTiposQueja(true);\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n\r\n            setResultDiasNoLaborales([]);\r\n            GenericApi.getGeneric(\"dias-no-laborales?estado=1\").then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        var data = [];\r\n                        for (var i in datos.data) {\r\n                            var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\r\n                            var result = new Date(date);\r\n                            result.setDate(result.getDate() + 1);\r\n                            data.push(i, date);\r\n                        }\r\n\r\n                        setResultDiasNoLaborales(data);\r\n                        //console.log(resultDiasNoLaborales);\r\n                    } else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoForm', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n\r\n                }\r\n\r\n            )\r\n\r\n            obtenerParametros();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    /**\r\n     * Funcion que obtiene información de las parámetricas.\r\n     * Ejm: número máximo y mínimo de caracteres \r\n     */\r\n    const obtenerParametros = () => {\r\n        try {\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => (\r\n                                setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoForm', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const disableCustomDt = current => {\r\n        return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD'));\r\n    }\r\n\r\n    let selectChangeTipoRespuesta = (e) => {\r\n        setSelectedTipoRespuesta(e);\r\n    }\r\n\r\n    let selectChangeTipoExpediente = (e) => {\r\n        setCountTextArea(0)\r\n        setSelectedTipoExpediente(e);\r\n    }\r\n\r\n    let selectChangeTipoDerechoPeticion = (e) => {\r\n        setCountTextArea(0)\r\n        setSelectedDerechoPeticion(e);\r\n    }\r\n\r\n    let selectChangeTerminoRespuesta = (e) => {\r\n        setSelectedTerminosRespuesta(e);\r\n    }\r\n\r\n    let selectChangeTiposQueja = (e) => {\r\n        setSelectedTiposQueja(e);\r\n    }\r\n\r\n       //Componetes\r\n\r\n       const selectTipoRespuesta = () => {\r\n        return (\r\n            listaTipoRespuesta.data.map((tipo_respuesta, i) => {\r\n                return (\r\n                    <option key={tipo_respuesta.id} value={tipo_respuesta.id}>{tipo_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTipoExpediente = () => {\r\n        return (\r\n            listaTipoExpediente.data.map((expediente, i) => {\r\n                return (\r\n                    <option key={expediente.id} value={expediente.id}>{expediente.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTipoDerechoPeticion = () => {\r\n        return (\r\n            listaTipoDerechoPeticion.data.map((derecho_peticion, i) => {\r\n                \r\n                return (\r\n                    <option key={derecho_peticion.id} value={derecho_peticion.id}>{derecho_peticion.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTerminosRespuesta = () => {\r\n        return (\r\n            listaTerminosRespuesta.data.map((termino_respuesta, i) => {\r\n                return (\r\n                    <option key={termino_respuesta.id} value={termino_respuesta.id}>{termino_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const selectTiposQueja = () => {\r\n        return (\r\n            listaTiposQueja.data.map((tipo_queja, i) => {\r\n                return (\r\n                    <option key={tipo_queja.id} value={tipo_queja.id}>{tipo_queja.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const alertaPorTipoDerechoPeticion = (i) => {\r\n\r\n        for (let cont = 0; cont < listaTipoDerechoPeticion.data.length; cont++) {\r\n       \r\n            if(listaTipoDerechoPeticion.data[cont].id == i){\r\n                return (listaTipoDerechoPeticion.data[cont].attributes.observacion);\r\n            }\r\n        }\r\n    }\r\n\r\n    const enviarDatos = (datos) => {\r\n        window.showSpinner(true);\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": props.getParametros.id_proceso_disciplinario,\r\n                    \"id_etapa\": props.getParametros.id_etapa,\r\n                    \"id_tipo_expediente\": selectedTipoExpediente,\r\n                    \"observaciones\": (datos.observaciones != null ? datos.observaciones: null),\r\n                    \"id_tipo_queja\": datos.tipo_queja,\r\n                    \"id_termino_respuesta\": selectedTerminosRespuesta,\r\n                    \"fecha_termino\": (datos.fechaTermino !=null ? datos.fechaTermino: null),\r\n                    \"hora_termino\": (datos.horasTermino !=null ? datos.horasTermino: null),\r\n                    \"gestion_juridica\": (datos.gestion_juridica === 'true' ? true: false),\r\n                    \"estado\": true,\r\n                    \"id_estado_reparto\": 2,\r\n                    \"id_tipo_derecho_peticion\": datos.tipo_derecho_peticion,\r\n                    \"oficina_control_interno\": false,\r\n                    \"created_user\": getNombreUsuario,\r\n                    \"reclasificacion\": props.getParametros.reclasificacion,\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.addGeneric(\"clasificacion-radicado\",data).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    console.log(datos);\r\n                    \r\n                    from.cambiaColorClasificacionRadicado = \"btn btn-sm btn-success w2d_btn-large mr-1 mb-3 text-left\";\r\n               \r\n                    if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION){   \r\n\r\n                        if(datos.data.attributes.funcionario_actual.name === getNombreUsuario){\r\n                            setModalState({ title: \"SINPROC No \"+radicado+\" :: Re-Clasificación del radicado\", message: \"El proceso disciplinario se asigna a: \"+datos.data.attributes.funcionario_actual.nombre +\" \"+ datos.data.attributes.funcionario_actual.apellido, show: true, redirect: '/RamasProceso',  from: {from} });\r\n                        }\r\n                        else{\r\n                            setModalState({ title: \"SINPROC No \"+radicado+\" :: Re-Clasificación del radicado\", message: \"El proceso disciplinario se asigna a: \"+datos.data.attributes.funcionario_actual.nombre +\" \"+ datos.data.attributes.funcionario_actual.apellido, show: true, redirect: '/MisPendientes' });\r\n                        }   \r\n                    }\r\n\r\n                    else if (props.getParametros.tipo_clasificacion === global.Constants.TIPO_CLASIFICACION.CLASIFICACION){\r\n                        setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: \"Registro Exitoso\", show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                    }  \r\n                }\r\n                else {\r\n                    setModalState({ title: \"SINPROC No \"+radicado+\" :: Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ClasificacionRadicadoLista', from: {from}, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n \r\n            }\r\n        )\r\n        window.showSpinner(false);\r\n    }\r\n\r\n    const handleCallbackFechaTermino = (childData) => {\r\n        try {\r\n            setFechaTermino(childData)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // COMPOENENTE TIPO EXPEDIENTE\r\n    const componenteTipoExpediente = (tipo_expediente) => {\r\n\r\n        // TIPO DE EXPEDIENTE = DERECHO DE PETICION\r\n        if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) {\r\n            return (\r\n                <>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ingresoDerechoPeticion\">Tipo de derecho de petición <span className=\"text-danger\">*</span></label>\r\n                        <select className=\"form-control\" id=\"ingresoDerechoPeticion\" name=\"ingresoDerechoPeticion\"\r\n                            value={selectedTipoDerechoPeticion} onChange={e => selectChangeTipoDerechoPeticion(e.target.value)}>\r\n                            <option value=\"\">Por favor seleccione</option>\r\n                            {respuestaTipoDerechoPeticion ? selectTipoDerechoPeticion() : null}\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/*COPIAS*/}\r\n                    {selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.COPIAS ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.COPIAS) : ''}\r\n                    {/*GENERAL*/}\r\n                    {selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.GENERAL ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.GENERAL) : ''}\r\n                    {/*ALERTA CONTROL POLITICO*/}\r\n                    {selectedTipoDerechoPeticion === global.Constants.DERECHOS_PETICION.ALERTA ? componenteTipoDerechoPeticion(global.Constants.DERECHOS_PETICION.ALERTA) : ''}\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = PODER REFERENTE A SOLICITUD\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: global.Constants.TIPO_QUEJA.EXTERNA\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = QUEJA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            tipo_queja: '',\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.tipo_queja) {\r\n                                errores.tipo_queja = 'Debe seleccionar un tipo de queja'\r\n                            }\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            console.log(valores);\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tipo_queja\">Ingrese Tipo de Queja <span className=\"text-danger\">*</span></label>\r\n\r\n                                <Field as=\"select\" className=\"form-control\" id=\"tipo_queja\" name=\"tipo_queja\">\r\n                                    <option value=\"\">Por favor seleccione</option>\r\n                                    {respuestaTiposQueja ? selectTiposQueja() : null}\r\n                                </Field>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPEDIENTE = TUTELA\r\n        else if (tipo_expediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA) {\r\n            return (\r\n                <>\r\n                    <label htmlFor=\"ingresoTipoRtaTutela\">Ingrese termino de respuesta <span className=\"text-danger\">*</span></label>\r\n\r\n                    <select className=\"form-control\" id=\"termino_rta\" name=\"termino_rta\"\r\n                        value={selectedTerminosRespuesta}\r\n                        onChange={e => selectChangeTerminoRespuesta(e.target.value)}>\r\n                        <option value=\"{selectedTerminosRespuesta}\">Por favor seleccione</option>\r\n                        {respuestaTerminosRespuesta ? selectTerminosRespuesta() : null}\r\n                    </select>\r\n\r\n                    {/*DIAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.DIAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.DIAS) : ''}\r\n                    {/*HORAS TERMINO*/}\r\n                    {selectedTerminosRespuesta === global.Constants.TERMINOS_RESPUESTA.HORAS ? componenteTerminosRespuesta(global.Constants.TERMINOS_RESPUESTA.HORAS) : ''}\r\n\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    // COMOPNENTE TIPO DERECHO DE PETICION\r\n    const componenteTipoDerechoPeticion = (tipo_derecho_peticion) => {\r\n\r\n        alertaPorTipoDerechoPeticion(tipo_derecho_peticion);\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  COPIAS\r\n        if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.COPIAS) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: false,\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n\r\n\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n\r\n                            return errores\r\n                        }}\r\n\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{alertaPorTipoDerechoPeticion(tipo_derecho_peticion)}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Observaciones</label>\r\n                                        <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                            placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                        <div className=\"text-right\">\r\n                                            <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                        </div>\r\n                                        <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"block-content block-content-full text-right\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                    \r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  GENERAL\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.GENERAL) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: false,\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n                            return errores\r\n\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{alertaPorTipoDerechoPeticion(tipo_derecho_peticion)}</p>\r\n                                    </div>\r\n\r\n                                    <label>Observaciones</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n                                </div>\r\n\r\n                                <div className=\"block-content block-content-full text-right\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-rounded btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n                                    <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                        <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </>\r\n            );\r\n        }\r\n\r\n        // TIPO DE EXPDIENTE = DERECHO DE PETICION =  ALERTA CONTROL POLITICO\r\n        else if (tipo_derecho_peticion === global.Constants.DERECHOS_PETICION.ALERTA) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            observaciones: '',\r\n                            gestion_juridica: '',\r\n                            tipo_derecho_peticion: tipo_derecho_peticion,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            setCountTextArea(valores.observaciones.length)\r\n                            if (!valores.observaciones) {\r\n                                errores.observaciones = 'Debe diligenciar el campo observaciones'\r\n                            }\r\n                            else if (valores.observaciones.length <= getMinimoTextArea) {\r\n                                errores.observaciones = 'Las observaciones deben tener almenos ' + getMinimoTextArea + ' caracteres'\r\n                            }\r\n\r\n                            if (valores.observaciones) {\r\n                                if (containsSpecialChars(valores.observaciones))\r\n                                    errores.observaciones = 'Tiene caracteres inválidos'\r\n                            }\r\n\r\n                            if (!valores.gestion_juridica) {\r\n                                errores.gestion_juridica = 'Debe diligenciar el campo gestión juridica'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n                        {({ errors }) => (\r\n                            <Form>\r\n\r\n                                <div className=\"form-group\">\r\n\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">Alerta</h3>\r\n                                        <p className=\"mb-0\">{alertaPorTipoDerechoPeticion(tipo_derecho_peticion)}</p>\r\n                                    </div>\r\n\r\n                                    <label htmlFor=\"ingresoTipoExpediente\">Requiere gestión juridica <span className=\"text-danger\">*</span></label>\r\n                                    <Field as=\"select\" className=\"form-control\" id=\"gestion_juridica\" name=\"gestion_juridica\">\r\n                                        <option value=\"\">Por favor seleccione</option>\r\n                                        <option value=\"true\">Si</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </Field>\r\n\r\n                                    <label>Observaciones</label>  <span className=\"text-danger\">*</span>\r\n                                    <Field as=\"textarea\" className=\"form-control\" id=\"observaciones\" name=\"observaciones\" rows=\"4\"\r\n                                        placeholder=\"Escriba en este espacio las observaciones\" maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                    <div className=\"text-right\">\r\n                                        <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                    </div>\r\n                                    <ErrorMessage name=\"observaciones\" component={() => (<span className=\"text-danger\">{errors.observaciones}</span>)} />\r\n\r\n                                    <div className=\"block-content block-content-full text-right\">\r\n                                        <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n                                        <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                            <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    // COMPONENTE TERMINOS DE RESPUESTA -- TIPO EXPEDIENTE TUTELA\r\n    const componenteTerminosRespuesta = (termino_respuesta) => {\r\n\r\n        //TERMINO TUTELA = DIAS      \r\n        if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.DIAS) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: null,\r\n                            fechaTermino: fechaTermino\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.fechaTermino && !fechaTermino) {\r\n                                errores.fechaTermino = 'Debe seleccionar el termino de respuesta'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label>Fecha para termino</label>  <span className=\"text-danger\">*</span>\r\n\r\n                                {/*<DatePicker id=\"fechaTermino\" locale='es' name=\"fechaTermino\" dateFormat=\"DD/MM/YYYY\" closeOnSelect={true} placeholder=\"dd/mm/yyyy\" onChange={(date) => setFechaTermino(date)} timeFormat={false} isValidDate={disableCustomDt} />*/}\r\n                                <DatePerson resultDiasNoLaborales={resultDiasNoLaborales} getAnosAtrasInvalidos={getAnosAtrasInvalidos} parentCallback={handleCallbackFechaTermino} id=\"fechaTermino\" name=\"fechaTermino\" />\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n                                <Link to={`/ClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n\r\n            )\r\n        }\r\n\r\n        //TERMINO TUTELA = HORAS     \r\n        else if (termino_respuesta === global.Constants.TERMINOS_RESPUESTA.HORAS) {\r\n\r\n            return (\r\n                <>\r\n                    <Formik\r\n                        initialValues={{\r\n                            termino_rta: termino_respuesta,\r\n                            horasTermino: '',\r\n                            fechaTermino: new Date(),\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            if (!valores.horasTermino) {\r\n                                errores.horasTermino = 'Debe seleccionar el termino de respuesta'\r\n                            }\r\n\r\n                            return errores\r\n                        }}\r\n\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            enviarDatos(valores);\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"form-group\">\r\n                                <label>Horas para termino</label>  <span className=\"text-danger\">*</span>\r\n                                <Field type=\"number\" min=\"1\" max='23' id=\"horasTermino\" name=\"horasTermino\" className=\"form-control\" placeholder=\"\" />\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </Formik>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n    };\r\n\r\n    \r\n    return (\r\n        <>\r\n\r\n        {<ModalGen data={getModalState} />}\r\n\r\n            <div className=\"block-content\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"ingresoTipoExpediente\">Tipo de expediente <span className=\"text-danger\">*</span></label>\r\n                            <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                                value={selectedTipoExpediente} onChange={e => selectChangeTipoExpediente(e.target.value)}>\r\n                                <option value=\"\">Por favor seleccione</option>\r\n                                {respuestaTipoExpediente ? selectTipoExpediente() : null}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*DERECHO DE PETICION*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION) : ''}\r\n                {/*PODER REFERENTE A SOLIICTUD*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.PODER_REFERENTE) : ''}\r\n                {/*QUEJA*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.QUEJA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.QUEJA) : ''}\r\n                {/*TUTELA*/}\r\n                {selectedTipoExpediente === global.Constants.TIPOS_EXPEDIENTES.TUTELA ? componenteTipoExpediente(global.Constants.TIPOS_EXPEDIENTES.TUTELA) : ''}\r\n\r\n            </div>\r\n        </>\r\n                    \r\n            \r\n    );\r\n \r\n    \r\n}\r\n\r\nexport default ClasificacionRadicado;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,QAAlD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,uCAAP;AACA,OAAO,kBAAP;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,uBAAP;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;;;AAEA,SAASC,qBAAT,CAAgCC,KAAhC,EAAsC;EAAA;;EAElC,MAAM,CAACC,aAAD,EAAgBC,aAAhB,IAAiCd,QAAQ,CAAC;IAAEe,KAAK,EAAE,EAAT;IAAaC,OAAO,EAAE,EAAtB;IAA0BC,IAAI,EAAE;EAAhC,CAAD,CAA/C;EAEA,MAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDnB,QAAQ,CAAC;IAAEoB,IAAI,EAAE;EAAR,CAAD,CAA9D;EAEA,MAAM,CAACC,uBAAD,EAA0BC,0BAA1B,IAAwDtB,QAAQ,CAAC,KAAD,CAAtE;EACA,MAAM,CAACuB,sBAAD,EAAyBC,yBAAzB,IAAsDxB,QAAQ,CAAC,EAAD,CAApE;EAEA,MAAM,CAACyB,aAAD,EAAgBC,gBAAhB,IAAoC1B,QAAQ,CAAC,CAAD,CAAlD;EAEA,MAAM,CAAC2B,iBAAD,EAAoBC,iBAApB,IAAyC5B,QAAQ,CAAC,CAAD,CAAvD;EACA,MAAM,CAAC6B,iBAAD,EAAoBC,iBAApB,IAAyC9B,QAAQ,CAAC,CAAD,CAAvD;EAEA,MAAM,CAAC+B,wBAAD,EAA2BC,uBAA3B,IAAsDhC,QAAQ,CAAC;IAAEoB,IAAI,EAAE;EAAR,CAAD,CAApE;EACA,MAAM,CAACa,2BAAD,EAA8BC,0BAA9B,IAA4DlC,QAAQ,CAAC,EAAD,CAA1E;EACA,MAAM,CAACmC,4BAAD,EAA+BC,2BAA/B,IAA8DpC,QAAQ,CAAC,KAAD,CAA5E;EAEA,MAAM,CAACqC,kBAAD,EAAqBC,qBAArB,IAA8CtC,QAAQ,CAAC;IAAEoB,IAAI,EAAE;EAAR,CAAD,CAA5D;EACA,MAAM,CAACmB,qBAAD,EAAwBC,wBAAxB,IAAoDxC,QAAQ,CAAC,EAAD,CAAlE;EACA,MAAM,CAACyC,sBAAD,EAAyBC,yBAAzB,IAAsD1C,QAAQ,CAAC,KAAD,CAApE;EAEA,MAAM,CAAC2C,sBAAD,EAAyBC,yBAAzB,IAAsD5C,QAAQ,CAAC;IAAEoB,IAAI,EAAE;EAAR,CAAD,CAApE;EACA,MAAM,CAACyB,yBAAD,EAA4BC,4BAA5B,IAA4D9C,QAAQ,CAAC,EAAD,CAA1E;EACA,MAAM,CAAC+C,0BAAD,EAA6BC,6BAA7B,IAA8DhD,QAAQ,CAAC,KAAD,CAA5E;EAEA,MAAM,CAACiD,eAAD,EAAkBC,kBAAlB,IAAwClD,QAAQ,CAAC;IAAEoB,IAAI,EAAE;EAAR,CAAD,CAAtD;EACA,MAAM,CAAC+B,kBAAD,EAAqBC,qBAArB,IAA8CpD,QAAQ,CAAC,EAAD,CAA5D;EACA,MAAM,CAACqD,mBAAD,EAAsBC,sBAAtB,IAAgDtD,QAAQ,CAAC,KAAD,CAA9D;EAEA,MAAM,CAACuD,YAAD,EAAeC,eAAf,IAAkCxD,QAAQ,CAAC,IAAD,CAAhD;EACA,MAAM,CAACyD,qBAAD,EAAwBC,wBAAxB,IAAoD1D,QAAQ,CAAC,EAAD,CAAlE;EAEA,MAAM,CAAC2D,gBAAD,EAAmBC,gBAAnB,IAAuC5D,QAAQ,CAAC,EAAD,CAArD;EACA,MAAM,CAAC6D,YAAD,EAAeC,YAAf,IAA+B9D,QAAQ,CAAC,EAAD,CAA7C;EACA,MAAM,CAAC+D,qBAAD,EAAwBC,qBAAxB,IAAiDhE,QAAQ,CAAC,CAAD,CAA/D;EAEA,MAAM,CAACiE,SAAD,EAAYC,SAAZ,IAAyBlE,QAAQ,CAAC,EAAD,CAAvC;EAGA,MAAMmE,QAAQ,GAAG5D,WAAW,EAA5B;EACA,MAAM;IAAE6D;EAAF,IAAWD,QAAQ,CAACE,KAA1B;EACA,IAAIC,sBAAsB,GAAGF,IAAI,CAACE,sBAAlC;EACA,IAAIC,QAAQ,GAAGH,IAAI,CAACG,QAApB;EACA,IAAIC,QAAQ,GAAGJ,IAAI,CAACI,QAApB;EAEA;AACJ;AACA;AACA;AACA;;EACI,SAASC,oBAAT,CAA8BC,GAA9B,EAAmC;IAE/B,MAAMC,MAAM,GAAGC,MAAM,CAACC,SAAP,CAAiBC,SAAjB,CAA2BC,qBAA3B,CAAiDC,KAAjD,CAAuD,EAAvD,EAA2DC,IAA3D,CAAgEC,WAAW,IAAI;MAC1F,IAAIR,GAAG,CAACS,QAAJ,CAAaD,WAAb,CAAJ,EAA+B;QAC3B,OAAO,IAAP;MACH;;MAED,OAAO,KAAP;IACH,CANc,CAAf;IAQA,OAAOP,MAAP;EACH;EAED;AACJ;AACA;;;EACI5E,SAAS,CAAC,MAAM;IACZ,eAAeqF,SAAf,GAA2B;MAEvB;MACAxB,gBAAgB,CAACtD,OAAO,GAAG+E,MAAX,CAAhB;MACAvB,YAAY,CAACxD,OAAO,GAAGgF,KAAX,CAAZ;MAEA5E,UAAU,CAAC6E,UAAX,CAAsB,gBAAtB,EAAwCC,IAAxC,CACIC,KAAK,IAAI;QAEL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;UACdpD,qBAAqB,CAACmD,KAAD,CAArB;UACA/C,yBAAyB,CAAC,IAAD,CAAzB;QACH,CAHD,MAIK;UACD5B,aAAa,CAAC;YAAEC,KAAK,EAAE,gBAAcwD,QAAd,GAAuB,gCAAhC;YAAkEvD,OAAO,EAAEyE,KAAK,CAACC,KAAN,CAAYC,QAAZ,EAA3E;YAAmG1E,IAAI,EAAE,IAAzG;YAA+G2E,QAAQ,EAAE,6BAAzH;YAAwJxB,IAAI,EAAE;cAACA;YAAD,CAA9J;YAAsKyB,KAAK,EAAEjB,MAAM,CAACC,SAAP,CAAiBiB,WAAjB,CAA6BC;UAA1M,CAAD,CAAb;QACH;MACJ,CAVL,EANuB,CAmBvB;;MACArF,UAAU,CAAC6E,UAAX,CAAsB,0CAAwCjB,sBAA9D,EAAsFkB,IAAtF,CACIC,KAAK,IAAI;QACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;UACdvE,sBAAsB,CAACsE,KAAD,CAAtB;UACAnE,0BAA0B,CAAC,IAAD,CAA1B;QACH,CAHD,MAIK;UACDR,aAAa,CAAC;YAAEC,KAAK,EAAE,gBAAcwD,QAAd,GAAuB,gCAAhC;YAAkEvD,OAAO,EAAEyE,KAAK,CAACC,KAAN,CAAYC,QAAZ,EAA3E;YAAmG1E,IAAI,EAAE,IAAzG;YAA+G2E,QAAQ,EAAE,6BAAzH;YAAwJxB,IAAI,EAAE;cAACA;YAAD,CAA9J;YAAsKyB,KAAK,EAAEjB,MAAM,CAACC,SAAP,CAAiBiB,WAAjB,CAA6BC;UAA1M,CAAD,CAAb;QACH;MACJ,CATL;MAYArF,UAAU,CAAC6E,UAAX,CAAsB,iCAA+BjB,sBAArD,EAA6EkB,IAA7E,CACIC,KAAK,IAAI;QACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;UACd1D,uBAAuB,CAACyD,KAAD,CAAvB;UACArD,2BAA2B,CAAC,IAAD,CAA3B;QACH,CAHD,MAIK;UACDtB,aAAa,CAAC;YAAEC,KAAK,EAAE,gBAAcwD,QAAd,GAAuB,gCAAhC;YAAkEvD,OAAO,EAAEyE,KAAK,CAACC,KAAN,CAAYC,QAAZ,EAA3E;YAAmG1E,IAAI,EAAE,IAAzG;YAA+G2E,QAAQ,EAAE,6BAAzH;YAAwJxB,IAAI,EAAE;cAACA;YAAD,CAA9J;YAAsKyB,KAAK,EAAEjB,MAAM,CAACC,SAAP,CAAiBiB,WAAjB,CAA6BC;UAA1M,CAAD,CAAb;QACH;MACJ,CATL;MAYArF,UAAU,CAAC6E,UAAX,CAAsB,8BAA4BjB,sBAAlD,EAA0EkB,IAA1E,CACIC,KAAK,IAAI;QACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;UACd9C,yBAAyB,CAAC6C,KAAD,CAAzB;UACAzC,6BAA6B,CAAC,IAAD,CAA7B;QACH,CAHD,MAIK;UACDlC,aAAa,CAAC;YAAEC,KAAK,EAAE,gBAAcwD,QAAd,GAAuB,gCAAhC;YAAkEvD,OAAO,EAAEyE,KAAK,CAACC,KAAN,CAAYC,QAAZ,EAA3E;YAAmG1E,IAAI,EAAE,IAAzG;YAA+G2E,QAAQ,EAAE,6BAAzH;YAAwJxB,IAAI,EAAE;cAACA;YAAD,CAA9J;YAAsKyB,KAAK,EAAEjB,MAAM,CAACC,SAAP,CAAiBiB,WAAjB,CAA6BC;UAA1M,CAAD,CAAb;QACH;MACJ,CATL;MAYArF,UAAU,CAAC6E,UAAX,CAAsB,sBAAoBjB,sBAA1C,EAAkEkB,IAAlE,CACIC,KAAK,IAAI;QACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;UACdxC,kBAAkB,CAACuC,KAAD,CAAlB;UACAnC,sBAAsB,CAAC,IAAD,CAAtB;QACH,CAHD,MAIK;UACDxC,aAAa,CAAC;YAAEC,KAAK,EAAE,gBAAcwD,QAAd,GAAuB,gCAAhC;YAAkEvD,OAAO,EAAEyE,KAAK,CAACC,KAAN,CAAYC,QAAZ,EAA3E;YAAmG1E,IAAI,EAAE,IAAzG;YAA+G2E,QAAQ,EAAE,6BAAzH;YAAwJxB,IAAI,EAAE;cAACA;YAAD,CAA9J;YAAsKyB,KAAK,EAAEjB,MAAM,CAACC,SAAP,CAAiBiB,WAAjB,CAA6BC;UAA1M,CAAD,CAAb;QACH;MACJ,CATL;MAYArC,wBAAwB,CAAC,EAAD,CAAxB;MACAhD,UAAU,CAAC6E,UAAX,CAAsB,4BAAtB,EAAoDC,IAApD,CACIC,KAAK,IAAI;QACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;UACd,IAAItE,IAAI,GAAG,EAAX;;UACA,KAAK,IAAI4E,CAAT,IAAcP,KAAK,CAACrE,IAApB,EAA0B;YACtB,IAAI6E,IAAI,GAAGR,KAAK,CAACrE,IAAN,CAAW4E,CAAX,EAAc,YAAd,EAA4B,OAA5B,EAAqChB,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,CAAX;YACA,IAAIL,MAAM,GAAG,IAAIuB,IAAJ,CAASD,IAAT,CAAb;YACAtB,MAAM,CAACwB,OAAP,CAAexB,MAAM,CAACyB,OAAP,KAAmB,CAAlC;YACAhF,IAAI,CAACiF,IAAL,CAAUL,CAAV,EAAaC,IAAb;UACH;;UAEDvC,wBAAwB,CAACtC,IAAD,CAAxB,CATc,CAUd;QACH,CAXD,MAWO;UACHN,aAAa,CAAC;YAAEC,KAAK,EAAE,gBAAcwD,QAAd,GAAuB,gCAAhC;YAAkEvD,OAAO,EAAEyE,KAAK,CAACC,KAAN,CAAYC,QAAZ,EAA3E;YAAmG1E,IAAI,EAAE,IAAzG;YAA+G2E,QAAQ,EAAE,4BAAzH;YAAuJxB,IAAI,EAAE;cAACA;YAAD,CAA7J;YAAqKyB,KAAK,EAAEjB,MAAM,CAACC,SAAP,CAAiBiB,WAAjB,CAA6BC;UAAzM,CAAD,CAAb;QACH;MAEJ,CAjBL;MAqBAO,iBAAiB;IACpB;;IACDlB,SAAS;EACZ,CA9FQ,EA8FN,EA9FM,CAAT;EAiGA;AACJ;AACA;AACA;;EACI,MAAMkB,iBAAiB,GAAG,MAAM;IAC5B,IAAI;MAEA,MAAMlF,IAAI,GAAG;QACT,QAAQ;UACJ,QAAQ,eADJ;UAEJ,cAAc;YACV,UAAU;UADA;QAFV;MADC,CAAb,CAFA,CAWA;;MACAV,UAAU,CAAC6F,gBAAX,CAA4B,4BAA5B,EAA0DnF,IAA1D,EAAgEoE,IAAhE,CACIC,KAAK,IAAI;QAEL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;UAEd,IAAID,KAAK,CAAC,MAAD,CAAL,CAAce,MAAd,GAAuB,CAA3B,EAA8B;YAE1Bf,KAAK,CAAC,MAAD,CAAL,CAAcgB,MAAd,CAAqBrF,IAAI,IAAIA,IAAI,CAAC,YAAD,CAAJ,CAAmB,QAAnB,EAA6B+D,QAA7B,CAAsC,wBAAtC,CAA7B,EAA8FuB,GAA9F,CAAkGC,YAAY,IAC1G3C,qBAAqB,CAAC2C,YAAY,CAAC,YAAD,CAAZ,CAA2B,OAA3B,CAAD,CADzB;YAGAlB,KAAK,CAAC,MAAD,CAAL,CAAcgB,MAAd,CAAqBrF,IAAI,IAAIA,IAAI,CAAC,YAAD,CAAJ,CAAmB,QAAnB,EAA6B+D,QAA7B,CAAsC,4BAAtC,CAA7B,EAAkGuB,GAAlG,CAAsGC,YAAY,IAC9G7E,iBAAiB,CAAC6E,YAAY,CAAC,YAAD,CAAZ,CAA2B,OAA3B,CAAD,CADrB;YAGAlB,KAAK,CAAC,MAAD,CAAL,CAAcgB,MAAd,CAAqBrF,IAAI,IAAIA,IAAI,CAAC,YAAD,CAAJ,CAAmB,QAAnB,EAA6B+D,QAA7B,CAAsC,4BAAtC,CAA7B,EAAkGuB,GAAlG,CAAsGC,YAAY,IAC9G/E,iBAAiB,CAAC+E,YAAY,CAAC,YAAD,CAAZ,CAA2B,OAA3B,CAAD,CADrB;UAIH;QACJ,CAfD,MAeO;UACH7F,aAAa,CAAC;YAAEC,KAAK,EAAE,gBAAcwD,QAAd,GAAuB,gCAAhC;YAAkEvD,OAAO,EAAEyE,KAAK,CAACC,KAAN,CAAYC,QAAZ,EAA3E;YAAmG1E,IAAI,EAAE,IAAzG;YAA+G2E,QAAQ,EAAE,4BAAzH;YAAuJxB,IAAI,EAAE;cAACA;YAAD,CAA7J;YAAqKyB,KAAK,EAAEjB,MAAM,CAACC,SAAP,CAAiBiB,WAAjB,CAA6BC;UAAzM,CAAD,CAAb;QACH;MACJ,CArBL;IAuBH,CAnCD,CAmCE,OAAOL,KAAP,EAAc;MACZkB,OAAO,CAACC,GAAR,CAAYnB,KAAZ;IACH;EACJ,CAvCD;;EAyCA,MAAMoB,eAAe,GAAGC,OAAO,IAAI;IAC/B,OAAO,CAACtD,qBAAqB,CAAC0B,QAAtB,CAA+B4B,OAAO,CAACC,MAAR,CAAe,YAAf,CAA/B,CAAR;EACH,CAFD;;EAIA,IAAIC,yBAAyB,GAAIC,CAAD,IAAO;IACnC1E,wBAAwB,CAAC0E,CAAD,CAAxB;EACH,CAFD;;EAIA,IAAIC,0BAA0B,GAAID,CAAD,IAAO;IACpCxF,gBAAgB,CAAC,CAAD,CAAhB;IACAF,yBAAyB,CAAC0F,CAAD,CAAzB;EACH,CAHD;;EAKA,IAAIE,+BAA+B,GAAIF,CAAD,IAAO;IACzCxF,gBAAgB,CAAC,CAAD,CAAhB;IACAQ,0BAA0B,CAACgF,CAAD,CAA1B;EACH,CAHD;;EAKA,IAAIG,4BAA4B,GAAIH,CAAD,IAAO;IACtCpE,4BAA4B,CAACoE,CAAD,CAA5B;EACH,CAFD;;EAIA,IAAII,sBAAsB,GAAIJ,CAAD,IAAO;IAChC9D,qBAAqB,CAAC8D,CAAD,CAArB;EACH,CAFD,CAvOkC,CA2O/B;;;EAEA,MAAMK,mBAAmB,GAAG,MAAM;IACjC,OACIlF,kBAAkB,CAACjB,IAAnB,CAAwBsF,GAAxB,CAA4B,CAACc,cAAD,EAAiBxB,CAAjB,KAAuB;MAC/C,oBACI;QAAgC,KAAK,EAAEwB,cAAc,CAACC,EAAtD;QAAA,UAA2DD,cAAc,CAACE,UAAf,CAA0BrC;MAArF,GAAamC,cAAc,CAACC,EAA5B;QAAA;QAAA;QAAA;MAAA,QADJ;IAGH,CAJD,CADJ;EAOH,CARE;;EAUH,MAAME,oBAAoB,GAAG,MAAM;IAC/B,OACIzG,mBAAmB,CAACE,IAApB,CAAyBsF,GAAzB,CAA6B,CAACkB,UAAD,EAAa5B,CAAb,KAAmB;MAC5C,oBACI;QAA4B,KAAK,EAAE4B,UAAU,CAACH,EAA9C;QAAA,UAAmDG,UAAU,CAACF,UAAX,CAAsBrC;MAAzE,GAAauC,UAAU,CAACH,EAAxB;QAAA;QAAA;QAAA;MAAA,QADJ;IAGH,CAJD,CADJ;EAOH,CARD;;EAUA,MAAMI,yBAAyB,GAAG,MAAM;IACpC,OACI9F,wBAAwB,CAACX,IAAzB,CAA8BsF,GAA9B,CAAkC,CAACoB,gBAAD,EAAmB9B,CAAnB,KAAyB;MAEvD,oBACI;QAAkC,KAAK,EAAE8B,gBAAgB,CAACL,EAA1D;QAAA,UAA+DK,gBAAgB,CAACJ,UAAjB,CAA4BrC;MAA3F,GAAayC,gBAAgB,CAACL,EAA9B;QAAA;QAAA;QAAA;MAAA,QADJ;IAGH,CALD,CADJ;EAQH,CATD;;EAWA,MAAMM,uBAAuB,GAAG,MAAM;IAClC,OACIpF,sBAAsB,CAACvB,IAAvB,CAA4BsF,GAA5B,CAAgC,CAACsB,iBAAD,EAAoBhC,CAApB,KAA0B;MACtD,oBACI;QAAmC,KAAK,EAAEgC,iBAAiB,CAACP,EAA5D;QAAA,UAAiEO,iBAAiB,CAACN,UAAlB,CAA6BrC;MAA9F,GAAa2C,iBAAiB,CAACP,EAA/B;QAAA;QAAA;QAAA;MAAA,QADJ;IAGH,CAJD,CADJ;EAOH,CARD;;EAUA,MAAMQ,gBAAgB,GAAG,MAAM;IAC3B,OACIhF,eAAe,CAAC7B,IAAhB,CAAqBsF,GAArB,CAAyB,CAACwB,UAAD,EAAalC,CAAb,KAAmB;MACxC,oBACI;QAA4B,KAAK,EAAEkC,UAAU,CAACT,EAA9C;QAAA,UAAmDS,UAAU,CAACR,UAAX,CAAsBrC;MAAzE,GAAa6C,UAAU,CAACT,EAAxB;QAAA;QAAA;QAAA;MAAA,QADJ;IAGH,CAJD,CADJ;EAOH,CARD;;EAUA,MAAMU,4BAA4B,GAAInC,CAAD,IAAO;IAExC,KAAK,IAAIoC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGrG,wBAAwB,CAACX,IAAzB,CAA8BoF,MAAxD,EAAgE4B,IAAI,EAApE,EAAwE;MAEpE,IAAGrG,wBAAwB,CAACX,IAAzB,CAA8BgH,IAA9B,EAAoCX,EAApC,IAA0CzB,CAA7C,EAA+C;QAC3C,OAAQjE,wBAAwB,CAACX,IAAzB,CAA8BgH,IAA9B,EAAoCV,UAApC,CAA+CW,WAAvD;MACH;IACJ;EACJ,CARD;;EAUA,MAAMC,WAAW,GAAI7C,KAAD,IAAW;IAC3B8C,MAAM,CAACC,WAAP,CAAmB,IAAnB;IACA,IAAIpH,IAAJ;IAEAA,IAAI,GAAG;MACH,QAAQ;QACJ,QAAQ,wBADJ;QAEJ,cAAc;UACV,4BAA4BR,KAAK,CAAC6H,aAAN,CAAoBC,wBADtC;UAEV,YAAY9H,KAAK,CAAC6H,aAAN,CAAoBjE,QAFtB;UAGV,sBAAsBjD,sBAHZ;UAIV,iBAAkBkE,KAAK,CAACkD,aAAN,IAAuB,IAAvB,GAA8BlD,KAAK,CAACkD,aAApC,GAAmD,IAJ3D;UAKV,iBAAiBlD,KAAK,CAACyC,UALb;UAMV,wBAAwBrF,yBANd;UAOV,iBAAkB4C,KAAK,CAAClC,YAAN,IAAqB,IAArB,GAA4BkC,KAAK,CAAClC,YAAlC,GAAgD,IAPxD;UAQV,gBAAiBkC,KAAK,CAACmD,YAAN,IAAqB,IAArB,GAA4BnD,KAAK,CAACmD,YAAlC,GAAgD,IARvD;UASV,oBAAqBnD,KAAK,CAACoD,gBAAN,KAA2B,MAA3B,GAAoC,IAApC,GAA0C,KATrD;UAUV,UAAU,IAVA;UAWV,qBAAqB,CAXX;UAYV,4BAA4BpD,KAAK,CAACqD,qBAZxB;UAaV,2BAA2B,KAbjB;UAcV,gBAAgBnF,gBAdN;UAeV,mBAAmB/C,KAAK,CAAC6H,aAAN,CAAoBM;QAf7B;MAFV;IADL,CAAP;IAuBArI,UAAU,CAACsI,UAAX,CAAsB,wBAAtB,EAA+C5H,IAA/C,EAAqDoE,IAArD,CAEIC,KAAK,IAAI;MACL,IAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;QAEdkB,OAAO,CAACC,GAAR,CAAYpB,KAAZ;QAEArB,IAAI,CAAC6E,gCAAL,GAAwC,0DAAxC;;QAEA,IAAIrI,KAAK,CAAC6H,aAAN,CAAoBS,kBAApB,KAA2CtE,MAAM,CAACC,SAAP,CAAiBsE,kBAAjB,CAAoCC,qBAAnF,EAAyG;UAErG,IAAG3D,KAAK,CAACrE,IAAN,CAAWsG,UAAX,CAAsB2B,kBAAtB,CAAyCC,IAAzC,KAAkD3F,gBAArD,EAAsE;YAClE7C,aAAa,CAAC;cAAEC,KAAK,EAAE,gBAAcwD,QAAd,GAAuB,mCAAhC;cAAqEvD,OAAO,EAAE,2CAAyCyE,KAAK,CAACrE,IAAN,CAAWsG,UAAX,CAAsB2B,kBAAtB,CAAyChE,MAAlF,GAA0F,GAA1F,GAA+FI,KAAK,CAACrE,IAAN,CAAWsG,UAAX,CAAsB2B,kBAAtB,CAAyCE,QAAtN;cAAgOtI,IAAI,EAAE,IAAtO;cAA4O2E,QAAQ,EAAE,eAAtP;cAAwQxB,IAAI,EAAE;gBAACA;cAAD;YAA9Q,CAAD,CAAb;UACH,CAFD,MAGI;YACAtD,aAAa,CAAC;cAAEC,KAAK,EAAE,gBAAcwD,QAAd,GAAuB,mCAAhC;cAAqEvD,OAAO,EAAE,2CAAyCyE,KAAK,CAACrE,IAAN,CAAWsG,UAAX,CAAsB2B,kBAAtB,CAAyChE,MAAlF,GAA0F,GAA1F,GAA+FI,KAAK,CAACrE,IAAN,CAAWsG,UAAX,CAAsB2B,kBAAtB,CAAyCE,QAAtN;cAAgOtI,IAAI,EAAE,IAAtO;cAA4O2E,QAAQ,EAAE;YAAtP,CAAD,CAAb;UACH;QACJ,CARD,MAUK,IAAIhF,KAAK,CAAC6H,aAAN,CAAoBS,kBAApB,KAA2CtE,MAAM,CAACC,SAAP,CAAiBsE,kBAAjB,CAAoCK,aAAnF,EAAiG;UAClG1I,aAAa,CAAC;YAAEC,KAAK,EAAE,gBAAcwD,QAAd,GAAuB,gCAAhC;YAAkEvD,OAAO,EAAE,kBAA3E;YAA+FC,IAAI,EAAE,IAArG;YAA2G2E,QAAQ,EAAE,6BAArH;YAAoJxB,IAAI,EAAE;cAACA;YAAD,CAA1J;YAAkKyB,KAAK,EAAEjB,MAAM,CAACC,SAAP,CAAiBiB,WAAjB,CAA6B2D;UAAtM,CAAD,CAAb;QACH;MACJ,CAnBD,MAoBK;QACD3I,aAAa,CAAC;UAAEC,KAAK,EAAE,gBAAcwD,QAAd,GAAuB,gCAAhC;UAAkEvD,OAAO,EAAEyE,KAAK,CAACC,KAAN,CAAYC,QAAZ,EAA3E;UAAmG1E,IAAI,EAAE,IAAzG;UAA+G2E,QAAQ,EAAE,6BAAzH;UAAwJxB,IAAI,EAAE;YAACA;UAAD,CAA9J;UAAsKyB,KAAK,EAAEjB,MAAM,CAACC,SAAP,CAAiBiB,WAAjB,CAA6BC;QAA1M,CAAD,CAAb;MACH;IAEJ,CA3BL;IA6BAwC,MAAM,CAACC,WAAP,CAAmB,KAAnB;EACH,CAzDD;;EA2DA,MAAMkB,0BAA0B,GAAIC,SAAD,IAAe;IAC9C,IAAI;MACAnG,eAAe,CAACmG,SAAD,CAAf;IACH,CAFD,CAEE,OAAOjE,KAAP,EAAc,CAEf;EAEJ,CAPD,CArWkC,CA8WlC;;;EACA,MAAMkE,wBAAwB,GAAIC,eAAD,IAAqB;IAElD;IACA,IAAIA,eAAe,KAAKjF,MAAM,CAACC,SAAP,CAAiBiF,iBAAjB,CAAmCC,gBAA3D,EAA6E;MACzE,oBACI;QAAA,wBAEI;UAAK,SAAS,EAAC,YAAf;UAAA,wBACI;YAAO,OAAO,EAAC,wBAAf;YAAA,2DAAoE;cAAM,SAAS,EAAC,aAAhB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAApE;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAQ,SAAS,EAAC,cAAlB;YAAiC,EAAE,EAAC,wBAApC;YAA6D,IAAI,EAAC,wBAAlE;YACI,KAAK,EAAE9H,2BADX;YACwC,QAAQ,EAAEiF,CAAC,IAAIE,+BAA+B,CAACF,CAAC,CAAC8C,MAAF,CAASC,KAAV,CADtF;YAAA,wBAEI;cAAQ,KAAK,EAAC,EAAd;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFJ,EAGK9H,4BAA4B,GAAG0F,yBAAyB,EAA5B,GAAiC,IAHlE;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,EAYK5F,2BAA2B,KAAK2C,MAAM,CAACC,SAAP,CAAiBqF,iBAAjB,CAAmCC,MAAnE,GAA4EC,6BAA6B,CAACxF,MAAM,CAACC,SAAP,CAAiBqF,iBAAjB,CAAmCC,MAApC,CAAzG,GAAuJ,EAZ5J,EAcKlI,2BAA2B,KAAK2C,MAAM,CAACC,SAAP,CAAiBqF,iBAAjB,CAAmCG,OAAnE,GAA6ED,6BAA6B,CAACxF,MAAM,CAACC,SAAP,CAAiBqF,iBAAjB,CAAmCG,OAApC,CAA1G,GAAyJ,EAd9J,EAgBKpI,2BAA2B,KAAK2C,MAAM,CAACC,SAAP,CAAiBqF,iBAAjB,CAAmCI,MAAnE,GAA4EF,6BAA6B,CAACxF,MAAM,CAACC,SAAP,CAAiBqF,iBAAjB,CAAmCI,MAApC,CAAzG,GAAuJ,EAhB5J;MAAA,gBADJ;IAoBH,CArBD,CAuBA;IAvBA,KAwBK,IAAIT,eAAe,KAAKjF,MAAM,CAACC,SAAP,CAAiBiF,iBAAjB,CAAmCS,eAA3D,EAA4E;MAC7E,oBACI;QAAA,uBACI,QAAC,MAAD;UACI,aAAa,EAAE;YACXrC,UAAU,EAAEtD,MAAM,CAACC,SAAP,CAAiB2F,UAAjB,CAA4BC;UAD7B,CADnB;UAII,kBAAkB,MAJtB;UAMI,QAAQ,EAAGC,OAAD,IAAa;YACnB,IAAIC,OAAO,GAAG,EAAd;YACA,OAAOA,OAAP;UACH,CATL;UAWI,QAAQ,EAAE,CAACD,OAAD,WAA4B;YAAA,IAAlB;cAAEE;YAAF,CAAkB;YAClCtC,WAAW,CAACoC,OAAD,CAAX;UACH,CAbL;UAAA,uBAgBI,QAAC,IAAD;YAAA,uBAEI;cAAK,SAAS,EAAC,6CAAf;cAAA,wBACI;gBAAQ,IAAI,EAAC,QAAb;gBAAsB,SAAS,EAAC,iBAAhC;gBAAA,wBAAkD;kBAAG,SAAS,EAAC;gBAAb;kBAAA;kBAAA;kBAAA;gBAAA,QAAlD;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAGI,QAAC,IAAD;gBAAM,EAAE,EAAG,8BAAX;gBAA0C,KAAK,EAAE;kBAAEtG,IAAI,EAAEA;gBAAR,CAAjD;gBAAA,uBACI;kBAAQ,IAAI,EAAC,QAAb;kBAAsB,SAAS,EAAC,qCAAhC;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADJ;gBAAA;gBAAA;gBAAA;cAAA,QAHJ;YAAA;cAAA;cAAA;cAAA;YAAA;UAFJ;YAAA;YAAA;YAAA;UAAA;QAhBJ;UAAA;UAAA;UAAA;QAAA;MADJ,iBADJ;IAiCH,CAlCI,CAoCL;IApCK,KAqCA,IAAIyF,eAAe,KAAKjF,MAAM,CAACC,SAAP,CAAiBiF,iBAAjB,CAAmCe,KAA3D,EAAkE;MACnE,oBACI;QAAA,uBACI,QAAC,MAAD;UACI,aAAa,EAAE;YACX3C,UAAU,EAAE;UADD,CADnB;UAII,kBAAkB,MAJtB;UAMI,QAAQ,EAAGwC,OAAD,IAAa;YACnB,IAAIC,OAAO,GAAG,EAAd;;YACA,IAAI,CAACD,OAAO,CAACxC,UAAb,EAAyB;cACrByC,OAAO,CAACzC,UAAR,GAAqB,mCAArB;YACH;;YACD,OAAOyC,OAAP;UACH,CAZL;UAcI,QAAQ,EAAE,CAACD,OAAD,YAA4B;YAAA,IAAlB;cAAEE;YAAF,CAAkB;YAClChE,OAAO,CAACC,GAAR,CAAY6D,OAAZ;YACApC,WAAW,CAACoC,OAAD,CAAX;UACH,CAjBL;UAAA,uBAoBI,QAAC,IAAD;YAAA,wBACI;cAAK,SAAS,EAAC,YAAf;cAAA,wBACI;gBAAO,OAAO,EAAC,YAAf;gBAAA,kDAAkD;kBAAM,SAAS,EAAC,aAAhB;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAlD;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAGI,QAAC,KAAD;gBAAO,EAAE,EAAC,QAAV;gBAAmB,SAAS,EAAC,cAA7B;gBAA4C,EAAE,EAAC,YAA/C;gBAA4D,IAAI,EAAC,YAAjE;gBAAA,wBACI;kBAAQ,KAAK,EAAC,EAAd;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADJ,EAEKrH,mBAAmB,GAAG4E,gBAAgB,EAAnB,GAAwB,IAFhD;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAHJ;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAWI;cAAK,SAAS,EAAC,6CAAf;cAAA,wBACI;gBAAQ,IAAI,EAAC,QAAb;gBAAsB,SAAS,EAAC,iBAAhC;gBAAA,wBAAkD;kBAAG,SAAS,EAAC;gBAAb;kBAAA;kBAAA;kBAAA;gBAAA,QAAlD;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAGI,QAAC,IAAD;gBAAM,EAAE,EAAG,8BAAX;gBAA0C,KAAK,EAAE;kBAAE7D,IAAI,EAAEA;gBAAR,CAAjD;gBAAA,uBACI;kBAAQ,IAAI,EAAC,QAAb;kBAAsB,SAAS,EAAC,gBAAhC;kBAAA,wBAAiD;oBAAG,SAAS,EAAC;kBAAb;oBAAA;oBAAA;oBAAA;kBAAA,QAAjD;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADJ;gBAAA;gBAAA;gBAAA;cAAA,QAHJ;YAAA;cAAA;cAAA;cAAA;YAAA,QAXJ;UAAA;YAAA;YAAA;YAAA;UAAA;QApBJ;UAAA;UAAA;UAAA;QAAA;MADJ,iBADJ;IA8CH,CA/CI,CAiDL;IAjDK,KAkDA,IAAIyF,eAAe,KAAKjF,MAAM,CAACC,SAAP,CAAiBiF,iBAAjB,CAAmCgB,MAA3D,EAAmE;MACpE,oBACI;QAAA,wBACI;UAAO,OAAO,EAAC,sBAAf;UAAA,yDAAmE;YAAM,SAAS,EAAC,aAAhB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAnE;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAGI;UAAQ,SAAS,EAAC,cAAlB;UAAiC,EAAE,EAAC,aAApC;UAAkD,IAAI,EAAC,aAAvD;UACI,KAAK,EAAEjI,yBADX;UAEI,QAAQ,EAAEqE,CAAC,IAAIG,4BAA4B,CAACH,CAAC,CAAC8C,MAAF,CAASC,KAAV,CAF/C;UAAA,wBAGI;YAAQ,KAAK,EAAC,6BAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ,EAIKlH,0BAA0B,GAAGgF,uBAAuB,EAA1B,GAA+B,IAJ9D;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,EAWKlF,yBAAyB,KAAK+B,MAAM,CAACC,SAAP,CAAiBkG,kBAAjB,CAAoCC,IAAlE,GAAyEC,2BAA2B,CAACrG,MAAM,CAACC,SAAP,CAAiBkG,kBAAjB,CAAoCC,IAArC,CAApG,GAAiJ,EAXtJ,EAaKnI,yBAAyB,KAAK+B,MAAM,CAACC,SAAP,CAAiBkG,kBAAjB,CAAoCG,KAAlE,GAA0ED,2BAA2B,CAACrG,MAAM,CAACC,SAAP,CAAiBkG,kBAAjB,CAAoCG,KAArC,CAArG,GAAmJ,EAbxJ;MAAA,gBADJ;IAkBH;EACJ,CAtID,CA/WkC,CAuflC;;;EACA,MAAMd,6BAA6B,GAAItB,qBAAD,IAA2B;IAE7DX,4BAA4B,CAACW,qBAAD,CAA5B,CAF6D,CAI7D;;IACA,IAAIA,qBAAqB,KAAKlE,MAAM,CAACC,SAAP,CAAiBqF,iBAAjB,CAAmCC,MAAjE,EAAyE;MACrE,oBACI;QAAA,uBACI,QAAC,MAAD;UAEI,aAAa,EAAE;YACXxB,aAAa,EAAE,EADJ;YAEXE,gBAAgB,EAAE,KAFP;YAGXC,qBAAqB,EAAEA;UAHZ,CAFnB;UAOI,kBAAkB,MAPtB;UASI,QAAQ,EAAG4B,OAAD,IAAa;YACnB,IAAIC,OAAO,GAAG,EAAd;YACAjJ,gBAAgB,CAACgJ,OAAO,CAAC/B,aAAR,CAAsBnC,MAAvB,CAAhB;;YAGA,IAAI,CAACkE,OAAO,CAAC/B,aAAb,EAA4B;cACxBgC,OAAO,CAAChC,aAAR,GAAwB,yCAAxB;YACH,CAFD,MAGK,IAAI+B,OAAO,CAAC/B,aAAR,CAAsBnC,MAAtB,IAAgC3E,iBAApC,EAAuD;cACxD8I,OAAO,CAAChC,aAAR,GAAwB,2CAA2C9G,iBAA3C,GAA+D,aAAvF;YAEH;;YAED,IAAI6I,OAAO,CAAC/B,aAAZ,EAA2B;cACvB,IAAIlE,oBAAoB,CAACiG,OAAO,CAAC/B,aAAT,CAAxB,EACIgC,OAAO,CAAChC,aAAR,GAAwB,4BAAxB;YACP;;YAGD,OAAOgC,OAAP;UACH,CA7BL;UAgCI,QAAQ,EAAE,CAACD,OAAD,YAA4B;YAAA,IAAlB;cAAEE;YAAF,CAAkB;YAClCtC,WAAW,CAACoC,OAAD,CAAX;UACH,CAlCL;UAAA,UAoCK;YAAA,IAAC;cAAES;YAAF,CAAD;YAAA,oBACG,QAAC,IAAD;cAAA,wBACI;gBAAK,SAAS,EAAC,YAAf;gBAAA,wBAEI;kBAAK,SAAS,EAAC,uCAAf;kBAAuD,IAAI,EAAC,OAA5D;kBAAA,wBACI;oBAAI,SAAS,EAAC,iCAAd;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADJ,eAEI;oBAAG,SAAS,EAAC,MAAb;oBAAA,UAAqBhD,4BAA4B,CAACW,qBAAD;kBAAjD;oBAAA;oBAAA;oBAAA;kBAAA,QAFJ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFJ,eAOI;kBAAK,SAAS,EAAC,YAAf;kBAAA,wBACI;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADJ,eAEI,QAAC,KAAD;oBAAO,EAAE,EAAC,UAAV;oBAAqB,SAAS,EAAC,cAA/B;oBAA8C,EAAE,EAAC,eAAjD;oBAAiE,IAAI,EAAC,eAAtE;oBAAsF,IAAI,EAAC,GAA3F;oBACI,WAAW,EAAC,2CADhB;oBAC4D,SAAS,EAAEnH,iBADvE;oBAC0F,SAAS,EAAEE;kBADrG;oBAAA;oBAAA;oBAAA;kBAAA,QAFJ,eAII;oBAAK,SAAS,EAAC,YAAf;oBAAA,uBACI;sBAAM,SAAS,EAAC,cAAhB;sBAAA,WAAgCJ,aAAhC,SAAkDE,iBAAlD;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA;kBADJ;oBAAA;oBAAA;oBAAA;kBAAA,QAJJ,eAOI,QAAC,YAAD;oBAAc,IAAI,EAAC,eAAnB;oBAAmC,SAAS,EAAE,mBAAO;sBAAM,SAAS,EAAC,aAAhB;sBAAA,UAA+BwJ,MAAM,CAACxC;oBAAtC;sBAAA;sBAAA;sBAAA;oBAAA;kBAArD;oBAAA;oBAAA;oBAAA;kBAAA,QAPJ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAPJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAmBI;gBAAK,SAAS,EAAC,6CAAf;gBAAA,wBAEI;kBAAQ,IAAI,EAAC,QAAb;kBAAsB,SAAS,EAAC,iBAAhC;kBAAA,wBAAkD;oBAAG,SAAS,EAAC;kBAAb;oBAAA;oBAAA;oBAAA;kBAAA,QAAlD;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFJ,eAII,QAAC,IAAD;kBAAM,EAAE,EAAG,8BAAX;kBAA0C,KAAK,EAAE;oBAAEvE,IAAI,EAAEA;kBAAR,CAAjD;kBAAA,uBACI;oBAAQ,IAAI,EAAC,QAAb;oBAAsB,SAAS,EAAC,gBAAhC;oBAAA,wBAAiD;sBAAG,SAAS,EAAC;oBAAb;sBAAA;sBAAA;sBAAA;oBAAA,QAAjD;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBADJ;kBAAA;kBAAA;kBAAA;gBAAA,QAJJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAnBJ;YAAA;cAAA;cAAA;cAAA;YAAA,QADH;UAAA;QApCL;UAAA;UAAA;UAAA;QAAA;MADJ,iBADJ;IAuEH,CAxED,CAyEA;IAzEA,KA0EK,IAAI0E,qBAAqB,KAAKlE,MAAM,CAACC,SAAP,CAAiBqF,iBAAjB,CAAmCG,OAAjE,EAA0E;MAC3E,oBACI;QAAA,uBACI,QAAC,MAAD;UAEI,aAAa,EAAE;YACX1B,aAAa,EAAE,EADJ;YAEXE,gBAAgB,EAAE,KAFP;YAGXC,qBAAqB,EAAEA;UAHZ,CAFnB;UAOI,kBAAkB,MAPtB;UASI,QAAQ,EAAG4B,OAAD,IAAa;YACnB,IAAIC,OAAO,GAAG,EAAd;YACAjJ,gBAAgB,CAACgJ,OAAO,CAAC/B,aAAR,CAAsBnC,MAAvB,CAAhB;;YACA,IAAI,CAACkE,OAAO,CAAC/B,aAAb,EAA4B;cACxBgC,OAAO,CAAChC,aAAR,GAAwB,yCAAxB;YACH,CAFD,MAGK,IAAI+B,OAAO,CAAC/B,aAAR,CAAsBnC,MAAtB,IAAgC3E,iBAApC,EAAuD;cACxD8I,OAAO,CAAChC,aAAR,GAAwB,2CAA2C9G,iBAA3C,GAA+D,aAAvF;YACH;;YAED,IAAI6I,OAAO,CAAC/B,aAAZ,EAA2B;cACvB,IAAIlE,oBAAoB,CAACiG,OAAO,CAAC/B,aAAT,CAAxB,EACIgC,OAAO,CAAChC,aAAR,GAAwB,4BAAxB;YACP;;YAED,OAAOgC,OAAP;UAEH,CA1BL;UA2BI,QAAQ,EAAE,CAACD,OAAD,YAA4B;YAAA,IAAlB;cAAEE;YAAF,CAAkB;YAClCtC,WAAW,CAACoC,OAAD,CAAX;UACH,CA7BL;UAAA,UA+BK;YAAA,IAAC;cAAES;YAAF,CAAD;YAAA,oBACG,QAAC,IAAD;cAAA,wBAEI;gBAAK,SAAS,EAAC,YAAf;gBAAA,wBAEI;kBAAK,SAAS,EAAC,uCAAf;kBAAuD,IAAI,EAAC,OAA5D;kBAAA,wBACI;oBAAI,SAAS,EAAC,iCAAd;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADJ,eAEI;oBAAG,SAAS,EAAC,MAAb;oBAAA,UAAqBhD,4BAA4B,CAACW,qBAAD;kBAAjD;oBAAA;oBAAA;oBAAA;kBAAA,QAFJ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFJ,eAOI;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAPJ,qBAOkC;kBAAM,SAAS,EAAC,aAAhB;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAPlC,eAQI,QAAC,KAAD;kBAAO,EAAE,EAAC,UAAV;kBAAqB,SAAS,EAAC,cAA/B;kBAA8C,EAAE,EAAC,eAAjD;kBAAiE,IAAI,EAAC,eAAtE;kBAAsF,IAAI,EAAC,GAA3F;kBACI,WAAW,EAAC,2CADhB;kBAC4D,SAAS,EAAEnH,iBADvE;kBAC0F,SAAS,EAAEE;gBADrG;kBAAA;kBAAA;kBAAA;gBAAA,QARJ,eAUI;kBAAK,SAAS,EAAC,YAAf;kBAAA,uBACI;oBAAM,SAAS,EAAC,cAAhB;oBAAA,WAAgCJ,aAAhC,SAAkDE,iBAAlD;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBADJ;kBAAA;kBAAA;kBAAA;gBAAA,QAVJ,eAaI,QAAC,YAAD;kBAAc,IAAI,EAAC,eAAnB;kBAAmC,SAAS,EAAE,mBAAO;oBAAM,SAAS,EAAC,aAAhB;oBAAA,UAA+BwJ,MAAM,CAACxC;kBAAtC;oBAAA;oBAAA;oBAAA;kBAAA;gBAArD;kBAAA;kBAAA;kBAAA;gBAAA,QAbJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,eAkBI;gBAAK,SAAS,EAAC,6CAAf;gBAAA,wBAEI;kBAAQ,IAAI,EAAC,QAAb;kBAAsB,SAAS,EAAC,6BAAhC;kBAAA,wBAA8D;oBAAG,SAAS,EAAC;kBAAb;oBAAA;oBAAA;oBAAA;kBAAA,QAA9D;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFJ,eAGI,QAAC,IAAD;kBAAM,EAAE,EAAG,8BAAX;kBAA0C,KAAK,EAAE;oBAAEvE,IAAI,EAAEA;kBAAR,CAAjD;kBAAA,uBACI;oBAAQ,IAAI,EAAC,QAAb;oBAAsB,SAAS,EAAC,qCAAhC;oBAAA,wBAAsE;sBAAG,SAAS,EAAC;oBAAb;sBAAA;sBAAA;sBAAA;oBAAA,QAAtE;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBADJ;kBAAA;kBAAA;kBAAA;gBAAA,QAHJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAlBJ;YAAA;cAAA;cAAA;cAAA;YAAA,QADH;UAAA;QA/BL;UAAA;UAAA;UAAA;QAAA;MADJ,iBADJ;IAiEH,CAlEI,CAoEL;IApEK,KAqEA,IAAI0E,qBAAqB,KAAKlE,MAAM,CAACC,SAAP,CAAiBqF,iBAAjB,CAAmCI,MAAjE,EAAyE;MAC1E,oBACI;QAAA,uBACI,QAAC,MAAD;UACI,aAAa,EAAE;YACX3B,aAAa,EAAE,EADJ;YAEXE,gBAAgB,EAAE,EAFP;YAGXC,qBAAqB,EAAEA;UAHZ,CADnB;UAMI,kBAAkB,MANtB;UAQI,QAAQ,EAAG4B,OAAD,IAAa;YACnB,IAAIC,OAAO,GAAG,EAAd;YACAjJ,gBAAgB,CAACgJ,OAAO,CAAC/B,aAAR,CAAsBnC,MAAvB,CAAhB;;YACA,IAAI,CAACkE,OAAO,CAAC/B,aAAb,EAA4B;cACxBgC,OAAO,CAAChC,aAAR,GAAwB,yCAAxB;YACH,CAFD,MAGK,IAAI+B,OAAO,CAAC/B,aAAR,CAAsBnC,MAAtB,IAAgC3E,iBAApC,EAAuD;cACxD8I,OAAO,CAAChC,aAAR,GAAwB,2CAA2C9G,iBAA3C,GAA+D,aAAvF;YACH;;YAED,IAAI6I,OAAO,CAAC/B,aAAZ,EAA2B;cACvB,IAAIlE,oBAAoB,CAACiG,OAAO,CAAC/B,aAAT,CAAxB,EACIgC,OAAO,CAAChC,aAAR,GAAwB,4BAAxB;YACP;;YAED,IAAI,CAAC+B,OAAO,CAAC7B,gBAAb,EAA+B;cAC3B8B,OAAO,CAAC9B,gBAAR,GAA2B,4CAA3B;YACH;;YAED,OAAO8B,OAAP;UACH,CA5BL;UA6BI,QAAQ,EAAE,CAACD,OAAD,YAA4B;YAAA,IAAlB;cAAEE;YAAF,CAAkB;YAClCtC,WAAW,CAACoC,OAAD,CAAX;UACH,CA/BL;UAAA,UAiCK;YAAA,IAAC;cAAES;YAAF,CAAD;YAAA,oBACG,QAAC,IAAD;cAAA,uBAEI;gBAAK,SAAS,EAAC,YAAf;gBAAA,wBAEI;kBAAK,SAAS,EAAC,uCAAf;kBAAuD,IAAI,EAAC,OAA5D;kBAAA,wBACI;oBAAI,SAAS,EAAC,iCAAd;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADJ,eAEI;oBAAG,SAAS,EAAC,MAAb;oBAAA,UAAqBhD,4BAA4B,CAACW,qBAAD;kBAAjD;oBAAA;oBAAA;oBAAA;kBAAA,QAFJ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFJ,eAOI;kBAAO,OAAO,EAAC,uBAAf;kBAAA,yDAAiE;oBAAM,SAAS,EAAC,aAAhB;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAAjE;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAPJ,eAQI,QAAC,KAAD;kBAAO,EAAE,EAAC,QAAV;kBAAmB,SAAS,EAAC,cAA7B;kBAA4C,EAAE,EAAC,kBAA/C;kBAAkE,IAAI,EAAC,kBAAvE;kBAAA,wBACI;oBAAQ,KAAK,EAAC,EAAd;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADJ,eAEI;oBAAQ,KAAK,EAAC,MAAd;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAFJ,eAGI;oBAAQ,KAAK,EAAC,OAAd;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAHJ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QARJ,eAcI;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAdJ,qBAckC;kBAAM,SAAS,EAAC,aAAhB;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAdlC,eAeI,QAAC,KAAD;kBAAO,EAAE,EAAC,UAAV;kBAAqB,SAAS,EAAC,cAA/B;kBAA8C,EAAE,EAAC,eAAjD;kBAAiE,IAAI,EAAC,eAAtE;kBAAsF,IAAI,EAAC,GAA3F;kBACI,WAAW,EAAC,2CADhB;kBAC4D,SAAS,EAAEnH,iBADvE;kBAC0F,SAAS,EAAEE;gBADrG;kBAAA;kBAAA;kBAAA;gBAAA,QAfJ,eAiBI;kBAAK,SAAS,EAAC,YAAf;kBAAA,uBACI;oBAAM,SAAS,EAAC,cAAhB;oBAAA,WAAgCJ,aAAhC,SAAkDE,iBAAlD;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBADJ;kBAAA;kBAAA;kBAAA;gBAAA,QAjBJ,eAoBI,QAAC,YAAD;kBAAc,IAAI,EAAC,eAAnB;kBAAmC,SAAS,EAAE,mBAAO;oBAAM,SAAS,EAAC,aAAhB;oBAAA,UAA+BwJ,MAAM,CAACxC;kBAAtC;oBAAA;oBAAA;oBAAA;kBAAA;gBAArD;kBAAA;kBAAA;kBAAA;gBAAA,QApBJ,eAsBI;kBAAK,SAAS,EAAC,6CAAf;kBAAA,wBACI;oBAAQ,IAAI,EAAC,QAAb;oBAAsB,SAAS,EAAC,6BAAhC;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QADJ,eAEI,QAAC,IAAD;oBAAM,EAAE,EAAG,8BAAX;oBAA0C,KAAK,EAAE;sBAAEvE,IAAI,EAAEA;oBAAR,CAAjD;oBAAA,uBACI;sBAAQ,IAAI,EAAC,QAAb;sBAAsB,SAAS,EAAC,qCAAhC;sBAAA;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA;kBADJ;oBAAA;oBAAA;oBAAA;kBAAA,QAFJ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAtBJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAFJ;cAAA;cAAA;cAAA;YAAA,QADH;UAAA;QAjCL;UAAA;UAAA;UAAA;QAAA;MADJ,iBADJ;IA2EH;EAEJ,CAlOD,CAxfkC,CA4tBlC;;;EACA,MAAM6G,2BAA2B,GAAIjD,iBAAD,IAAuB;IAEvD;IACA,IAAIA,iBAAiB,KAAKpD,MAAM,CAACC,SAAP,CAAiBkG,kBAAjB,CAAoCC,IAA9D,EAAoE;MAChE,oBACI;QAAA,uBACI,QAAC,MAAD;UACI,aAAa,EAAE;YACXI,WAAW,EAAEpD,iBADF;YAEXY,YAAY,EAAE,IAFH;YAGXrF,YAAY,EAAEA;UAHH,CADnB;UAMI,kBAAkB,MANtB;UAQI,QAAQ,EAAGmH,OAAD,IAAa;YACnB,IAAIC,OAAO,GAAG,EAAd;;YACA,IAAI,CAACD,OAAO,CAACnH,YAAT,IAAyB,CAACA,YAA9B,EAA4C;cACxCoH,OAAO,CAACpH,YAAR,GAAuB,0CAAvB;YACH;;YAED,OAAOoH,OAAP;UACH,CAfL;UAiBI,QAAQ,EAAE,CAACD,OAAD,YAA4B;YAAA,IAAlB;cAAEE;YAAF,CAAkB;YAClCtC,WAAW,CAACoC,OAAD,CAAX;UACH,CAnBL;UAAA,uBAsBI,QAAC,IAAD;YAAA,wBACI;cAAK,SAAS,EAAC,YAAf;cAAA,wBACI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,qBACuC;gBAAM,SAAS,EAAC,aAAhB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADvC,eAII,QAAC,UAAD;gBAAY,qBAAqB,EAAEjH,qBAAnC;gBAA0D,qBAAqB,EAAEM,qBAAjF;gBAAwG,cAAc,EAAE2F,0BAAxH;gBAAoJ,EAAE,EAAC,cAAvJ;gBAAsK,IAAI,EAAC;cAA3K;gBAAA;gBAAA;gBAAA;cAAA,QAJJ;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAQI;cAAK,SAAS,EAAC,6CAAf;cAAA,wBAEI;gBAAQ,IAAI,EAAC,QAAb;gBAAsB,SAAS,EAAC,6BAAhC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,eAGI,QAAC,IAAD;gBAAM,EAAE,EAAG,8BAAX;gBAA0C,KAAK,EAAE;kBAAEtF,IAAI,EAAEA;gBAAR,CAAjD;gBAAA,uBACI;kBAAQ,IAAI,EAAC,QAAb;kBAAsB,SAAS,EAAC,qCAAhC;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADJ;gBAAA;gBAAA;gBAAA;cAAA,QAHJ;YAAA;cAAA;cAAA;cAAA;YAAA,QARJ;UAAA;YAAA;YAAA;YAAA;UAAA;QAtBJ;UAAA;UAAA;UAAA;QAAA;MADJ,iBADJ;IA6CH,CA9CD,CAgDA;IAhDA,KAiDK,IAAI4D,iBAAiB,KAAKpD,MAAM,CAACC,SAAP,CAAiBkG,kBAAjB,CAAoCG,KAA9D,EAAqE;MAEtE,oBACI;QAAA,uBACI,QAAC,MAAD;UACI,aAAa,EAAE;YACXE,WAAW,EAAEpD,iBADF;YAEXY,YAAY,EAAE,EAFH;YAGXrF,YAAY,EAAE,IAAI2C,IAAJ;UAHH,CADnB;UAMI,kBAAkB,MANtB;UAQI,QAAQ,EAAGwE,OAAD,IAAa;YACnB,IAAIC,OAAO,GAAG,EAAd;;YACA,IAAI,CAACD,OAAO,CAAC9B,YAAb,EAA2B;cACvB+B,OAAO,CAAC/B,YAAR,GAAuB,0CAAvB;YACH;;YAED,OAAO+B,OAAP;UACH,CAfL;UAkBI,QAAQ,EAAE,CAACD,OAAD,aAA4B;YAAA,IAAlB;cAAEE;YAAF,CAAkB;YAClCtC,WAAW,CAACoC,OAAD,CAAX;UACH,CApBL;UAAA,uBAuBI,QAAC,IAAD;YAAA,wBACI;cAAK,SAAS,EAAC,YAAf;cAAA,wBACI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,qBACuC;gBAAM,SAAS,EAAC,aAAhB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADvC,eAEI,QAAC,KAAD;gBAAO,IAAI,EAAC,QAAZ;gBAAqB,GAAG,EAAC,GAAzB;gBAA6B,GAAG,EAAC,IAAjC;gBAAsC,EAAE,EAAC,cAAzC;gBAAwD,IAAI,EAAC,cAA7D;gBAA4E,SAAS,EAAC,cAAtF;gBAAqG,WAAW,EAAC;cAAjH;gBAAA;gBAAA;gBAAA;cAAA,QAFJ;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAMI;cAAK,SAAS,EAAC,6CAAf;cAAA,uBACI;gBAAQ,IAAI,EAAC,QAAb;gBAAsB,SAAS,EAAC,6BAAhC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA,QANJ;UAAA;YAAA;YAAA;YAAA;UAAA;QAvBJ;UAAA;UAAA;UAAA;QAAA;MADJ,iBADJ;IAwCH;EAEJ,CAhGD;;EAmGA,oBACI;IAAA,wBAEC,QAAC,QAAD;MAAU,IAAI,EAAE7J;IAAhB;MAAA;MAAA;MAAA;IAAA,QAFD,eAII;MAAK,SAAS,EAAC,eAAf;MAAA,wBACI;QAAK,SAAS,EAAC,KAAf;QAAA,uBAEI;UAAK,SAAS,EAAC,WAAf;UAAA,uBACI;YAAK,SAAS,EAAC,YAAf;YAAA,wBACI;cAAO,OAAO,EAAC,uBAAf;cAAA,+CAA0D;gBAAM,SAAS,EAAC,aAAhB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAA1D;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAQ,SAAS,EAAC,cAAlB;cAAiC,EAAE,EAAC,uBAApC;cAA4D,IAAI,EAAC,uBAAjE;cACI,KAAK,EAAEU,sBADX;cACmC,QAAQ,EAAE2F,CAAC,IAAIC,0BAA0B,CAACD,CAAC,CAAC8C,MAAF,CAASC,KAAV,CAD5E;cAAA,wBAEI;gBAAQ,KAAK,EAAC,EAAd;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,EAGK5I,uBAAuB,GAAGsG,oBAAoB,EAAvB,GAA4B,IAHxD;YAAA;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MAFJ;QAAA;QAAA;QAAA;MAAA,QADJ,EAgBKpG,sBAAsB,KAAKqD,MAAM,CAACC,SAAP,CAAiBiF,iBAAjB,CAAmCC,gBAA9D,GAAiFH,wBAAwB,CAAChF,MAAM,CAACC,SAAP,CAAiBiF,iBAAjB,CAAmCC,gBAApC,CAAzG,GAAiK,EAhBtK,EAkBKxI,sBAAsB,KAAKqD,MAAM,CAACC,SAAP,CAAiBiF,iBAAjB,CAAmCS,eAA9D,GAAgFX,wBAAwB,CAAChF,MAAM,CAACC,SAAP,CAAiBiF,iBAAjB,CAAmCS,eAApC,CAAxG,GAA+J,EAlBpK,EAoBKhJ,sBAAsB,KAAKqD,MAAM,CAACC,SAAP,CAAiBiF,iBAAjB,CAAmCe,KAA9D,GAAsEjB,wBAAwB,CAAChF,MAAM,CAACC,SAAP,CAAiBiF,iBAAjB,CAAmCe,KAApC,CAA9F,GAA2I,EApBhJ,EAsBKtJ,sBAAsB,KAAKqD,MAAM,CAACC,SAAP,CAAiBiF,iBAAjB,CAAmCgB,MAA9D,GAAuElB,wBAAwB,CAAChF,MAAM,CAACC,SAAP,CAAiBiF,iBAAjB,CAAmCgB,MAApC,CAA/F,GAA6I,EAtBlJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA,gBADJ;AAoCH;;GAp2BQnK,qB;UAwCYJ,W;;;KAxCZI,qB;AAs2BT,eAAeA,qBAAf"},"metadata":{},"sourceType":"module"}