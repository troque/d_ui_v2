{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ValidarClasificacionRadicado\\\\ValidarClasificacionRadicadoForm.js\",\n  _s = $RefreshSig$();\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport Spinner from '../../Utils/Spinner';\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\nimport { json, Link } from \"react-router-dom\";\nimport 'react-datetime/css/react-datetime.css';\nimport 'moment/locale/es';\nimport { useLocation } from 'react-router-dom';\nimport { hasAccess } from '../../../components/Utils/Common';\nimport ClasificacionRadicado from '../ClasificacionRadicado/ClasificacionRadicado';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ValidarClasificacionRadicadoForm() {\n  _s();\n  const location = useLocation();\n  const {\n    from,\n    disable\n  } = location.state;\n  const [listaTipoRespuesta, setListaTipoRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\n  const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\n  const [getRespuestaValidacionJefe, setRespuestaValidacionJefe] = useState(false);\n  const [getClasificacionActiva, setClasificacionActiva] = useState([]);\n  const [getRtaJefe, setRtaJefe] = useState(false);\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getValidacionPorJefe, setValidacionPorJefe] = useState({\n    data: {}\n  });\n  const [getRtaValidacion, setRtaValidacion] = useState(false);\n  const [getNombreProceso, setNombreProceso] = useState('');\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const [getParametros, setParametros] = useState({\n    id_proceso_disciplinario: procesoDisciplinarioId,\n    id_etapa: 2,\n    // from.idEtapa\n    reclasificacion: true,\n    route: \"/MisPendientes/\",\n    tipo_clasificacion: global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION\n  });\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      // Se valida que la clasificación no haya sido validada.\n      nombreProceso();\n      ParametrosMasApi.getAllTipoRespuesta().then(datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1));\n    }\n    fetchData();\n  }, []);\n  const nombreProceso = () => {\n    GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setNombreProceso(datos.data.attributes.nombre);\n        validarClasificacion();\n      }\n    });\n  };\n\n  /**\r\n   * Se consulta si la clasificación ya fue aceptada en la etapa de Evaluación.\r\n   * @returns \r\n   */\n  const validarClasificacion = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"validacion_clasificado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId\n        }\n      }\n    };\n    return GenericApi.getByDataGeneric(\"validar-clasificacion/get-validar-clasificado/\" + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        // Si la clasificación fue validada.\n        setRtaValidacion(true);\n        //setRespuestaValidacionJefe(true)  \n      }\n\n      listaReclasificacion();\n      jefeDependencia();\n    });\n  };\n\n  /**\r\n   * Se trae toda la lista de las reclasificaciones realizadas por el sistema\r\n   */\n  const listaReclasificacion = () => {\n    GenericApi.getGeneric(\"clasificacion-radicado/get-reclasificacion/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setClasificacionRadicadoLista(datos);\n        setRespuestaClasificacionRadicado(true);\n        validacionPorJefe();\n      } else {\n        setModalState({\n          title: \"Clasificación del radicado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ValidarClasificadoForm',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  /**\r\n   * Se consulta si el usuario que se encuentra en sesión es jefe de la dependencia\r\n   */\n  const jefeDependencia = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"usuario\",\n        \"attributes\": {\n          \"\": \"\"\n        }\n      }\n    };\n    GenericApi.getByDataGeneric(\"usuario/get-jefe-dependencia\", data).then(datos => {\n      if (!datos.error) {\n        setRtaJefe(true);\n      } else {\n        setRtaJefe(false);\n      }\n      window.showSpinner(false);\n    });\n  };\n  const validacionPorJefe = () => {\n    GenericApi.getGeneric(\"validar-clasificacion/get-validar-clasificacion-jefe/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setRespuestaValidacionJefe(true);\n        return true;\n      } else {\n        setRespuestaValidacionJefe(false);\n        return false;\n      }\n    });\n  };\n  let selectChangeTipoRespuesta = e => {\n    setSelectedTipoRespuesta(e);\n  };\n  const selectTipoRespuesta = () => {\n    return listaTipoRespuesta.data.map((tipo_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tipo_respuesta.id,\n          children: tipo_respuesta.attributes.nombre\n        }, tipo_respuesta.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this)\n      }, void 0, false);\n    });\n  };\n  const aceptarClasificacion = () => {\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"validar_clasificacion\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": 2,\n          \"estado\": true\n        }\n      }\n    };\n    GenericApi.addGeneric(\"validar-clasificacion\", data).then(datos => {\n      if (!datos.error) {\n        setModalState({\n          title: getNombreProceso + \" :: VALIDAR CLASIFICACIÓN\",\n          message: global.Constants.MENSAJES_MODAL.EXITOSO,\n          show: true,\n          redirect: '/RamasProceso',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: VALIDAR CLASIFICACIÓN\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ValidarClasificadoForm',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n      window.showSpinner(false);\n    });\n  };\n\n  // COMPONENTE CONFIRMACION TIPO DE CLASIFICADO\n  const componenteTipoRespuesta = tipo_respuesta => {\n    // CONFIRMACION TIPO DE CLASIFICADO = SI\n    if (tipo_respuesta === 1) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            aceptacion_clasificacion: true\n          },\n          enableReinitialize: true,\n          onSubmit: _ref => {\n            let {\n              resetForm\n            } = _ref;\n            aceptarClasificacion();\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-rounded btn-primary\",\n                children: \"Registrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ValidarClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n\n    /// CONFIRMACION TIPO DE CLASIFICADO = NO\n    else if (tipo_respuesta === 2) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ClasificacionRadicado, {\n          getParametros: getParametros,\n          id: \"cr_componente\",\n          name: \"cr_componente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n  const [respuestaClasificacionRadicado, setRespuestaClasificacionRadicado] = useState(false);\n  const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const listaClasificacionRadicado = () => {\n    if (clasificacionRadicadoLista.data != null && typeof clasificacionRadicadoLista.data != 'undefined') {\n      return clasificacionRadicadoLista.data.map((clasificacion_radicado, i) => {\n        return cargarTabla(clasificacion_radicado, i);\n      });\n    } else {\n      return clasificacionRadicadoLista.map((clasificacion_radicado, i) => {\n        return cargarTabla(clasificacion_radicado, i);\n      });\n    }\n  };\n  const cargarTabla = (clasificacion_radicado, i) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [clasificacion_radicado.attributes.estado === 1 ? setClasificacionActiva(1) : null, /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.etapa.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [clasificacion_radicado.attributes.expediente.nombre, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 74\n        }, this), clasificacion_radicado.attributes.id_tipo_expediente == global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? clasificacion_radicado.attributes.tipo_derecho_peticion.nombre : null, clasificacion_radicado.attributes.id_tipo_expediente == global.Constants.TIPOS_EXPEDIENTES.QUEJA ? clasificacion_radicado.attributes.tipo_queja.nombre : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.dependencia.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [clasificacion_radicado.attributes.usuario_registra.nombre, \" \", clasificacion_radicado.attributes.usuario_registra.apellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.estado == 1 ? 'Activo' : 'Inactivo'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.created_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), !getRtaValidacion && getRtaJefe && disable != true ? /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            uuid: clasificacion_radicado.id,\n            id_clasificacion_radicado: clasificacion_radicado.id,\n            id_proceso_disciplinario: clasificacion_radicado.attributes.id_proceso_disciplinario\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            return errores;\n          },\n          onSubmit: (valores, _ref2) => {\n            let {\n              resetForm\n            } = _ref2;\n            // console.log(valores);\n            asignarCaso(valores, false);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-check-square\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 83\n              }, this), \" Aceptar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this);\n  };\n  const asignarCaso = (datos, reparto) => {\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"clasificacion_radicado\",\n        \"attributes\": {\n          \"uuid\": datos.uuid,\n          \"id_proceso_disciplinario\": datos.id_proceso_disciplinario,\n          \"id_etapa\": 2,\n          \"id_tipo_expediente\": datos.id_tipo_expediente,\n          \"observaciones\": \"\",\n          \"id_tipo_queja\": null,\n          \"id_termino_respuesta\": null,\n          \"fecha_termino\": null,\n          \"hora_termino\": null,\n          \"gestion_juridica\": false,\n          \"estado\": true,\n          \"id_estado_reparto\": null,\n          \"id_tipo_derecho_peticion\": null,\n          \"oficina_control_interno\": false,\n          \"created_user\": datos.funcionario_registra_name,\n          \"reclasificacion\": null,\n          \"reparto\": reparto\n        }\n      }\n    };\n    GenericApi.addGeneric(\"clasificacion-radicado/asignar-caso-por-jefe\", data).then(datos => {\n      if (!datos.error) {\n        setModalState({\n          title: getNombreProceso + \" :: VALIDAR CLASIFICACIÓN\",\n          message: \"El proceso disciplinario es asignado a \" + datos.data[0].attributes.nombre_completo_funcionario_actual,\n          show: true,\n          redirect: '/MisPendientes',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: VALIDAR CLASIFICACIÓN\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ValidarClasificacionRadicadoForm',\n          from: {\n            from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n      window.showSpinner(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w2d_block\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          \"aria-label\": \"breadcrumb\",\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"breadcrumb breadcrumb-alt push\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"breadcrumb-item\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                underline: \"hover\",\n                className: \"text-dark\",\n                to: `/MisPendientes`,\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Mis Pendientes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 130\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"breadcrumb-item\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                underline: \"hover\",\n                className: \"text-dark\",\n                to: `/RamasProceso/`,\n                state: {\n                  from: from,\n                  disable: disable\n                },\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Ramas del proceso\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 171\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"breadcrumb-item\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                underline: \"hover\",\n                className: \"text-dark\",\n                \"aria-current\": \"page\",\n                to: `/ClasificacionRadicadoLista/`,\n                state: {\n                  from: from,\n                  disable: disable\n                },\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Validar Clasificaci\\xF3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 205\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block block-themed\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: disable ? \"block-header bg-dark\" : \"block-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"block-title\",\n              children: [\" \", getNombreProceso, \" :: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"VALIDAR CLASIFICACI\\xD3N\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 80\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12 text-right my-2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: '/RamasProceso/',\n                title: \"Regresar a ramas del proceso\",\n                state: {\n                  from: from,\n                  disable: disable\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-success\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-backward\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 87\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: hasAccess('EI_ValidarClasificacion', 'Consultar') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [getRespuestaValidacionJefe ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning alert-dismissable\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"alert-heading font-size-h4 my-2\",\n                    children: \"ALERTA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mb-0\",\n                    children: \"EL PROCESO FUE CLASIFICADO DIRECTAMENTE POR EL JEFE DE LA DEPENDENCIA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 53\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-vcenter\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"ETAPA\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 448,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"TIPO DE EXPEDIENTE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 449,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"DEPENDENCIA\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 450,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"REGISTRADO POR\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 451,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"ESRADO\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 452,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"FECHA DE REGISTRO\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 453,\n                        columnNumber: 57\n                      }, this), !getRtaValidacion && getRtaJefe ? /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"ASIGNACI\\xD3N\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 455,\n                        columnNumber: 61\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: respuestaClasificacionRadicado ? listaClasificacionRadicado() : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true) : null\n            }, void 0, false), !getRtaValidacion ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"ingresoTipoExpediente\",\n                      children: [\"\\xBFCONFIRMA LA CLASIFICACI\\xD3N DEL EXPEDIENTE? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 475,\n                        columnNumber: 131\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 475,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-control\",\n                      id: \"ingresoTipoExpediente\",\n                      name: \"ingresoTipoExpediente\",\n                      value: selectedTipoRespuesta,\n                      onChange: e => selectChangeTipoRespuesta(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Por favor seleccione\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 478,\n                        columnNumber: 53\n                      }, this), respuestaTipoRespuesta ? selectTipoRespuesta() : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 476,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 37\n              }, this), selectedTipoRespuesta === '1' ? componenteTipoRespuesta(1) : '', selectedTipoRespuesta === '2' ? componenteTipoRespuesta(2) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 33\n            }, this) : null, getRtaValidacion && getRtaJefe ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"ingresoTipoExpediente\",\n                      children: \"RECLASIFICAR EXPEDIENTE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"alert alert-warning\",\n                      role: \"alert\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"RECLASIFICACI\\xD3N DEL EXPEDIENTE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 500,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 500,\n                        columnNumber: 100\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 500,\n                        columnNumber: 106\n                      }, this), \"RECUERDE QUE UNA VEZ REALICE LA RECLASIFICACI\\xD3N DEL EXPEDIENTE DEBER\\xC1 INICIAR NUEVAMENTE EL PROCESO EN LAS FASES SUBSECUENTES DE LA ETAPA DE EVALUACI\\xD3N.\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 49\n                    }, this), componenteTipoRespuesta(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 33\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ValidarClasificacionRadicadoForm, \"Ed+OGX49jN6xYTpFRUxxnNVzS1Q=\", false, function () {\n  return [useLocation];\n});\n_c = ValidarClasificacionRadicadoForm;\nexport default ValidarClasificacionRadicadoForm;\nvar _c;\n$RefreshReg$(_c, \"ValidarClasificacionRadicadoForm\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","Spinner","ParametrosMasApi","json","Link","useLocation","hasAccess","ClasificacionRadicado","GenericApi","ModalGen","ValidarClasificacionRadicadoForm","location","from","disable","state","listaTipoRespuesta","setListaTipoRespuesta","data","selectedTipoRespuesta","setSelectedTipoRespuesta","respuestaTipoRespuesta","setRespuestaTipoRespuesta","getRespuestaValidacionJefe","setRespuestaValidacionJefe","getClasificacionActiva","setClasificacionActiva","getRtaJefe","setRtaJefe","modalState","setModalState","title","message","show","getValidacionPorJefe","setValidacionPorJefe","getRtaValidacion","setRtaValidacion","getNombreProceso","setNombreProceso","radicado","procesoDisciplinarioId","getParametros","setParametros","id_proceso_disciplinario","id_etapa","reclasificacion","route","tipo_clasificacion","global","Constants","TIPO_CLASIFICACION","VALIDAR_CLASIFICACION","fetchData","window","showSpinner","nombreProceso","getAllTipoRespuesta","then","datos","error","showModal","getByIdGeneric","attributes","nombre","validarClasificacion","getByDataGeneric","listaReclasificacion","jefeDependencia","getGeneric","setClasificacionRadicadoLista","setRespuestaClasificacionRadicado","validacionPorJefe","toString","redirect","alert","TIPO_ALERTA","ERROR","selectChangeTipoRespuesta","e","selectTipoRespuesta","map","tipo_respuesta","i","id","aceptarClasificacion","addGeneric","MENSAJES_MODAL","EXITOSO","EXITO","componenteTipoRespuesta","aceptacion_clasificacion","resetForm","respuestaClasificacionRadicado","clasificacionRadicadoLista","links","meta","listaClasificacionRadicado","clasificacion_radicado","cargarTabla","estado","etapa","expediente","id_tipo_expediente","TIPOS_EXPEDIENTES","DERECHO_PETICION","tipo_derecho_peticion","QUEJA","tipo_queja","dependencia","usuario_registra","apellido","created_at","uuid","id_clasificacion_radicado","valores","errores","asignarCaso","reparto","funcionario_registra_name","nombre_completo_funcionario_actual","target","value"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ValidarClasificacionRadicado/ValidarClasificacionRadicadoForm.js"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\r\nimport { json, Link } from \"react-router-dom\";\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport 'moment/locale/es';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { hasAccess } from '../../../components/Utils/Common';\r\nimport ClasificacionRadicado from '../ClasificacionRadicado/ClasificacionRadicado';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\n\r\nfunction ValidarClasificacionRadicadoForm() {\r\n\r\n\r\n    const location = useLocation()\r\n    const { from, disable } = location.state\r\n    const [listaTipoRespuesta, setListaTipoRespuesta] = useState({ data: {} });\r\n    const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\r\n    const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\r\n    const [getRespuestaValidacionJefe, setRespuestaValidacionJefe] = useState(false);\r\n    const [getClasificacionActiva, setClasificacionActiva] = useState([]);\r\n    const [getRtaJefe, setRtaJefe] = useState(false);\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getValidacionPorJefe, setValidacionPorJefe] = useState({ data: {} });\r\n    const [getRtaValidacion, setRtaValidacion] = useState(false);\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n\r\n    const [getParametros, setParametros] = useState({\r\n        id_proceso_disciplinario: procesoDisciplinarioId,\r\n        id_etapa: 2, // from.idEtapa\r\n        reclasificacion: true,\r\n        route: \"/MisPendientes/\",\r\n        tipo_clasificacion: global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION,\r\n    });\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            window.showSpinner(true);\r\n            // Se valida que la clasificación no haya sido validada.\r\n            nombreProceso();\r\n            ParametrosMasApi.getAllTipoRespuesta().then(\r\n                datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1)\r\n            )\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const nombreProceso = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                    validarClasificacion();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    /**\r\n     * Se consulta si la clasificación ya fue aceptada en la etapa de Evaluación.\r\n     * @returns \r\n     */\r\n    const validarClasificacion = () => {\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"validacion_clasificado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            GenericApi.getByDataGeneric(\"validar-clasificacion/get-validar-clasificado/\" + procesoDisciplinarioId, data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n                        // Si la clasificación fue validada.\r\n                        setRtaValidacion(true)\r\n                        //setRespuestaValidacionJefe(true)  \r\n                    }\r\n\r\n                    listaReclasificacion();\r\n                    jefeDependencia();\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Se trae toda la lista de las reclasificaciones realizadas por el sistema\r\n     */\r\n    const listaReclasificacion = () => {\r\n\r\n        GenericApi.getGeneric(\"clasificacion-radicado/get-reclasificacion/\" + procesoDisciplinarioId).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setClasificacionRadicadoLista(datos)\r\n                    setRespuestaClasificacionRadicado(true)\r\n                    validacionPorJefe()\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Clasificación del radicado\", message: datos.error.toString(), show: true, redirect: '/ValidarClasificadoForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Se consulta si el usuario que se encuentra en sesión es jefe de la dependencia\r\n     */\r\n    const jefeDependencia = () => {\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"usuario\",\r\n                \"attributes\": {\r\n                    \"\": \"\"\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"usuario/get-jefe-dependencia\", data).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setRtaJefe(true)\r\n                }\r\n                else {\r\n                    setRtaJefe(false);\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n\r\n        )\r\n    }\r\n\r\n\r\n    const validacionPorJefe = () => {\r\n\r\n        GenericApi.getGeneric(\"validar-clasificacion/get-validar-clasificacion-jefe/\" + procesoDisciplinarioId).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setRespuestaValidacionJefe(true)\r\n                    return true;\r\n                }\r\n                else {\r\n                    setRespuestaValidacionJefe(false)\r\n                    return false;\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    let selectChangeTipoRespuesta = (e) => {\r\n        setSelectedTipoRespuesta(e);\r\n    }\r\n\r\n    const selectTipoRespuesta = () => {\r\n        return (\r\n            listaTipoRespuesta.data.map((tipo_respuesta, i) => {\r\n                return (\r\n                    <>\r\n                        <option key={tipo_respuesta.id} value={tipo_respuesta.id}>{tipo_respuesta.attributes.nombre}</option>\r\n                    </>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const aceptarClasificacion = () => {\r\n\r\n        window.showSpinner(true);\r\n\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"validar_clasificacion\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": 2,\r\n                    \"estado\": true,\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.addGeneric(\"validar-clasificacion\", data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setModalState({ title: getNombreProceso + \" :: VALIDAR CLASIFICACIÓN\", message: global.Constants.MENSAJES_MODAL.EXITOSO, show: true, redirect: '/RamasProceso', from: { from }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                }\r\n                else {\r\n                    setModalState({ title: getNombreProceso + \" :: VALIDAR CLASIFICACIÓN\", message: datos.error.toString(), show: true, redirect: '/ValidarClasificadoForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // COMPONENTE CONFIRMACION TIPO DE CLASIFICADO\r\n    const componenteTipoRespuesta = (tipo_respuesta) => {\r\n\r\n        // CONFIRMACION TIPO DE CLASIFICADO = SI\r\n        if (tipo_respuesta === 1) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            aceptacion_clasificacion: true,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        onSubmit={({ resetForm }) => {\r\n                            aceptarClasificacion();\r\n                        }}\r\n                    >\r\n\r\n                        <Form>\r\n                            <div className=\"block-content block-content-full text-right\">\r\n\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\">Registrar</button>\r\n\r\n                                <Link to={`/ValidarClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n                        </Form>\r\n\r\n                    </Formik>\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n        /// CONFIRMACION TIPO DE CLASIFICADO = NO\r\n        else if (tipo_respuesta === 2) {\r\n            return (\r\n                <>\r\n                    <ClasificacionRadicado getParametros={getParametros} id=\"cr_componente\" name=\"cr_componente\" />\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const [respuestaClasificacionRadicado, setRespuestaClasificacionRadicado] = useState(false);\r\n    const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const listaClasificacionRadicado = () => {\r\n\r\n        if (clasificacionRadicadoLista.data != null && typeof (clasificacionRadicadoLista.data) != 'undefined') {\r\n            return (\r\n\r\n                clasificacionRadicadoLista.data.map((clasificacion_radicado, i) => {\r\n                    return (\r\n                        cargarTabla(clasificacion_radicado, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                clasificacionRadicadoLista.map((clasificacion_radicado, i) => {\r\n                    return (\r\n                        cargarTabla(clasificacion_radicado, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const cargarTabla = (clasificacion_radicado, i) => {\r\n\r\n        return (\r\n            <tr>\r\n                {clasificacion_radicado.attributes.estado === 1 ? (setClasificacionActiva(1)) : null}\r\n\r\n                <td>{clasificacion_radicado.attributes.etapa.nombre}</td>\r\n                <td>{clasificacion_radicado.attributes.expediente.nombre}<br />\r\n                    {clasificacion_radicado.attributes.id_tipo_expediente == global.Constants.TIPOS_EXPEDIENTES.DERECHO_PETICION ? clasificacion_radicado.attributes.tipo_derecho_peticion.nombre : null}\r\n                    {clasificacion_radicado.attributes.id_tipo_expediente == global.Constants.TIPOS_EXPEDIENTES.QUEJA ? clasificacion_radicado.attributes.tipo_queja.nombre : null}\r\n                </td>\r\n                <td>{clasificacion_radicado.attributes.dependencia.nombre}</td>\r\n                <td>{clasificacion_radicado.attributes.usuario_registra.nombre} {clasificacion_radicado.attributes.usuario_registra.apellido}</td>\r\n                <td>{clasificacion_radicado.attributes.estado == 1 ? 'Activo' : 'Inactivo'}</td>\r\n                <td>{clasificacion_radicado.attributes.created_at}</td>\r\n\r\n                {(!getRtaValidacion && getRtaJefe && disable != true) ? (\r\n                    <td>\r\n                        <Formik\r\n                            initialValues={{\r\n                                uuid: clasificacion_radicado.id,\r\n                                id_clasificacion_radicado: clasificacion_radicado.id,\r\n                                id_proceso_disciplinario: clasificacion_radicado.attributes.id_proceso_disciplinario\r\n                            }}\r\n                            enableReinitialize\r\n\r\n                            validate={(valores) => {\r\n                                let errores = {}\r\n                                return errores\r\n                            }}\r\n\r\n                            onSubmit={(valores, { resetForm }) => {\r\n                                // console.log(valores);\r\n                                asignarCaso(valores, false);\r\n                            }}>\r\n                            <Form>\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i class=\"fas fa-check-square\"></i> Aceptar</button>\r\n                            </Form>\r\n                        </Formik>\r\n                    </td>) : null\r\n                }\r\n            </tr>\r\n        )\r\n    }\r\n\r\n\r\n    const asignarCaso = (datos, reparto) => {\r\n\r\n        window.showSpinner(true);\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"uuid\": datos.uuid,\r\n                    \"id_proceso_disciplinario\": datos.id_proceso_disciplinario,\r\n                    \"id_etapa\": 2,\r\n                    \"id_tipo_expediente\": datos.id_tipo_expediente,\r\n                    \"observaciones\": \"\",\r\n                    \"id_tipo_queja\": null,\r\n                    \"id_termino_respuesta\": null,\r\n                    \"fecha_termino\": null,\r\n                    \"hora_termino\": null,\r\n                    \"gestion_juridica\": false,\r\n                    \"estado\": true,\r\n                    \"id_estado_reparto\": null,\r\n                    \"id_tipo_derecho_peticion\": null,\r\n                    \"oficina_control_interno\": false,\r\n                    \"created_user\": datos.funcionario_registra_name,\r\n                    \"reclasificacion\": null,\r\n                    \"reparto\": reparto\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.addGeneric(\"clasificacion-radicado/asignar-caso-por-jefe\", data).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    setModalState({\r\n                        title: getNombreProceso + \" :: VALIDAR CLASIFICACIÓN\",\r\n                        message: \"El proceso disciplinario es asignado a \" + datos.data[0].attributes.nombre_completo_funcionario_actual, show: true,\r\n                        redirect: '/MisPendientes', from: { from }, alert: global.Constants.TIPO_ALERTA.EXITO\r\n                    });\r\n                }\r\n                else {\r\n                    setModalState({\r\n                        title: getNombreProceso + \" :: VALIDAR CLASIFICACIÓN\", message: datos.error.toString(), show: true,\r\n                        redirect: '/ValidarClasificacionRadicadoForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR\r\n                    });\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            {<Spinner />}\r\n            <ModalGen data={modalState} />\r\n\r\n            <div className=\"row\">\r\n\r\n\r\n                <div className=\"w2d_block\">\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                            <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                            <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from, disable: disable }}><small>Ramas del proceso</small></Link></li>\r\n                            <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" aria-current=\"page\" to={`/ClasificacionRadicadoLista/`} state={{ from: from, disable: disable }}><small>Validar Clasificación</small></Link></li>\r\n                        </ol>\r\n                    </nav>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"block block-themed\">\r\n                        <div className={(disable ? (\"block-header bg-dark\") : \"block-header\")}>\r\n                            <h3 className=\"block-title\"> {getNombreProceso} :: <strong>VALIDAR CLASIFICACIÓN</strong></h3>\r\n                        </div>\r\n\r\n                        <div className=\"block-content\">\r\n                            <div className='col-md-12 text-right my-2'>\r\n\r\n                                <Link to={'/RamasProceso/'} title='Regresar a ramas del proceso' state={{ from: from, disable: disable }}>\r\n                                    <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                                </Link>\r\n\r\n                            </div>\r\n                            <>\r\n\r\n                                {\r\n                                    (hasAccess('EI_ValidarClasificacion', 'Consultar')) ? (\r\n\r\n                                        <>\r\n                                            {\r\n                                                (getRespuestaValidacionJefe) ? (\r\n\r\n                                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                                        <h3 className=\"alert-heading font-size-h4 my-2\">ALERTA</h3>\r\n                                                        <p className=\"mb-0\">EL PROCESO FUE CLASIFICADO DIRECTAMENTE POR EL JEFE DE LA DEPENDENCIA</p>\r\n                                                    </div>\r\n\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            <table className=\"table table-vcenter\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>ETAPA</th>\r\n                                                        <th>TIPO DE EXPEDIENTE</th>\r\n                                                        <th>DEPENDENCIA</th>\r\n                                                        <th>REGISTRADO POR</th>\r\n                                                        <th>ESRADO</th>\r\n                                                        <th>FECHA DE REGISTRO</th>\r\n                                                        {(!getRtaValidacion && getRtaJefe) ? (\r\n                                                            <th>ASIGNACIÓN</th>\r\n                                                        ) : null}\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {respuestaClasificacionRadicado ? listaClasificacionRadicado() : null}\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                        </>\r\n                                    ) : null\r\n\r\n                                }\r\n                            </>\r\n\r\n                            {(!getRtaValidacion) ? (\r\n                                <div className=\"block-content\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"ingresoTipoExpediente\">¿CONFIRMA LA CLASIFICACIÓN DEL EXPEDIENTE? <span className=\"text-danger\">*</span></label>\r\n                                                <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                                                    value={selectedTipoRespuesta} onChange={e => selectChangeTipoRespuesta(e.target.value)}>\r\n                                                    <option value=\"\">Por favor seleccione</option>\r\n                                                    {respuestaTipoRespuesta ? selectTipoRespuesta() : null}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/*SI APLICA RECLASIFIFCACION*/}\r\n                                    {selectedTipoRespuesta === '1' ? componenteTipoRespuesta(1) : ''}\r\n                                    {/*NO APLICA RECLASIFIFCACION*/}\r\n                                    {selectedTipoRespuesta === '2' ? componenteTipoRespuesta(2) : ''}\r\n                                </div>) : null\r\n                            }\r\n\r\n                            {(getRtaValidacion && getRtaJefe) ? (\r\n                                <div className=\"block-content\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"ingresoTipoExpediente\">RECLASIFICAR EXPEDIENTE</label>\r\n\r\n                                                <div class=\"alert alert-warning\" role=\"alert\">\r\n                                                    <strong>RECLASIFICACIÓN DEL EXPEDIENTE</strong><br /><br />\r\n                                                        RECUERDE QUE UNA VEZ REALICE LA RECLASIFICACIÓN DEL EXPEDIENTE DEBERÁ INICIAR NUEVAMENTE EL PROCESO EN LAS FASES SUBSECUENTES DE LA ETAPA DE EVALUACIÓN.\r\n                                                </div>\r\n\r\n                                                {componenteTipoRespuesta(2)}\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>) : null\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\nexport default ValidarClasificacionRadicadoForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}