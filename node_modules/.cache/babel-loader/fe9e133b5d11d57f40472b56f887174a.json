{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\Maestras\\\\UsuarioDetalle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport 'rhfa-emergency-styles/dist/styles.css';\nimport Spinner from '../Utils/Spinner';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport InfoErrorApi from '../Utils/InfoErrorApi';\nimport InfoExitoApi from '../Utils/InfoExitoApi';\nimport GenericApi from '../Api/Services/GenericApi';\nimport ModalGen from '../Utils/Modals/ModalGeneric';\nimport { Navigate } from \"react-router-dom\";\nimport '../Utils/Constants';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UsuarioDetalle() {\n  _s();\n  // Variables de la clase\n  const [errorApi, setErrorApi] = useState('');\n  const [getNombre, setNombre] = useState('');\n  const [getApellido, setApeliido] = useState('');\n  const [getUser, setUser] = useState('');\n  const [getEmail, setEmail] = useState('');\n  const [getIdDependencia, setIdDependencia] = useState('');\n  const [getEstado, setEstado] = useState('');\n  const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({\n    data: {}\n  });\n  const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\n  const [listaTipoProcesoDisciplinario, setListaProcesoDisciplinario] = useState({\n    data: {}\n  });\n  const [respuestaProcesoDisciplinario, setRespuestaProcesoDisciplinario] = useState(false);\n  const [listaTiposQueja, setListaTiposQueja] = useState({\n    data: {}\n  });\n  const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\n  const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({\n    data: {}\n  });\n  const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\n  const [isRedirect, setIsRedirect] = useState(false);\n  const [listaDependenciaOrigen, setListaDependenciaOrigen] = useState({\n    data: {}\n  });\n  const [respuestaDependenciaOrigen, setDependenciaOrigen] = useState(false);\n  const [getListaRoles, setListaRoles] = useState({\n    data: {}\n  });\n  const [getRespuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\n  const [getTiposExpedientes, setTiposExpedientes] = useState({\n    data: {}\n  });\n  const [getRespuestaRoles, setRespuestaRoles] = useState(false);\n  const [rolesAsociados, setRolesAsociados] = useState([]);\n  const [tipoExpAsociados, setTipoExpAsociados] = useState([]);\n  const [getReparto, setReparto] = useState('');\n  const [getIdGrupoTrabajo, setIdGrupoTrabajo] = useState('');\n  const [getIdDependenciaSecretariaComun, setIdDependenciaSecretariaComun] = useState('');\n  const [respuestaGrupoTrabajo, setRespuestaGrupoTrabajo] = useState(false);\n  const [listaGruposTrabajo, setListaGruposTrabajo] = useState({\n    data: {}\n  });\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getListaGruposSeleccionadas, setListaGruposSeleccionadas] = useState([]);\n  const [getErrorGrupos, setErrorGrupos] = useState(\"\");\n\n  // Se captura el id del usuario\n  let {\n    id\n  } = useParams();\n\n  // Metodo encargado de cargar o consumir los servicios\n  useEffect(() => {\n    // Se inicializa el cargando\n    window.showSpinner(true);\n\n    // Se cargan los metodos\n    async function fetchData() {\n      // Se cargan las dependencias\n      getAllDependenciaOrigen();\n    }\n\n    // Se usa la funcion\n    fetchData();\n  }, []);\n\n  // Metodo encargado de cargar las dependencias\n  const getAllDependenciaOrigen = () => {\n    // Se consume la API\n    GenericApi.getByIdGeneric('mas-dependencia-filtrado', global.Constants.ACCESO_DEPENDENCIA.MODIFICAR_USUARIO).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setean los datos\n        setListaDependenciaOrigen(datos);\n\n        // Se setea la variable en true\n        setDependenciaOrigen(true);\n\n        // Se llama el metodo para cargar los usuarios\n        getUserById();\n      } else {\n        // Se setea el mensaje de error\n        setModalState({\n          title: \" Administración :: Usuarios\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  // Metodo encargado de cargar los datos del usuario con el id\n  const getUserById = () => {\n    // Se consume la API\n    GenericApi.getByIdGeneric('usuario', id).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se valida que haya data\n        if (datos[\"data\"] != \"\") {\n          // Se setean los valores\n          setNombre(datos[\"data\"][\"attributes\"][\"nombre\"]);\n          setApeliido(datos[\"data\"][\"attributes\"][\"apellido\"]);\n          setEmail(datos[\"data\"][\"attributes\"][\"email\"]);\n          setUser(datos[\"data\"][\"attributes\"][\"name\"]);\n          setIdDependencia(datos[\"data\"][\"attributes\"][\"id_dependencia\"]);\n          setEstado(datos[\"data\"][\"attributes\"][\"estado\"]);\n          setReparto(datos[\"data\"][\"attributes\"][\"reparto_habilitado\"]);\n\n          // Se valida que haya el id del secretaria comun\n          if (datos[\"data\"][\"attributes\"][\"id_mas_grupo_trabajo_secretaria_comun\"] != null) {\n            // Se setea el id del grupo\n            validarGruposSeleccionados(datos[\"data\"][\"attributes\"][\"id_mas_grupo_trabajo_secretaria_comun\"]);\n          }\n\n          // Se valida que haya el id de los roles\n          if (datos[\"data\"][\"attributes\"][\"ids_roles\"]) {\n            // Se setea el id de los roles\n            datos[\"data\"][\"attributes\"][\"ids_roles\"].split(',').map((rol, i) => {\n              // Se setea cada id\n              setRolesAsociados(oldArray => [...oldArray, rol]);\n            });\n          }\n\n          // Se valida que haya el id de los tipo de expediente\n          if (datos[\"data\"][\"attributes\"][\"ids_tipo_expediente\"]) {\n            // Se setea el id de los tipo de expediente\n            datos[\"data\"][\"attributes\"][\"ids_tipo_expediente\"].map((rol, i) => {\n              // Se setea cada id\n              setTipoExpAsociados(oldArray => [...oldArray, rol]);\n            });\n          }\n\n          // Se cargan los roles\n          getllRoles();\n        } else {\n          // Se setea el mensaje de error\n          setModalState({\n            title: \" Administración :: Usuarios\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/',\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n\n          // Se quita el cargando\n          window.showSpinner(false);\n        }\n      } else {\n        // Se setea el mensaje de error\n        setModalState({\n          title: \" Administración :: Usuarios\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se quita el cargando\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  // Metodo encargado de cargar los roles\n  const getllRoles = () => {\n    // Se consume la API\n    GenericApi.getAllGeneric('role').then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setean los datos\n        setListaRoles(datos);\n\n        // Se setea la variable en true\n        setRespuestaRoles(true);\n\n        // Se cargan los tipos de expediente\n        cargarTiposExpedientes();\n      } else {\n        // Se setea el mensaje de error\n        setModalState({\n          title: \" Administración :: Usuarios\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se quita el cargando\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  // Metodo encargado de cargar los tipos de expediente\n  const cargarTiposExpedientes = () => {\n    // Se consume la API\n    GenericApi.getAllGeneric('mas-tipo-expediente').then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setean los datos\n        setTiposExpedientes(datos);\n\n        // Se setea la variable en true\n        setRespuestaTipoExpediente(true);\n\n        // Se cargan los tipos de derecho peticion\n        cargarTiposDerechoPeticion();\n      } else {\n        // Se setea el mensaje de error\n        setModalState({\n          title: \" Administración :: Usuarios\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se quita el cargando\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  // Metodo encargado de cargar los tipos de derecho peticion \n  const cargarTiposDerechoPeticion = () => {\n    // Se consume la API\n    GenericApi.getAllGeneric('mas-tipo-derecho-peticion').then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setean los datos\n        setListaDerechoPeticion(datos);\n\n        // Se setea la variable en true\n        setRespuestaDerechoPeticion(true);\n\n        // Se cargan los tipos de queja\n        cargarTiposQueja();\n      } else {\n        // Se setea el mensaje de error\n        setModalState({\n          title: \" Administración :: Usuarios\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se quita el cargando\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  // Metodo encargado de cargar los tipos de queja\n  const cargarTiposQueja = () => {\n    // Se consume la API\n    GenericApi.getAllGeneric('mas-tipo-queja').then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setean los datos\n        setListaTiposQueja(datos);\n\n        // Se setea la variable en true\n        setRespuestaTiposQueja(true);\n\n        // Se cargan los terminos de respuesta\n        cargarTerminoRespuesta();\n      } else {\n        // Se setea el mensaje de error\n        setModalState({\n          title: \" Administración :: Usuarios\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se quita el cargando\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  // Metodo encargado de cargar los terminos de respuesta\n  const cargarTerminoRespuesta = () => {\n    // Se consume la API\n    GenericApi.getAllGeneric('mas-termino-respuesta').then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setean los datos\n        setListaTerminosRespuesta(datos);\n\n        // Se setea la variable en true\n        setRespuestaTerminosRespuesta(true);\n\n        // Se cargan los tipos de proceso disciplinario\n        cargarTiposProcesoDisciplinario();\n      } else {\n        // Se setea el mensaje de error\n        setModalState({\n          title: \" Administración :: Usuarios\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se quita el cargando\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  // Se cargan los tipos de procesos disciplinarios\n  const cargarTiposProcesoDisciplinario = () => {\n    // Se consume la API\n    GenericApi.getAllGeneric('mas-tipo-queja').then(\n    // Se inicializa el valor de la API\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setean los datos\n        setListaProcesoDisciplinario(datos);\n\n        // Se setea la variable en true\n        setRespuestaProcesoDisciplinario(true);\n\n        // Se cargan los tipos de proceso disciplinario\n        cargarIdDependenciaSecretariaComun();\n      } else {\n        // Se setea el mensaje de error\n        setModalState({\n          title: \" Administración :: Usuarios\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se quita el cargando\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  // Metodo encargado de cargar el id de la dependecia de secretaria comun\n  const cargarIdDependenciaSecretariaComun = () => {\n    // Se inicializa la data\n    const data = {\n      \"data\": {\n        \"type\": 'mas_parametro',\n        \"attributes\": {\n          \"nombre\": \"id_dependencia_secretaria_comun\"\n        }\n      }\n    };\n\n    // Buscamos el parametro\n    GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\n    // Se inicializa el valor de la API\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setea el ID de la dependencia secretaria comun\n        setIdDependenciaSecretariaComun(datos.data[0].attributes.valor);\n\n        // Se consumen los grupos de trabajo\n        cargarGruposDeTrabajo();\n      } else {\n        // Se setea el mensaje\n        setModalState({\n          title: \" Administración :: Usuarios\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se quita el cargando\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  // Metodo encargado de consumir los grupos de trabajo\n  const cargarGruposDeTrabajo = () => {\n    // Se consume le API\n    GenericApi.getGeneric(\"mas_grupo_trabajo\").then(\n    // Se inicializa la variable de la api\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setea la respuesta en true\n        setRespuestaGrupoTrabajo(true);\n\n        // Se setean los datos\n        setListaGruposTrabajo(datos);\n      } else {\n        // Se setean los mensajes\n        setModalState({\n          title: \" Administración :: Usuarios\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n\n        // Se quita el cargando\n        window.showSpinner(false);\n      }\n\n      // Se quita el cargando\n      window.showSpinner(false);\n    });\n  };\n\n  // Metodo encargado de setear el valor de la lista de grupo seleccionados\n  const selectChangeGrupo = v => {\n    // Se valida que no sea null\n    if (v != null) {\n      // Se setea el valor\n      setListaGruposSeleccionadas(v);\n    } else {\n      // Se setea el mensaje de error\n      setErrorGrupos('Campo requerido');\n    }\n  };\n\n  // Metodo secundaria para cargar los grupos de trabajo\n  const selectGrupoTrabajo = () => {\n    // Se retorna la informacion del select\n    return (\n      // Se valida que tenga informacion\n      listaGruposTrabajo.data.length > 0 && listaGruposTrabajo.data.map((grupoTrabajo, i) => {\n        // Se retorna cada option value\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: grupoTrabajo.id,\n          children: grupoTrabajo.attributes.nombre\n        }, grupoTrabajo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this);\n      })\n    );\n  };\n\n  // Metodo encargado de setear cada valor del check\n  const handleInputChange = event => {\n    // Se inicializan las constantes\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    // Se valida que sea nombre el check\n    if (name == \"nombre\") {\n      // Se setea el valor\n      setNombre(value);\n    }\n\n    // Se valida que sea apellido el check\n    if (name == \"apellido\") {\n      // Se setea el valor\n      setApeliido(value);\n    }\n\n    // Se valida que sea correo el check\n    if (name == \"correo\") {\n      // Se setea el valor\n      setEmail(value);\n    }\n\n    // Se valida que sea dependencia el check\n    if (name == \"dependencia\") {\n      // Se valida que el valor sea diferente de secretaria comun\n      if (value != getIdDependenciaSecretariaComun) {\n        // Se setea la lista vacia\n        setListaGruposSeleccionadas([]);\n      }\n\n      // Se setea el id con el valor\n      setIdDependencia(value);\n    }\n\n    // Se valida que sea estado el check\n    if (name == \"estado\") {\n      // Se setea el valor\n      setEstado(value);\n    }\n\n    // Se valida que sea reparto el check\n    if (name == \"reparto\") {\n      // Se setea el valor\n      setReparto(value);\n    }\n\n    // Se valida que sea grupoTrabajo el check\n    if (name == \"grupoTrabajo\") {\n      // Se setea el valor\n      setIdGrupoTrabajo(value);\n    }\n  };\n\n  // Metodo encargado de cargar cada valor del select de las dependencias\n  const selectDependenciaOrigen = () => {\n    // Se retorna\n    return (\n      // Se recorren la lista\n      listaDependenciaOrigen.data.map((dependencia, i) => {\n        // Se retorna cada select \n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dependencia.id,\n          children: dependencia.attributes.nombre\n        }, dependencia.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 21\n        }, this);\n      })\n    );\n  };\n\n  // Metodo encargado de cargar cada valor del select de los grupos seleccionados\n  const validarGruposSeleccionados = grupos => {\n    // Se separan por comas en la variable\n    let auxGrupoSplit = grupos.split(\",\");\n\n    // Se recorren la lista\n    auxGrupoSplit.forEach(element => {\n      // Se consume la api por elemento\n      GenericApi.getByIdGeneric(\"mas_grupo_trabajo\", element).then(\n      // Se incializa la variable de respuesta\n      datos => {\n        // Se valida que no haya error\n        if (!datos.error) {\n          // Se añade al array de los grupos seleccionados\n          getListaGruposSeleccionadas.push({\n            label: datos.data.attributes.nombre,\n            value: datos.data.id\n          });\n        }\n      });\n    });\n  };\n\n  // Metodo encargado de enviar los valores el backend\n  const enviarDatos = () => {\n    // Se usa el cargando\n    window.showSpinner(true);\n\n    // Se inicializa la variable\n    let data;\n\n    // Se setean los valores en el array\n    data = {\n      \"data\": {\n        \"type\": \"usuario\",\n        \"attributes\": {\n          \"nombre\": getNombre ? getNombre : \"\",\n          \"apellido\": getApellido ? getApellido : \"\",\n          \"name\": getUser ? getUser : \"\",\n          \"email\": getEmail ? getEmail : \"\",\n          \"id_dependencia\": getIdDependencia ? getIdDependencia : \"\",\n          \"roles\": rolesAsociados,\n          \"expedientes\": tipoExpAsociados,\n          \"estado\": getEstado ? getEstado : \"\",\n          \"reparto_habilitado\": getReparto ? getReparto : \"\",\n          \"id_mas_grupo_trabajo_secretaria_comun\": getListaGruposSeleccionadas ? getListaGruposSeleccionadas : \"\"\n        }\n      }\n    };\n\n    // Se ejecuta la API\n    GenericApi.updateGeneric('usuario', id, data).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se quita el cargando\n      window.showSpinner(false);\n\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setean los valores en el modal\n        setModalState({\n          title: \"Usuario :: Actualizar\",\n          message: 'Actualizado con exito',\n          show: true,\n          redirect: '/Usuario',\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        // Se setean los valores en el modal\n        setModalState({\n          title: \"Usuario :: Error de actualización\",\n          message: datos.error.toString(),\n          show: true,\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  // Metodo encargado para checkear los valores por rol\n  const agregarCheck = (e, rolId) => {\n    // Se valida el valor en true\n    if (e == true) {\n      // Se setean los valores\n      setRolesAsociados(oldArray => [...oldArray, rolId]);\n    } else {\n      // Se inicializa la variable\n      var index = rolesAsociados.indexOf(rolId);\n\n      // Se valida que sea diferente de null o vacio\n      if (index != -1) {\n        // Se quita el check\n        rolesAsociados.splice(index, 1);\n      }\n    }\n  };\n\n  // Metodo encargado de checkear el valor de los tipos de expediente\n  const agregarCheckTipoExp = (e, extId, subExpid) => {\n    // Se valida que sea true\n    if (e == true) {\n      // Se setea el valor\n      setTipoExpAsociados(oldArray => [...oldArray, extId + \"|\" + subExpid]);\n    } else {\n      // Se busca el indice\n      var index = tipoExpAsociados.indexOf(extId + \"|\" + subExpid);\n\n      // se valida se encuentre valor\n      if (index != -1) {\n        // Se quita el valor del array\n        tipoExpAsociados.splice(index, 1);\n      }\n    }\n  };\n\n  // Metodo encargado de listar cada rol\n  const listarRoles = () => {\n    // Se retorna\n    return (\n      // Se recorre la lista de roles\n      getListaRoles.data.map((rol, i) => {\n        // Se retorna por posicion\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-control custom-switch custom-control-lg mb-2\",\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: rolesAsociados.length > 0 ? rolesAsociados.indexOf(rol.id.toString()) > -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    defaultChecked: \"true\",\n                    type: \"checkbox\",\n                    onChange: e => agregarCheck(e.target.checked, rol.id),\n                    className: \"custom-control-input\",\n                    id: rol.id,\n                    name: rol.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 703,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: rol.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    onChange: e => agregarCheck(e.target.checked, rol.id),\n                    className: \"custom-control-input\",\n                    id: rol.id,\n                    name: rol.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 708,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: rol.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 709,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    onClick: e => agregarCheck(e.target.checked, rol.id),\n                    className: \"custom-control-input\",\n                    id: rol.id,\n                    name: rol.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 714,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: rol.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 715,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 713,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rol.attributes.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 25\n          }, this)]\n        }, rol.id + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 21\n        }, this);\n      })\n    );\n  };\n\n  // TIPO DE EXPEDIENTE = DERECHO DE PETICION\n  const componenteTipoExpedienteDerecho = () => {\n    // Se retorna\n    return (\n      // Se recorre la lista de derechos de peticion\n      listaTipoDerechoPeticion.data.map((derecho, i) => {\n        // Se retorna por posicion\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-control custom-switch custom-control-lg mb-2\",\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: tipoExpAsociados.indexOf(('1|' + derecho.id).toString()) > -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    defaultChecked: true,\n                    type: \"checkbox\",\n                    onChange: e => agregarCheckTipoExp(e.target.checked, '1', derecho.id),\n                    className: \"custom-control-input\",\n                    id: 'derecho' + derecho.id,\n                    name: 'derecho' + derecho.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: 'derecho' + derecho.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 749,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    onChange: e => agregarCheckTipoExp(e.target.checked, '1', derecho.id),\n                    className: \"custom-control-input\",\n                    id: 'derecho' + derecho.id,\n                    name: 'derecho' + derecho.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 752,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: 'derecho' + derecho.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: derecho.attributes.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 25\n          }, this)]\n        }, derecho.id + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 21\n        }, this);\n      })\n    );\n  };\n\n  // Metodo encargado de cargar los tipos de expediente asociados\n  const listarTiposExpedientesAsociados = () => {\n    // Se retorna\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children:\n        // Se recorre el array\n        getTiposExpedientes.data.map((tipoExp, i) => {\n          // Se retorna por posicion\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"accordion\",\n            role: \"tablist\",\n            \"aria-multiselectable\": \"true\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"block block-rounded mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"block-header block-header-default\",\n                role: \"tab\",\n                id: \"accordion_h1\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  class: \"font-w600\",\n                  \"data-toggle\": \"collapse\",\n                  \"data-parent\": \"#accordion\",\n                  href: \"#accordion_q1\",\n                  \"aria-expanded\": \"true\",\n                  \"aria-controls\": \"accordion_q1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fas fa-folder\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 784,\n                    columnNumber: 185\n                  }, this), \" \", tipoExp.attributes.nombre, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"accordion_q1\",\n                class: \"show\",\n                role: \"tabpanel\",\n                \"aria-labelledby\": \"accordion_h1\",\n                \"data-parent\": \"#accordion\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-content\",\n                  children: [tipoExp.id === '1' && respuestaTipoDerechoPeticion ? componenteTipoExpedienteDerecho() : '', tipoExp.id === '2' && respuestaTiposQueja ? componenteTipoExpedienteReferente() : '', tipoExp.id === '3' && respuestaTiposQueja ? componenteTipoExpedienteQueja() : '', tipoExp.id === '4' && respuestaTerminosRespuesta ? componenteTipoExpedienteTutela() : '', tipoExp.id === '5' && respuestaProcesoDisciplinario ? componenteTipoExpedienteProcesoDisciplinario() : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 37\n            }, this)\n          }, tipoExp.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 13\n    }, this);\n  };\n\n  // TIPO DE EXPEDIENTE = REFERENTE\n  const componenteTipoExpedienteReferente = () => {\n    // Se retorna\n    return (\n      // Se recorre el array\n      listaTiposQueja.data.map((quejaDef, i) => {\n        // Se retorna por posicion\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-control custom-switch custom-control-lg mb-2\",\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: tipoExpAsociados.indexOf(('2|' + quejaDef.id).toString()) > -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    defaultChecked: true,\n                    type: \"checkbox\",\n                    onChange: e => agregarCheckTipoExp(e.target.checked, '2', quejaDef.id),\n                    className: \"custom-control-input\",\n                    id: 'quejaDef' + quejaDef.id,\n                    name: 'quejaDef' + quejaDef.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 830,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: 'quejaDef' + quejaDef.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 831,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 829,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    onChange: e => agregarCheckTipoExp(e.target.checked, '2', quejaDef.id),\n                    className: \"custom-control-input\",\n                    id: 'quejaDef' + quejaDef.id,\n                    name: 'quejaDef' + quejaDef.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 834,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: 'quejaDef' + quejaDef.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 835,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 833,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: quejaDef.attributes.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 25\n          }, this)]\n        }, quejaDef.id + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 21\n        }, this);\n      })\n    );\n  };\n\n  // TIPO DE EXPEDIENTE = QUEJA\n  const componenteTipoExpedienteQueja = () => {\n    // Se retorna\n    return (\n      // Se recorre el array\n      listaTiposQueja.data.map((queja, i) => {\n        // Se retorna por posicion\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-control custom-switch custom-control-lg mb-2\",\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: tipoExpAsociados.indexOf(('3|' + queja.id).toString()) > -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    defaultChecked: true,\n                    type: \"checkbox\",\n                    onChange: e => agregarCheckTipoExp(e.target.checked, '3', queja.id),\n                    className: \"custom-control-input\",\n                    id: 'queja' + queja.id,\n                    name: 'queja' + queja.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 868,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: 'queja' + queja.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 869,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 867,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    onChange: e => agregarCheckTipoExp(e.target.checked, '3', queja.id),\n                    className: \"custom-control-input\",\n                    id: 'queja' + queja.id,\n                    name: 'queja' + queja.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 873,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: 'queja' + queja.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 874,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 872,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: queja.attributes.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 25\n          }, this)]\n        }, queja.id + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 21\n        }, this);\n      })\n    );\n  };\n\n  // TIPO DE EXPEDIENTE = TUTELA\n  const componenteTipoExpedienteTutela = () => {\n    // Se retorna\n    return (\n      // Se recorre el array\n      listaTerminosRespuesta.data.map((termino, i) => {\n        // Se retorna por posicion\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-control custom-switch custom-control-lg mb-2\",\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: tipoExpAsociados.indexOf(('4|' + termino.id).toString()) > -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    defaultChecked: true,\n                    type: \"checkbox\",\n                    onChange: e => agregarCheckTipoExp(e.target.checked, '4', termino.id),\n                    className: \"custom-control-input\",\n                    id: 'termino' + termino.id,\n                    name: 'termino' + termino.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 908,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: 'termino' + termino.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 909,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    onChange: e => agregarCheckTipoExp(e.target.checked, '4', termino.id),\n                    className: \"custom-control-input\",\n                    id: 'termino' + termino.id,\n                    name: 'termino' + termino.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 914,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: 'termino' + termino.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 915,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 913,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: termino.attributes.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 25\n          }, this)]\n        }, termino.id + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 21\n        }, this);\n      })\n    );\n  };\n\n  // TIPO DE EXPEDIENTE = PROCESO_DISCIPLINARIO\n  const componenteTipoExpedienteProcesoDisciplinario = () => {\n    // Se retorna\n    return (\n      // Se recorre el array\n      listaTipoProcesoDisciplinario.data.map((proceso, i) => {\n        // Se retorna por posicion\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-control custom-switch custom-control-lg mb-2\",\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: tipoExpAsociados.indexOf(('5|' + proceso.id).toString()) > -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    defaultChecked: true,\n                    type: \"checkbox\",\n                    onChange: e => agregarCheckTipoExp(e.target.checked, '5', proceso.id),\n                    className: \"custom-control-input\",\n                    id: 'proceso' + proceso.id,\n                    name: 'proceso' + proceso.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 949,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: 'proceso' + proceso.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 950,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 948,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    onChange: e => agregarCheckTipoExp(e.target.checked, '5', proceso.id),\n                    className: \"custom-control-input\",\n                    id: 'proceso' + proceso.id,\n                    name: 'termino' + proceso.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 955,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"custom-control-label\",\n                    htmlFor: 'proceso' + proceso.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 956,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 954,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 943,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: proceso.attributes.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 25\n          }, this)]\n        }, proceso.id + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 21\n        }, this);\n      })\n    );\n  };\n\n  // Metodo encargado de cargar el formulario general\n  const componentFormularioUsuario = () => {\n    // Se retorna\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          nombre: '',\n          apellido: '',\n          correo: '',\n          dependencia: '',\n          roles: '',\n          tipoExpediente: '',\n          estado: '',\n          reparto: ''\n        },\n        enableReinitialize: true,\n        validate: valores => {\n          let errores = {};\n          if (!getNombre) {\n            errores.nombre = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          if (!getApellido) {\n            errores.apellido = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          if (!getEmail) {\n            errores.correo = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          if (!getIdDependencia) {\n            errores.dependencia = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          if (rolesAsociados.length == 0) {\n            errores.roles = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n\n          /*if (tipoExpAsociados.length == 0) {\r\n                errores.tipoExpediente = \"Debe seleccionar al menos un expediente\";\r\n          }*/\n\n          if (getEstado == '') {\n            errores.estado = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          if (!getReparto) {\n            errores.reparto = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\n          }\n          return errores;\n        },\n        onSubmit: (valores, _ref) => {\n          let {\n            resetForm\n          } = _ref;\n          enviarDatos();\n        },\n        children: _ref2 => {\n          var _listaGruposTrabajo$d;\n          let {\n            errors\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block block-themed\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-header\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"block-title\",\n                    children: \"DATOS B\\xC1SICOS\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1044,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-content\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-6\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"nombre\",\n                          children: [\"NOMBRES \", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: \"*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1052,\n                            columnNumber: 85\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1052,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Field, {\n                          value: getNombre,\n                          type: \"text\",\n                          id: \"nombre\",\n                          name: \"nombre\",\n                          className: \"form-control\",\n                          onChange: handleInputChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1053,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          name: \"nombre\",\n                          component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: errors.nombre\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1054,\n                            columnNumber: 99\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1054,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1051,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1050,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-6\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"apellido\",\n                          children: [\"APELLIDOS \", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: \"*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1060,\n                            columnNumber: 89\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1060,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Field, {\n                          value: getApellido,\n                          type: \"text\",\n                          id: \"apellido\",\n                          name: \"apellido\",\n                          className: \"form-control\",\n                          placeholder: \"Apellido\",\n                          onChange: handleInputChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1061,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          name: \"apellido\",\n                          component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: errors.apellido\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1063,\n                            columnNumber: 101\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1063,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1059,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1058,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-6\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"user\",\n                          children: [\"USUARIO \", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: \"*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1068,\n                            columnNumber: 83\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1068,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Field, {\n                          value: getUser,\n                          type: \"text\",\n                          id: \"user\",\n                          name: \"user\",\n                          className: \"form-control\",\n                          placeholder: \"Usuario\",\n                          disabled: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1069,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1067,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1066,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-6\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"correo\",\n                          children: [\"CORREO \", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: \"*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1075,\n                            columnNumber: 84\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1075,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Field, {\n                          disabled: true,\n                          value: getEmail,\n                          type: \"text\",\n                          id: \"correo\",\n                          name: \"correo\",\n                          onChange: handleInputChange,\n                          className: \"form-control\",\n                          placeholder: \"Correo\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1076,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          name: \"correo\",\n                          component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: errors.correo\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1078,\n                            columnNumber: 99\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1078,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1074,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1073,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"dependencia\",\n                          children: [\"DEPENDENCIA \", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: \"*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1083,\n                            columnNumber: 94\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1083,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Field, {\n                          as: \"select\",\n                          value: getIdDependencia,\n                          onChange: handleInputChange,\n                          className: \"form-control\",\n                          id: \"dependencia\",\n                          name: \"dependencia\",\n                          placeholder: \"Dependencia\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1085,\n                            columnNumber: 57\n                          }, this), respuestaDependenciaOrigen ? selectDependenciaOrigen() : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1084,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          name: \"dependencia\",\n                          component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: errors.dependencia\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1088,\n                            columnNumber: 104\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1088,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1082,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1081,\n                      columnNumber: 45\n                    }, this), getIdDependencia == getIdDependenciaSecretariaComun ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-4\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"dependencgrupoTrabajoia\",\n                          children: [\"GRUPO DE TRABAJO \", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: \"*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1095,\n                            columnNumber: 119\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1095,\n                          columnNumber: 61\n                        }, this), respuestaGrupoTrabajo && listaGruposTrabajo.data.length > 0 ? /*#__PURE__*/_jsxDEV(Select, {\n                          id: \"grupoTrabajo\",\n                          name: \"grupoTrabajo\",\n                          isMulti: true,\n                          value: getListaGruposSeleccionadas,\n                          placeholder: \"Selecciona\",\n                          noOptionsMessage: () => \"Sin datos\",\n                          options: listaGruposTrabajo === null || listaGruposTrabajo === void 0 ? void 0 : (_listaGruposTrabajo$d = listaGruposTrabajo.data) === null || _listaGruposTrabajo$d === void 0 ? void 0 : _listaGruposTrabajo$d.map(e => ({\n                            label: e.attributes.nombre,\n                            value: e.id\n                          })),\n                          onChange: e => selectChangeGrupo(e)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1097,\n                          columnNumber: 65\n                        }, this) : null, /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          name: \"grupoTrabajo\",\n                          component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: [errors.grupoTrabajo, \" \", getErrorGrupos]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1109,\n                            columnNumber: 113\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1109,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1094,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1093,\n                      columnNumber: 53\n                    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"estado\",\n                          children: [\"ESTADO \", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: \"*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1118,\n                            columnNumber: 84\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1118,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Field, {\n                          as: \"select\",\n                          value: getEstado,\n                          onChange: handleInputChange,\n                          className: \"form-control\",\n                          id: \"estado\",\n                          name: \"estado\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1120,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"1\",\n                            children: \"ACTIVO\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1121,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"0\",\n                            children: \"INACTIVO\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1122,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1119,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          name: \"estado\",\n                          component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: errors.estado\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1124,\n                            columnNumber: 99\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1124,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1117,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1116,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"reparto\",\n                          children: [\"HABILITADO PARA REPARTO\", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: \"*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1129,\n                            columnNumber: 101\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1129,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Field, {\n                          as: \"select\",\n                          value: getReparto,\n                          onChange: handleInputChange,\n                          className: \"form-control\",\n                          id: \"reparto\",\n                          name: \"reparto\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1131,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"1\",\n                            children: \"SI\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1132,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"0\",\n                            children: \"NO\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1133,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1130,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                          name: \"reparto\",\n                          component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-danger\",\n                            children: errors.reparto\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1135,\n                            columnNumber: 100\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1135,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1128,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1127,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1048,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1047,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block block-themed\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-header\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"block-title\",\n                    children: \"ASIGNACI\\xD3N DE ROLES\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1145,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1144,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-content\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-12\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [\"Debe seleccionar al menos un perfil\", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1150,\n                          columnNumber: 92\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1150,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"roles\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: errors.roles\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1151,\n                          columnNumber: 94\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1151,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1149,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-12\",\n                      children: /*#__PURE__*/_jsxDEV(\"table\", {\n                        className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                              style: {\n                                width: \"50px\"\n                              },\n                              children: \"SELECCIONAR\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1157,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: \"NOMBRE DE ROL\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1158,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1156,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1155,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                          children: getRespuestaRoles ? listarRoles() : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1161,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1154,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1153,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1148,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1147,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1143,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block block-themed\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-header\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"block-title\",\n                    children: \"TIPOS DE EXPEDIENTES QUE EL USUARIO PUEDE GESTIONAR\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1173,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1172,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-12\",\n                      children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"tipoExpediente\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: errors.tipoExpediente\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1178,\n                          columnNumber: 103\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1178,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1177,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-12\",\n                      children: getRespuestaTipoExpediente ? listarTiposExpedientesAsociados() : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1180,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1176,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"block-content block-content-full text-right bg-light\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-rounded btn-primary\",\n                      children: [\" \", global.Constants.BOTON_NOMBRE.ACTUALIZAR, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1185,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1184,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1175,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1171,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1170,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1039,\n            columnNumber: 25\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  // Metodo encargado de general form\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w2d_block\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb breadcrumb-alt push\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"hover\",\n              className: \"text-dark\",\n              to: `/Usuario`,\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Lista de usuarios\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1205,\n                columnNumber: 116\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1205,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"breadcrumb-item\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \" Actualizar usuario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1204,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: componentFormularioUsuario()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n// Se exporta la clase\n_s(UsuarioDetalle, \"hamNmd7N/GnJGeksCTKCc2Py5Yo=\", false, function () {\n  return [useParams];\n});\n_c = UsuarioDetalle;\nexport default UsuarioDetalle;\nvar _c;\n$RefreshReg$(_c, \"UsuarioDetalle\");","map":{"version":3,"names":["React","useEffect","useState","Spinner","ErrorMessage","Field","Form","Formik","useParams","Link","InfoErrorApi","InfoExitoApi","GenericApi","ModalGen","Navigate","Select","UsuarioDetalle","errorApi","setErrorApi","getNombre","setNombre","getApellido","setApeliido","getUser","setUser","getEmail","setEmail","getIdDependencia","setIdDependencia","getEstado","setEstado","listaTipoDerechoPeticion","setListaDerechoPeticion","data","respuestaTipoDerechoPeticion","setRespuestaDerechoPeticion","listaTipoProcesoDisciplinario","setListaProcesoDisciplinario","respuestaProcesoDisciplinario","setRespuestaProcesoDisciplinario","listaTiposQueja","setListaTiposQueja","respuestaTiposQueja","setRespuestaTiposQueja","listaTerminosRespuesta","setListaTerminosRespuesta","respuestaTerminosRespuesta","setRespuestaTerminosRespuesta","isRedirect","setIsRedirect","listaDependenciaOrigen","setListaDependenciaOrigen","respuestaDependenciaOrigen","setDependenciaOrigen","getListaRoles","setListaRoles","getRespuestaTipoExpediente","setRespuestaTipoExpediente","getTiposExpedientes","setTiposExpedientes","getRespuestaRoles","setRespuestaRoles","rolesAsociados","setRolesAsociados","tipoExpAsociados","setTipoExpAsociados","getReparto","setReparto","getIdGrupoTrabajo","setIdGrupoTrabajo","getIdDependenciaSecretariaComun","setIdDependenciaSecretariaComun","respuestaGrupoTrabajo","setRespuestaGrupoTrabajo","listaGruposTrabajo","setListaGruposTrabajo","getModalState","setModalState","title","message","show","getListaGruposSeleccionadas","setListaGruposSeleccionadas","getErrorGrupos","setErrorGrupos","id","window","showSpinner","fetchData","getAllDependenciaOrigen","getByIdGeneric","global","Constants","ACCESO_DEPENDENCIA","MODIFICAR_USUARIO","then","datos","error","getUserById","toString","redirect","alert","TIPO_ALERTA","ERROR","validarGruposSeleccionados","split","map","rol","i","oldArray","getllRoles","getAllGeneric","cargarTiposExpedientes","cargarTiposDerechoPeticion","cargarTiposQueja","cargarTerminoRespuesta","cargarTiposProcesoDisciplinario","cargarIdDependenciaSecretariaComun","getByDataGeneric","attributes","valor","cargarGruposDeTrabajo","getGeneric","selectChangeGrupo","v","selectGrupoTrabajo","length","grupoTrabajo","nombre","handleInputChange","event","target","value","type","checked","name","selectDependenciaOrigen","dependencia","grupos","auxGrupoSplit","forEach","element","push","label","enviarDatos","updateGeneric","EXITO","agregarCheck","e","rolId","index","indexOf","splice","agregarCheckTipoExp","extId","subExpid","listarRoles","componenteTipoExpedienteDerecho","derecho","listarTiposExpedientesAsociados","tipoExp","componenteTipoExpedienteReferente","componenteTipoExpedienteQueja","componenteTipoExpedienteTutela","componenteTipoExpedienteProcesoDisciplinario","quejaDef","queja","termino","proceso","componentFormularioUsuario","apellido","correo","roles","tipoExpediente","estado","reparto","valores","errores","MENSAJE_ERROR","CAMPO_OBLIGATORIO","resetForm","errors","MENSAJE_INFORMATIVO","SELECCIONE_UNA_OPCION","width","BOTON_NOMBRE","ACTUALIZAR"],"sources":["C:/w2d/personeria/personeria-ui/src/components/Maestras/UsuarioDetalle.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport 'rhfa-emergency-styles/dist/styles.css'\r\nimport Spinner from '../Utils/Spinner';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useParams } from \"react-router\";\r\nimport { Link, } from \"react-router-dom\";\r\nimport InfoErrorApi from '../Utils/InfoErrorApi';\r\nimport InfoExitoApi from '../Utils/InfoExitoApi';\r\nimport GenericApi from '../Api/Services/GenericApi';\r\nimport ModalGen from '../Utils/Modals/ModalGeneric';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport '../Utils/Constants';\r\nimport Select from 'react-select';\r\n\r\nfunction UsuarioDetalle() {\r\n\r\n    // Variables de la clase\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getNombre, setNombre] = useState('');\r\n    const [getApellido, setApeliido] = useState('');\r\n    const [getUser, setUser] = useState('');\r\n    const [getEmail, setEmail] = useState('');\r\n    const [getIdDependencia, setIdDependencia] = useState('');\r\n    const [getEstado, setEstado] = useState('');\r\n\r\n    const [listaTipoDerechoPeticion, setListaDerechoPeticion] = useState({ data: {} });\r\n    const [respuestaTipoDerechoPeticion, setRespuestaDerechoPeticion] = useState(false);\r\n\r\n    const [listaTipoProcesoDisciplinario, setListaProcesoDisciplinario] = useState({ data: {} });\r\n    const [respuestaProcesoDisciplinario, setRespuestaProcesoDisciplinario] = useState(false);\r\n\r\n    const [listaTiposQueja, setListaTiposQueja] = useState({ data: {} });\r\n    const [respuestaTiposQueja, setRespuestaTiposQueja] = useState(false);\r\n\r\n    const [listaTerminosRespuesta, setListaTerminosRespuesta] = useState({ data: {} });\r\n    const [respuestaTerminosRespuesta, setRespuestaTerminosRespuesta] = useState(false);\r\n\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n    const [listaDependenciaOrigen, setListaDependenciaOrigen] = useState({ data: {} });\r\n    const [respuestaDependenciaOrigen, setDependenciaOrigen] = useState(false);\r\n    const [getListaRoles, setListaRoles] = useState({ data: {} });\r\n    const [getRespuestaTipoExpediente, setRespuestaTipoExpediente] = useState(false);\r\n    const [getTiposExpedientes, setTiposExpedientes] = useState({ data: {} });\r\n    const [getRespuestaRoles, setRespuestaRoles] = useState(false);\r\n    const [rolesAsociados, setRolesAsociados] = useState([]);\r\n    const [tipoExpAsociados, setTipoExpAsociados] = useState([]);\r\n    const [getReparto, setReparto] = useState('');\r\n    const [getIdGrupoTrabajo, setIdGrupoTrabajo] = useState('');\r\n    const [getIdDependenciaSecretariaComun, setIdDependenciaSecretariaComun] = useState('');\r\n    const [respuestaGrupoTrabajo, setRespuestaGrupoTrabajo] = useState(false);\r\n    const [listaGruposTrabajo, setListaGruposTrabajo] = useState({ data: {} });\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaGruposSeleccionadas, setListaGruposSeleccionadas] = useState([]);\r\n    const [getErrorGrupos, setErrorGrupos] = useState(\"\");\r\n\r\n    // Se captura el id del usuario\r\n    let { id } = useParams();\r\n\r\n    // Metodo encargado de cargar o consumir los servicios\r\n    useEffect(() => {\r\n\r\n        // Se inicializa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se cargan los metodos\r\n        async function fetchData() {\r\n\r\n            // Se cargan las dependencias\r\n            getAllDependenciaOrigen();\r\n        }\r\n\r\n        // Se usa la funcion\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Metodo encargado de cargar las dependencias\r\n    const getAllDependenciaOrigen = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getByIdGeneric('mas-dependencia-filtrado', global.Constants.ACCESO_DEPENDENCIA.MODIFICAR_USUARIO).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los datos\r\n                    setListaDependenciaOrigen(datos);\r\n\r\n                    // Se setea la variable en true\r\n                    setDependenciaOrigen(true);\r\n\r\n                    // Se llama el metodo para cargar los usuarios\r\n                    getUserById();\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \" Administración :: Usuarios\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    // Metodo encargado de cargar los datos del usuario con el id\r\n    const getUserById = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getByIdGeneric('usuario', id).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se valida que haya data\r\n                    if (datos[\"data\"] != \"\") {\r\n\r\n                        // Se setean los valores\r\n                        setNombre(datos[\"data\"][\"attributes\"][\"nombre\"]);\r\n                        setApeliido(datos[\"data\"][\"attributes\"][\"apellido\"]);\r\n                        setEmail(datos[\"data\"][\"attributes\"][\"email\"]);\r\n                        setUser(datos[\"data\"][\"attributes\"][\"name\"]);\r\n                        setIdDependencia(datos[\"data\"][\"attributes\"][\"id_dependencia\"]);\r\n                        setEstado(datos[\"data\"][\"attributes\"][\"estado\"]);\r\n                        setReparto(datos[\"data\"][\"attributes\"][\"reparto_habilitado\"]);\r\n\r\n                        // Se valida que haya el id del secretaria comun\r\n                        if (datos[\"data\"][\"attributes\"][\"id_mas_grupo_trabajo_secretaria_comun\"] != null) {\r\n\r\n                            // Se setea el id del grupo\r\n                            validarGruposSeleccionados(datos[\"data\"][\"attributes\"][\"id_mas_grupo_trabajo_secretaria_comun\"]);\r\n                        }\r\n\r\n                        // Se valida que haya el id de los roles\r\n                        if (datos[\"data\"][\"attributes\"][\"ids_roles\"]) {\r\n\r\n                            // Se setea el id de los roles\r\n                            datos[\"data\"][\"attributes\"][\"ids_roles\"].split(',').map((rol, i) => {\r\n\r\n                                // Se setea cada id\r\n                                setRolesAsociados(oldArray => [...oldArray, rol]);\r\n                            });\r\n\r\n                        }\r\n\r\n                        // Se valida que haya el id de los tipo de expediente\r\n                        if (datos[\"data\"][\"attributes\"][\"ids_tipo_expediente\"]) {\r\n\r\n                            // Se setea el id de los tipo de expediente\r\n                            datos[\"data\"][\"attributes\"][\"ids_tipo_expediente\"].map((rol, i) => {\r\n\r\n                                // Se setea cada id\r\n                                setTipoExpAsociados(oldArray => [...oldArray, rol]);\r\n                            });\r\n\r\n                        }\r\n\r\n                        // Se cargan los roles\r\n                        getllRoles();\r\n\r\n                    } else {\r\n\r\n                        // Se setea el mensaje de error\r\n                        setModalState({ title: \" Administración :: Usuarios\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                        // Se quita el cargando\r\n                        window.showSpinner(false);\r\n                    }\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \" Administración :: Usuarios\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los roles\r\n    const getllRoles = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric('role').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los datos\r\n                    setListaRoles(datos);\r\n\r\n                    // Se setea la variable en true\r\n                    setRespuestaRoles(true);\r\n\r\n                    // Se cargan los tipos de expediente\r\n                    cargarTiposExpedientes();\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \" Administración :: Usuarios\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los tipos de expediente\r\n    const cargarTiposExpedientes = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric('mas-tipo-expediente').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los datos\r\n                    setTiposExpedientes(datos);\r\n\r\n                    // Se setea la variable en true\r\n                    setRespuestaTipoExpediente(true);\r\n\r\n                    // Se cargan los tipos de derecho peticion\r\n                    cargarTiposDerechoPeticion();\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \" Administración :: Usuarios\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los tipos de derecho peticion \r\n    const cargarTiposDerechoPeticion = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric('mas-tipo-derecho-peticion').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los datos\r\n                    setListaDerechoPeticion(datos);\r\n\r\n                    // Se setea la variable en true\r\n                    setRespuestaDerechoPeticion(true);\r\n\r\n                    // Se cargan los tipos de queja\r\n                    cargarTiposQueja();\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \" Administración :: Usuarios\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los tipos de queja\r\n    const cargarTiposQueja = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric('mas-tipo-queja').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los datos\r\n                    setListaTiposQueja(datos);\r\n\r\n                    // Se setea la variable en true\r\n                    setRespuestaTiposQueja(true);\r\n\r\n                    // Se cargan los terminos de respuesta\r\n                    cargarTerminoRespuesta();\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \" Administración :: Usuarios\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los terminos de respuesta\r\n    const cargarTerminoRespuesta = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric('mas-termino-respuesta').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los datos\r\n                    setListaTerminosRespuesta(datos);\r\n\r\n                    // Se setea la variable en true\r\n                    setRespuestaTerminosRespuesta(true);\r\n\r\n                    // Se cargan los tipos de proceso disciplinario\r\n                    cargarTiposProcesoDisciplinario();\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \" Administración :: Usuarios\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Se cargan los tipos de procesos disciplinarios\r\n    const cargarTiposProcesoDisciplinario = () => {\r\n\r\n        // Se consume la API\r\n        GenericApi.getAllGeneric('mas-tipo-queja').then(\r\n\r\n            // Se inicializa el valor de la API\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los datos\r\n                    setListaProcesoDisciplinario(datos);\r\n\r\n                    // Se setea la variable en true\r\n                    setRespuestaProcesoDisciplinario(true);\r\n\r\n                    // Se cargan los tipos de proceso disciplinario\r\n                    cargarIdDependenciaSecretariaComun();\r\n                } else {\r\n\r\n                    // Se setea el mensaje de error\r\n                    setModalState({ title: \" Administración :: Usuarios\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar el id de la dependecia de secretaria comun\r\n    const cargarIdDependenciaSecretariaComun = () => {\r\n\r\n        // Se inicializa la data\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'mas_parametro',\r\n                \"attributes\": {\r\n                    \"nombre\": \"id_dependencia_secretaria_comun\"\r\n                }\r\n            }\r\n        }\r\n\r\n        // Buscamos el parametro\r\n        GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n\r\n            // Se inicializa el valor de la API\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea el ID de la dependencia secretaria comun\r\n                    setIdDependenciaSecretariaComun(datos.data[0].attributes.valor);\r\n\r\n                    // Se consumen los grupos de trabajo\r\n                    cargarGruposDeTrabajo();\r\n                } else {\r\n\r\n                    // Se setea el mensaje\r\n                    setModalState({ title: \" Administración :: Usuarios\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    // Metodo encargado de consumir los grupos de trabajo\r\n    const cargarGruposDeTrabajo = () => {\r\n\r\n        // Se consume le API\r\n        GenericApi.getGeneric(\"mas_grupo_trabajo\").then(\r\n\r\n            // Se inicializa la variable de la api\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea la respuesta en true\r\n                    setRespuestaGrupoTrabajo(true);\r\n\r\n                    // Se setean los datos\r\n                    setListaGruposTrabajo(datos);\r\n                } else {\r\n\r\n                    // Se setean los mensajes\r\n                    setModalState({ title: \" Administración :: Usuarios\", message: datos.error.toString(), show: true, redirect: '/', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n                    // Se quita el cargando\r\n                    window.showSpinner(false);\r\n                }\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de setear el valor de la lista de grupo seleccionados\r\n    const selectChangeGrupo = (v) => {\r\n\r\n        // Se valida que no sea null\r\n        if (v != null) {\r\n\r\n            // Se setea el valor\r\n            setListaGruposSeleccionadas(v);\r\n        } else {\r\n\r\n            // Se setea el mensaje de error\r\n            setErrorGrupos('Campo requerido');\r\n        }\r\n    }\r\n\r\n    // Metodo secundaria para cargar los grupos de trabajo\r\n    const selectGrupoTrabajo = () => {\r\n\r\n        // Se retorna la informacion del select\r\n        return (\r\n\r\n            // Se valida que tenga informacion\r\n            listaGruposTrabajo.data.length > 0 && listaGruposTrabajo.data.map((grupoTrabajo, i) => {\r\n\r\n                // Se retorna cada option value\r\n                return (\r\n                    <option key={grupoTrabajo.id} value={grupoTrabajo.id}>{grupoTrabajo.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de setear cada valor del check\r\n    const handleInputChange = (event) => {\r\n\r\n        // Se inicializan las constantes\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        // Se valida que sea nombre el check\r\n        if (name == \"nombre\") {\r\n\r\n            // Se setea el valor\r\n            setNombre(value);\r\n        }\r\n\r\n        // Se valida que sea apellido el check\r\n        if (name == \"apellido\") {\r\n\r\n            // Se setea el valor\r\n            setApeliido(value);\r\n        }\r\n\r\n        // Se valida que sea correo el check\r\n        if (name == \"correo\") {\r\n\r\n            // Se setea el valor\r\n            setEmail(value);\r\n        }\r\n\r\n        // Se valida que sea dependencia el check\r\n        if (name == \"dependencia\") {\r\n\r\n            // Se valida que el valor sea diferente de secretaria comun\r\n            if (value != getIdDependenciaSecretariaComun) {\r\n\r\n                // Se setea la lista vacia\r\n                setListaGruposSeleccionadas([]);\r\n            }\r\n\r\n            // Se setea el id con el valor\r\n            setIdDependencia(value);\r\n        }\r\n\r\n        // Se valida que sea estado el check\r\n        if (name == \"estado\") {\r\n\r\n            // Se setea el valor\r\n            setEstado(value);\r\n        }\r\n\r\n        // Se valida que sea reparto el check\r\n        if (name == \"reparto\") {\r\n\r\n            // Se setea el valor\r\n            setReparto(value);\r\n        }\r\n\r\n        // Se valida que sea grupoTrabajo el check\r\n        if (name == \"grupoTrabajo\") {\r\n\r\n            // Se setea el valor\r\n            setIdGrupoTrabajo(value);\r\n        }\r\n\r\n    }\r\n\r\n    // Metodo encargado de cargar cada valor del select de las dependencias\r\n    const selectDependenciaOrigen = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorren la lista\r\n            listaDependenciaOrigen.data.map((dependencia, i) => {\r\n\r\n                // Se retorna cada select \r\n                return (\r\n                    <option key={dependencia.id} value={dependencia.id}>{dependencia.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar cada valor del select de los grupos seleccionados\r\n    const validarGruposSeleccionados = (grupos) => {\r\n\r\n        // Se separan por comas en la variable\r\n        let auxGrupoSplit = grupos.split(\",\");\r\n\r\n        // Se recorren la lista\r\n        auxGrupoSplit.forEach(element => {\r\n\r\n            // Se consume la api por elemento\r\n            GenericApi.getByIdGeneric(\"mas_grupo_trabajo\", element).then(\r\n\r\n                // Se incializa la variable de respuesta\r\n                datos => {\r\n\r\n                    // Se valida que no haya error\r\n                    if (!datos.error) {\r\n\r\n                        // Se añade al array de los grupos seleccionados\r\n                        getListaGruposSeleccionadas.push({ label: datos.data.attributes.nombre, value: datos.data.id });\r\n                    }\r\n                }\r\n            )\r\n        });\r\n    }\r\n\r\n    // Metodo encargado de enviar los valores el backend\r\n    const enviarDatos = () => {\r\n\r\n        // Se usa el cargando\r\n        window.showSpinner(true);\r\n\r\n        // Se inicializa la variable\r\n        let data;\r\n\r\n        // Se setean los valores en el array\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"usuario\",\r\n                \"attributes\": {\r\n                    \"nombre\": getNombre ? getNombre : \"\",\r\n                    \"apellido\": getApellido ? getApellido : \"\",\r\n                    \"name\": getUser ? getUser : \"\",\r\n                    \"email\": getEmail ? getEmail : \"\",\r\n                    \"id_dependencia\": getIdDependencia ? getIdDependencia : \"\",\r\n                    \"roles\": rolesAsociados,\r\n                    \"expedientes\": tipoExpAsociados,\r\n                    \"estado\": getEstado ? getEstado : \"\",\r\n                    \"reparto_habilitado\": getReparto ? getReparto : \"\",\r\n                    \"id_mas_grupo_trabajo_secretaria_comun\": getListaGruposSeleccionadas ? getListaGruposSeleccionadas : \"\",\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se ejecuta la API\r\n        GenericApi.updateGeneric('usuario', id, data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se quita el cargando\r\n                window.showSpinner(false);\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setean los valores en el modal\r\n                    setModalState({ title: \"Usuario :: Actualizar\", message: 'Actualizado con exito', show: true, redirect: '/Usuario', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                } else {\r\n\r\n                    // Se setean los valores en el modal\r\n                    setModalState({ title: \"Usuario :: Error de actualización\", message: datos.error.toString(), show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado para checkear los valores por rol\r\n    const agregarCheck = (e, rolId) => {\r\n\r\n        // Se valida el valor en true\r\n        if (e == true) {\r\n\r\n            // Se setean los valores\r\n            setRolesAsociados(oldArray => [...oldArray, rolId]);\r\n        } else {\r\n\r\n            // Se inicializa la variable\r\n            var index = rolesAsociados.indexOf(rolId);\r\n\r\n            // Se valida que sea diferente de null o vacio\r\n            if (index != -1) {\r\n\r\n                // Se quita el check\r\n                rolesAsociados.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de checkear el valor de los tipos de expediente\r\n    const agregarCheckTipoExp = (e, extId, subExpid) => {\r\n\r\n        // Se valida que sea true\r\n        if (e == true) {\r\n\r\n            // Se setea el valor\r\n            setTipoExpAsociados(oldArray => [...oldArray, (extId + \"|\" + subExpid)]);\r\n        } else {\r\n\r\n            // Se busca el indice\r\n            var index = tipoExpAsociados.indexOf((extId + \"|\" + subExpid));\r\n\r\n            // se valida se encuentre valor\r\n            if (index != -1) {\r\n\r\n                // Se quita el valor del array\r\n                tipoExpAsociados.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Metodo encargado de listar cada rol\r\n    const listarRoles = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre la lista de roles\r\n            getListaRoles.data.map((rol, i) => {\r\n\r\n                // Se retorna por posicion\r\n                return (\r\n                    <tr key={(rol.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (rolesAsociados.length > 0) ? (\r\n                                            (rolesAsociados.indexOf(rol.id.toString()) > -1) ? (\r\n                                                <div>\r\n                                                    <input defaultChecked=\"true\" type=\"checkbox\" onChange={e => agregarCheck(e.target.checked, rol.id)} className=\"custom-control-input\" id={rol.id} name={rol.id} />\r\n                                                    <label className=\"custom-control-label\" htmlFor={rol.id}></label>\r\n                                                </div>\r\n                                            ) :\r\n                                                <div>\r\n                                                    <input type=\"checkbox\" onChange={e => agregarCheck(e.target.checked, rol.id)} className=\"custom-control-input\" id={rol.id} name={rol.id} />\r\n                                                    <label className=\"custom-control-label\" htmlFor={rol.id}></label>\r\n                                                </div>\r\n\r\n                                        ) :\r\n                                            <div>\r\n                                                <input type=\"checkbox\" onClick={e => agregarCheck(e.target.checked, rol.id)} className=\"custom-control-input\" id={rol.id} name={rol.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={rol.id}></label>\r\n                                            </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {rol.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // TIPO DE EXPEDIENTE = DERECHO DE PETICION\r\n    const componenteTipoExpedienteDerecho = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre la lista de derechos de peticion\r\n            listaTipoDerechoPeticion.data.map((derecho, i) => {\r\n\r\n                // Se retorna por posicion\r\n                return (\r\n                    <tr key={(derecho.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (tipoExpAsociados.indexOf(('1|' + derecho.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '1', derecho.id)} className=\"custom-control-input\" id={'derecho' + derecho.id} name={'derecho' + derecho.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'derecho' + derecho.id}></label>\r\n                                            </div>\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '1', derecho.id)} className=\"custom-control-input\" id={'derecho' + derecho.id} name={'derecho' + derecho.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'derecho' + derecho.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {derecho.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar los tipos de expediente asociados\r\n    const listarTiposExpedientesAsociados = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n            <div className='row'>\r\n                <div className=\"col-md-12\">\r\n                    {\r\n                        // Se recorre el array\r\n                        getTiposExpedientes.data.map((tipoExp, i) => {\r\n\r\n                            // Se retorna por posicion\r\n                            return (\r\n                                <div key={tipoExp.id} id=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\r\n                                    <div class=\"block block-rounded mb-1\">\r\n                                        <div class=\"block-header block-header-default\" role=\"tab\" id=\"accordion_h1\">\r\n                                            <a class=\"font-w600\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#accordion_q1\" aria-expanded=\"true\" aria-controls=\"accordion_q1\"><i class=\"fas fa-folder\" /> {tipoExp.attributes.nombre} </a>\r\n                                        </div>\r\n                                        <div id=\"accordion_q1\" class=\"show\" role=\"tabpanel\" aria-labelledby=\"accordion_h1\" data-parent=\"#accordion\">\r\n                                            <div className=\"block-content\">\r\n                                                {/*DERECHO DE PETICION*/}\r\n                                                {tipoExp.id === '1' && respuestaTipoDerechoPeticion ? componenteTipoExpedienteDerecho() : ''}\r\n                                                {/*PODER REFERENTE A SOLIICTUD*/}\r\n                                                {tipoExp.id === '2' && respuestaTiposQueja ? componenteTipoExpedienteReferente() : ''}\r\n                                                {/*QUEJA*/}\r\n                                                {tipoExp.id === '3' && respuestaTiposQueja ? componenteTipoExpedienteQueja() : ''}\r\n                                                {/*TUTELA*/}\r\n                                                {tipoExp.id === '4' && respuestaTerminosRespuesta ? componenteTipoExpedienteTutela() : ''}\r\n                                                {/*PROCESO DISCIPLINARIO*/}\r\n                                                {tipoExp.id === '5' && respuestaProcesoDisciplinario ? componenteTipoExpedienteProcesoDisciplinario() : ''}\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div >\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    // TIPO DE EXPEDIENTE = REFERENTE\r\n    const componenteTipoExpedienteReferente = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array\r\n            listaTiposQueja.data.map((quejaDef, i) => {\r\n\r\n                // Se retorna por posicion\r\n                return (\r\n                    <tr key={(quejaDef.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (tipoExpAsociados.indexOf(('2|' + quejaDef.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '2', quejaDef.id)} className=\"custom-control-input\" id={'quejaDef' + quejaDef.id} name={'quejaDef' + quejaDef.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'quejaDef' + quejaDef.id}></label>\r\n                                            </div>\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '2', quejaDef.id)} className=\"custom-control-input\" id={'quejaDef' + quejaDef.id} name={'quejaDef' + quejaDef.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'quejaDef' + quejaDef.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {quejaDef.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // TIPO DE EXPEDIENTE = QUEJA\r\n    const componenteTipoExpedienteQueja = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array\r\n            listaTiposQueja.data.map((queja, i) => {\r\n\r\n                // Se retorna por posicion\r\n                return (\r\n                    <tr key={(queja.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (tipoExpAsociados.indexOf(('3|' + queja.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '3', queja.id)} className=\"custom-control-input\" id={'queja' + queja.id} name={'queja' + queja.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'queja' + queja.id}></label>\r\n                                            </div>\r\n\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '3', queja.id)} className=\"custom-control-input\" id={'queja' + queja.id} name={'queja' + queja.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'queja' + queja.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {queja.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    // TIPO DE EXPEDIENTE = TUTELA\r\n    const componenteTipoExpedienteTutela = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array\r\n            listaTerminosRespuesta.data.map((termino, i) => {\r\n\r\n                // Se retorna por posicion\r\n                return (\r\n                    <tr key={(termino.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (tipoExpAsociados.indexOf(('4|' + termino.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '4', termino.id)} className=\"custom-control-input\" id={'termino' + termino.id} name={'termino' + termino.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'termino' + termino.id}></label>\r\n                                            </div>\r\n\r\n\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '4', termino.id)} className=\"custom-control-input\" id={'termino' + termino.id} name={'termino' + termino.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'termino' + termino.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {termino.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    // TIPO DE EXPEDIENTE = PROCESO_DISCIPLINARIO\r\n    const componenteTipoExpedienteProcesoDisciplinario = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n\r\n            // Se recorre el array\r\n            listaTipoProcesoDisciplinario.data.map((proceso, i) => {\r\n\r\n                // Se retorna por posicion\r\n                return (\r\n                    <tr key={(proceso.id + 1)}>\r\n                        <td>\r\n                            <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                                <>\r\n                                    {\r\n                                        (tipoExpAsociados.indexOf(('5|' + proceso.id).toString()) > -1) ? (\r\n                                            <div>\r\n                                                <input defaultChecked={true} type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '5', proceso.id)} className=\"custom-control-input\" id={'proceso' + proceso.id} name={'proceso' + proceso.id} />\r\n                                                <label className=\"custom-control-label\" htmlFor={'proceso' + proceso.id}></label>\r\n                                            </div>\r\n\r\n\r\n                                        ) : <div>\r\n                                            <input type=\"checkbox\" onChange={e => agregarCheckTipoExp(e.target.checked, '5', proceso.id)} className=\"custom-control-input\" id={'proceso' + proceso.id} name={'termino' + proceso.id} />\r\n                                            <label className=\"custom-control-label\" htmlFor={'proceso' + proceso.id}></label>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            {proceso.attributes.nombre}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de cargar el formulario general\r\n    const componentFormularioUsuario = () => {\r\n\r\n        // Se retorna\r\n        return (\r\n            <>\r\n                <Formik\r\n                    initialValues={{\r\n\r\n                        nombre: '',\r\n                        apellido: '',\r\n                        correo: '',\r\n                        dependencia: '',\r\n                        roles: '',\r\n                        tipoExpediente: '',\r\n                        estado: '',\r\n                        reparto: ''\r\n\r\n                    }}\r\n                    enableReinitialize\r\n                    validate={(valores) => {\r\n\r\n                        let errores = {}\r\n\r\n                        if (!getNombre) {\r\n                            errores.nombre = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getApellido) {\r\n                            errores.apellido = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getEmail) {\r\n                            errores.correo = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getIdDependencia) {\r\n                            errores.dependencia = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (rolesAsociados.length == 0) {\r\n\r\n                            errores.roles = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        /*if (tipoExpAsociados.length == 0) {\r\n\r\n                            errores.tipoExpediente = \"Debe seleccionar al menos un expediente\";\r\n                        }*/\r\n\r\n                        if (getEstado == '') {\r\n\r\n                            errores.estado = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n                        if (!getReparto) {\r\n                            errores.reparto = global.Constants.MENSAJE_ERROR.CAMPO_OBLIGATORIO;\r\n                        }\r\n\r\n\r\n                        return errores\r\n                    }}\r\n                    onSubmit={(valores, { resetForm }) => {\r\n\r\n                        enviarDatos();\r\n                    }}\r\n                >\r\n                    {({ errors }) => (\r\n                        <Form>\r\n\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"block block-themed\">\r\n                                    <div className=\"block-header\">\r\n                                        <h3 className=\"block-title\">DATOS BÁSICOS</h3>\r\n                                    </div>\r\n\r\n                                    <div className=\"block-content\">\r\n                                        <div className=\"row\">\r\n\r\n                                            <div className=\"col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor='nombre'>NOMBRES <span className=\"text-danger\">*</span></label>\r\n                                                    <Field value={getNombre} type=\"text\" id=\"nombre\" name=\"nombre\" className=\"form-control\" onChange={handleInputChange} />\r\n                                                    <ErrorMessage name=\"nombre\" component={() => (<span className=\"text-danger\">{errors.nombre}</span>)} />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor='apellido'>APELLIDOS <span className=\"text-danger\">*</span></label>\r\n                                                    <Field value={getApellido} type=\"text\" id=\"apellido\" name=\"apellido\" className=\"form-control\" placeholder=\"Apellido\"\r\n                                                        onChange={handleInputChange} />\r\n                                                    <ErrorMessage name=\"apellido\" component={() => (<span className=\"text-danger\">{errors.apellido}</span>)} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor='user'>USUARIO <span className=\"text-danger\">*</span></label>\r\n                                                    <Field value={getUser} type=\"text\" id=\"user\" name=\"user\" className=\"form-control\" placeholder=\"Usuario\" disabled />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor='correo'>CORREO <span className=\"text-danger\">*</span></label>\r\n                                                    <Field disabled value={getEmail} type=\"text\" id=\"correo\" name=\"correo\"\r\n                                                        onChange={handleInputChange} className=\"form-control\" placeholder=\"Correo\" />\r\n                                                    <ErrorMessage name=\"correo\" component={() => (<span className=\"text-danger\">{errors.correo}</span>)} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"dependencia\">DEPENDENCIA <span className=\"text-danger\">*</span></label>\r\n                                                    <Field as=\"select\" value={getIdDependencia} onChange={handleInputChange} className=\"form-control\" id=\"dependencia\" name=\"dependencia\" placeholder=\"Dependencia\">\r\n                                                        <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                        {respuestaDependenciaOrigen ? selectDependenciaOrigen() : null}\r\n                                                    </Field>\r\n                                                    <ErrorMessage name=\"dependencia\" component={() => (<span className=\"text-danger\">{errors.dependencia}</span>)} />\r\n                                                </div>\r\n                                            </div>\r\n                                            {getIdDependencia == getIdDependenciaSecretariaComun ?\r\n                                                (\r\n                                                    <div className=\"col-md-4\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"dependencgrupoTrabajoia\">GRUPO DE TRABAJO <span className=\"text-danger\">*</span></label>\r\n                                                            {respuestaGrupoTrabajo && listaGruposTrabajo.data.length > 0 ?\r\n                                                                <Select\r\n                                                                    id='grupoTrabajo'\r\n                                                                    name='grupoTrabajo'\r\n                                                                    isMulti={true}\r\n                                                                    value={getListaGruposSeleccionadas}\r\n                                                                    placeholder=\"Selecciona\"\r\n                                                                    noOptionsMessage={() => \"Sin datos\"}\r\n                                                                    options={listaGruposTrabajo?.data?.map(e =>\r\n                                                                        ({ label: e.attributes.nombre, value: e.id }))}\r\n                                                                    onChange={(e) => selectChangeGrupo(e)}\r\n                                                                />\r\n                                                                : null}\r\n                                                            <ErrorMessage name=\"grupoTrabajo\" component={() => (<span className=\"text-danger\">{errors.grupoTrabajo} {getErrorGrupos}</span>)} />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            <div className=\"col-md-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"estado\">ESTADO <span className=\"text-danger\">*</span></label>\r\n                                                    <Field as=\"select\" value={getEstado} onChange={handleInputChange} className=\"form-control\" id=\"estado\" name=\"estado\">\r\n                                                        <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                        <option value=\"1\">ACTIVO</option>\r\n                                                        <option value=\"0\">INACTIVO</option>\r\n                                                    </Field>\r\n                                                    <ErrorMessage name=\"estado\" component={() => (<span className=\"text-danger\">{errors.estado}</span>)} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"reparto\">HABILITADO PARA REPARTO<span className=\"text-danger\">*</span></label>\r\n                                                    <Field as=\"select\" value={getReparto} onChange={handleInputChange} className=\"form-control\" id=\"reparto\" name=\"reparto\">\r\n                                                        <option value=\"\">{global.Constants.MENSAJE_INFORMATIVO.SELECCIONE_UNA_OPCION}</option>\r\n                                                        <option value=\"1\">SI</option>\r\n                                                        <option value=\"0\">NO</option>\r\n                                                    </Field>\r\n                                                    <ErrorMessage name=\"reparto\" component={() => (<span className=\"text-danger\">{errors.reparto}</span>)} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"block block-themed\">\r\n                                    <div className=\"block-header\">\r\n                                        <h3 className=\"block-title\">ASIGNACIÓN DE ROLES</h3>\r\n                                    </div>\r\n                                    <div className=\"block-content\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <label >Debe seleccionar al menos un perfil<span className=\"text-danger\">*</span></label>                               \r\n                                                <ErrorMessage name=\"roles\" component={() => (<span className=\"text-danger\">{errors.roles}</span>)} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th style={{width: \"50px\"}}>SELECCIONAR</th>\r\n                                                            <th>NOMBRE DE ROL</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody >\r\n                                                        {getRespuestaRoles ? listarRoles() : null}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"block block-themed\">\r\n                                    <div className=\"block-header\">\r\n                                        <h3 className=\"block-title\">TIPOS DE EXPEDIENTES QUE EL USUARIO PUEDE GESTIONAR</h3>\r\n                                    </div>\r\n                                    <div className=\"block-content\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <ErrorMessage name=\"tipoExpediente\" component={() => (<span className=\"text-danger\">{errors.tipoExpediente}</span>)} />\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                {getRespuestaTipoExpediente ? listarTiposExpedientesAsociados() : null}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"block-content block-content-full text-right bg-light\">\r\n                                            <button type=\"submit\" className=\"btn btn-rounded btn-primary\"> {global.Constants.BOTON_NOMBRE.ACTUALIZAR} </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </>\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de general form\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <div className=\"w2d_block\">\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                        <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/Usuario`}><small>Lista de usuarios</small></Link></li>\r\n                        <li class=\"breadcrumb-item\"> <small> Actualizar usuario</small></li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n                {componentFormularioUsuario()}\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n// Se exporta la clase\r\nexport default UsuarioDetalle;"],"mappings":"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"},"metadata":{},"sourceType":"module"}