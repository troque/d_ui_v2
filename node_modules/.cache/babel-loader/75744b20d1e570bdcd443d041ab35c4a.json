{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ListaSemaforos\\\\ListaSemaforos.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Spinner from '../../Utils/Spinner';\nimport '../../Utils/Constants';\nimport { useLocation } from 'react-router-dom';\nimport DataTable from 'react-data-table-component';\nimport GenericApi from './../../Api/Services/GenericApi';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { quitarAcentos } from '../../Utils/Common';\nimport 'react-datetime/css/react-datetime.css';\nimport DatePicker from 'react-datetime';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListaSemaforos() {\n  _s();\n\n  const [getSeach, setSeach] = useState('');\n  const [perPage, setPerPage] = useState(global.Constants.DATA_TABLE.PAGINATION_PER_PAGE);\n  const [pageActual, setPageActual] = useState(1);\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getLista, setLista] = useState({\n    data: []\n  });\n  const [getNombreProceso, setNombreProceso] = useState('');\n  const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\n  const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      nombreProceso();\n      Calcular();\n      getApiDiasNoLaborales();\n    }\n\n    fetchData();\n  }, []);\n\n  const getApiDiasNoLaborales = () => {\n    //ParametrosMasApi.getAllDiasNoLaborales().then(\n    GenericApi.getGeneric(\"dias-no-laborales?estado=1\").then(datos => {\n      if (!datos.error) {\n        var data = [];\n\n        for (var i in datos.data) {\n          var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\n          var result = new Date(date);\n          result.setDate(result.getDate() + 1);\n          data.push(i, date);\n        }\n\n        setResultDiasNoLaborales(data); //obtenemos los parametros\n\n        obtenerParametros();\n      } else {\n        setModalState({\n          title: \"Proceso disciplinario\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/ProcesoDisciplinario',\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n        window.showSpinner(false);\n      }\n    });\n  };\n\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      }; //buscamos el parametro\n\n      GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then( //ParametrosMasApi.getParametroPorNombre(data).then(\n      datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          setModalState({\n            title: \"Proceso disciplinario\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/ProcesoDisciplinario',\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n          window.showSpinner(false);\n        }\n      });\n    } catch (error) {// console.log(error);\n    }\n  };\n\n  const nombreProceso = () => {\n    GenericApi.getByIdGeneric(\"nombre-proceso\", from.procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setNombreProceso(datos.data.attributes.nombre);\n      }\n    });\n  };\n\n  const Calcular = () => {\n    GenericApi.getByIdGeneric('getDiasTranscurridos', from.procesoDisciplinarioId).then(datosDiasTranscurridos => {\n      if (!datosDiasTranscurridos.error) {\n        console.log(datosDiasTranscurridos);\n        setLista(datosDiasTranscurridos);\n      }\n\n      window.showSpinner(false);\n    });\n  };\n\n  const handlePageChange = page => {\n    setPageActual(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    setPerPage(newPerPage);\n    setPageActual(page);\n  };\n\n  const SemaforoColor = semaforo => {\n    let color = '';\n    semaforo.attributes.pdxsemaforo.attributes.condiciones.forEach(condiciones => {\n      let diasTrans = parseInt(semaforo.attributes.diasTranscurridos2, 10);\n      let inicial = parseInt(condiciones.inicial, 10);\n      let final = condiciones.final != null ? parseInt(condiciones.final, 10) : diasTrans + 1;\n\n      if (semaforo.attributes.pdxsemaforo.attributes.finalizo != null) {\n        color = \"Azul\";\n      } else {\n        if (diasTrans >= inicial && diasTrans <= final) {\n          color = condiciones.color;\n        }\n      }\n    });\n    return color;\n  };\n\n  const changeFechaInicioSemaforo = (semaforo, date) => {\n    const userInput = moment(date).format(\"YYYY-MM-DD\");\n    GenericApi.getGeneric(\"actualizar-fecha/\" + semaforo.attributes.pdxsemaforo.attributes.id_semaforo.id + \"/\" + from.procesoDisciplinarioId + \"/\" + userInput).then(datosSemaforo => {\n      if (!datosSemaforo.error) {\n        setModalState({\n          title: getNombreProceso + \" :: Selección de fecha de inicio de semáforo\",\n          message: 'Fecha seleccionada actualizada con éxito',\n          show: true,\n          redirect: '/MisPendientes',\n          from: {\n            from: from\n          },\n          alert: global.Constants.TIPO_ALERTA.EXITO\n        });\n      } else {\n        setModalState({\n          title: getNombreProceso + \" :: Selección de fecha de inicio de semáforo\",\n          message: 'Ocurrio un error al intentar actualizar la fecha',\n          show: true,\n          redirect: '/MisPendientes',\n          from: {\n            from: from\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n\n  const disableCustomDt = current => {\n    const bloqueaDiasFuturos = true;\n    var startDate = new Date();\n    var year = startDate.getFullYear();\n    var month = startDate.getMonth();\n    var day = startDate.getDate();\n    var pastDate = new Date(year - getAnosAtrasInvalidos, month, day);\n\n    if (bloqueaDiasFuturos) {\n      return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD')) && moment(current).isAfter(pastDate) && moment(current).isBefore(new Date());\n    } else {\n      return !resultDiasNoLaborales.includes(current.format('YYYY-MM-DD')) && moment(current).isAfter(pastDate);\n    }\n  };\n\n  const columns = [{\n    name: 'Nombre',\n    selector: semaforo => semaforo.attributes.pdxsemaforo.attributes.id_semaforo.nombre,\n    sortable: true\n  }, {\n    name: 'Fecha Inicio del semaforo',\n    selector: semaforo => /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        rango: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        let errores = {};\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            id: \"contenedorFechaSemaforo\",\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              id: \"fechaInicioSemaforo\",\n              locale: \"es\",\n              name: \"fechaInicioSemaforo\",\n              dateFormat: \"YYYY-MM-DD\",\n              closeOnSelect: true,\n              placeholder: \"yyyy-mm-dd\",\n              onChange: date => changeFechaInicioSemaforo(semaforo, date),\n              timeFormat: false,\n              isValidDate: disableCustomDt,\n              value: semaforo.attributes.pdxsemaforo.attributes.fecha_inicio != null ? semaforo.attributes.pdxsemaforo.attributes.fecha_inicio : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this),\n    sortable: true\n  }, {\n    name: 'Fecha de finalización',\n    selector: semaforo => semaforo.attributes.pdxsemaforo.attributes.fechafinalizo != null ? semaforo.attributes.pdxsemaforo.attributes.fechafinalizo : null,\n    sortable: true\n  }, {\n    name: 'Evento de inicio',\n    selector: semaforo => semaforo.attributes.nombreEventoInicio,\n    sortable: true\n  }, {\n    name: 'Actuación que inicia el semáforo',\n    selector: semaforo => semaforo.attributes.nombreMasActuacion,\n    sortable: true\n  }, {\n    name: 'Días Calendario',\n    selector: semaforo => semaforo.attributes.pdxsemaforo.attributes.finalizo != null ? semaforo.attributes.diasTranscurridosHastaFinalizar2.slice(1) : semaforo.attributes.diasTranscurridos.slice(1),\n    sortable: true\n  }, {\n    name: 'Días Laborales',\n    selector: semaforo => semaforo.attributes.pdxsemaforo.attributes.finalizo != null ? semaforo.attributes.diasTranscurridosHastaFinalizar : semaforo.attributes.diasTranscurridos2,\n    sortable: true\n  }, {\n    name: 'Color',\n    selector: semaforo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: SemaforoColor(semaforo) == \"Verde\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"background-color\": \"lime\",\n          \"color\": \"white\",\n          \"width\": \"100%\",\n          \"text-align\": \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Verde\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 118\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this) : SemaforoColor(semaforo) == \"Amarillo\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"background-color\": \"yellow\",\n          \"color\": \"white\",\n          \"width\": \"100%\",\n          \"text-align\": \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Amarillo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 120\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this) : SemaforoColor(semaforo) == \"Rojo\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"background-color\": \"red\",\n          \"color\": \"white\",\n          \"width\": \"100%\",\n          \"text-align\": \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Rojo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 117\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }, this) : SemaforoColor(semaforo) == \"Azul\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"background-color\": \"#0071a1\",\n          \"color\": \"white\",\n          \"width\": \"100%\",\n          \"text-align\": \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Finalizado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 121\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this),\n    sortable: true\n  }];\n\n  const TomarColor = suggestion => {\n    let color = \"\";\n    suggestion.attributes.pdxsemaforo.attributes.condiciones.forEach(element => {\n      if (element.color == SemaforoColor(suggestion)) {\n        color = element.color;\n      }\n    });\n    return color;\n  };\n\n  console.log(getLista);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        rango: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        let errores = {};\n        return errores;\n      },\n      onSubmit: (valores, _ref3) => {\n        let {\n          resetForm\n        } = _ref3;\n      },\n      children: _ref4 => {\n        let {\n          errors\n        } = _ref4;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w2d_block\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"breadcrumb\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"breadcrumb breadcrumb-alt push\",\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/MisPendientes`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Mis Pendientes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 138\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-themed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: [getNombreProceso, \" :: Listado de sem\\xE1foros\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group \",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"search\",\n                      children: \"Buscar: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      type: \"text\",\n                      id: \"search\",\n                      name: \"search\",\n                      value: getSeach,\n                      onChange: e => setSeach(e.target.value),\n                      onKeyPress: e => {\n                        e.key === 'Enter' && e.preventDefault();\n                      },\n                      className: \"form-control border border-success\",\n                      placeholder: \"Buscar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-content block-content-full\",\n                  children: /*#__PURE__*/_jsxDEV(DataTable, {\n                    className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                    columns: columns,\n                    data: getLista.data.filter(suggestion => {\n                      if (getSeach === \"\") {\n                        return suggestion;\n                      } else if (((suggestion.attributes.pdxsemaforo.attributes.id_semaforo.nombre ? quitarAcentos(suggestion.attributes.pdxsemaforo.attributes.id_semaforo.nombre) : null) + (suggestion.attributes.pdxsemaforo.attributes.fechafinalizo ? quitarAcentos(suggestion.attributes.pdxsemaforo.attributes.fechafinalizo) : null) + (suggestion.attributes.pdxsemaforo.attributes.fecha_inicio ? quitarAcentos(suggestion.attributes.pdxsemaforo.attributes.fecha_inicio) : null) + (suggestion.attributes.nombreEventoInicio ? quitarAcentos(suggestion.attributes.nombreEventoInicio) : null) + (suggestion.attributes.nombreMasActuacion ? quitarAcentos(suggestion.attributes.nombreMasActuacion) : null) + (suggestion.attributes.diasTranscurridos ? quitarAcentos(suggestion.attributes.diasTranscurridos) : null) + quitarAcentos(TomarColor(suggestion))).toLowerCase().includes(quitarAcentos(getSeach.toLowerCase()))) {\n                        return suggestion;\n                      }\n                    }),\n                    perPage: perPage,\n                    page: pageActual,\n                    pagination: true,\n                    noDataComponent: \"Sin datos\",\n                    paginationTotalRows: getLista.data.length,\n                    onChangePage: handlePageChange,\n                    onChangeRowsPerPage: handlePerRowsChange,\n                    defaultSortFieldId: \"Nombre\",\n                    striped: true,\n                    paginationComponentOptions: {\n                      rowsPerPageText: 'Filas por página'\n                    },\n                    defaultSortAsc: false\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListaSemaforos, \"OhPlp4CHHsn3kypX63ghiepUp9I=\", false, function () {\n  return [useLocation];\n});\n\n_c = ListaSemaforos;\nexport default ListaSemaforos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListaSemaforos\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","Link","Spinner","useLocation","DataTable","GenericApi","ModalGen","quitarAcentos","DatePicker","moment","ListaSemaforos","getSeach","setSeach","perPage","setPerPage","global","Constants","DATA_TABLE","PAGINATION_PER_PAGE","pageActual","setPageActual","getModalState","setModalState","title","message","show","getLista","setLista","data","getNombreProceso","setNombreProceso","resultDiasNoLaborales","setResultDiasNoLaborales","getAnosAtrasInvalidos","setAnosAtrasInvalidos","location","from","state","fetchData","window","showSpinner","nombreProceso","Calcular","getApiDiasNoLaborales","getGeneric","then","datos","error","i","date","split","result","Date","setDate","getDate","push","obtenerParametros","toString","redirect","alert","TIPO_ALERTA","ERROR","getByDataGeneric","length","filter","includes","map","filteredName","getByIdGeneric","procesoDisciplinarioId","attributes","nombre","datosDiasTranscurridos","console","log","handlePageChange","page","handlePerRowsChange","newPerPage","SemaforoColor","semaforo","color","pdxsemaforo","condiciones","forEach","diasTrans","parseInt","diasTranscurridos2","inicial","final","finalizo","changeFechaInicioSemaforo","userInput","format","id_semaforo","id","datosSemaforo","EXITO","disableCustomDt","current","bloqueaDiasFuturos","startDate","year","getFullYear","month","getMonth","day","pastDate","isAfter","isBefore","columns","name","selector","sortable","rango","valores","errores","resetForm","errors","fecha_inicio","fechafinalizo","nombreEventoInicio","nombreMasActuacion","diasTranscurridosHastaFinalizar2","slice","diasTranscurridos","diasTranscurridosHastaFinalizar","TomarColor","suggestion","element","e","target","value","key","preventDefault","toLowerCase","rowsPerPageText"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ListaSemaforos/ListaSemaforos.js"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, } from \"react-router-dom\";\r\nimport Spinner from '../../Utils/Spinner';\r\nimport '../../Utils/Constants';\r\nimport { useLocation } from 'react-router-dom';\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from './../../Api/Services/GenericApi';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { quitarAcentos } from '../../Utils/Common';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport DatePicker from 'react-datetime';\r\nimport moment from 'moment';\r\n\r\n\r\nfunction ListaSemaforos() {\r\n\r\n    const [getSeach, setSeach] = useState('');\r\n    const [perPage, setPerPage] = useState(global.Constants.DATA_TABLE.PAGINATION_PER_PAGE);\r\n    const [pageActual, setPageActual] = useState(1);\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getLista, setLista] = useState({ data: [] });\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    const [resultDiasNoLaborales, setResultDiasNoLaborales] = useState([]);\r\n    const [getAnosAtrasInvalidos, setAnosAtrasInvalidos] = useState(0);\r\n\r\n    const location = useLocation();\r\n    const { from } = location.state;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            nombreProceso();\r\n            Calcular();\r\n            getApiDiasNoLaborales();\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const getApiDiasNoLaborales = () => {\r\n        //ParametrosMasApi.getAllDiasNoLaborales().then(\r\n        GenericApi.getGeneric(\"dias-no-laborales?estado=1\").then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var data = [];\r\n                    for (var i in datos.data) {\r\n                        var date = datos.data[i][\"attributes\"][\"fecha\"].split(' ')[0];\r\n                        var result = new Date(date);\r\n                        result.setDate(result.getDate() + 1);\r\n                        data.push(i, date);\r\n                    }\r\n\r\n                    setResultDiasNoLaborales(data);\r\n\r\n                    //obtenemos los parametros\r\n                    obtenerParametros();\r\n\r\n                } else {\r\n                    setModalState({ title: \"Proceso disciplinario\", message: datos.error.toString(), show: true, redirect: '/ProcesoDisciplinario', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    window.showSpinner(false);\r\n                }\r\n            }\r\n\r\n        )\r\n    }\r\n\r\n    const obtenerParametros = () => {\r\n        try {\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"limite_años_calendario|minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric(\"parametro/parametro-nombre\", data).then(\r\n                //ParametrosMasApi.getParametroPorNombre(data).then(\r\n                datos => {\r\n\r\n                    if (!datos.error) {\r\n\r\n                        if (datos[\"data\"].length > 0) {\r\n\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('limite_años_calendario')).map(filteredName => (\r\n                                setAnosAtrasInvalidos(filteredName[\"attributes\"][\"valor\"])\r\n                            ))\r\n\r\n                        }\r\n                    } else {\r\n                        setModalState({ title: \"Proceso disciplinario\", message: datos.error.toString(), show: true, redirect: '/ProcesoDisciplinario', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                        window.showSpinner(false);\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n        }\r\n    }\r\n\r\n    const nombreProceso = () => {\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\",from.procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const Calcular = () => {\r\n        GenericApi.getByIdGeneric('getDiasTranscurridos', from.procesoDisciplinarioId).then(\r\n            datosDiasTranscurridos => {\r\n                if (!datosDiasTranscurridos.error) {\r\n                    console.log(datosDiasTranscurridos);\r\n                    setLista(datosDiasTranscurridos);\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    const handlePageChange = page => {\r\n        setPageActual(page);\r\n    }\r\n\r\n    const handlePerRowsChange = async (newPerPage, page) => {\r\n        setPerPage(newPerPage);\r\n        setPageActual(page);\r\n    }\r\n\r\n    const SemaforoColor = (semaforo) => {\r\n        let color = '';\r\n        semaforo.attributes.pdxsemaforo.attributes.condiciones.forEach(condiciones => {\r\n            \r\n            let diasTrans = parseInt(semaforo.attributes.diasTranscurridos2, 10);\r\n            let inicial = parseInt(condiciones.inicial, 10);\r\n            let final = condiciones.final != null ? parseInt(condiciones.final, 10) : (diasTrans+1);\r\n\r\n            if(semaforo.attributes.pdxsemaforo.attributes.finalizo != null){\r\n                color = \"Azul\";\r\n            }else{\r\n                if(diasTrans >= inicial && diasTrans <= final){\r\n                    color = condiciones.color ;\r\n                 }\r\n            }\r\n        })\r\n\r\n        return color;\r\n    }\r\n\r\n    const changeFechaInicioSemaforo = (semaforo,date) => {\r\n\r\n        const userInput = moment(date).format(\"YYYY-MM-DD\");\r\n\r\n        GenericApi.getGeneric(\"actualizar-fecha/\"+semaforo.attributes.pdxsemaforo.attributes.id_semaforo.id+\"/\"+from.procesoDisciplinarioId+\"/\"+userInput).then(\r\n            datosSemaforo => {\r\n                if (!datosSemaforo.error) {\r\n                    setModalState({ \r\n                        title: getNombreProceso + \" :: Selección de fecha de inicio de semáforo\", \r\n                        message: 'Fecha seleccionada actualizada con éxito', \r\n                        show: true, \r\n                        redirect: '/MisPendientes', \r\n                        from: {from: from}, \r\n                        alert: global.Constants.TIPO_ALERTA.EXITO \r\n                    });\r\n                }else{\r\n                    setModalState({ \r\n                        title: getNombreProceso + \" :: Selección de fecha de inicio de semáforo\", \r\n                        message: 'Ocurrio un error al intentar actualizar la fecha', \r\n                        show: true, \r\n                        redirect: '/MisPendientes', \r\n                        from: {from: from}, \r\n                        alert: global.Constants.TIPO_ALERTA.ERROR \r\n                    });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const disableCustomDt = (current) => {\r\n        const bloqueaDiasFuturos  = true;\r\n\r\n\r\n        var startDate = new Date()\r\n        var year = startDate.getFullYear();\r\n        var month = startDate.getMonth();\r\n        var day = startDate.getDate();\r\n        var pastDate = new Date(year - getAnosAtrasInvalidos, month, day);\r\n\r\n        if(bloqueaDiasFuturos){\r\n            return (!resultDiasNoLaborales.includes(current.format('YYYY-MM-DD')) && moment(current).isAfter(pastDate) && moment(current).isBefore(new Date()));\r\n        }\r\n        else{\r\n            return (!resultDiasNoLaborales.includes(current.format('YYYY-MM-DD')) && moment(current).isAfter(pastDate));\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n    const columns = [\r\n        {\r\n            name: 'Nombre',\r\n            selector: semaforo => semaforo.attributes.pdxsemaforo.attributes.id_semaforo.nombre,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Fecha Inicio del semaforo',\r\n            selector: semaforo => \r\n            (\r\n                <Formik\r\n                initialValues={{\r\n                    rango: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    let errores = {}\r\n                    return errores\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n                            <div className=\"form-group\" id=\"contenedorFechaSemaforo\"> \r\n                                <DatePicker \r\n                                    id=\"fechaInicioSemaforo\" \r\n                                    locale='es' \r\n                                    name=\"fechaInicioSemaforo\" \r\n                                    dateFormat=\"YYYY-MM-DD\" \r\n                                    closeOnSelect={true} \r\n                                    placeholder=\"yyyy-mm-dd\" \r\n                                    onChange={(date) => changeFechaInicioSemaforo(semaforo,date)} \r\n                                    timeFormat={false} \r\n                                    isValidDate={disableCustomDt}\r\n                                    value={semaforo.attributes.pdxsemaforo.attributes.fecha_inicio != null ? semaforo.attributes.pdxsemaforo.attributes.fecha_inicio : null } \r\n                                />\r\n                            </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            )\r\n            ,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Fecha de finalización',\r\n            selector: semaforo =>  semaforo.attributes.pdxsemaforo.attributes.fechafinalizo != null ? semaforo.attributes.pdxsemaforo.attributes.fechafinalizo : null,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Evento de inicio',\r\n            selector: semaforo =>  semaforo.attributes.nombreEventoInicio,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Actuación que inicia el semáforo',\r\n            selector: semaforo => semaforo.attributes.nombreMasActuacion,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Días Calendario',\r\n            selector: semaforo => semaforo.attributes.pdxsemaforo.attributes.finalizo != null? semaforo.attributes.diasTranscurridosHastaFinalizar2.slice(1) : semaforo.attributes.diasTranscurridos.slice(1),\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Días Laborales',\r\n            selector: semaforo => semaforo.attributes.pdxsemaforo.attributes.finalizo != null? semaforo.attributes.diasTranscurridosHastaFinalizar : semaforo.attributes.diasTranscurridos2,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Color',\r\n            selector: semaforo => \r\n            <div>\r\n                {SemaforoColor(semaforo) == \"Verde\" ? \r\n                (\r\n                    <div style={{\"background-color\": \"lime\", \"color\":\"white\",\"width\":\"100%\",\"text-align\": \"center\"}}><strong>Verde</strong></div>\r\n                ) \r\n                : SemaforoColor(semaforo) == \"Amarillo\" ? \r\n                (\r\n                    <div style={{\"background-color\": \"yellow\", \"color\":\"white\",\"width\":\"100%\",\"text-align\": \"center\"}}><strong>Amarillo</strong></div>\r\n                ) \r\n                : SemaforoColor(semaforo) == \"Rojo\" ? \r\n                (\r\n                    <div style={{\"background-color\": \"red\", \"color\":\"white\",\"width\":\"100%\",\"text-align\": \"center\"}}><strong>Rojo</strong></div>\r\n                )\r\n                : SemaforoColor(semaforo) == \"Azul\" ? \r\n                (\r\n                    <div style={{\"background-color\": \"#0071a1\", \"color\":\"white\",\"width\":\"100%\",\"text-align\": \"center\"}}><strong>Finalizado</strong></div>\r\n                ) \r\n                : null}\r\n            </div>\r\n            ,\r\n            sortable: true\r\n        }\r\n    ];\r\n\r\n    const TomarColor = (suggestion) => {\r\n        let color = \"\";\r\n        suggestion.attributes.pdxsemaforo.attributes.condiciones.forEach(element => {\r\n            if(element.color == SemaforoColor(suggestion)){\r\n                color = element.color;\r\n            }\r\n        })\r\n        return color;\r\n    }\r\n    console.log(getLista);\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    rango: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    let errores = {}\r\n                    return errores\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                        \r\n                        <div className=\"block block-themed\">\r\n\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">{getNombreProceso} :: Listado de semáforos</h3>\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full\">\r\n                                <div className='row'>\r\n                                    <div className='col-md-12'>\r\n                                        <div className=\"form-group \">\r\n                                            <label htmlFor='search'>Buscar: </label>\r\n                                            <Field type=\"text\" id=\"search\" name=\"search\" value={getSeach} onChange={e => setSeach(e.target.value)} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} className=\"form-control border border-success\" placeholder=\"Buscar\" />\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"block-content block-content-full\">\r\n                                            <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                                columns={columns}\r\n                                                data={getLista.data.filter((suggestion) => {\r\n                                                    if (getSeach === \"\") {\r\n                                                        return suggestion;\r\n                                                    }else if (\r\n                                                        (\r\n                                                              (suggestion.attributes.pdxsemaforo.attributes.id_semaforo.nombre ? quitarAcentos(suggestion.attributes.pdxsemaforo.attributes.id_semaforo.nombre) : null)\r\n                                                            + (suggestion.attributes.pdxsemaforo.attributes.fechafinalizo ? quitarAcentos(suggestion.attributes.pdxsemaforo.attributes.fechafinalizo) : null)\r\n                                                            + (suggestion.attributes.pdxsemaforo.attributes.fecha_inicio ? quitarAcentos(suggestion.attributes.pdxsemaforo.attributes.fecha_inicio) : null)\r\n                                                            + (suggestion.attributes.nombreEventoInicio ? quitarAcentos(suggestion.attributes.nombreEventoInicio) : null)\r\n                                                            + (suggestion.attributes.nombreMasActuacion ? quitarAcentos(suggestion.attributes.nombreMasActuacion) : null)\r\n                                                            + (suggestion.attributes.diasTranscurridos ? quitarAcentos(suggestion.attributes.diasTranscurridos) : null)\r\n                                                            + (quitarAcentos(TomarColor(suggestion)))\r\n                                                        ).toLowerCase().includes(quitarAcentos(getSeach.toLowerCase()))\r\n                                                    ) {\r\n                                                        return suggestion;\r\n                                                    }\r\n                                                })}\r\n                                                perPage={perPage}\r\n                                                page={pageActual}\r\n                                                pagination\r\n                                                noDataComponent=\"Sin datos\"\r\n                                                paginationTotalRows={getLista.data.length}\r\n                                                onChangePage={handlePageChange}\r\n                                                onChangeRowsPerPage={handlePerRowsChange}\r\n                                                defaultSortFieldId=\"Nombre\"\r\n                                                striped\r\n                                                paginationComponentOptions={{ rowsPerPageText: 'Filas por página' }}\r\n                                                defaultSortAsc={false}\r\n                                            />\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ListaSemaforos;"],"mappings":"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"},"metadata":{},"sourceType":"module"}