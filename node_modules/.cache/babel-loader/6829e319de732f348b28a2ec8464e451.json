{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\ValidarClasificacionRadicado\\\\ValidarClasificacionRadicadoForm.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport Spinner from '../../Utils/Spinner';\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\nimport { Link } from \"react-router-dom\";\nimport 'react-datetime/css/react-datetime.css';\nimport 'moment/locale/es';\nimport { useLocation } from 'react-router-dom';\nimport { hasAccess } from '../../../components/Utils/Common';\nimport ClasificacionRadicado from '../ClasificacionRadicado/ClasificacionRadicado';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ValidarClasificacionRadicadoForm() {\n  _s();\n\n  const [errorApi, setErrorApi] = useState('');\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const [listaTipoRespuesta, setListaTipoRespuesta] = useState({\n    data: {}\n  });\n  const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\n  const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\n  const [getJefe, setJefe] = useState({\n    data: {}\n  });\n  const [getRtaJefe, setRtaJefe] = useState(false);\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getValidacion, setValidacion] = useState({\n    data: {}\n  });\n  const [getRtaValidacion, setRtaValidacion] = useState(false);\n  const [getParametros, setParametros] = useState({\n    id_proceso_disciplinario: procesoDisciplinarioId,\n    id_etapa: 2,\n    // from.idEtapa\n    reclasificacion: true,\n    route: \"/MisPendientes/\",\n    tipo_clasificacion: global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION\n  });\n  useEffect(() => {\n    async function fetchData() {\n      validarClasificacion();\n      console.log(\"GET VALIDACION: \" + getRtaValidacion);\n\n      if (!getRtaValidacion) {\n        console.log(\"GET VALIDACION2: \" + getRtaValidacion);\n        GenericApi.getGeneric(\"clasificacion-radicado/get-reclasificacion/\" + procesoDisciplinarioId).then(datos => {\n          if (!datos.error) {\n            setClasificacionRadicadoLista(datos);\n            setRespuestaClasificacionRadicado(true);\n            validarClasificacion();\n          } else {\n            setModalState({\n              title: \"ClasificaciÃ³n del radicado\",\n              message: datos.error.toString(),\n              show: true,\n              redirect: '/ValidarClasificadoForm',\n              from: {\n                from\n              }\n            });\n          }\n\n          window.showSpinner(false);\n        });\n        ParametrosMasApi.getAllTipoRespuesta().then(datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1));\n        const data2 = {\n          \"data\": {\n            \"type\": \"usuario\",\n            \"attributes\": {\n              \"\": \"\"\n            }\n          }\n        };\n        GenericApi.getByDataGeneric(\"usuario/get-jefe-dependencia\", data2).then(datos => {\n          if (!datos.error) {\n            console.log(\"CON JEFE\");\n            console.log(datos.data[0]['attributes']['name']);\n            setJefe(datos.data[0]['attributes']['name']);\n            setRtaJefe(true);\n          } else {\n            console.log(\"SIN JEFE\");\n            setJefe(null);\n            console.log(getJefe);\n            setRtaJefe(false);\n          }\n\n          window.showSpinner(false);\n        });\n      } else {\n        console.log(\"AHHHHHHH\");\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const validarClasificacion = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"validacion_clasificado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId\n        }\n      }\n    };\n    return GenericApi.getByDataGeneric(\"validar-clasificado/get-validar-clasificado/\" + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        setRtaValidacion(true);\n      }\n    });\n  };\n\n  let selectChangeTipoRespuesta = e => {\n    setSelectedTipoRespuesta(e);\n  };\n\n  const selectTipoRespuesta = () => {\n    return listaTipoRespuesta.data.map((tipo_respuesta, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: tipo_respuesta.id,\n        children: tipo_respuesta.attributes.nombre\n      }, tipo_respuesta.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const enviarDatos = () => {\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"clasificacion_radicado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": 2,\n          \"id_tipo_expediente\": \"datos.selectedTipoExpediente\",\n          \"observaciones\": \"observaciones\",\n          \"id_tipo_queja\": \"id_tipo_queja\",\n          \"id_termino_respuesta\": \"id_termino_respuesta\",\n          \"fecha_termino\": \"fecha_termino\",\n          \"hora_termino\": \"hora_termino\",\n          \"gestion_juridica\": \"gestion_juridica\",\n          \"estado\": \"estado\",\n          \"id_estado_reparto\": \"id_estado_reparto\",\n          \"id_derecho_peticion\": \"id_derecho_peticion\",\n          \"oficina_control_interno\": \"oficina_control_interno\",\n          \"created_user\": \"created_user\",\n          \"reclasificacion\": false\n        }\n      }\n    };\n    console.log(JSON.stringify(data));\n    GenericApi.addGeneric(\"clasificacion-radicado\", data).then(datos => {\n      if (!datos.error) {\n        window.showModal(2);\n      } else {\n        setErrorApi(datos.error.toString());\n        window.showModal(1);\n      }\n\n      window.showSpinner(false);\n    });\n  }; // COMPONENTE CONFIRMACION TIPO DE CLASIFICADO\n\n\n  const componenteTipoRespuesta = tipo_respuesta => {\n    // CONFIRMACION TIPO DE CLASIFICADO = SI\n    if (tipo_respuesta === 1) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            aceptacion_clasificacion: true\n          },\n          enableReinitialize: true,\n          onSubmit: _ref => {\n            let {\n              resetForm\n            } = _ref;\n            enviarDatos();\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 83\n                }, this), \" Registrar\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/ValidarClasificacionRadicadoLista/`,\n                state: {\n                  from: from\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-window-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 86\n                  }, this), \" Cancelar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } /// CONFIRMACION TIPO DE CLASIFICADO = NO\n    else if (tipo_respuesta === 2) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ClasificacionRadicado, {\n          getParametros: getParametros,\n          id: \"cr_componente\",\n          name: \"cr_componente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  const [respuestaClasificacionRadicado, setRespuestaClasificacionRadicado] = useState(false);\n  const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n\n  const listaClasificacionRadicado = () => {\n    if (clasificacionRadicadoLista.data != null && typeof clasificacionRadicadoLista.data != 'undefined') {\n      return clasificacionRadicadoLista.data.map((clasificacion_radicado, i) => {\n        return cargarTabla(clasificacion_radicado, i);\n      });\n    } else {\n      return clasificacionRadicadoLista.map((clasificacion_radicado, i) => {\n        return cargarTabla(clasificacion_radicado, i);\n      });\n    }\n  };\n\n  const cargarTabla = (clasificacion_radicado, i) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [i === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n        style: {\n          backgroundColor: '#D0D1D9'\n        },\n        children: cargarColumnasTabla(clasificacion_radicado, \"Aceptar\", false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 29\n      }, this) : null, i === 1 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: cargarColumnasTabla(clasificacion_radicado, \"Aceptar\", false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 29\n      }, this) : null, i === 2 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: cargarColumnasTabla(clasificacion_radicado, \"Aceptar\", true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 29\n      }, this) : null]\n    }, void 0, true);\n  };\n\n  const cargarColumnasTabla = (clasificacion_radicado, nombre_boton, reparto) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.etapa.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [clasificacion_radicado.attributes.expediente.nombre, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [clasificacion_radicado.attributes.usuario_registra.nombre, \" \", clasificacion_radicado.attributes.usuario_registra.apellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: clasificacion_radicado.attributes.created_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }, this), getRtaJefe ? /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            uuid: clasificacion_radicado.id,\n            id_clasificacion_radicado: clasificacion_radicado.id,\n            id_proceso_disciplinario: clasificacion_radicado.attributes.id_proceso_disciplinario\n          },\n          enableReinitialize: true,\n          validate: valores => {\n            let errores = {};\n            return errores;\n          },\n          onSubmit: (valores, _ref2) => {\n            let {\n              resetForm\n            } = _ref2;\n            console.log(valores);\n            asignarCaso(valores, reparto);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-check-square\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 79\n              }, this), \" Aceptar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true);\n  };\n\n  const asignarCaso = (datos, reparto) => {\n    window.showSpinner(true);\n    let data;\n    console.log(reparto);\n    data = {\n      \"data\": {\n        \"type\": \"clasificacion_radicado\",\n        \"attributes\": {\n          \"uuid\": datos.uuid,\n          \"id_proceso_disciplinario\": datos.id_proceso_disciplinario,\n          \"id_etapa\": 2,\n          \"id_tipo_expediente\": datos.id_tipo_expediente,\n          \"observaciones\": \"\",\n          \"id_tipo_queja\": null,\n          \"id_termino_respuesta\": null,\n          \"fecha_termino\": null,\n          \"hora_termino\": null,\n          \"gestion_juridica\": false,\n          \"estado\": true,\n          \"id_estado_reparto\": null,\n          \"id_tipo_derecho_peticion\": null,\n          \"oficina_control_interno\": false,\n          \"created_user\": datos.funcionario_registra_name,\n          \"reclasificacion\": null,\n          \"reparto\": reparto\n        }\n      }\n    };\n    console.log(\"******************************\");\n    console.log(JSON.stringify(data));\n    console.log(\"******************************\");\n    GenericApi.addGeneric(\"clasificacion-radicado/asignar-caso-por-jefe\", data).then(datos => {\n      if (!datos.error) {\n        setModalState({\n          title: \"AsignaciÃ³n del proceso disciplinario\",\n          message: \"El proceso disciplinario es asignado a \" + datos.data.attributes.funcionario_asignado.nombre + \" \" + datos.data.attributes.funcionario_asignado.apellido,\n          show: true,\n          redirect: '/MisPendientes'\n        });\n      } else {\n        console.log(datos.error.toString());\n        setErrorApi(datos.error.toString());\n        window.showModal(1);\n      }\n\n      window.showSpinner(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block block-rounded block-bordered\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"breadcrumb\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"breadcrumb breadcrumb-alt push\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/MisPendientes`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Mis Pendientes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 138\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/RamasProceso/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Ramas del proceso\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 161\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    \"aria-current\": \"page\",\n                    to: `/ClasificacionRadicadoLista/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Validar Clasificaci\\xF3n\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 195\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block block-themed\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"block-title\",\n              children: [\" SINPROC No \", radicado, \" :: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Validar Clasificaci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 83\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content\",\n            children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n              children: hasAccess('EI_ValidarClasificacion', 'Consultar') ? /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Id\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 421,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Etapa\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 422,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Tipo de expediente\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Registrado En\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Registrado por\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Usuario Asignado\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Fecha de registro\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 53\n                    }, this), getRtaJefe ? /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Asignaci\\xF3n\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 57\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: respuestaClasificacionRadicado ? listaClasificacionRadicado() : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 41\n              }, this) : null\n            }, void 0, false), !getRtaValidacion ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"ingresoTipoExpediente\",\n                      children: [\"Confirma la clasificaci\\xF3n del expediente? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 448,\n                        columnNumber: 126\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-control\",\n                      id: \"ingresoTipoExpediente\",\n                      name: \"ingresoTipoExpediente\",\n                      value: selectedTipoRespuesta,\n                      onChange: e => selectChangeTipoRespuesta(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Por favor seleccione\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 451,\n                        columnNumber: 49\n                      }, this), respuestaTipoRespuesta ? selectTipoRespuesta() : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 33\n              }, this), selectedTipoRespuesta === '1' ? componenteTipoRespuesta(1) : '', selectedTipoRespuesta === '2' ? componenteTipoRespuesta(2) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 33\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ValidarClasificacionRadicadoForm, \"df2LgKjeXuIBbmtm662cDKOq6TA=\", false, function () {\n  return [useLocation];\n});\n\n_c = ValidarClasificacionRadicadoForm;\nexport default ValidarClasificacionRadicadoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidarClasificacionRadicadoForm\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/ValidarClasificacionRadicado/ValidarClasificacionRadicadoForm.js"],"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","Spinner","ParametrosMasApi","Link","useLocation","hasAccess","ClasificacionRadicado","GenericApi","ModalGen","ValidarClasificacionRadicadoForm","errorApi","setErrorApi","location","from","state","radicado","procesoDisciplinarioId","listaTipoRespuesta","setListaTipoRespuesta","data","selectedTipoRespuesta","setSelectedTipoRespuesta","respuestaTipoRespuesta","setRespuestaTipoRespuesta","getJefe","setJefe","getRtaJefe","setRtaJefe","modalState","setModalState","title","message","show","getValidacion","setValidacion","getRtaValidacion","setRtaValidacion","getParametros","setParametros","id_proceso_disciplinario","id_etapa","reclasificacion","route","tipo_clasificacion","global","Constants","TIPO_CLASIFICACION","VALIDAR_CLASIFICACION","fetchData","validarClasificacion","console","log","getGeneric","then","datos","error","setClasificacionRadicadoLista","setRespuestaClasificacionRadicado","toString","redirect","window","showSpinner","getAllTipoRespuesta","showModal","data2","getByDataGeneric","selectChangeTipoRespuesta","e","selectTipoRespuesta","map","tipo_respuesta","i","id","attributes","nombre","enviarDatos","JSON","stringify","addGeneric","componenteTipoRespuesta","aceptacion_clasificacion","resetForm","respuestaClasificacionRadicado","clasificacionRadicadoLista","links","meta","listaClasificacionRadicado","clasificacion_radicado","cargarTabla","backgroundColor","cargarColumnasTabla","nombre_boton","reparto","etapa","expediente","usuario_registra","apellido","created_at","uuid","id_clasificacion_radicado","valores","errores","asignarCaso","id_tipo_expediente","funcionario_registra_name","funcionario_asignado","target","value"],"mappings":"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","sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ParametrosMasApi from '../../Api/Services/ParametrosMasApi';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport 'moment/locale/es';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { hasAccess } from '../../../components/Utils/Common';\r\nimport ClasificacionRadicado from '../ClasificacionRadicado/ClasificacionRadicado';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\n\r\nfunction ValidarClasificacionRadicadoForm() {\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n   \r\n    const location = useLocation()\r\n    const { from } = location.state\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n    const [listaTipoRespuesta, setListaTipoRespuesta] = useState({ data: {} });\r\n    const [selectedTipoRespuesta, setSelectedTipoRespuesta] = useState(\"\");\r\n    const [respuestaTipoRespuesta, setRespuestaTipoRespuesta] = useState(false);\r\n\r\n    const [getJefe, setJefe] = useState({ data: {} });\r\n    const [getRtaJefe, setRtaJefe] = useState(false);\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n\r\n\r\n    const [getValidacion, setValidacion] = useState({ data: {} });\r\n    const [getRtaValidacion, setRtaValidacion] = useState(false);\r\n\r\n\r\n    const [getParametros, setParametros] = useState({\r\n        id_proceso_disciplinario: procesoDisciplinarioId,\r\n        id_etapa: 2, // from.idEtapa\r\n        reclasificacion: true,\r\n        route: \"/MisPendientes/\",\r\n        tipo_clasificacion: global.Constants.TIPO_CLASIFICACION.VALIDAR_CLASIFICACION,\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            validarClasificacion();\r\n\r\n            console.log(\"GET VALIDACION: \"+getRtaValidacion);\r\n\r\n            if(!getRtaValidacion){\r\n\r\n                console.log(\"GET VALIDACION2: \"+getRtaValidacion);\r\n\r\n                GenericApi.getGeneric(\"clasificacion-radicado/get-reclasificacion/\"+procesoDisciplinarioId).then(\r\n\r\n                    datos => {\r\n                        if (!datos.error) {\r\n                            setClasificacionRadicadoLista(datos)\r\n                            setRespuestaClasificacionRadicado(true)\r\n                            validarClasificacion()\r\n                        }\r\n                        else {\r\n                            setModalState({ title: \"ClasificaciÃ³n del radicado\", message: datos.error.toString(), show: true, redirect: '/ValidarClasificadoForm', from: {from} });\r\n                        }\r\n                        window.showSpinner(false);\r\n                    }\r\n                )\r\n    \r\n    \r\n                ParametrosMasApi.getAllTipoRespuesta().then(\r\n                    datos => !datos.error ? (setListaTipoRespuesta(datos), setRespuestaTipoRespuesta(true)) : window.showModal(1)\r\n                )\r\n    \r\n                const data2 = {\r\n                    \"data\":{\r\n                       \"type\":\"usuario\",\r\n                       \"attributes\":{\r\n                          \"\":\"\"\r\n                       }\r\n                    }\r\n                 }\r\n    \r\n                GenericApi.getByDataGeneric(\"usuario/get-jefe-dependencia\", data2).then(\r\n    \r\n                    datos => {\r\n                        if (!datos.error) {\r\n                            console.log(\"CON JEFE\");\r\n                            console.log(datos.data[0]['attributes']['name']);\r\n                            setJefe(datos.data[0]['attributes']['name'])\r\n                            setRtaJefe(true)\r\n                        }\r\n                        else {\r\n                            console.log(\"SIN JEFE\");\r\n                            setJefe(null);\r\n                            console.log(getJefe);\r\n                            setRtaJefe(false);\r\n                        }\r\n                        window.showSpinner(false);\r\n                    }\r\n                )\r\n            }\r\n            else{\r\n                console.log(\"AHHHHHHH\");\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const validarClasificacion = () => {\r\n        \r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"validacion_clasificado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            GenericApi.getByDataGeneric(\"validar-clasificado/get-validar-clasificado/\"+procesoDisciplinarioId, data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setRtaValidacion(true)\r\n                    }\r\n                }\r\n            )\r\n\r\n            \r\n        )\r\n    }\r\n\r\n\r\n    let selectChangeTipoRespuesta = (e) => {\r\n        setSelectedTipoRespuesta(e);\r\n    }\r\n\r\n    const selectTipoRespuesta = () => {\r\n        return (\r\n            listaTipoRespuesta.data.map((tipo_respuesta, i) => {\r\n                return (\r\n                    <option key={tipo_respuesta.id} value={tipo_respuesta.id}>{tipo_respuesta.attributes.nombre}</option>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const enviarDatos = () => {\r\n        window.showSpinner(true);\r\n\r\n\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": 2,\r\n                    \"id_tipo_expediente\": \"datos.selectedTipoExpediente\",\r\n                    \"observaciones\": \"observaciones\",\r\n                    \"id_tipo_queja\": \"id_tipo_queja\",\r\n                    \"id_termino_respuesta\": \"id_termino_respuesta\",\r\n                    \"fecha_termino\": \"fecha_termino\",\r\n                    \"hora_termino\": \"hora_termino\",\r\n                    \"gestion_juridica\": \"gestion_juridica\",\r\n                    \"estado\": \"estado\",\r\n                    \"id_estado_reparto\": \"id_estado_reparto\",\r\n                    \"id_derecho_peticion\": \"id_derecho_peticion\",\r\n                    \"oficina_control_interno\": \"oficina_control_interno\",\r\n                    \"created_user\": \"created_user\",\r\n                    \"reclasificacion\": false,\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(JSON.stringify(data));\r\n\r\n        GenericApi.addGeneric(\"clasificacion-radicado\",data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    window.showModal(2);\r\n                }\r\n                else {\r\n                    setErrorApi(datos.error.toString())\r\n                    window.showModal(1)\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n     // COMPONENTE CONFIRMACION TIPO DE CLASIFICADO\r\n     const componenteTipoRespuesta = (tipo_respuesta) => {\r\n\r\n        // CONFIRMACION TIPO DE CLASIFICADO = SI\r\n        if (tipo_respuesta === 1) {\r\n            return (\r\n                <>\r\n                    <Formik\r\n\r\n                        initialValues={{\r\n                            aceptacion_clasificacion: true,\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        onSubmit={({ resetForm }) => {\r\n                            enviarDatos();\r\n                        }}\r\n                        >\r\n\r\n                        <Form>\r\n                            <div className=\"block-content block-content-full text-right\">\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary\"><i className=\"fas fa-save\"></i> Registrar</button>\r\n\r\n                                <Link to={`/ValidarClasificacionRadicadoLista/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-danger\"><i className=\"fas fa-window-close\"></i> Cancelar</button>\r\n                                </Link>\r\n                            </div>\r\n                        </Form>\r\n\r\n                    </Formik>\r\n\r\n                </>\r\n            );\r\n        }\r\n\r\n        /// CONFIRMACION TIPO DE CLASIFICADO = NO\r\n        else if (tipo_respuesta === 2) {\r\n            return (\r\n                <>\r\n                    <ClasificacionRadicado getParametros={getParametros} id=\"cr_componente\" name=\"cr_componente\" />\r\n                   \r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const [respuestaClasificacionRadicado, setRespuestaClasificacionRadicado] = useState(false);\r\n    const [clasificacionRadicadoLista, setClasificacionRadicadoLista] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const listaClasificacionRadicado = () => {\r\n\r\n        if (clasificacionRadicadoLista.data != null && typeof (clasificacionRadicadoLista.data) != 'undefined') {\r\n            return (\r\n\r\n\r\n                clasificacionRadicadoLista.data.map((clasificacion_radicado, i) => {\r\n                    return (\r\n                        cargarTabla(clasificacion_radicado, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                clasificacionRadicadoLista.map((clasificacion_radicado, i) => {\r\n                    return (\r\n                        cargarTabla(clasificacion_radicado, i)\r\n                    )\r\n                })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const cargarTabla = (clasificacion_radicado, i) => {\r\n        return (\r\n            <>\r\n                {(i === 0 ? <tr style={{ backgroundColor: '#D0D1D9' }}>{cargarColumnasTabla(clasificacion_radicado, \"Aceptar\", false)}</tr> : null) }\r\n                {(i === 1 ? <tr>{cargarColumnasTabla(clasificacion_radicado, \"Aceptar\", false)}</tr>:null)}\r\n                {(i === 2 ? <tr>{cargarColumnasTabla(clasificacion_radicado, \"Aceptar\", true)}</tr>:null)}    \r\n            </>   \r\n        )\r\n    }\r\n\r\n\r\n    const cargarColumnasTabla = (clasificacion_radicado, nombre_boton, reparto) => {\r\n\r\n        return (\r\n        <>\r\n        <td>{clasificacion_radicado.id}</td>\r\n            <td>{clasificacion_radicado.attributes.etapa.nombre}</td>\r\n            <td>{clasificacion_radicado.attributes.expediente.nombre}<br/></td>\r\n            <td>{/*clasificacion_radicado.attributes.dependencia.nombre*/}</td>\r\n            <td>{clasificacion_radicado.attributes.usuario_registra.nombre} {clasificacion_radicado.attributes.usuario_registra.apellido}</td>\r\n            <td>{/*clasificacion_radicado.attributes.log.id_funcionario_asignado*/}</td>\r\n            <td>{clasificacion_radicado.attributes.created_at}</td>\r\n\r\n            {getRtaJefe ? (                                       \r\n                <td>\r\n                    <Formik\r\n                        initialValues={{\r\n                            uuid: clasificacion_radicado.id,\r\n                            id_clasificacion_radicado: clasificacion_radicado.id,\r\n                            id_proceso_disciplinario: clasificacion_radicado.attributes.id_proceso_disciplinario\r\n                        }}\r\n                        enableReinitialize\r\n\r\n                        validate={(valores) => {\r\n                            let errores = {}\r\n                            return errores\r\n                        }}\r\n\r\n                        onSubmit={(valores, { resetForm }) => {\r\n                            console.log(valores);\r\n                            asignarCaso(valores, reparto);\r\n                        }}\r\n                    >\r\n                        <Form>\r\n                            <button type=\"submit\" className=\"btn btn-primary\"><i class=\"fas fa-check-square\"></i> Aceptar</button>\r\n                        </Form>\r\n                    </Formik>\r\n                </td>):null\r\n            }\r\n        </>\r\n        \r\n        );\r\n\r\n    }\r\n\r\n    const asignarCaso = (datos, reparto) => {\r\n\r\n        window.showSpinner(true);\r\n        let data;\r\n\r\n        console.log(reparto);\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"clasificacion_radicado\",\r\n                \"attributes\": {\r\n                    \"uuid\": datos.uuid,\r\n                    \"id_proceso_disciplinario\": datos.id_proceso_disciplinario,\r\n                    \"id_etapa\": 2,\r\n                    \"id_tipo_expediente\": datos.id_tipo_expediente,\r\n                    \"observaciones\": \"\",\r\n                    \"id_tipo_queja\": null,\r\n                    \"id_termino_respuesta\": null,\r\n                    \"fecha_termino\": null,\r\n                    \"hora_termino\": null,\r\n                    \"gestion_juridica\": false,\r\n                    \"estado\": true,\r\n                    \"id_estado_reparto\": null,\r\n                    \"id_tipo_derecho_peticion\": null,\r\n                    \"oficina_control_interno\": false,\r\n                    \"created_user\": datos.funcionario_registra_name,\r\n                    \"reclasificacion\": null,\r\n                    \"reparto\": reparto\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(\"******************************\");\r\n        console.log(JSON.stringify(data));\r\n        console.log(\"******************************\");\r\n\r\n        GenericApi.addGeneric(\"clasificacion-radicado/asignar-caso-por-jefe\", data).then(\r\n\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setModalState({ title: \"AsignaciÃ³n del proceso disciplinario\", message: \"El proceso disciplinario es asignado a \"+datos.data.attributes.funcionario_asignado.nombre +\" \"+ datos.data.attributes.funcionario_asignado.apellido, show: true, redirect: '/MisPendientes' });\r\n                }\r\n                else {\r\n                    console.log(datos.error.toString());\r\n                    setErrorApi(datos.error.toString())\r\n                    window.showModal(1)\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <>\r\n           {<Spinner />}\r\n            <ModalGen data={modalState} />\r\n            \r\n            <div className=\"row\">\r\n\r\n            <div className=\"col-md-12\">\r\n                    <div className=\"block block-rounded block-bordered\">\r\n                        <div className=\"block-content\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" aria-current=\"page\" to={`/ClasificacionRadicadoLista/`} state={{ from: from }}><small>Validar ClasificaciÃ³n</small></Link></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"block block-themed\">\r\n                        <div className=\"block-header\">\r\n                            <h3 className=\"block-title\"> SINPROC No {radicado} :: <strong>Validar ClasificaciÃ³n</strong></h3>\r\n                        </div>\r\n\r\n                        <div className=\"block-content\">\r\n                            <>\r\n                                {\r\n                                    (hasAccess('EI_ValidarClasificacion', 'Consultar')) ? (\r\n\r\n                                        <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Id</th>\r\n                                                    <th>Etapa</th>\r\n                                                    <th>Tipo de expediente</th>\r\n                                                    <th>Registrado En</th>\r\n                                                    <th>Registrado por</th>\r\n                                                    <th>Usuario Asignado</th>\r\n                                                    <th>Fecha de registro</th>\r\n                                                    {getRtaJefe ? (\r\n                                                        <th>AsignaciÃ³n</th>\r\n                                                    ):null}\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {respuestaClasificacionRadicado ? listaClasificacionRadicado() : null}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    ) : null\r\n\r\n                                }\r\n                            </>\r\n\r\n                            {(!getRtaValidacion ?(\r\n\r\n                                <div className=\"block-content\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"ingresoTipoExpediente\">Confirma la clasificaciÃ³n del expediente? <span className=\"text-danger\">*</span></label>\r\n                                            <select className=\"form-control\" id=\"ingresoTipoExpediente\" name=\"ingresoTipoExpediente\"\r\n                                                value={selectedTipoRespuesta} onChange={e => selectChangeTipoRespuesta(e.target.value)}>\r\n                                                <option value=\"\">Por favor seleccione</option>\r\n                                                {respuestaTipoRespuesta ? selectTipoRespuesta() : null}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/*SI APLICA RECLASIFIFCACION*/}\r\n                                {selectedTipoRespuesta === '1' ? componenteTipoRespuesta(1) : ''}\r\n                                {/*NO APLICA RECLASIFIFCACION*/}\r\n                                {selectedTipoRespuesta === '2' ? componenteTipoRespuesta(2) : ''}\r\n\r\n\r\n                                </div>\r\n\r\n                            ):null)\r\n\r\n                            }\r\n\r\n\r\n                            \r\n\r\n                        </div>\r\n\r\n                        \r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\nexport default ValidarClasificacionRadicadoForm;\r\n"]},"metadata":{},"sourceType":"module"}