{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _ = require(\"lodash\");\n\n/**\n * The shared strings table.\n * @ignore\n */\nvar SharedStrings = /*#__PURE__*/function () {\n  /**\n   * Constructs a new instance of _SharedStrings.\n   * @param {{}} node - The node.\n   */\n  function SharedStrings(node) {\n    _classCallCheck(this, SharedStrings);\n    this._stringArray = [];\n    this._indexMap = {};\n    this._init(node);\n    this._cacheExistingSharedStrings();\n  }\n\n  /**\n   * Gets the index for a string\n   * @param {string|Array.<{}>} string - The string or rich text array.\n   * @returns {number} The index\n   */\n  _createClass(SharedStrings, [{\n    key: \"getIndexForString\",\n    value: function getIndexForString(string) {\n      // If the string is found in the cache, return the index.\n      var key = _.isArray(string) ? JSON.stringify(string) : string;\n      var index = this._indexMap[key];\n      if (index >= 0) return index;\n\n      // Otherwise, add it to the caches.\n      index = this._stringArray.length;\n      this._stringArray.push(string);\n      this._indexMap[key] = index;\n\n      // Append a new si node.\n      this._node.children.push({\n        name: \"si\",\n        children: _.isArray(string) ? string : [{\n          name: \"t\",\n          attributes: {\n            'xml:space': \"preserve\"\n          },\n          children: [string]\n        }]\n      });\n      return index;\n    }\n\n    /**\n     * Get the string for a given index\n     * @param {number} index - The index\n     * @returns {string} The string\n     */\n  }, {\n    key: \"getStringByIndex\",\n    value: function getStringByIndex(index) {\n      return this._stringArray[index];\n    }\n\n    /**\n     * Convert the collection to an XML object.\n     * @returns {{}} The XML object.\n     */\n  }, {\n    key: \"toXml\",\n    value: function toXml() {\n      return this._node;\n    }\n\n    /**\n     * Store any existing values in the caches.\n     * @private\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_cacheExistingSharedStrings\",\n    value: function _cacheExistingSharedStrings() {\n      var _this = this;\n      this._node.children.forEach(function (node, i) {\n        var content = node.children[0];\n        if (content.name === \"t\") {\n          var string = content.children[0];\n          _this._stringArray.push(string);\n          _this._indexMap[string] = i;\n        } else {\n          // TODO: Properly support rich text nodes in the future. For now just store the object as a placeholder.\n          _this._stringArray.push(node.children);\n          _this._indexMap[JSON.stringify(node.children)] = i;\n        }\n      });\n    }\n\n    /**\n     * Initialize the node.\n     * @param {{}} [node] - The shared strings node.\n     * @private\n     * @returns {undefined}\n     */\n  }, {\n    key: \"_init\",\n    value: function _init(node) {\n      if (!node) node = {\n        name: \"sst\",\n        attributes: {\n          xmlns: \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"\n        },\n        children: []\n      };\n      this._node = node;\n      delete this._node.attributes.count;\n      delete this._node.attributes.uniqueCount;\n    }\n  }]);\n  return SharedStrings;\n}();\nmodule.exports = SharedStrings;\n\n/*\nxl/sharedStrings.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<sst xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" count=\"13\" uniqueCount=\"4\">\n\t<si>\n\t\t<t>Foo</t>\n\t</si>\n\t<si>\n\t\t<t>Bar</t>\n\t</si>\n\t<si>\n\t\t<t>Goo</t>\n\t</si>\n\t<si>\n\t\t<r>\n\t\t\t<t>s</t>\n\t\t</r><r>\n\t\t\t<rPr>\n\t\t\t\t<b/>\n\t\t\t\t<sz val=\"11\"/>\n\t\t\t\t<color theme=\"1\"/>\n\t\t\t\t<rFont val=\"Calibri\"/>\n\t\t\t\t<family val=\"2\"/>\n\t\t\t\t<scheme val=\"minor\"/>\n\t\t\t</rPr><t>d;</t>\n\t\t</r><r>\n\t\t\t<rPr>\n\t\t\t\t<sz val=\"11\"/>\n\t\t\t\t<color theme=\"1\"/>\n\t\t\t\t<rFont val=\"Calibri\"/>\n\t\t\t\t<family val=\"2\"/>\n\t\t\t\t<scheme val=\"minor\"/>\n\t\t\t</rPr><t>lfk;l</t>\n\t\t</r>\n\t</si>\n</sst>\n*/","map":{"version":3,"names":["_","require","SharedStrings","node","_stringArray","_indexMap","_init","_cacheExistingSharedStrings","string","key","isArray","JSON","stringify","index","length","push","_node","children","name","attributes","forEach","i","content","xmlns","count","uniqueCount","module","exports"],"sources":["C:/w2d/personeria/personeria-ui/node_modules/xlsx-populate/lib/SharedStrings.js"],"sourcesContent":["\"use strict\";\n\nconst _ = require(\"lodash\");\n\n/**\n * The shared strings table.\n * @ignore\n */\nclass SharedStrings {\n    /**\n     * Constructs a new instance of _SharedStrings.\n     * @param {{}} node - The node.\n     */\n    constructor(node) {\n        this._stringArray = [];\n        this._indexMap = {};\n\n        this._init(node);\n        this._cacheExistingSharedStrings();\n    }\n\n    /**\n     * Gets the index for a string\n     * @param {string|Array.<{}>} string - The string or rich text array.\n     * @returns {number} The index\n     */\n    getIndexForString(string) {\n        // If the string is found in the cache, return the index.\n        const key = _.isArray(string) ? JSON.stringify(string) : string;\n        let index = this._indexMap[key];\n        if (index >= 0) return index;\n\n        // Otherwise, add it to the caches.\n        index = this._stringArray.length;\n        this._stringArray.push(string);\n        this._indexMap[key] = index;\n\n        // Append a new si node.\n        this._node.children.push({\n            name: \"si\",\n            children: _.isArray(string) ? string : [\n                {\n                    name: \"t\",\n                    attributes: { 'xml:space': \"preserve\" },\n                    children: [string]\n                }\n            ]\n        });\n\n        return index;\n    }\n\n    /**\n     * Get the string for a given index\n     * @param {number} index - The index\n     * @returns {string} The string\n     */\n    getStringByIndex(index) {\n        return this._stringArray[index];\n    }\n\n    /**\n     * Convert the collection to an XML object.\n     * @returns {{}} The XML object.\n     */\n    toXml() {\n        return this._node;\n    }\n\n    /**\n     * Store any existing values in the caches.\n     * @private\n     * @returns {undefined}\n     */\n    _cacheExistingSharedStrings() {\n        this._node.children.forEach((node, i) => {\n            const content = node.children[0];\n            if (content.name === \"t\") {\n                const string = content.children[0];\n                this._stringArray.push(string);\n                this._indexMap[string] = i;\n            } else {\n                // TODO: Properly support rich text nodes in the future. For now just store the object as a placeholder.\n                this._stringArray.push(node.children);\n                this._indexMap[JSON.stringify(node.children)] = i;\n            }\n        });\n    }\n\n    /**\n     * Initialize the node.\n     * @param {{}} [node] - The shared strings node.\n     * @private\n     * @returns {undefined}\n     */\n    _init(node) {\n        if (!node) node = {\n            name: \"sst\",\n            attributes: {\n                xmlns: \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"\n            },\n            children: []\n        };\n\n        this._node = node;\n\n        delete this._node.attributes.count;\n        delete this._node.attributes.uniqueCount;\n    }\n}\n\nmodule.exports = SharedStrings;\n\n/*\nxl/sharedStrings.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<sst xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" count=\"13\" uniqueCount=\"4\">\n\t<si>\n\t\t<t>Foo</t>\n\t</si>\n\t<si>\n\t\t<t>Bar</t>\n\t</si>\n\t<si>\n\t\t<t>Goo</t>\n\t</si>\n\t<si>\n\t\t<r>\n\t\t\t<t>s</t>\n\t\t</r><r>\n\t\t\t<rPr>\n\t\t\t\t<b/>\n\t\t\t\t<sz val=\"11\"/>\n\t\t\t\t<color theme=\"1\"/>\n\t\t\t\t<rFont val=\"Calibri\"/>\n\t\t\t\t<family val=\"2\"/>\n\t\t\t\t<scheme val=\"minor\"/>\n\t\t\t</rPr><t>d;</t>\n\t\t</r><r>\n\t\t\t<rPr>\n\t\t\t\t<sz val=\"11\"/>\n\t\t\t\t<color theme=\"1\"/>\n\t\t\t\t<rFont val=\"Calibri\"/>\n\t\t\t\t<family val=\"2\"/>\n\t\t\t\t<scheme val=\"minor\"/>\n\t\t\t</rPr><t>lfk;l</t>\n\t\t</r>\n\t</si>\n</sst>\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}