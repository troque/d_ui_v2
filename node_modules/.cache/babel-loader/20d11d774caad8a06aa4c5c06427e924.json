{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\LogSistema\\\\LogProcesosAsignados.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useLocation } from 'react-router-dom';\nimport LogApi from '../Api/Services/LogApi';\nimport moment from 'moment';\nimport { Link } from \"react-router-dom\";\nimport DataTable from 'react-data-table-component';\nimport GenericApi from '../Api/Services/GenericApi';\nimport { getUser } from '../../components/Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LogProcesosAsignados() {\n  _s();\n\n  const [errorApi, setErrorApi] = useState('');\n  const [getSeach, setSeach] = useState('');\n  const [getRespuestaLog, setRespuestaLog] = useState(false);\n  const [getLogLista, setLogLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const paganationPerPages = process.env.PAGINATION_PER_PAGE;\n  const [perPage, setPerPage] = useState(process.env.PAGINATION_PER_PAGE);\n  const [pageActual, setPageActual] = useState(1);\n  const [getNombreUsuario, setNombreUsuario] = useState(\"\");\n  const columns = [{\n    name: 'Fecha',\n    selector: log => log.attributes.created_at,\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Etapa',\n    selector: log => log.attributes.etapa.nombre,\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Proceso',\n    selector: log => log.proceso_disciplinario.radicado,\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Funcionario Asignado',\n    selector: log => log.attributes.id_funcionario_asignado,\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Fecha',\n    cell: log => log.attributes.created_at,\n    selector: log => log.attributes.created_at,\n    sortable: true,\n    width: \"10%\"\n  }]; ///////////////////////////////////////////////////////////\n  /////////////////// PARA LA BÃšSQUEDA //////////////////////\n  ///////////////////////////////////////////////////////////\n\n  const [getLista, setLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getListaTotal, setListaTotal] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  /* */\n\n  const handlePageChange = page => {\n    //window.showSpinner(true);\n    setPageActual(page); //cargarLogProcesoDisciplinario(page, perPage, '1');\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    //window.showSpinner(true);\n    setPerPage(newPerPage);\n    setPageActual(page); //cargarLogProcesoDisciplinario(page, newPerPage, '1');\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      setNombreUsuario(getUser().nombre);\n      console.log(\"NOMBRE DE USUARIO: \" + getUser().nombre);\n      cargarProcesosAsignados(1, paganationPerPages, \"1\");\n    }\n\n    fetchData();\n  }, []);\n\n  const cargarProcesosAsignados = (page, perPage, estado) => {\n    const data = {\n      \"data\": {\n        \"type\": \"cierre_etapa\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": \"id_proceso_disciplinario\",\n          \"id_etapa\": \"1\",\n          \"created_user\": getUser().nombre,\n          'per_page': perPage,\n          'current_page': page\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('cierre-etapa/procesos-diciplinario-asignados/', data).then(datos => {\n      if (!datos.error) {\n        console.log(datos);\n        setLogLista(datos);\n        window.showSpinner(false);\n      } else {\n        window.showSpinner(false);\n        window.showModal(1);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block block-themed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"block-title\",\n          children: \"Procesos Gestionados \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 mt-2 mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(LogProcesosAsignados, \"3K2PSAC1ESuzPFwpxetXZyvxJ9k=\");\n\n_c = LogProcesosAsignados;\nexport default LogProcesosAsignados;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogProcesosAsignados\");","map":{"version":3,"sources":["C:/w2d/personeria/personeria-ui/src/components/LogSistema/LogProcesosAsignados.js"],"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","useLocation","LogApi","moment","Link","DataTable","GenericApi","getUser","LogProcesosAsignados","errorApi","setErrorApi","getSeach","setSeach","getRespuestaLog","setRespuestaLog","getLogLista","setLogLista","data","links","meta","paganationPerPages","process","env","PAGINATION_PER_PAGE","perPage","setPerPage","pageActual","setPageActual","getNombreUsuario","setNombreUsuario","columns","name","selector","log","attributes","created_at","sortable","width","etapa","nombre","proceso_disciplinario","radicado","id_funcionario_asignado","cell","getLista","setLista","getListaTotal","setListaTotal","handlePageChange","page","handlePerRowsChange","newPerPage","fetchData","console","cargarProcesosAsignados","estado","getByDataGeneric","then","datos","error","window","showSpinner","showModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,QAAlD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,OAAT,QAAwB,+BAAxB;;;;AAEA,SAASC,oBAAT,GAAgC;AAAA;;AAE5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,QAAD,EAAWC,QAAX,IAAuBhB,QAAQ,CAAC,EAAD,CAArC;AAEA,QAAM,CAACiB,eAAD,EAAkBC,eAAlB,IAAqClB,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAACmB,WAAD,EAAcC,WAAd,IAA6BpB,QAAQ,CAAC;AAAEqB,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAAD,CAA3C;AACA,QAAMC,kBAAkB,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAvC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAACyB,OAAO,CAACC,GAAR,CAAYC,mBAAb,CAAtC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8B/B,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACgC,gBAAD,EAAmBC,gBAAnB,IAAuCjC,QAAQ,CAAC,EAAD,CAArD;AAGA,QAAMkC,OAAO,GAAG,CAEZ;AACIC,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAeC,UAFpC;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAFY,EASZ;AACIN,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAeI,KAAf,CAAqBC,MAF1C;AAGIH,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,KAAK,EAAE;AAJX,GATY,EAeZ;AACIN,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACO,qBAAJ,CAA0BC,QAF/C;AAGIL,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAfY,EAqBZ;AACIN,IAAAA,IAAI,EAAE,sBADV;AAEIC,IAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAeQ,uBAFpC;AAGIN,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,KAAK,EAAE;AAJX,GArBY,EA4BZ;AACIN,IAAAA,IAAI,EAAE,OADV;AAEIY,IAAAA,IAAI,EAAEV,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAeC,UAFhC;AAGIH,IAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAeC,UAHpC;AAIIC,IAAAA,QAAQ,EAAE,IAJd;AAKIC,IAAAA,KAAK,EAAE;AALX,GA5BY,CAAhB,CAb4B,CAmDxB;AACJ;AACA;;AAEA,QAAM,CAACO,QAAD,EAAWC,QAAX,IAAuBjD,QAAQ,CAAC;AAAEqB,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAAD,CAArC;AACA,QAAM,CAAC2B,aAAD,EAAgBC,aAAhB,IAAiCnD,QAAQ,CAAC;AAAEqB,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAAD,CAA/C;AAIA;;AAEA,QAAM6B,gBAAgB,GAAGC,IAAI,IAAI;AAC7B;AACAtB,IAAAA,aAAa,CAACsB,IAAD,CAAb,CAF6B,CAG7B;AACH,GAJD;;AAMA,QAAMC,mBAAmB,GAAG,OAAOC,UAAP,EAAmBF,IAAnB,KAA4B;AACpD;AACAxB,IAAAA,UAAU,CAAC0B,UAAD,CAAV;AACAxB,IAAAA,aAAa,CAACsB,IAAD,CAAb,CAHoD,CAIpD;AAEH,GAND;;AASAtD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeyD,SAAf,GAA2B;AAEvBvB,MAAAA,gBAAgB,CAACtB,OAAO,GAAGgC,MAAX,CAAhB;AAEAc,MAAAA,OAAO,CAACpB,GAAR,CAAY,wBAAsB1B,OAAO,GAAGgC,MAA5C;AACAe,MAAAA,uBAAuB,CAAC,CAAD,EAAIlC,kBAAJ,EAAwB,GAAxB,CAAvB;AAEH;;AACDgC,IAAAA,SAAS;AACZ,GAVQ,EAUN,EAVM,CAAT;;AAaA,QAAME,uBAAuB,GAAG,CAACL,IAAD,EAAOzB,OAAP,EAAgB+B,MAAhB,KAA2B;AAEvD,UAAMtC,IAAI,GAAG;AACT,cAAQ;AACJ,gBAAQ,cADJ;AAEJ,sBAAc;AACV,sCAA4B,0BADlB;AAEV,sBAAY,GAFF;AAGV,0BAAgBV,OAAO,GAAGgC,MAHhB;AAIV,sBAAYf,OAJF;AAKV,0BAAgByB;AALN;AAFV;AADC,KAAb;AAaA3C,IAAAA,UAAU,CAACkD,gBAAX,CAA4B,+CAA5B,EAA6EvC,IAA7E,EAAmFwC,IAAnF,CACIC,KAAK,IAAI;AACL,UAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AACdN,QAAAA,OAAO,CAACpB,GAAR,CAAYyB,KAAZ;AACA1C,QAAAA,WAAW,CAAC0C,KAAD,CAAX;AACAE,QAAAA,MAAM,CAACC,WAAP,CAAmB,KAAnB;AACH,OAJD,MAKK;AACDD,QAAAA,MAAM,CAACC,WAAP,CAAmB,KAAnB;AACAD,QAAAA,MAAM,CAACE,SAAP,CAAiB,CAAjB;AACH;AACJ,KAXL;AAaH,GA5BD;;AA+BA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCAEI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCAEI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAaI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCAEI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA8BH;;GAvJQtD,oB;;KAAAA,oB;AAyJT,eAAeA,oBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useLocation } from 'react-router-dom'\r\nimport LogApi from '../Api/Services/LogApi';\r\nimport moment from 'moment';\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../Api/Services/GenericApi';\r\nimport { getUser } from '../../components/Utils/Common';\r\n\r\nfunction LogProcesosAsignados() {\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getSeach, setSeach] = useState('');\r\n\r\n    const [getRespuestaLog, setRespuestaLog] = useState(false);\r\n    const [getLogLista, setLogLista] = useState({ data: [], links: [], meta: [] });\r\n    const paganationPerPages = process.env.PAGINATION_PER_PAGE;\r\n    const [perPage, setPerPage] = useState(process.env.PAGINATION_PER_PAGE);\r\n    const [pageActual, setPageActual] = useState(1);\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n\r\n\r\n    const columns = [\r\n\r\n        {\r\n            name: 'Fecha',\r\n            selector: log => log.attributes.created_at,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n\r\n        {\r\n            name: 'Etapa',\r\n            selector: log => log.attributes.etapa.nombre,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            name: 'Proceso',\r\n            selector: log => log.proceso_disciplinario.radicado,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            name: 'Funcionario Asignado',\r\n            selector: log => log.attributes.id_funcionario_asignado,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n\r\n        {\r\n            name: 'Fecha',\r\n            cell: log => log.attributes.created_at,\r\n            selector: log => log.attributes.created_at,\r\n            sortable: true,\r\n            width: \"10%\"\r\n        },\r\n\r\n    ];\r\n\r\n        ///////////////////////////////////////////////////////////\r\n    /////////////////// PARA LA BÃšSQUEDA //////////////////////\r\n    ///////////////////////////////////////////////////////////\r\n\r\n    const [getLista, setLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getListaTotal, setListaTotal] = useState({ data: [], links: [], meta: [] });\r\n\r\n\r\n\r\n    /* */\r\n\r\n    const handlePageChange = page => {\r\n        //window.showSpinner(true);\r\n        setPageActual(page);\r\n        //cargarLogProcesoDisciplinario(page, perPage, '1');\r\n    }\r\n\r\n    const handlePerRowsChange = async (newPerPage, page) => {\r\n        //window.showSpinner(true);\r\n        setPerPage(newPerPage);\r\n        setPageActual(page);\r\n        //cargarLogProcesoDisciplinario(page, newPerPage, '1');\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            setNombreUsuario(getUser().nombre);\r\n\r\n            console.log(\"NOMBRE DE USUARIO: \"+getUser().nombre);\r\n            cargarProcesosAsignados(1, paganationPerPages, \"1\");\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const cargarProcesosAsignados = (page, perPage, estado) => {\r\n\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"cierre_etapa\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": \"id_proceso_disciplinario\",\r\n                    \"id_etapa\": \"1\",\r\n                    \"created_user\": getUser().nombre,\r\n                    'per_page': perPage,\r\n                    'current_page': page\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('cierre-etapa/procesos-diciplinario-asignados/', data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    console.log(datos);\r\n                    setLogLista(datos);\r\n                    window.showSpinner(false);\r\n                }\r\n                else {\r\n                    window.showSpinner(false);\r\n                    window.showModal(1);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"block block-themed\">\r\n                <div className=\"block-header\">\r\n                    <h3 className=\"block-title\">Procesos Gestionados </h3>\r\n                </div>\r\n                <div className=\"block-content\">\r\n\r\n                    <div className='row'>\r\n\r\n                        <div className='col-md-3'>\r\n                            <div className=\"form-group \">\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className='col-md-12'>\r\n\r\n                        <div className='col-md-12 mt-2 mb-2'>\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LogProcesosAsignados;"]},"metadata":{},"sourceType":"module"}