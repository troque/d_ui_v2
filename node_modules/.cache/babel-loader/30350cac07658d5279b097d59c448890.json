{"ast":null,"code":"import _toConsumableArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/w2d/personeria/personeria-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useLocation}from'react-router-dom';import{getUser}from'../../../components/Utils/Common';import'../../Utils/Constants';import GenericApi from'../../Api/Services/GenericApi';import{Link}from\"react-router-dom\";import ModalGen from'../../Utils/Modals/ModalGeneric';import{ErrorMessage,Field,Form,Formik}from'formik';import InfoErrorApi from'../../Utils/InfoErrorApi';import ActuacionParametrosPlantillaForm from'../Herramientas/ActuacionParametrosPlantillaForm';import Spinner from'../../Utils/Spinner';import Select from'react-select';import makeAnimated from'react-select/animated';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ActuacionesForm(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),errorApi=_useState2[0],setErrorApi=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),getNombreUsuario=_useState4[0],setNombreUsuario=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),getListaUsuariosComisorio=_useState6[0],setListaUsuariosComisorio=_useState6[1];var _useState7=useState({title:\"\",message:\"\",show:false}),_useState8=_slicedToArray(_useState7,2),getModalState=_useState8[0],setModalState=_useState8[1];var _useState9=useState([{archivo:{},filebase64:\"\",size:0,ext:\"\"}]),_useState10=_slicedToArray(_useState9,2),inputListArchivos=_useState10[0],setInputListArchivos=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),getMasActuacionId=_useState12[0],setMasActuacionId=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),getUsuarioComisionado=_useState14[0],setUsuarioComisionado=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),getListaActuacionesOptions=_useState16[0],setListaActuacionesOptions=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),getListaActuacionesDefault=_useState18[0],setListaActuacionesDefault=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),getNombreDocumentoMasActuacion=_useState20[0],setNombreDocumentoMasActuacion=_useState20[1];var _useState21=useState(''),_useState22=_slicedToArray(_useState21,2),getNombreProceso=_useState22[0],setNombreProceso=_useState22[1];var location=useLocation();var _location$state=location.state,from=_location$state.from,selected_id_etapa=_location$state.selected_id_etapa,tipoActuacion=_location$state.tipoActuacion,vengo=_location$state.vengo;var deDondeVengo=vengo?vengo:false;var radicado=from.radicado;var procesoDisciplinarioId=from.procesoDisciplinarioId;// let idEtapa = from.idEtapa >= 3 ? from.idEtapa : 3;\nuseEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:window.showSpinner(true);setNombreUsuario(getUser().nombre);nombreProceso();if(tipoActuacion==\"Comisorio\"){getListUsuarios(getUser().id_dependencia);}case 4:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();selectOptionsActuaciones();},[]);var nombreProceso=function nombreProceso(){GenericApi.getByIdGeneric(\"nombre-proceso\",from.procesoDisciplinarioId).then(function(datos){if(!datos.error){setNombreProceso(datos.data.attributes.nombre);getAllTipoActuaciones();}});};var getListUsuarios=function getListUsuarios(id_dependencia){GenericApi.getByIdGeneric(\"usuario/get-todos-usuarios-dependencia\",id_dependencia).then(function(datos){if(!datos.error){setListaUsuariosComisorio(datos.data);}else{setModalState({title:getNombreProceso+\" :: Crear \"+tipoActuacion,message:datos.error.toString(),show:true,redirect:'/PreguntaImpedimentos',from:{from:from,selected_id_etapa:selected_id_etapa},alert:global.Constants.TIPO_ALERTA.ERROR});}});};/**\r\n     * Trae la lista de todos los tipos de actuaciones.\r\n     */var getAllTipoActuaciones=function getAllTipoActuaciones(){GenericApi.getByIdGeneric(\"mas_actuaciones/actuaciones-etapa\",selected_id_etapa).then(function(datos){// Se valida que no haya error\nif(!datos.error){// Se envia la informacion al metood encargado de validar y sacar los valores correspondientes del select\nselectOptionsActuaciones(datos.data);// Se desactiva el spinner\nwindow.showSpinner(false);}else{setModalState({title:getNombreProceso+\" :: Crear actuaciones\",message:datos.error.toString(),show:true,redirect:'/ActuacionesForm',from:{from:from},alert:global.Constants.TIPO_ALERTA.ERROR});}});};var selectOptionsActuaciones=function selectOptionsActuaciones(datos){// Se inicializan las variables\nvar listaActuacionesValidar=[];// Se inicializa la cantidad de cada actuacion en 0\nvar cantidadActuaciones=0;var cantidadImpedimentos=0;var cantidadComisorios=0;// Se valida que exista el array, tenga longitud \nif(datos&&datos.length>0){// Se recorre el array de las actuaciones\nfor(var index=0;index<datos.length;index++){// Se captura el elemento por posición\nvar element=datos[index];// Se valida cuando es actuación\nif(element.attributes.tipo_actuacion==0&&tipoActuacion==\"Actuación\"){// Se suma +1 al elemento\ncantidadActuaciones++;// Se añade la actuacion a la lista\nlistaActuacionesValidar.push({label:element.attributes.nombre_actuacion,value:element.id});}// Se valida cuando es impedimento \nelse if(element.attributes.tipo_actuacion==1&&tipoActuacion==\"Impedimento\"){// Se suma +1 al elemento\ncantidadImpedimentos++;// Se añade el impedimento a la lista\nlistaActuacionesValidar.push({label:element.attributes.nombre_actuacion,value:element.id});}// Se valida cuando es comisorio\nelse if(element.attributes.tipo_actuacion==2&&tipoActuacion==\"Comisorio\"){// Se suma +1 al elemento\ncantidadComisorios++;// Se añade el comisorio a la lista\nlistaActuacionesValidar.push({label:element.attributes.nombre_actuacion,value:element.id});}}// ------------------------------------------------------------------------------------ // \n// Se recorre el array de las actuaciones para preseleccionar y cargar la plantilla automaticamente\nfor(var _index=0;_index<datos.length;_index++){// Se captura el elemento por posición\nvar _element=datos[_index];// Se valida cuando es actuación\nif(cantidadActuaciones==1&&_element.attributes.tipo_actuacion==0&&tipoActuacion==\"Actuación\"){// Se setea el valor para que auto cargue la plantilla\nsetMasActuacionId(_element.id);// Se añade para qué quede preseleccionada en el select\nsetListaActuacionesDefault({label:_element.attributes.nombre_actuacion,value:_element.id});}// Se valida cuando es impedimento \nelse if(cantidadImpedimentos==1&&_element.attributes.tipo_actuacion==1&&tipoActuacion==\"Impedimento\"){// Se setea el valor para que auto cargue la plantilla\nsetMasActuacionId(_element.id);// Se añade para qué quede preseleccionada en el select\nsetListaActuacionesDefault({label:_element.attributes.nombre_actuacion,value:_element.id});}// Se valida cuando es comisorio\nelse if(cantidadComisorios==1&&_element.attributes.tipo_actuacion==2&&tipoActuacion==\"Comisorio\"){// Se setea el valor para que auto cargue la plantilla\nsetMasActuacionId(_element.id);// Se añade para qué quede preseleccionada en el select\nsetListaActuacionesDefault({label:_element.attributes.nombre_actuacion,value:_element.id});}}}// Se setea el valor al array lista\nsetListaActuacionesOptions(listaActuacionesValidar);};var enviarDatos=function enviarDatos(datos){window.showSpinner(true);var actuacionId=datos.id_actuacion;if(tipoActuacion==2){var dataUsuarioComisorio={\"data\":{\"type\":\"usuario-comisionado\",\"attributes\":{\"id_proceso_disciplinario\":\"\"}}};GenericApi.addGeneric(\"proceso-diciplinario/usuario-comisionado/\"+getUsuarioComisionado+\"/\"+procesoDisciplinarioId,dataUsuarioComisorio);}var data={\"data\":{\"type\":'actuaciones',\"attributes\":{\"id_actuacion\":actuacionId,\"usuario_accion\":getNombreUsuario,\"id_estado_actuacion\":3,\"created_user\":getNombreUsuario,\"fileBase64\":inputListArchivos[0].filebase64,\"nombre_archivo\":inputListArchivos[0].archivo.name,\"ext\":inputListArchivos[0].ext,\"peso\":inputListArchivos[0].archivo.size,\"id_proceso_disciplinario\":procesoDisciplinarioId,\"id_etapa\":selected_id_etapa,\"estado\":true}}};GenericApi.addGeneric(\"actuaciones\",data).then(function(datos){if(!datos.error){window.showSpinner(false);;if(tipoActuacion==\"Impedimento\"){setModalState({title:getNombreProceso+\" :: Crear \"+tipoActuacion,message:'Registros exitoso',show:true,redirect:\"/ActuacionesVer/\"+procesoDisciplinarioId+\"/\"+selected_id_etapa+\"/1\",from:{from:from,selected_id_etapa:selected_id_etapa,id:datos.data.id,nombre:getListaActuacionesDefault.label,estadoActualActuacion:\"Pendiente aprobación\",tipoActuacion:\"1\"},alert:global.Constants.TIPO_ALERTA.EXITO});}else{setModalState({title:getNombreProceso+\" :: Crear \"+tipoActuacion,message:'Registro exitoso',show:true,redirect:'/Transacciones',from:{from:from,selected_id_etapa:selected_id_etapa,id_actuacion:actuacionId},alert:global.Constants.TIPO_ALERTA.EXITO});}}else{setModalState({title:getNombreProceso+\" :: Crear \"+tipoActuacion,message:datos.error.toString(),show:true,redirect:'/ActuacionesLista',from:{from:from,selected_id_etapa:selected_id_etapa},alert:global.Constants.TIPO_ALERTA.ERROR});}});};var selectChangeMasActuacion=function selectChangeMasActuacion(id,nombreDocumentoMasActuacion,nombreActuacion){setNombreDocumentoMasActuacion(nombreDocumentoMasActuacion);setMasActuacionId(id);};var selectChangeUsuarioComisionado=function selectChangeUsuarioComisionado(value){setUsuarioComisionado(value);};var selectUsuarioComisorio=function selectUsuarioComisorio(){return getListaUsuariosComisorio&&getListaUsuariosComisorio.length?getListaUsuariosComisorio.map(function(user,i){return/*#__PURE__*/_jsx(\"option\",{value:user.id,children:user.attributes.nombre+\" \"+user.attributes.apellido},user.id);}):\"\";};function formatBytes(bytes){var decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;if(bytes===undefined)return'0 Bytes';if(bytes===0)return'0 Bytes';var k=1024;var dm=decimals<0?0:decimals;var sizes=['Bytes','KB','MB','GB','TB','PB','EB','ZB','YB'];var i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(dm))+' '+sizes[i];}function obtenerPesoTotalArchivos(list){var peso=0;list.forEach(function(archivo,index){if(archivo.archivo.size){peso+=archivo.archivo.size;}});if(peso>15000000){setErrorApi('El peso/tamaño de los todos los adjuntos superan los 15 Mb pertmitidos para el registro, verifique e tamaño y elimine algunos adjuntos.');window.showModal(1);}//setPesoTotalArchivos(peso);\n}var handleInputChangeArchivos=function handleInputChangeArchivos(e,index){var _e$target=e.target,name=_e$target.name,files=_e$target.files;if(files.length>0){var extension=getFileExtension(files[0].name);if(extension==\"docx\"){var list=_toConsumableArray(inputListArchivos);list[index][name]=files[0];if(files[0]){list[index][name]=files[0];}else{list[index][name]='';list[index].filebase64='';list[index].size=0;list[index].ext=\"\";setInputListArchivos(list);}// Conversion a Base64\nArray.from(e.target.files).forEach(function(archivo){var reader=new FileReader();reader.readAsDataURL(archivo);reader.onload=function(){var arrayAuxiliar=[];var base64=reader.result;arrayAuxiliar=base64.split(',');list[index].filebase64=arrayAuxiliar[1];list[index].ext=extension;setInputListArchivos(list);};});obtenerPesoTotalArchivos(list);}else{var _list=_toConsumableArray(inputListArchivos);_list[index][name]=files[0];_list[index].filebase64='';_list[index].size=0;setInputListArchivos(_list);setErrorApi(\"El archivo seleccionado no tiene un formato permitido\");window.showModal(1);}}else{var _list2=_toConsumableArray(inputListArchivos);_list2[index][name]='';_list2[index].filebase64='';_list2[index].size=0;setInputListArchivos(_list2);obtenerPesoTotalArchivos(_list2);}};function getFileExtension(filename){return filename.slice((filename.lastIndexOf(\".\")-1>>>0)+2);}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(InfoErrorApi,{error:errorApi}),/*#__PURE__*/_jsx(ModalGen,{data:getModalState}),/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(Formik,{initialValues:{id_actuacion:'',usuario_comisionado:''},enableReinitialize:true,validate:function validate(valores){var errores={};valores.id_actuacion=getMasActuacionId;valores.usuario_comisionado=getUsuarioComisionado;if(tipoActuacion==\"Comisorio\"&&valores.usuario_comisionado==0){errores.usuario_comisionado='Debe seleccionar una usuario comisionado para registrar';}if(valores.id_actuacion==0){errores.id_actuacion='Debe seleccionar una actuación para registrar';}// if (valores.id_actuacion != 0 && valores.id_actuacion != \"\") {\n//     let id_actuacion = valores.id_actuacion;\n//     listaTipoActuacion.forEach(element => {\n//         if (element.id == id_actuacion) {\n//             setValueDocumentoRuta(element.nombre_plantilla);\n//         }\n//     });\n// }\nreturn errores;},onSubmit:function onSubmit(valores,_ref){var resetForm=_ref.resetForm;enviarDatos(valores);},children:function children(_ref2){var errors=_ref2.errors;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"w2d_block\",children:/*#__PURE__*/_jsx(\"nav\",{\"aria-label\":\"breadcrumb\",children:/*#__PURE__*/_jsxs(\"ol\",{className:\"breadcrumb breadcrumb-alt push\",children:[/*#__PURE__*/_jsxs(\"li\",{class:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/MisPendientes\",children:/*#__PURE__*/_jsx(\"small\",{children:\"Mis Pendientes\"})})]}),/*#__PURE__*/_jsxs(\"li\",{class:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:\"/RamasProceso/\",state:{from:from},children:/*#__PURE__*/_jsx(\"small\",{children:\"Ramas del proceso\"})})]}),deDondeVengo?null:/*#__PURE__*/_jsxs(\"li\",{class:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsx(Link,{underline:\"hover\",className:\"text-dark\",to:tipoActuacion!=\"Actuación\"?\"/PreguntaImpedimentos/\":\"/ActuacionesLista/\",state:{from:from,selected_id_etapa:selected_id_etapa},children:/*#__PURE__*/_jsx(\"small\",{children:tipoActuacion})})]}),/*#__PURE__*/_jsxs(\"li\",{class:\"breadcrumb-item\",children:[\" \",/*#__PURE__*/_jsxs(\"small\",{children:[\"Agregar \",tipoActuacion]})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block block-themed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"block-header\",children:/*#__PURE__*/_jsxs(\"h3\",{className:\"block-title\",children:[getNombreProceso,\" :: \",/*#__PURE__*/_jsxs(\"strong\",{children:[\"Crear \",tipoActuacion]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-right\",children:deDondeVengo?/*#__PURE__*/_jsx(Link,{to:\"/RamasProceso/\",title:\"Regresar a lista de Actuaciones\",state:{from:from},children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-success\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-backward\"}),\" \"]})}):/*#__PURE__*/_jsx(Link,{to:tipoActuacion!=\"Actuación\"?\"/PreguntaImpedimentos/\":\"/ActuacionesLista/\",title:\"Regresar a lista de Actuaciones\",state:{from:from,selected_id_etapa:selected_id_etapa},children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-success\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-backward\"}),\" \"]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[getListaActuacionesOptions&&getListaActuacionesOptions.length>0?/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"id_actuacion\",children:[tipoActuacion,\" \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"id_actuacion\",children:[\"Sin datos o informaci\\xF3n para registrar \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\"})]})}),getListaActuacionesOptions&&getListaActuacionesOptions.length>0?/*#__PURE__*/_jsx(Select,{placeholder:\"Selecciona\",defaultValue:getListaActuacionesDefault,noOptionsMessage:function noOptionsMessage(){return\"Sin datos\";},options:getListaActuacionesOptions.map(function(e){return{label:e.label,value:e.value};}),onChange:function onChange(e){return selectChangeMasActuacion(e.value,e.label);}}):null,/*#__PURE__*/_jsx(ErrorMessage,{name:\"id_actuacion\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.id_actuacion});}})]})}),tipoActuacion==\"Comisorio\"&&getListaActuacionesOptions&&getListaActuacionesOptions.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"usuario_comisionado\",children:[\"Usuario Comisionado \",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-control\",id:\"usuario_comisionado\",name:\"usuario_comisionado\",onChange:function onChange(e){return selectChangeUsuarioComisionado(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Por favor seleccione\"}),selectUsuarioComisorio()]}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"usuario_comisionado\",component:function component(){return/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:errors.usuario_comisionado});}})]})}):null]}),getMasActuacionId>0?/*#__PURE__*/_jsx(ActuacionParametrosPlantillaForm,{from:from,id_mas_actuacion:getMasActuacionId}):null,getMasActuacionId>0?inputListArchivos.map(function(x,i){return/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Documento adjunto diligenciado (Word)\",/*#__PURE__*/_jsx(\"span\",{className:\"text-danger\",children:\"* \"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-12\",style:{marginLeft:'13px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"custom-file-label\",htmlFor:\"example-file-input-custom\",\"data-toggle\":\"custom-file-input\",children:x.archivo.name}),/*#__PURE__*/_jsx(\"input\",{className:\"custom-file-input\",\"data-toggle\":\"custom-file-input\",type:\"file\",name:\"archivo\",onChange:function onChange(e){return handleInputChangeArchivos(e,i);},required:true}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Peso del archivo: \",formatBytes(x.archivo.size)]})]})})})]})})},i);}):null]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"block-content block-content-full text-right bg-light\",children:[getListaActuacionesOptions&&getListaActuacionesOptions.length>0?/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-rounded btn-primary\",children:\" Registrar\"}):null,deDondeVengo?/*#__PURE__*/_jsx(Link,{to:\"/RamasProceso/\",state:{from:from},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:\" Cancelar\"})}):/*#__PURE__*/_jsx(Link,{to:tipoActuacion!=\"Actuación\"?\"/PreguntaImpedimentos/\":\"/ActuacionesLista/\",state:{from:from,selected_id_etapa:selected_id_etapa},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-rounded btn-outline-primary\",children:\" Cancelar\"})})]})]});}})]});}export default ActuacionesForm;","map":{"version":3,"names":["React","useEffect","useState","useLocation","getUser","GenericApi","Link","ModalGen","ErrorMessage","Field","Form","Formik","InfoErrorApi","ActuacionParametrosPlantillaForm","Spinner","Select","makeAnimated","ActuacionesForm","errorApi","setErrorApi","getNombreUsuario","setNombreUsuario","getListaUsuariosComisorio","setListaUsuariosComisorio","title","message","show","getModalState","setModalState","archivo","filebase64","size","ext","inputListArchivos","setInputListArchivos","getMasActuacionId","setMasActuacionId","getUsuarioComisionado","setUsuarioComisionado","getListaActuacionesOptions","setListaActuacionesOptions","getListaActuacionesDefault","setListaActuacionesDefault","getNombreDocumentoMasActuacion","setNombreDocumentoMasActuacion","getNombreProceso","setNombreProceso","location","state","from","selected_id_etapa","tipoActuacion","vengo","deDondeVengo","radicado","procesoDisciplinarioId","fetchData","window","showSpinner","nombre","nombreProceso","getListUsuarios","id_dependencia","selectOptionsActuaciones","getByIdGeneric","then","datos","error","data","attributes","getAllTipoActuaciones","toString","redirect","alert","global","Constants","TIPO_ALERTA","ERROR","listaActuacionesValidar","cantidadActuaciones","cantidadImpedimentos","cantidadComisorios","length","index","element","tipo_actuacion","push","label","nombre_actuacion","value","id","enviarDatos","actuacionId","id_actuacion","dataUsuarioComisorio","addGeneric","name","estadoActualActuacion","EXITO","selectChangeMasActuacion","nombreDocumentoMasActuacion","nombreActuacion","selectChangeUsuarioComisionado","selectUsuarioComisorio","map","user","i","apellido","formatBytes","bytes","decimals","undefined","k","dm","sizes","Math","floor","log","parseFloat","pow","toFixed","obtenerPesoTotalArchivos","list","peso","forEach","showModal","handleInputChangeArchivos","e","target","files","extension","getFileExtension","Array","reader","FileReader","readAsDataURL","onload","arrayAuxiliar","base64","result","split","filename","slice","lastIndexOf","usuario_comisionado","valores","errores","resetForm","errors","x","marginLeft"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Actuaciones/ActuacionesForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { getUser } from '../../../components/Utils/Common';\r\nimport '../../Utils/Constants';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport { Link } from \"react-router-dom\";\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\r\nimport ActuacionParametrosPlantillaForm from '../Herramientas/ActuacionParametrosPlantillaForm';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\nfunction ActuacionesForm() {\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [getNombreUsuario, setNombreUsuario] = useState(\"\");\r\n    const [getListaUsuariosComisorio, setListaUsuariosComisorio] = useState(\"\");\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [inputListArchivos, setInputListArchivos] = useState([{ archivo: {}, filebase64: \"\", size: 0, ext: \"\" }]);\r\n    const [getMasActuacionId, setMasActuacionId] = useState(0);\r\n    const [getUsuarioComisionado, setUsuarioComisionado] = useState(0);\r\n    const [getListaActuacionesOptions, setListaActuacionesOptions] = useState([]);\r\n    const [getListaActuacionesDefault, setListaActuacionesDefault] = useState([]);\r\n    const [getNombreDocumentoMasActuacion, setNombreDocumentoMasActuacion] = useState(\"\");\r\n    const [getNombreProceso, setNombreProceso] = useState('');\r\n\r\n    const location = useLocation();\r\n    const { from, selected_id_etapa, tipoActuacion, vengo } = location.state;\r\n\r\n    let deDondeVengo = vengo ? vengo : false;\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    // let idEtapa = from.idEtapa >= 3 ? from.idEtapa : 3;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            setNombreUsuario(getUser().nombre);\r\n            nombreProceso();\r\n            if (tipoActuacion == \"Comisorio\") {\r\n                getListUsuarios(getUser().id_dependencia);\r\n            }\r\n        }\r\n        fetchData();\r\n        selectOptionsActuaciones();\r\n    }, []);\r\n\r\n\r\n    const nombreProceso = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"nombre-proceso\",from.procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setNombreProceso(datos.data.attributes.nombre);\r\n                    getAllTipoActuaciones();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getListUsuarios = (id_dependencia) => {\r\n\r\n        GenericApi.getByIdGeneric(\"usuario/get-todos-usuarios-dependencia\", id_dependencia).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaUsuariosComisorio(datos.data);\r\n                } else {\r\n                    setModalState({ title: getNombreProceso + \" :: Crear \" + tipoActuacion, message: datos.error.toString(), show: true, redirect: '/PreguntaImpedimentos', from: { from: from, selected_id_etapa: selected_id_etapa }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    /**\r\n     * Trae la lista de todos los tipos de actuaciones.\r\n     */\r\n    const getAllTipoActuaciones = () => {\r\n\r\n        GenericApi.getByIdGeneric(\"mas_actuaciones/actuaciones-etapa\", selected_id_etapa).then(\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se envia la informacion al metood encargado de validar y sacar los valores correspondientes del select\r\n                    selectOptionsActuaciones(datos.data);\r\n\r\n                    // Se desactiva el spinner\r\n                    window.showSpinner(false);\r\n                } else {\r\n                    setModalState({ title: getNombreProceso + \" :: Crear actuaciones\", message: datos.error.toString(), show: true, redirect: '/ActuacionesForm', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const selectOptionsActuaciones = (datos) => {\r\n\r\n        // Se inicializan las variables\r\n        var listaActuacionesValidar = [];\r\n\r\n        // Se inicializa la cantidad de cada actuacion en 0\r\n        var cantidadActuaciones = 0;\r\n        var cantidadImpedimentos = 0;\r\n        var cantidadComisorios = 0;\r\n\r\n        // Se valida que exista el array, tenga longitud \r\n        if (datos && datos.length > 0) {\r\n\r\n            // Se recorre el array de las actuaciones\r\n            for (let index = 0; index < datos.length; index++) {\r\n\r\n                // Se captura el elemento por posición\r\n                const element = datos[index];\r\n\r\n                // Se valida cuando es actuación\r\n                if (element.attributes.tipo_actuacion == 0 && tipoActuacion == \"Actuación\") {\r\n\r\n                    // Se suma +1 al elemento\r\n                    cantidadActuaciones++;\r\n\r\n                    // Se añade la actuacion a la lista\r\n                    listaActuacionesValidar.push({ label: element.attributes.nombre_actuacion, value: element.id });\r\n                }\r\n                // Se valida cuando es impedimento \r\n                else if (element.attributes.tipo_actuacion == 1 && tipoActuacion == \"Impedimento\") {\r\n\r\n                    // Se suma +1 al elemento\r\n                    cantidadImpedimentos++;\r\n\r\n                    // Se añade el impedimento a la lista\r\n                    listaActuacionesValidar.push({ label: element.attributes.nombre_actuacion, value: element.id });\r\n                }\r\n                // Se valida cuando es comisorio\r\n                else if (element.attributes.tipo_actuacion == 2 && tipoActuacion == \"Comisorio\") {\r\n\r\n                    // Se suma +1 al elemento\r\n                    cantidadComisorios++;\r\n\r\n                    // Se añade el comisorio a la lista\r\n                    listaActuacionesValidar.push({ label: element.attributes.nombre_actuacion, value: element.id });\r\n                }\r\n            }\r\n\r\n            // ------------------------------------------------------------------------------------ // \r\n\r\n            // Se recorre el array de las actuaciones para preseleccionar y cargar la plantilla automaticamente\r\n            for (let index = 0; index < datos.length; index++) {\r\n\r\n                // Se captura el elemento por posición\r\n                const element = datos[index];\r\n\r\n                // Se valida cuando es actuación\r\n                if (cantidadActuaciones == 1 && element.attributes.tipo_actuacion == 0 && tipoActuacion == \"Actuación\") {\r\n\r\n                    // Se setea el valor para que auto cargue la plantilla\r\n                    setMasActuacionId(element.id);\r\n\r\n                    // Se añade para qué quede preseleccionada en el select\r\n                    setListaActuacionesDefault({ label: element.attributes.nombre_actuacion, value: element.id });\r\n                }\r\n\r\n                // Se valida cuando es impedimento \r\n                else if (cantidadImpedimentos == 1 && element.attributes.tipo_actuacion == 1 && tipoActuacion == \"Impedimento\") {\r\n\r\n                    // Se setea el valor para que auto cargue la plantilla\r\n                    setMasActuacionId(element.id);\r\n\r\n                    // Se añade para qué quede preseleccionada en el select\r\n                    setListaActuacionesDefault({ label: element.attributes.nombre_actuacion, value: element.id });\r\n                }\r\n\r\n                // Se valida cuando es comisorio\r\n                else if (cantidadComisorios == 1 && element.attributes.tipo_actuacion == 2 && tipoActuacion == \"Comisorio\") {\r\n\r\n                    // Se setea el valor para que auto cargue la plantilla\r\n                    setMasActuacionId(element.id);\r\n\r\n                    // Se añade para qué quede preseleccionada en el select\r\n                    setListaActuacionesDefault({ label: element.attributes.nombre_actuacion, value: element.id });\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se setea el valor al array lista\r\n        setListaActuacionesOptions(listaActuacionesValidar);\r\n    }\r\n\r\n    const enviarDatos = (datos) => {\r\n\r\n        window.showSpinner(true);\r\n        const actuacionId = datos.id_actuacion;\r\n\r\n        if (tipoActuacion == 2) {\r\n            const dataUsuarioComisorio = {\r\n                \"data\": {\r\n                    \"type\": \"usuario-comisionado\",\r\n                    \"attributes\": {\r\n                        \"id_proceso_disciplinario\": \"\"\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.addGeneric(\"proceso-diciplinario/usuario-comisionado/\" + getUsuarioComisionado + \"/\" + procesoDisciplinarioId, dataUsuarioComisorio)\r\n        }\r\n        \r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'actuaciones',\r\n                \"attributes\": {\r\n                    \"id_actuacion\": actuacionId,\r\n                    \"usuario_accion\": getNombreUsuario,\r\n                    \"id_estado_actuacion\": 3,\r\n                    \"created_user\": getNombreUsuario,\r\n                    \"fileBase64\": inputListArchivos[0].filebase64,\r\n                    \"nombre_archivo\": inputListArchivos[0].archivo.name,\r\n                    \"ext\": inputListArchivos[0].ext,\r\n                    \"peso\": inputListArchivos[0].archivo.size,\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": selected_id_etapa,\r\n                    \"estado\": true,\r\n                }\r\n            }\r\n        }\r\n        \r\n        GenericApi.addGeneric(\"actuaciones\", data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    window.showSpinner(false);;\r\n                    if(tipoActuacion == \"Impedimento\"){\r\n                        setModalState({ title: getNombreProceso + \" :: Crear \" + tipoActuacion, message: 'Registros exitoso', show: true, redirect: \"/ActuacionesVer/\" + procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/1\", \r\n                        from: { \r\n                            from: from , \r\n                            selected_id_etapa: selected_id_etapa , \r\n                            id: datos.data.id , \r\n                            nombre: getListaActuacionesDefault.label, \r\n                            estadoActualActuacion: \"Pendiente aprobación\", \r\n                            tipoActuacion: \"1\" \r\n                        }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                    }else{\r\n                        setModalState({ title: getNombreProceso + \" :: Crear \" + tipoActuacion, message: 'Registro exitoso', show: true, redirect: '/Transacciones', from: { from: from, selected_id_etapa: selected_id_etapa, id_actuacion: actuacionId }, alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                    }\r\n                    \r\n                } else {\r\n                    setModalState({ title: getNombreProceso + \" :: Crear \" + tipoActuacion, message: datos.error.toString(), show: true, redirect: '/ActuacionesLista', from: { from: from, selected_id_etapa: selected_id_etapa }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const selectChangeMasActuacion = (id,nombreDocumentoMasActuacion,nombreActuacion) => {\r\n        setNombreDocumentoMasActuacion(nombreDocumentoMasActuacion)\r\n        setMasActuacionId(id);\r\n    }\r\n\r\n    const selectChangeUsuarioComisionado = (value) => {\r\n        setUsuarioComisionado(value);\r\n    }\r\n\r\n    const selectUsuarioComisorio = () => {\r\n\r\n        return (\r\n            getListaUsuariosComisorio && getListaUsuariosComisorio.length ? getListaUsuariosComisorio.map((user, i) => {\r\n                return (\r\n                    <option key={user.id} value={user.id}>{user.attributes.nombre + \" \" + user.attributes.apellido}</option>\r\n                )\r\n            }) : \"\"\r\n        )\r\n    }\r\n\r\n    function formatBytes(bytes, decimals = 3) {\r\n        if (bytes === undefined) return '0 Bytes';\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const dm = decimals < 0 ? 0 : decimals;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    }\r\n\r\n    function obtenerPesoTotalArchivos(list) {\r\n        let peso = 0;\r\n        list.forEach(\r\n            (archivo, index) => {\r\n                if (archivo.archivo.size) {\r\n                    peso += archivo.archivo.size;\r\n                }\r\n            }\r\n        )\r\n\r\n        if (peso > 15000000) {\r\n            setErrorApi('El peso/tamaño de los todos los adjuntos superan los 15 Mb pertmitidos para el registro, verifique e tamaño y elimine algunos adjuntos.')\r\n            window.showModal(1)\r\n        }\r\n\r\n        //setPesoTotalArchivos(peso);\r\n    }\r\n\r\n    const handleInputChangeArchivos = (e, index) => {\r\n\r\n        const { name, files } = e.target;\r\n        if (files.length > 0) {\r\n            const extension = getFileExtension(files[0].name);\r\n\r\n            if (extension == \"docx\") {\r\n\r\n                const list = [...inputListArchivos];\r\n                list[index][name] = files[0];\r\n\r\n                if (files[0]) {\r\n                    list[index][name] = files[0];\r\n                } else {\r\n                    list[index][name] = '';\r\n                    list[index].filebase64 = '';\r\n                    list[index].size = 0;\r\n                    list[index].ext = \"\";\r\n                    setInputListArchivos(list);\r\n                }\r\n\r\n                // Conversion a Base64\r\n                Array.from(e.target.files).forEach(archivo => {\r\n                    var reader = new FileReader();\r\n                    reader.readAsDataURL(archivo);\r\n                    reader.onload = function () {\r\n                        var arrayAuxiliar = [];\r\n                        var base64 = reader.result;\r\n                        arrayAuxiliar = base64.split(',');\r\n                        list[index].filebase64 = arrayAuxiliar[1];\r\n                        list[index].ext = extension;\r\n                        setInputListArchivos(list);\r\n                    }\r\n                })\r\n                obtenerPesoTotalArchivos(list);\r\n            } else {\r\n                const list = [...inputListArchivos];\r\n                list[index][name] = files[0];\r\n                list[index].filebase64 = '';\r\n                list[index].size = 0;\r\n                setInputListArchivos(list);\r\n                setErrorApi(\"El archivo seleccionado no tiene un formato permitido\")\r\n                window.showModal(1)\r\n            }\r\n        } else {\r\n            const list = [...inputListArchivos];\r\n            list[index][name] = '';\r\n            list[index].filebase64 = '';\r\n            list[index].size = 0;\r\n            setInputListArchivos(list);\r\n            obtenerPesoTotalArchivos(list);\r\n        }\r\n\r\n    }\r\n\r\n    function getFileExtension(filename) {\r\n        return filename.slice((filename.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<InfoErrorApi error={errorApi} />}\r\n            {<ModalGen data={getModalState} />}\r\n            {<Spinner />}\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    id_actuacion: '',\r\n                    usuario_comisionado: ''\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n                    let errores = {}\r\n                    valores.id_actuacion = getMasActuacionId;\r\n                    valores.usuario_comisionado = getUsuarioComisionado;\r\n\r\n                    if (tipoActuacion == \"Comisorio\" && valores.usuario_comisionado == 0) {\r\n                        errores.usuario_comisionado = 'Debe seleccionar una usuario comisionado para registrar'\r\n                    }\r\n\r\n                    if (valores.id_actuacion == 0) {\r\n                        errores.id_actuacion = 'Debe seleccionar una actuación para registrar'\r\n                    }\r\n\r\n                    // if (valores.id_actuacion != 0 && valores.id_actuacion != \"\") {\r\n                    //     let id_actuacion = valores.id_actuacion;\r\n\r\n                    //     listaTipoActuacion.forEach(element => {\r\n                    //         if (element.id == id_actuacion) {\r\n                    //             setValueDocumentoRuta(element.nombre_plantilla);\r\n                    //         }\r\n                    //     });\r\n                    // }\r\n\r\n                    return errores\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n\r\n                {({ errors }) => (\r\n                    <Form>\r\n\r\n                        <div className=\"w2d_block\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                    {deDondeVengo ? null : (\r\n                                        <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}><small>{tipoActuacion}</small></Link></li>\r\n                                    )}\r\n                                    <li class=\"breadcrumb-item\"> <small>Agregar {tipoActuacion}</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">{getNombreProceso} :: <strong>Crear {tipoActuacion}</strong></h3>\r\n                            </div>\r\n\r\n                            <div className=\"block-content\">\r\n                                <div className='text-right'>\r\n                                    {deDondeVengo ? (\r\n                                        <Link to={`/RamasProceso/`} title='Regresar a lista de Actuaciones' state={{ from: from }}>\r\n                                            <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                                        </Link>\r\n                                    ) : (\r\n                                        <Link to={tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`} title='Regresar a lista de Actuaciones' state={{ from: from, selected_id_etapa: selected_id_etapa }}>\r\n                                            <button type=\"button\" className=\"btn btn-success\"><i className=\"fas fa-backward\"></i> </button>\r\n                                        </Link>\r\n                                    )}\r\n\r\n                                </div>\r\n                                <div className='row mb-4'>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            {getListaActuacionesOptions && getListaActuacionesOptions.length > 0 ?\r\n                                                <label htmlFor=\"id_actuacion\">{tipoActuacion} <span className=\"text-danger\">*</span></label>\r\n                                                : <div>\r\n                                                    <label htmlFor=\"id_actuacion\">Sin datos o información para registrar <span className=\"text-danger\"></span></label>\r\n                                                </div>\r\n                                            }\r\n                                            {getListaActuacionesOptions && getListaActuacionesOptions.length > 0 ?\r\n                                                <Select\r\n                                                    placeholder=\"Selecciona\"\r\n                                                    defaultValue={getListaActuacionesDefault}\r\n                                                    noOptionsMessage={() => \"Sin datos\"}\r\n                                                    options={getListaActuacionesOptions.map(e =>\r\n                                                        ({ label: e.label, value: e.value })\r\n                                                    )}\r\n                                                    onChange={(e) => selectChangeMasActuacion(e.value, e.label)}\r\n                                                /> : null\r\n                                            }\r\n                                            <ErrorMessage name=\"id_actuacion\" component={() => (<span className=\"text-danger\">{errors.id_actuacion}</span>)} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {tipoActuacion == \"Comisorio\" && getListaActuacionesOptions && getListaActuacionesOptions.length > 0 ? (\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"usuario_comisionado\">Usuario Comisionado <span className=\"text-danger\">*</span></label>\r\n                                                <select className=\"form-control\" id=\"usuario_comisionado\" name=\"usuario_comisionado\" onChange={e => selectChangeUsuarioComisionado(e.target.value)}>\r\n                                                    <option value=\"\">Por favor seleccione</option>\r\n                                                    {selectUsuarioComisorio()}\r\n                                                </select>\r\n                                                <ErrorMessage name=\"usuario_comisionado\" component={() => (<span className=\"text-danger\">{errors.usuario_comisionado}</span>)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n\r\n                                {/* {getParamsForm()} */}\r\n                                {getMasActuacionId > 0 ? <ActuacionParametrosPlantillaForm from={from} id_mas_actuacion={getMasActuacionId} /> : null}\r\n                                {/* <div className=\"col-md-12\" style={{ marginLeft: '10px' }}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"documento_ruta\">Descargar documento diligenciado en Word <span className=\"text-danger\">* </span></label>\r\n                                        <a href={getValueDocumentoRuta} id='documento_ruta' name='documento_ruta' style={{ marginLeft: '10px' }} target=\"_blank\" download class=\"btn btn-success\"><i className=\"fa fa-download\" ></i> </a>\r\n                                    </div>\r\n                                </div> */}\r\n\r\n                                {getMasActuacionId > 0 ?\r\n                                    inputListArchivos.map((x, i) => {\r\n                                        return (\r\n                                            <div className=\"col-md-12\" key={i}>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className='row'>\r\n                                                        <div className='col-md-12'>\r\n                                                            <label>Documento adjunto diligenciado (Word)<span className=\"text-danger\">* </span></label>\r\n                                                        </div>\r\n                                                        <div className='col-md-12' style={{ marginLeft: '13px' }}>\r\n                                                            <div className='row'>\r\n                                                                <div className='col-md-6'>\r\n                                                                    <label className=\"custom-file-label\" htmlFor=\"example-file-input-custom\" data-toggle=\"custom-file-input\">{x.archivo.name}</label>\r\n                                                                    <input className=\"custom-file-input\" data-toggle=\"custom-file-input\" type=\"file\" name=\"archivo\" onChange={e => handleInputChangeArchivos(e, i)} required />\r\n                                                                    <label>Peso del archivo: {formatBytes(x.archivo.size)}</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"block-content block-content-full text-right bg-light\">\r\n                            {getListaActuacionesOptions && getListaActuacionesOptions.length > 0\r\n                                ?\r\n                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\"> Registrar</button>\r\n                                : null}\r\n                            {deDondeVengo ? (\r\n                                <Link to={`/RamasProceso/`} state={{ from: from }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\"> Cancelar</button>\r\n                                </Link>\r\n                            ) : (\r\n                                <Link to={tipoActuacion != \"Actuación\" ? `/PreguntaImpedimentos/` : `/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\"> Cancelar</button>\r\n                                </Link>\r\n                            )}\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default ActuacionesForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}