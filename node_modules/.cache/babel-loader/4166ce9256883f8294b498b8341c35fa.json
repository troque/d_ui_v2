{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Actuaciones\\\\ActuacionesInactivar.js\",\n  _s = $RefreshSig$();\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\nimport InfoExitoApi from '../../Utils/InfoExitoApi';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../../Utils/Spinner';\nimport { Navigate } from \"react-router-dom\";\nimport DataTable from 'react-data-table-component';\nimport ListaBotones from '../../Utils/ListaBotones';\nimport '../../Utils/Constants';\nimport { useLocation } from 'react-router-dom';\nimport { quitarAcentos } from '../../Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ActuacionesInactivar() {\n  _s();\n  const [errorApi, setErrorApi] = useState('');\n  const [isRedirect, setIsRedirect] = useState(false);\n  const [getActuacionesActivasListaSearch, setActuacionesActivasListaSearch] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getSeach, setSeach] = useState('');\n  const paganationPerPages = global.Constants.DATA_TABLE.PAGINATION_PER_PAGE;\n  const [perPage, setPerPage] = useState(global.Constants.DATA_TABLE.PAGINATION_PER_PAGE);\n  const [pageActual, setPageActual] = useState(1);\n  const [getEstadoLista, setEstadoLista] = useState('');\n  const [getElementArray, setElementArray] = useState([]);\n  const [getMostrarBotonAgregar, setMostrarBotonAgregar] = useState(null);\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getCountCantidad, setCountCantidad] = useState(0);\n  const [getMuestraBotonFechaParaSemaforo, setMuestraBotonFechaParaSemaforo] = useState(false);\n  const [getidMasActuacion, setidMasActuacion] = useState();\n  const location = useLocation();\n  const {\n    from,\n    selected_id_etapa,\n    nombre,\n    uuid_actuacion,\n    tipoActuacion,\n    estadoActualActuacion\n  } = location.state;\n  let radicado = from.radicado;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n  let idEtapa = from.idEtapa >= 3 ? from.idEtapa : 3;\n  let estado = 1;\n  const [getRoutes, setRoutes] = useState({\n    crear_registro: \"/ActuacionesForm/\",\n    consultar_registros: \"/ActuacionesLista/\",\n    ver_detalle: \"/ActuacionesVer/\" + procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/\" + estado,\n    muestra_atras: true,\n    id_etapa: global.Constants.ETAPAS.NINGUNA,\n    selected_id_etapa: selected_id_etapa,\n    muestra_inactivos: true\n  });\n  const handleCallback = childData => {\n    try {\n      window.showSpinner(true);\n      setEstadoLista(childData == global.Constants.ESTADOS.INACTIVO ? \"Inactivos\" : \"Activos\");\n      cargarActuacionesActivas(1, paganationPerPages, childData);\n    } catch (error) {}\n  };\n  const columns = [{\n    name: 'Nombre actuación',\n    cell: actuaciones => actuaciones.attributes.nombre_actuacion,\n    selector: actuaciones => actuaciones.attributes.nombre_actuacion,\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Usuario registrado',\n    cell: actuaciones => actuaciones.attributes.usuario.nombre + \" \" + actuaciones.attributes.usuario.apellido + \" (\" + actuaciones.attributes.id_dependencia.nombre + \")\",\n    selector: actuaciones => actuaciones.attributes.created_user,\n    sortable: true,\n    width: \"25%\"\n  }, {\n    name: 'Usuario aprueba/rechaza',\n    cell: actuaciones => actuaciones.attributes.usuario_accion,\n    selector: actuaciones => actuaciones.attributes.usuario_accion,\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Estado',\n    cell: actuaciones => actuaciones.attributes.nombre_estado_actuacion,\n    selector: actuaciones => actuaciones.attributes.nombre_estado_actuacion,\n    sortable: true,\n    width: \"10%\"\n  }, {\n    name: 'Auto',\n    cell: actuaciones => actuaciones.attributes.auto,\n    selector: actuaciones => actuaciones.attributes.auto,\n    sortable: true,\n    width: \"20%\"\n  }\n  // {\n  //     name: 'Acciones',\n  //     cell: actuaciones =>\n  //         <div className='row'>\n  //             <div className='col-4'>\n  //                 <Link to={getRoutes.ver_detalle} state={{ from: from, selected_id_etapa: selected_id_etapa, id: actuaciones.id, nombre: actuaciones.attributes.nombre_actuacion, estadoActualActuacion: actuaciones.attributes.nombre_estado_actuacion }} >\n  //                     <button type='button' title='Ver actuación' className='btn btn-sm btn-primary' data-toggle=\"modal\" ><i className=\"fas fa-search\"></i></button>\n  //                 </Link>\n  //             </div>\n  //         </div >,\n  //     width: \"8%\"\n  // }\n  ];\n\n  const redirectToRoutes = () => {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/ActuacionesLista/`,\n      state: {\n        from: from,\n        selected_id_etapa: selected_id_etapa\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 16\n    }, this);\n  };\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      GenericApi.getGeneric('mas_actuaciones/getActuacionesByName/' + nombre + '/' + selected_id_etapa).then(datos => {\n        if (!datos.error) {\n          setidMasActuacion(datos.data[0].id);\n          GenericApi.getGeneric('semaforo').then(datosSemaforo => {\n            if (!datosSemaforo.error) {\n              datosSemaforo.data.forEach(element => {\n                if (element.attributes.id_mas_actuacion_inicia != null) {\n                  if (element.attributes.id_mas_actuacion_inicia.id == datos.data[0].id) {\n                    setMuestraBotonFechaParaSemaforo(true);\n                  }\n                }\n              });\n              window.showSpinner(false);\n            } else {}\n          });\n        } else {}\n      });\n      setEstadoLista(\"Activos\");\n      cargarActuacionesActivas(1, paganationPerPages, global.Constants.ESTADOS.ACTIVO);\n    }\n    fetchData();\n  }, []);\n  const cargarActuacionesActivas = (page, perPage, estado) => {\n    GenericApi.getGeneric('actuaciones/get-actuaciones-active/' + 1 + '/' + selected_id_etapa).then(datos => {\n      if (!datos.error) {\n        if (datos[\"data\"] != \"\") {\n          setActuacionesActivasListaSearch(datos);\n        }\n        window.showSpinner(false);\n      } else {\n        setErrorApi(datos.error.toString());\n        window.showModal(1);\n        window.showSpinner(false);\n      }\n    });\n  };\n  const handlePageChange = page => {\n    setPageActual(page);\n    cargarActuacionesActivas(page, perPage);\n  };\n  const handlePerRowsChange = async (newPerPage, page) => {\n    setPerPage(newPerPage);\n    setPageActual(page);\n    cargarActuacionesActivas(page, newPerPage);\n  };\n  const handleChangeCheck = _ref => {\n    let {\n      selectedRows\n    } = _ref;\n    // Se setea en 0 la cantidad de actuaciones checkeadas para resetear el valor del boton\n    setCountCantidad(0);\n\n    // Se valida que haya seleccionado por lo menos un dato\n    if (selectedRows) {\n      // Se añade al array de los elementos seleccionados\n      setElementArray([...selectedRows]);\n    }\n\n    // Se setea la cantidad de actuaciones checkeadas\n    setCountCantidad(selectedRows.length);\n  };\n  const inactivarActuaciones = () => {\n    // Se activa el loading\n    window.showSpinner(true);\n\n    // Se valida cuando sea continuar el valor\n    if (getCountCantidad == 0) {\n      // Se inactiva el loading\n      window.showSpinner(false);\n\n      // Se muestra el modal para redirigir a las transacciones\n      setModalState({\n        title: \"SINPROC No \" + from.radicado + \" :: ACTUACIONES INACTIVAR\",\n        message: \"REDIRIGIENDO AL SIGUIENTE PASO ...\",\n        show: true,\n        redirect: '/SeleccionDeFechaParaSemaforo',\n        from: {\n          from: from,\n          selected_id_etapa: selected_id_etapa,\n          id: uuid_actuacion,\n          nombre: nombre,\n          estadoActualActuacion: estadoActualActuacion,\n          tipoActuacion: tipoActuacion\n        },\n        alert: global.Constants.TIPO_ALERTA.EXITO\n      });\n\n      // Se retorna en falso\n      return;\n    }\n    let data = {\n      \"data\": {\n        \"type\": \"actuaciones/actuaciones-inactivar\",\n        \"attributes\": {\n          \"id_actuacion\": \"1\",\n          \"usuario_accion\": \"1\",\n          \"id_estado_actuacion\": \"1\",\n          \"documento_ruta\": \"1\",\n          \"estado\": \"1\",\n          \"uuid_proceso_disciplinario\": \"1\",\n          \"id_etapa\": \"1\",\n          \"id_proceso_disciplinario\": \"1\",\n          \"data\": getElementArray\n        }\n      }\n    };\n    GenericApi.addGeneric('actuaciones/actuaciones-inactivar', data).then(datos => {\n      if (!datos.error) {\n        if (!datos.error) {\n          window.showSpinner(false);\n          const mensaje = datos.OK == 1 ? \"ACTUACIONES INACTIVADAS CON ÉXITO\" : \"HUBO UN ERROR AL TRATAR DE INACTIVAR LAS ACTUACIONES\";\n          if (datos.OK == 1) {\n            if (getMuestraBotonFechaParaSemaforo) {\n              setModalState({\n                title: \"SINPROC No \" + from.radicado + \" :: ACTUACIONES INACTIVAR\",\n                message: mensaje,\n                show: true,\n                redirect: '/SeleccionDeFechaParaSemaforo',\n                from: {\n                  from: from,\n                  selected_id_etapa: selected_id_etapa,\n                  id: uuid_actuacion,\n                  nombre: nombre,\n                  estadoActualActuacion: estadoActualActuacion,\n                  tipoActuacion: tipoActuacion\n                },\n                alert: global.Constants.TIPO_ALERTA.EXITO\n              });\n            } else {\n              setModalState({\n                title: \"SINPROC No \" + from.radicado + \" :: ACTUACIONES INACTIVAR\",\n                message: mensaje,\n                show: true,\n                redirect: '/Transacciones',\n                from: {\n                  from: from,\n                  selected_id_etapa: selected_id_etapa,\n                  id_actuacion: getidMasActuacion\n                },\n                alert: global.Constants.TIPO_ALERTA.EXITO\n              });\n            }\n          } else {\n            // console.log(\"Entro al OK 0\");\n            setModalState({\n              title: \"SINPROC No \" + from.radicado + \" :: ACTUACIONES INACTIVAR\",\n              message: datos.error.toString(),\n              show: true,\n              redirect: '/MisPendientes',\n              from: {\n                from\n              },\n              alert: global.Constants.TIPO_ALERTA.ERROR\n            });\n          }\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + from.radicado + \" :: ACTUACIONES INACTIVAR\",\n            message: datos.error.toString(),\n            show: true,\n            redirect: '/MisPendientes',\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      }\n    });\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isRedirect ? redirectToRoutes() : null, /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(InfoErrorApi, {\n      error: errorApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w2d_block\",\n          children: /*#__PURE__*/_jsxDEV(\"nav\", {\n            \"aria-label\": \"breadcrumb\",\n            children: /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"breadcrumb breadcrumb-alt push\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"breadcrumb-item\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                  underline: \"hover\",\n                  className: \"text-dark\",\n                  to: `/MisPendientes`,\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"Mis Pendientes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 130\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 62\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"breadcrumb-item\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                  underline: \"hover\",\n                  className: \"text-dark\",\n                  to: `/RamasProceso/`,\n                  state: {\n                    from: from\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"Ramas del proceso\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 153\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 62\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"breadcrumb-item\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Actuaciones Inactivar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 62\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block block-themed\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"block-title\",\n              children: [\"SINPROC No \", radicado, \" :: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"LISTA DE ACTUACIONES A INACTIVAR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 82\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group \",\n                  children: /*#__PURE__*/_jsxDEV(Field, {\n                    type: \"text\",\n                    id: \"search\",\n                    name: \"search\",\n                    value: getSeach,\n                    onChange: e => setSeach(e.target.value),\n                    onKeyPress: e => {\n                      e.key === 'Enter' && e.preventDefault();\n                    },\n                    className: \"form-control border border-success\",\n                    placeholder: \"Buscar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-12\",\n                children: /*#__PURE__*/_jsxDEV(DataTable, {\n                  className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                  columns: columns,\n                  data: getActuacionesActivasListaSearch.data.filter(suggestion => {\n                    if (getSeach === \"\") {\n                      return suggestion;\n                    } else if ((quitarAcentos(suggestion.attributes.nombre_actuacion) + quitarAcentos(suggestion.attributes.created_user) + quitarAcentos(suggestion.attributes.usuario_accion) + quitarAcentos(suggestion.attributes.nombre_estado_actuacion) + quitarAcentos(suggestion.attributes.auto)).toLowerCase().includes(getSeach.toLowerCase())) {\n                      return suggestion;\n                    }\n                  }),\n                  perPage: perPage,\n                  page: pageActual,\n                  pagination: true,\n                  noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n                  paginationTotalRows: getActuacionesActivasListaSearch.length,\n                  onChangePage: handlePageChange,\n                  onChangeRowsPerPage: handlePerRowsChange,\n                  defaultSortFieldId: \"Nombre\",\n                  striped: true,\n                  paginationComponentOptions: {\n                    rowsPerPageText: global.Constants.DATA_TABLE.FILTRO_POR_PAGINA\n                  },\n                  defaultSortAsc: false,\n                  selectableRows: true,\n                  onSelectedRowsChange: handleChangeCheck\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-content block-content-full text-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-rounded btn-primary\",\n                onClick: inactivarActuaciones,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 126\n                }, this), \" \", getCountCantidad > 0 ? \"INACTIVAR\" : \"CONTINUAR\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/MisPendientes/`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-rounded btn-outline-primary\",\n                  children: \" CANCELAR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ActuacionesInactivar, \"gkuhwIn8xfYZ7gw8eAQytpVXCOk=\", false, function () {\n  return [useLocation];\n});\n_c = ActuacionesInactivar;\nexport default ActuacionesInactivar;\nvar _c;\n$RefreshReg$(_c, \"ActuacionesInactivar\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","Link","InfoErrorApi","InfoExitoApi","ModalGen","GenericApi","Spinner","Navigate","DataTable","ListaBotones","useLocation","quitarAcentos","ActuacionesInactivar","errorApi","setErrorApi","isRedirect","setIsRedirect","getActuacionesActivasListaSearch","setActuacionesActivasListaSearch","data","links","meta","getSeach","setSeach","paganationPerPages","global","Constants","DATA_TABLE","PAGINATION_PER_PAGE","perPage","setPerPage","pageActual","setPageActual","getEstadoLista","setEstadoLista","getElementArray","setElementArray","getMostrarBotonAgregar","setMostrarBotonAgregar","getModalState","setModalState","title","message","show","getCountCantidad","setCountCantidad","getMuestraBotonFechaParaSemaforo","setMuestraBotonFechaParaSemaforo","getidMasActuacion","setidMasActuacion","location","from","selected_id_etapa","nombre","uuid_actuacion","tipoActuacion","estadoActualActuacion","state","radicado","procesoDisciplinarioId","idEtapa","estado","getRoutes","setRoutes","crear_registro","consultar_registros","ver_detalle","muestra_atras","id_etapa","ETAPAS","NINGUNA","muestra_inactivos","handleCallback","childData","window","showSpinner","ESTADOS","INACTIVO","cargarActuacionesActivas","error","columns","name","cell","actuaciones","attributes","nombre_actuacion","selector","sortable","width","usuario","apellido","id_dependencia","created_user","usuario_accion","nombre_estado_actuacion","auto","redirectToRoutes","fetchData","getGeneric","then","datos","id","datosSemaforo","forEach","element","id_mas_actuacion_inicia","ACTIVO","page","toString","showModal","handlePageChange","handlePerRowsChange","newPerPage","handleChangeCheck","selectedRows","length","inactivarActuaciones","redirect","alert","TIPO_ALERTA","EXITO","addGeneric","mensaje","OK","id_actuacion","ERROR","e","target","value","key","preventDefault","filter","suggestion","toLowerCase","includes","SIN_DATOS_TABLE","rowsPerPageText","FILTRO_POR_PAGINA"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Actuaciones/ActuacionesInactivar.js"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, } from \"react-router-dom\";\r\nimport InfoErrorApi from '../../Utils/InfoErrorApi';\r\nimport InfoExitoApi from '../../Utils/InfoExitoApi';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport DataTable from 'react-data-table-component';\r\nimport ListaBotones from '../../Utils/ListaBotones';\r\nimport '../../Utils/Constants';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { quitarAcentos } from '../../Utils/Common';\r\n\r\nfunction ActuacionesInactivar() {\r\n\r\n    const [errorApi, setErrorApi] = useState('');\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n    const [getActuacionesActivasListaSearch, setActuacionesActivasListaSearch] = useState({ data: [], links: [], meta: [] });\r\n    const [getSeach, setSeach] = useState('');\r\n    const paganationPerPages = global.Constants.DATA_TABLE.PAGINATION_PER_PAGE;\r\n    const [perPage, setPerPage] = useState(global.Constants.DATA_TABLE.PAGINATION_PER_PAGE);\r\n    const [pageActual, setPageActual] = useState(1);\r\n    const [getEstadoLista, setEstadoLista] = useState('');\r\n    const [getElementArray, setElementArray] = useState([]);\r\n    const [getMostrarBotonAgregar, setMostrarBotonAgregar] = useState(null);\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getCountCantidad, setCountCantidad] = useState(0);\r\n    const [getMuestraBotonFechaParaSemaforo, setMuestraBotonFechaParaSemaforo] = useState(false);\r\n    const [getidMasActuacion, setidMasActuacion] = useState();\r\n\r\n    const location = useLocation()\r\n    const { from, selected_id_etapa, nombre, uuid_actuacion, tipoActuacion, estadoActualActuacion } = location.state\r\n\r\n    let radicado = from.radicado;\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    let idEtapa = from.idEtapa >= 3 ? from.idEtapa : 3;\r\n    let estado = 1;\r\n\r\n    const [getRoutes, setRoutes] = useState({\r\n        crear_registro: \"/ActuacionesForm/\",\r\n        consultar_registros: \"/ActuacionesLista/\",\r\n        ver_detalle: \"/ActuacionesVer/\" + procesoDisciplinarioId + \"/\" + selected_id_etapa + \"/\" + estado,\r\n        muestra_atras: true,\r\n        id_etapa: global.Constants.ETAPAS.NINGUNA,\r\n        selected_id_etapa: selected_id_etapa,\r\n        muestra_inactivos: true,\r\n    });\r\n\r\n\r\n    const handleCallback = (childData) => {\r\n        try {\r\n            window.showSpinner(true);\r\n            setEstadoLista(childData == global.Constants.ESTADOS.INACTIVO ? \"Inactivos\" : \"Activos\")\r\n            cargarActuacionesActivas(1, paganationPerPages, childData);\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Nombre actuación',\r\n            cell: actuaciones => actuaciones.attributes.nombre_actuacion,\r\n            selector: actuaciones => actuaciones.attributes.nombre_actuacion,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            name: 'Usuario registrado',\r\n            cell: actuaciones => actuaciones.attributes.usuario.nombre + \" \" + actuaciones.attributes.usuario.apellido + \" (\" + actuaciones.attributes.id_dependencia.nombre + \")\",\r\n            selector: actuaciones => actuaciones.attributes.created_user,\r\n            sortable: true,\r\n            width: \"25%\"\r\n        },\r\n        {\r\n            name: 'Usuario aprueba/rechaza',\r\n            cell: actuaciones => actuaciones.attributes.usuario_accion,\r\n            selector: actuaciones => actuaciones.attributes.usuario_accion,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            name: 'Estado',\r\n            cell: actuaciones => actuaciones.attributes.nombre_estado_actuacion,\r\n            selector: actuaciones => actuaciones.attributes.nombre_estado_actuacion,\r\n            sortable: true,\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            name: 'Auto',\r\n            cell: actuaciones => actuaciones.attributes.auto,\r\n            selector: actuaciones => actuaciones.attributes.auto,\r\n            sortable: true,\r\n            width: \"20%\"\r\n        },\r\n        // {\r\n        //     name: 'Acciones',\r\n        //     cell: actuaciones =>\r\n        //         <div className='row'>\r\n        //             <div className='col-4'>\r\n        //                 <Link to={getRoutes.ver_detalle} state={{ from: from, selected_id_etapa: selected_id_etapa, id: actuaciones.id, nombre: actuaciones.attributes.nombre_actuacion, estadoActualActuacion: actuaciones.attributes.nombre_estado_actuacion }} >\r\n        //                     <button type='button' title='Ver actuación' className='btn btn-sm btn-primary' data-toggle=\"modal\" ><i className=\"fas fa-search\"></i></button>\r\n        //                 </Link>\r\n        //             </div>\r\n        //         </div >,\r\n        //     width: \"8%\"\r\n        // }\r\n    ];\r\n\r\n    const redirectToRoutes = () => {\r\n        return <Navigate to={`/ActuacionesLista/`} state={{ from: from, selected_id_etapa: selected_id_etapa }} />;\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n\r\n            GenericApi.getGeneric('mas_actuaciones/getActuacionesByName/' + nombre + '/' + selected_id_etapa).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        setidMasActuacion(datos.data[0].id)\r\n                        GenericApi.getGeneric('semaforo').then(\r\n                            datosSemaforo => {\r\n                                if (!datosSemaforo.error) {\r\n                                    datosSemaforo.data.forEach(element => {\r\n                                        if(element.attributes.id_mas_actuacion_inicia != null){\r\n                                            if(element.attributes.id_mas_actuacion_inicia.id == datos.data[0].id){\r\n                                                setMuestraBotonFechaParaSemaforo(true);\r\n                                            }\r\n                                        }\r\n                                        \r\n                                    });\r\n                                    window.showSpinner(false);\r\n                                }else{\r\n            \r\n                                }\r\n                            }\r\n                        )\r\n                    } else {\r\n\r\n                    }\r\n                }\r\n            )\r\n\r\n            setEstadoLista(\"Activos\");\r\n            cargarActuacionesActivas(1, paganationPerPages, global.Constants.ESTADOS.ACTIVO);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const cargarActuacionesActivas = (page, perPage, estado) => {\r\n\r\n        GenericApi.getGeneric('actuaciones/get-actuaciones-active/' + 1 + '/' + selected_id_etapa).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    if (datos[\"data\"] != \"\") {\r\n                        setActuacionesActivasListaSearch(datos)\r\n                    }\r\n                    window.showSpinner(false);\r\n                } else {\r\n                    setErrorApi(datos.error.toString())\r\n                    window.showModal(1)\r\n                    window.showSpinner(false);\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const handlePageChange = page => {\r\n        setPageActual(page);\r\n        cargarActuacionesActivas(page, perPage);\r\n    }\r\n\r\n    const handlePerRowsChange = async (newPerPage, page) => {\r\n        setPerPage(newPerPage);\r\n        setPageActual(page);\r\n        cargarActuacionesActivas(page, newPerPage);\r\n    }\r\n\r\n    const handleChangeCheck = ({ selectedRows }) => {\r\n\r\n        // Se setea en 0 la cantidad de actuaciones checkeadas para resetear el valor del boton\r\n        setCountCantidad(0);\r\n\r\n        // Se valida que haya seleccionado por lo menos un dato\r\n        if (selectedRows) {\r\n\r\n            // Se añade al array de los elementos seleccionados\r\n            setElementArray([...selectedRows]);\r\n        }\r\n\r\n        // Se setea la cantidad de actuaciones checkeadas\r\n        setCountCantidad(selectedRows.length);\r\n    };\r\n\r\n    const inactivarActuaciones = () => {\r\n\r\n        // Se activa el loading\r\n        window.showSpinner(true);\r\n\r\n        // Se valida cuando sea continuar el valor\r\n        if (getCountCantidad == 0) {\r\n\r\n            // Se inactiva el loading\r\n            window.showSpinner(false);\r\n\r\n            // Se muestra el modal para redirigir a las transacciones\r\n            setModalState({ title: \"SINPROC No \" + from.radicado + \" :: ACTUACIONES INACTIVAR\", \r\n            message: \"REDIRIGIENDO AL SIGUIENTE PASO ...\", \r\n            show: true, \r\n            redirect: '/SeleccionDeFechaParaSemaforo', \r\n            from: { from: from, selected_id_etapa: selected_id_etapa, id: uuid_actuacion, nombre: nombre, estadoActualActuacion: estadoActualActuacion, tipoActuacion: tipoActuacion  }, \r\n            alert: global.Constants.TIPO_ALERTA.EXITO });\r\n\r\n            // Se retorna en falso\r\n            return;\r\n        }\r\n\r\n        let data = {\r\n            \"data\": {\r\n                \"type\": \"actuaciones/actuaciones-inactivar\",\r\n                \"attributes\": {\r\n                    \"id_actuacion\": \"1\",\r\n                    \"usuario_accion\": \"1\",\r\n                    \"id_estado_actuacion\": \"1\",\r\n                    \"documento_ruta\": \"1\",\r\n                    \"estado\": \"1\",\r\n                    \"uuid_proceso_disciplinario\": \"1\",\r\n                    \"id_etapa\": \"1\",\r\n                    \"id_proceso_disciplinario\": \"1\",\r\n                    \"data\": getElementArray\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.addGeneric('actuaciones/actuaciones-inactivar', data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    if (!datos.error) {\r\n                        window.showSpinner(false);\r\n\r\n                        const mensaje = datos.OK == 1 ? \"ACTUACIONES INACTIVADAS CON ÉXITO\" : \"HUBO UN ERROR AL TRATAR DE INACTIVAR LAS ACTUACIONES\";\r\n\r\n                        if (datos.OK == 1) {\r\n                            if(getMuestraBotonFechaParaSemaforo){\r\n                                setModalState({ title: \"SINPROC No \" + from.radicado + \" :: ACTUACIONES INACTIVAR\", \r\n                                message: mensaje, \r\n                                show: true, \r\n                                redirect: '/SeleccionDeFechaParaSemaforo', \r\n                                from: { from: from, selected_id_etapa: selected_id_etapa, id: uuid_actuacion, nombre: nombre, estadoActualActuacion: estadoActualActuacion, tipoActuacion: tipoActuacion }, \r\n                                alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                            }else{\r\n                                setModalState({ title: \"SINPROC No \" + from.radicado + \" :: ACTUACIONES INACTIVAR\", \r\n                                message: mensaje, \r\n                                show: true, \r\n                                redirect: '/Transacciones', \r\n                                from: {from: from, selected_id_etapa: selected_id_etapa, id_actuacion: getidMasActuacion}, \r\n                                alert: global.Constants.TIPO_ALERTA.EXITO });\r\n                            }\r\n                        } else {\r\n                            // console.log(\"Entro al OK 0\");\r\n                            setModalState({ title: \"SINPROC No \" + from.radicado + \" :: ACTUACIONES INACTIVAR\", message: datos.error.toString(), show: true, redirect: '/MisPendientes', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        setModalState({ title: \"SINPROC No \" + from.radicado + \" :: ACTUACIONES INACTIVAR\", message: datos.error.toString(), show: true, redirect: '/MisPendientes', alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            }\r\n        )\r\n\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isRedirect ? redirectToRoutes() : null}\r\n            {<Spinner />}\r\n            {<InfoErrorApi error={errorApi} />}\r\n            {<ModalGen data={getModalState} />}\r\n\r\n            <Formik>\r\n                <Form>\r\n                    <div className=\"w2d_block\">\r\n                        <nav aria-label=\"breadcrumb\">\r\n                            <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                <li class=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                <li class=\"breadcrumb-item\"> <small>Actuaciones Inactivar</small></li>\r\n                            </ol>\r\n                        </nav>\r\n                    </div>\r\n\r\n                    <div className=\"block block-themed\">\r\n                        <div className=\"block-header\">\r\n                            <h3 className=\"block-title\">SINPROC No {radicado} :: <strong>LISTA DE ACTUACIONES A INACTIVAR</strong></h3>\r\n                        </div>\r\n                        <div className=\"block-content\">\r\n                            <div className='row'>\r\n                                <div className='col-md-3'>\r\n                                    <div className=\"form-group \">\r\n                                        <Field type=\"text\" id=\"search\" name=\"search\" value={getSeach} onChange={e => setSeach(e.target.value)} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} className=\"form-control border border-success\" placeholder=\"Buscar\" />\r\n                                    </div>\r\n                                </div>\r\n                                {/* <ListaBotones getRoutes={getRoutes} from={from} mostrarBotonAgregar={getMostrarBotonAgregar != null ? getMostrarBotonAgregar : validacionDeBotonAgregar()} parentCallback={handleCallback} id=\"botonesNavegacion\" name=\"botonesNavegacion\" /> */}\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                                        columns={columns}\r\n                                        data={getActuacionesActivasListaSearch.data.filter((suggestion) => {\r\n\r\n                                            if (getSeach === \"\") {\r\n                                                return suggestion;\r\n                                            } else if (\r\n\r\n                                                ((quitarAcentos(suggestion.attributes.nombre_actuacion)\r\n                                                    + quitarAcentos(suggestion.attributes.created_user) + quitarAcentos(suggestion.attributes.usuario_accion) +\r\n                                                    quitarAcentos(suggestion.attributes.nombre_estado_actuacion) + quitarAcentos(suggestion.attributes.auto)\r\n                                                ).toLowerCase().includes(getSeach.toLowerCase()))\r\n\r\n                                            ) {\r\n                                                return suggestion;\r\n                                            }\r\n                                        })}\r\n                                        perPage={perPage}\r\n                                        page={pageActual}\r\n                                        pagination\r\n                                        noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                                        paginationTotalRows={getActuacionesActivasListaSearch.length}\r\n                                        onChangePage={handlePageChange}\r\n                                        onChangeRowsPerPage={handlePerRowsChange}\r\n                                        defaultSortFieldId=\"Nombre\"\r\n                                        striped\r\n                                        paginationComponentOptions={{ rowsPerPageText: global.Constants.DATA_TABLE.FILTRO_POR_PAGINA }}\r\n                                        defaultSortAsc={false}\r\n                                        selectableRows\r\n                                        onSelectedRowsChange={handleChangeCheck}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"block-content block-content-full text-right\">\r\n                                <button type=\"button\" className=\"btn btn-rounded btn-primary\" onClick={inactivarActuaciones}><i class=\"fas fa-save\"></i> {getCountCantidad > 0 ? \"INACTIVAR\" : \"CONTINUAR\"}</button>\r\n                                <Link to={`/MisPendientes/`}>\r\n                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\"> CANCELAR</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default ActuacionesInactivar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}