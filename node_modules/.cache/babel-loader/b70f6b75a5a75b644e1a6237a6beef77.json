{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Herramientas\\\\CaratulasParametrosPlantillaForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport DataTable from 'react-data-table-component';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport Spinner from '../../Utils/Spinner';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport '../../Utils/Constants';\nimport { getUser } from '../../Utils/Common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CaratulasParametrosPlantillaForm(props) {\n  _s();\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  const caratulaId = props.caratulaId;\n  const radicado = from.radicado;\n  const procesoDisciplinarioId = from.procesoDisciplinarioId;\n  const id_etapa = from.idEtapa;\n  const fechaRegistro = from.fechaRegistro;\n  const fechaIngreso = from.fechaIngreso;\n  const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\n  const registradoPor = from.registradoPor;\n  const vigencia = from.vigencia;\n  const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\n  const [modalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getListaParametros, setListaParametros] = useState({\n    params: []\n  });\n  const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({\n    data: []\n  });\n  const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({\n    data: []\n  });\n  //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\n  const [getAntecedentesLista, setAntecedentesLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getInteresadosLista, setInteresadosLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [getParametrosCampos, setParametrosCampos] = useState();\n\n  // const campos = [\n  //     { title: \"N° Proceso\", value: radicado, type: \"N° Proceso\", check: false },\n  //     { title: \"Sinproc\", value: radicado, type: \"Sinproc\", check: false },\n  //     { title: 'Antecedentes', value: null, type: \"Antecedentes\", check: false },\n  //     { title: 'Usuario', value: registradoPor, type: \"Usuario\", check: false },\n  //     { title: 'Dependencia', value: dependencia, check: false },\n  //     { title: 'Vigencia', value: vigencia, type: \"Vigencia\", check: false },\n  //     { title: 'Fecha Registro', value: fechaRegistro, type: \"Fecha Registro\", check: false },\n  //     { title: 'Fecha Ingreso', value: fechaIngreso, type: \"Fecha Ingreso\", check: false },\n  //     { title: \"Generado\", value: generadoPor, type: \"Generado\", check: false },\n  // ];\n\n  useEffect(() => {\n    async function fetchData() {\n      cargarTablaParametrosCaratula();\n    }\n    fetchData();\n  }, [props.id_mas_actuacion]);\n  const selectCampos = parametro => {\n    return getListaParametrosBaseDatos.map((item, i) => {\n      var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\n      if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i,\n          children: item.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this);\n      }\n    });\n  };\n  const handleChangeInteresados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getInteresadosLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n      return item;\n    });\n    setInteresadosLista(valorId);\n    let val = getInteresadosLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.sujeto_procesal_nombre} ${p.attributes.primer_apellido} ${p.attributes.segundo_apellido} ${p.attributes.primer_nombre} ${p.attributes.segundo_nombre}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n  function checkeoAutomaticoInteresados(parametro, id_campo) {\n    setInteresadosLista(getInteresadosLista);\n    var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n  function checkeoAutomaticoAntecedentes(parametro, id_campo) {\n    setAntecedentesLista(getAntecedentesLista);\n    var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n  function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\n    setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\n    var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n  function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\n    setCargosInvestigadoLista(getCargosInvestigadoLista);\n    var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n  function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\n    setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\n    var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\n    if (nombre == \"null\") {\n      nombre = \"NO_APLICA\";\n    }\n    selectChangeListaCampos(parametro, id_campo, nombre);\n  }\n  const handleChangeAntecedentes = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getAntecedentesLista.map(item => {\n      if (value == item.id) {\n        item.checked = checked;\n      }\n      return item;\n    });\n    setAntecedentesLista(valorId);\n    let val = getAntecedentesLista.map(p => {\n      if (p.checked == true) {\n        var nombre = `${p.attributes.descripcion}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n  const handleChangeInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadesInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_investigado) {\n        item.checked = checked;\n      }\n      return item;\n    });\n    setEntidadesInvestigadoLista(valorId);\n    let val = getEntidadesInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_investigado}`;\n        var nombre = `${p.attributes.nombre_investigado}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n  const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getCargosInvestigadoLista.map(item => {\n      if (value == item.attributes.cargo) {\n        item.checked = checked;\n      }\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getCargosInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.cargo}`;\n        var nombre = `${p.attributes.cargo}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n  const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let valorId = getEntidadInvestigadoLista.map(item => {\n      if (value == item.attributes.nombre_entidad) {\n        item.checked = checked;\n      }\n      return item;\n    });\n    setCargosInvestigadoLista(valorId);\n    let val = getEntidadInvestigadoLista.map(p => {\n      if (p.checked == true) {\n        var value = `${p.attributes.nombre_entidad}`;\n        var nombre = `${p.attributes.nombre_entidad}`;\n        return nombre;\n      }\n    }).filter(x => x != undefined);\n    selectChangeListaCampos(parametro, id_campo, val.toString());\n  };\n  const selectAntecedentes = (parametro, id_campo) => {\n    if (Array.isArray(getAntecedentesLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getAntecedentesLista && getAntecedentesLista.length == 1) {\n        checkeoAutomaticoAntecedentes(parametro, id_campo);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getAntecedentesLista[0].id,\n            name: 'check' + getAntecedentesLista[0].id,\n            value: getAntecedentesLista[0].id\n            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), \" \", getAntecedentesLista[0].attributes.descripcion]\n        }, 'keyCheck' + getAntecedentesLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this);\n      } else if (getAntecedentesLista.length > 1) {\n        return getAntecedentesLista.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + item.id,\n              name: 'check' + item.id,\n              value: item.id,\n              onChange: e => handleChangeAntecedentes(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this), \" \", item.attributes.descripcion]\n          }, 'keyCheck' + item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this)\n          // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectInteresados = (parametro, id_campo) => {\n    if (Array.isArray(getInteresadosLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getInteresadosLista && getInteresadosLista.length == 1) {\n        checkeoAutomaticoInteresados(parametro, id_campo);\n        var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getInteresadosLista[0].id,\n            name: 'check' + getInteresadosLista[0].id,\n            value: getInteresadosLista[0].id\n            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getInteresadosLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this);\n      } else if (getInteresadosLista.length > 1) {\n        return getInteresadosLista.map((item, i) => {\n          var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: 'check' + nombre,\n              name: 'check' + nombre,\n              value: item.id,\n              onChange: e => handleChangeInteresados(e, parametro, id_campo),\n              defaultChecked: item.checked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this), \" \", nombre]\n          }, 'keyCheck' + nombre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this)\n          // <option key={nombre} value={nombre}>{nombre}</option>\n          ;\n        });\n      }\n    }\n  };\n\n  const selectInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadesInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\n        let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getEntidadesInvestigadoLista[0].id,\n            name: 'check' + getEntidadesInvestigadoLista[0].id,\n            value: getEntidadesInvestigadoLista[0].id\n            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getEntidadesInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this);\n      } else if (getEntidadesInvestigadoLista.length > 1) {\n        return getEntidadesInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.nombre_investigado}`;\n          var nombre = `${item.attributes.nombre_investigado}`;\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 33\n            }, this)\n            //<option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const selectCargosInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getCargosInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getCargosInvestigadoLista[0].id,\n            name: 'check' + getCargosInvestigadoLista[0].id,\n            value: getCargosInvestigadoLista[0].id\n            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getCargosInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this);\n      } else if (getCargosInvestigadoLista.length > 1) {\n        return getCargosInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.cargo}`;\n          var nombre = `${item.attributes.cargo}`;\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeCargosInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 33\n            }, this)\n            // <option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const selectEntidadesInvestigados = (parametro, id_campo) => {\n    if (Array.isArray(getEntidadInvestigadoLista)) {\n      // Se valida que sea un array la lista y que su longitud sea igual a 1\n      if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\n        checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\n        if (nombre == \"null\") {\n          nombre = \"NO_APLICA\";\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: 'check' + getEntidadInvestigadoLista[0].id,\n            name: 'check' + getEntidadInvestigadoLista[0].id,\n            value: getEntidadInvestigadoLista[0].id\n            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\n            ,\n            defaultChecked: true,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this), \" \", nombre]\n        }, 'keyCheck' + getEntidadInvestigadoLista[0].id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this);\n      } else if (getEntidadInvestigadoLista.length > 1) {\n        return getEntidadInvestigadoLista.map((item, i) => {\n          var value = `${item.attributes.nombre_entidad}`;\n          var nombre = `${item.attributes.nombre_entidad}`;\n          if (nombre != \"null\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"form-check-input\",\n                id: nombre,\n                name: nombre,\n                value: nombre,\n                onChange: e => handleChangeEntidadesInvestigados(e, parametro, id_campo),\n                defaultChecked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 37\n              }, this), \" \", nombre]\n            }, nombre, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 33\n            }, this)\n            //<option key={value} value={value}>{nombre}</option>\n            ;\n          }\n        });\n      }\n    }\n  };\n\n  const cargarValoresDeParametro = parametro => {\n    const arrayOtherElements = [\"Dependencia Origen\", \"Delegada\", \"Radicado\", \"Radicación\", \"Auto\"];\n    var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\n      return item.parametro == parametro;\n    });\n    var tempCampo = campoParametro[0];\n    if (tempCampo != undefined && getListaParametrosBaseDatos[tempCampo.id_campo] != undefined) {\n      var itemCampo = getListaParametrosBaseDatos[tempCampo.id_campo];\n\n      // Tiene un valor por defecto\n      if (itemCampo.value != null) {\n        // Se asigna el valor a la lista temporal\n        var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\n          if (item.parametro == parametro) {\n            item.id_campo = tempCampo.id_campo;\n            var itemCampoId = getListaParametrosBaseDatos[tempCampo.id_campo];\n            item.valor = itemCampoId.value != null ? itemCampoId.value : \"\";\n            item.valorTemporal = itemCampoId.value != null ? itemCampoId.value : \"\";\n          }\n          return item;\n        });\n\n        // Se deshabilita cuando es sinproc o dependencia\n        var validarElemento = document.getElementById('id' + itemCampo.title);\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: itemCampo.value\n        }, void 0, false);\n      } else if (itemCampo.type == \"Antecedentes\") {\n        var validarElemento = document.getElementById('id' + tempCampo.parametro);\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-control custom-switch custom-control-lg mb-2\",\n          children: selectAntecedentes(parametro, tempCampo.id_campo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }, this);\n      } else {\n        var validarElemento = document.getElementById('id' + itemCampo.title);\n        if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\n          validarElemento.setAttribute(\"disabled\", \"true\");\n        }\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Campo Inactivo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }, this);\n      }\n    }\n\n    // let idLabelParametro = 'idValorSeleccionado' + tempCampo.parametro;\n\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" El campo debe estar dentro de la lista parametrizable para asignarle un valor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 17\n    }, this);\n  };\n  const cargarCheckParametro = parametro => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        id: 'check' + parametro + '1',\n        name: 'check' + parametro + '1',\n        value: parametro + '1',\n        onChange: e => handleChangeStatus(e, parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 17\n      }, this)\n    }, 'keyCheck' + parametro + '1', false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 13\n    }, this);\n  };\n  const handleChangeStatus = (e, parametro) => {\n    // Se captura el elemento enviado por parametros\n    var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\n\n    // Se valida si esta checkeado\n    if (e.target.checked) {\n      // Se devuelve el valor a vacio\n      var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n        // Se valida que el item recorrido sea igual al parametro checkeado\n        if (item.parametro == parametro) {\n          // Se captura el id del campo\n          item.id_campo = itemFilter[0].id_campo;\n          var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\n\n          // Se redefine el valor del item a vacio\n          item.valor = \"\";\n          item.valorTemporal = itemCampo.value != null ? itemCampo.value : itemFilter[0].value;\n        }\n\n        // Se retorna el item\n        return item;\n      });\n    } else {\n      // Se devuelve el valor a vacio\n      var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n        // Se valida que el item recorrido sea igual al parametro checkeado\n        if (item.parametro == parametro) {\n          // Se captura el id del campo\n          item.id_campo = itemFilter[0].id_campo;\n          var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\n\n          // Se redefine el valor del item a su valor original\n          item.valor = item.valorTemporal;\n          item.valorTemporal = itemCampo.value != null ? itemCampo.value : itemFilter[0].value;\n        }\n\n        // Se retorna el item\n        return item;\n      });\n    }\n  };\n  const selectChangeListaCampos = (parametro, id_campo, value) => {\n    // console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\n\n    var newParams = getListaCamposPorParametroTemporal.data.map(item => {\n      if (item.parametro == parametro) {\n        item.id_campo = id_campo;\n        var itemCampo = getListaParametrosBaseDatos[id_campo];\n        item.valor = itemCampo.value != null ? itemCampo.value : value;\n        item.valorTemporal = itemCampo.value != null ? itemCampo.value : value;\n      }\n      return item;\n    });\n\n    //setListaCamposPorParametroDefinitiva({ data: newParams });\n  };\n\n  const columns = [{\n    name: 'Parametros de la plantilla',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: parametro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 32\n    }, this),\n    sortable: true,\n    width: \"20%\"\n  }, {\n    name: 'Campo',\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      id: `id${parametro}`,\n      name: `name${parametro}`,\n      onChange: e => selectChangeListaCampos(parametro, e.target.value, \"\"),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Por favor seleccione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 21\n      }, this), selectCampos(parametro)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 17\n    }, this),\n    sortable: false,\n    width: \"25%\"\n  }, {\n    name: 'Valor seleccionado',\n    width: \"50%\",\n    cell: parametro => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: cargarValoresDeParametro(parametro)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 17\n    }, this)\n  }\n  // {\n  //     name: 'Activar/Inactivar',\n  //     width: \"10%\",\n  //     cell: parametro =>\n  //         <div className='row'>\n  //             <div className='col'>\n  //                 {cargarCheckParametro(parametro)}\n  //             </div>\n  //         </div>\n  // }\n  ];\n\n  // Metodo encargado de cargar los parametros generales de la plantilla de la BD\n  const cargarTablaParametrosCaratula = () => {\n    // Se inicializa el array\n    var array = [];\n\n    // Se inicializa la API\n    GenericApi.getGeneric('parametro_campos_caratula').then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se recorre el array para insertar los valores necesarios\n        for (let index = 0; index < datos.data.length; index++) {\n          // Se captura los datos por posicion\n          const element = datos.data[index].attributes;\n          const title = element.nombre_campo;\n          const estado = element.estado == \"1\" ? true : false;\n          const type = element.type;\n          const value = validarValueParametros(type, estado);\n\n          // Se añade el dato al array general\n          array.push({\n            title: title,\n            value: value,\n            type: type,\n            check: estado\n          });\n        }\n\n        // Se setea la respuesta en la constante\n        setListaParametrosBaseDatos(array);\n\n        // Se generan la lista de parametros del documento\n        cargarParametros(array);\n      }\n    });\n  };\n\n  // Metodo encargado de retorna el valor por el elemento\n  const validarValueParametros = (element, estado) => {\n    // Se inicializa la variable\n    let valor;\n\n    // Se valida por el elemento\n    if (element == \"Sinproc\" && estado) {\n      valor = radicado;\n    } else if (element == \"Usuario\" && estado) {\n      valor = registradoPor;\n    } else if (element == \"Dependencia\" && estado) {\n      valor = dependencia;\n    } else if (element == \"Vigencia\" && estado) {\n      valor = vigencia;\n    } else if (element == \"Fecha Registro\" && estado) {\n      valor = fechaRegistro;\n    } else if (element == \"Fecha Ingreso\" && estado) {\n      valor = fechaIngreso;\n    } else if (element == \"Generado\" && estado) {\n      valor = generadoPor;\n    }\n\n    // Se retorna el valor\n    return valor;\n  };\n\n  // Metodo encargado de cargar la lista de parametros de la plantilla\n  const cargarParametros = listaParametrosBaseDatos => {\n    // Se setea el array en null\n    setListaParametros(null);\n\n    // Se inicializa la data\n    const data = {\n      \"data\": {\n        \"type\": 'caratulas',\n        \"attributes\": {\n          \"id\": caratulaId\n        }\n      }\n    };\n\n    // Se inicializa la API que carga la lisata de parametros de la plantilla\n    GenericApi.getByDataGeneric('caratulas/parametros-plantilla/' + caratulaId, data).then(\n    // Se inicializa la variable de respuesta\n    datos => {\n      // Se valida que no haya error\n      if (!datos.error) {\n        // Se setea la lista\n        setListaParametros(datos);\n\n        // Se recorre el array de datos\n        var parametrosCampos = datos.params.map((item, i) => {\n          // Se ejecuta una busqueda del elemento\n          var indexCampo = listaParametrosBaseDatos.findIndex(x => x.title == item);\n          if (indexCampo >= 0) {\n            return {\n              parametro: item,\n              id_campo: indexCampo,\n              valor: \"\"\n            };\n          } else {\n            return {\n              parametro: item,\n              id_campo: \"\",\n              valor: \"\"\n            };\n          }\n        });\n        setListaCamposPorParametroTemporal({\n          data: parametrosCampos\n        });\n\n        // Se cargan los antecedentes, interesados y entidades del investigado\n        cargarEntidadesInvestigado();\n        cargarAntecedentes();\n        cargarInteresados();\n      }\n    });\n  };\n  const cargarAntecedentes = () => {\n    const data = {\n      \"data\": {\n        \"type\": 'antecedente',\n        \"attributes\": {\n          \"antecedentes\": \"antecedentes\",\n          \"descripcion\": \"descripcion\",\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"fecha_registro\": Date.now(),\n          \"id_dependencia\": -1,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setAntecedentesLista(parametrosCampos);\n      }\n    });\n  };\n  const cargarInteresados = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"interesado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"tipo_documento\": \"1\",\n          \"numero_documento\": \"1\",\n          \"primer_nombre\": \"1\",\n          \"segundo_nombre\": \"1\",\n          \"primer_apellido\": \"1\",\n          \"segundo_apellido\": \"1\",\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          item.checked = false;\n          return item;\n        });\n        setInteresadosLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Datos del interesado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n  const cargarEntidadesInvestigado = () => {\n    const data = {\n      \"data\": {\n        \"type\": \"entidad_investigado\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_etapa\": \"1\",\n          \"requiere_registro\": true,\n          \"estado\": \"1\",\n          'per_page': 100,\n          'current_page': 1\n        }\n      }\n    };\n    GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(datos => {\n      if (!datos.error) {\n        var parametrosCampos = datos.data.map(item => {\n          var nombreInvestigado = item.attributes.nombre_investigado;\n          var cargoInvestigado = item.attributes.cargo;\n          var entidadInvestigado = item.attributes.nombre_entidad;\n          if (nombreInvestigado == null) {\n            item.attributes.nombre_investigado = \"NO_APLICA\";\n          }\n          if (cargoInvestigado == null) {\n            item.attributes.cargo = \"NO_APLICA\";\n          }\n          if (entidadInvestigado == null) {\n            item.attributes.nombre_entidad = \"NO_APLICA\";\n          }\n          item.checked = false;\n          return item;\n        });\n        setEntidadesInvestigadoLista(parametrosCampos);\n        setCargosInvestigadoLista(parametrosCampos);\n        setEntidadInvestigadoLista(parametrosCampos);\n      } else {\n        setModalState({\n          title: \"Entidades del investigado\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: null,\n          from: {\n            from\n          }\n        });\n      }\n    });\n  };\n  const descargarArchivo = () => {\n    try {\n      window.showSpinner(true);\n      var params = getListaCamposPorParametroTemporal.data.map(item => {\n        return {\n          \"param\": item.parametro,\n          \"value\": item.valor\n        };\n      });\n      // console.log(\"######params#####\");\n      // console.log(params);\n\n      const data = {\n        \"data\": {\n          \"type\": \"caratulas\",\n          \"attributes\": {\n            \"params\": params\n          }\n        }\n      };\n      GenericApi.getByDataGeneric('caratulas/plantilla-diligenciada/' + caratulaId, data).then(datos => {\n        window.showSpinner(false);\n        if (!datos.error) {\n          downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"pdf\");\n        } else {\n          setModalState({\n            title: \"SINPROC No \" + radicado + \" :: \",\n            message: datos.error.toString(),\n            show: true,\n            redirect: null,\n            from: {\n              from\n            },\n            alert: global.Constants.TIPO_ALERTA.ERROR\n          });\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  function downloadBase64File(contentType, base64Data, fileName) {\n    const linkSource = `data:${contentType};base64,${base64Data}`;\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = linkSource;\n    downloadLink.download = fileName;\n    downloadLink.click();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 13\n    }, this), getListaParametros != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"PAR\\xC1METROS DE LA PLANTILLA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-2 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n          columns: columns,\n          data: getListaParametros.params,\n          noDataComponent: global.Constants.DATA_TABLE.SIN_DATOS_TABLE,\n          striped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 mt-4 mb-2 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => descargarArchivo(),\n          className: \"btn btn-rounded btn-primary\",\n          title: \"Descargar\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-file-pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 140\n          }, this), \" Descargar car\\xE1tula\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Cargando parametros de la plantilla...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(CaratulasParametrosPlantillaForm, \"JeTjLsKnVBT4TaWrS7/SzNmMs3g=\", false, function () {\n  return [useLocation];\n});\n_c = CaratulasParametrosPlantillaForm;\nexport default CaratulasParametrosPlantillaForm;\nvar _c;\n$RefreshReg$(_c, \"CaratulasParametrosPlantillaForm\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","DataTable","GenericApi","Spinner","ModalGen","getUser","CaratulasParametrosPlantillaForm","props","location","from","state","caratulaId","radicado","procesoDisciplinarioId","id_etapa","idEtapa","fechaRegistro","fechaIngreso","dependencia","nombre_dependencia","nombre","registradoPor","vigencia","generadoPor","nombre_completo","modalState","setModalState","title","message","show","getListaParametros","setListaParametros","params","getListaCamposPorParametroTemporal","setListaCamposPorParametroTemporal","data","getListaParametrosBaseDatos","setListaParametrosBaseDatos","getAntecedentesLista","setAntecedentesLista","links","meta","getInteresadosLista","setInteresadosLista","getEntidadesInvestigadoLista","setEntidadesInvestigadoLista","getCargosInvestigadoLista","setCargosInvestigadoLista","getEntidadInvestigadoLista","setEntidadInvestigadoLista","getParametrosCampos","setParametrosCampos","fetchData","cargarTablaParametrosCaratula","id_mas_actuacion","selectCampos","parametro","map","item","i","itemFilter","filter","x","undefined","length","id_campo","handleChangeInteresados","e","value","checked","target","valorId","id","val","p","attributes","sujeto_procesal_nombre","primer_apellido","segundo_apellido","primer_nombre","segundo_nombre","selectChangeListaCampos","toString","checkeoAutomaticoInteresados","checkeoAutomaticoAntecedentes","descripcion","checkeoAutomaticoInvestigadosNombre","nombre_investigado","checkeoAutomaticoInvestigadosCargo","cargo","checkeoAutomaticoInvestigadosEntidad","nombre_entidad","handleChangeAntecedentes","handleChangeInvestigados","handleChangeCargosInvestigados","handleChangeEntidadesInvestigados","selectAntecedentes","Array","isArray","selectInteresados","selectInvestigados","selectCargosInvestigados","selectEntidadesInvestigados","cargarValoresDeParametro","arrayOtherElements","campoParametro","tempCampo","itemCampo","newParamsItem","itemCampoId","valor","valorTemporal","validarElemento","document","getElementById","hasAttribute","setAttribute","type","cargarCheckParametro","handleChangeStatus","newParams","columns","name","cell","sortable","width","array","getGeneric","then","datos","error","index","element","nombre_campo","estado","validarValueParametros","push","check","cargarParametros","listaParametrosBaseDatos","getByDataGeneric","parametrosCampos","indexCampo","findIndex","cargarEntidadesInvestigado","cargarAntecedentes","cargarInteresados","Date","now","redirect","nombreInvestigado","cargoInvestigado","entidadInvestigado","descargarArchivo","window","showSpinner","downloadBase64File","content_type","base_64","file_name","alert","global","Constants","TIPO_ALERTA","ERROR","console","contentType","base64Data","fileName","linkSource","downloadLink","createElement","href","download","click","DATA_TABLE","SIN_DATOS_TABLE"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Herramientas/CaratulasParametrosPlantillaForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport DataTable from 'react-data-table-component';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport '../../Utils/Constants';\r\nimport { getUser } from '../../Utils/Common';\r\n\r\nfunction CaratulasParametrosPlantillaForm(props) {\r\n\r\n    const location = useLocation()\r\n    const { from } = location.state;\r\n    const caratulaId = props.caratulaId;\r\n    const radicado = from.radicado;\r\n    const procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n    const id_etapa = from.idEtapa;\r\n    const fechaRegistro = from.fechaRegistro;\r\n    const fechaIngreso = from.fechaIngreso;\r\n    const dependencia = getUser().nombre_dependencia ? getUser().nombre_dependencia.nombre : \"\";\r\n    const registradoPor = from.registradoPor;\r\n    const vigencia = from.vigencia;\r\n    const generadoPor = getUser().nombre_completo ? getUser().nombre_completo : \"\";\r\n\r\n    const [modalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getListaParametros, setListaParametros] = useState({ params: [] });\r\n    const [getListaCamposPorParametroTemporal, setListaCamposPorParametroTemporal] = useState({ data: [] });\r\n    const [getListaParametrosBaseDatos, setListaParametrosBaseDatos] = useState({ data: [] });\r\n    //const [getListaCamposPorParametroDefinitiva, setListaCamposPorParametroDefinitiva] = useState({ data: [] });\r\n    const [getAntecedentesLista, setAntecedentesLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getInteresadosLista, setInteresadosLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadesInvestigadoLista, setEntidadesInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getCargosInvestigadoLista, setCargosInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getEntidadInvestigadoLista, setEntidadInvestigadoLista] = useState({ data: [], links: [], meta: [] });\r\n    const [getParametrosCampos, setParametrosCampos] = useState();\r\n\r\n    // const campos = [\r\n    //     { title: \"N° Proceso\", value: radicado, type: \"N° Proceso\", check: false },\r\n    //     { title: \"Sinproc\", value: radicado, type: \"Sinproc\", check: false },\r\n    //     { title: 'Antecedentes', value: null, type: \"Antecedentes\", check: false },\r\n    //     { title: 'Usuario', value: registradoPor, type: \"Usuario\", check: false },\r\n    //     { title: 'Dependencia', value: dependencia, check: false },\r\n    //     { title: 'Vigencia', value: vigencia, type: \"Vigencia\", check: false },\r\n    //     { title: 'Fecha Registro', value: fechaRegistro, type: \"Fecha Registro\", check: false },\r\n    //     { title: 'Fecha Ingreso', value: fechaIngreso, type: \"Fecha Ingreso\", check: false },\r\n    //     { title: \"Generado\", value: generadoPor, type: \"Generado\", check: false },\r\n    // ];\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            cargarTablaParametrosCaratula();\r\n        }\r\n        fetchData();\r\n    }, [props.id_mas_actuacion]);\r\n\r\n    const selectCampos = (parametro) => {\r\n\r\n        return (\r\n            getListaParametrosBaseDatos.map((item, i) => {\r\n\r\n                var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n                if (itemFilter != undefined && itemFilter.length > 0 && itemFilter[0].id_campo === i) {\r\n                    return (\r\n                        <option selected key={i} value={i}>{item.title}</option>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <option key={i} value={i}>{item.title}</option>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleChangeInteresados = (e, parametro, id_campo) => {\r\n\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getInteresadosLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setInteresadosLista(valorId);\r\n        let val = getInteresadosLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.sujeto_procesal_nombre} ${p.attributes.primer_apellido} ${p.attributes.segundo_apellido} ${p.attributes.primer_nombre} ${p.attributes.segundo_nombre}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n    }\r\n\r\n    function checkeoAutomaticoInteresados(parametro, id_campo) {\r\n        setInteresadosLista(getInteresadosLista);\r\n        var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoAntecedentes(parametro, id_campo) {\r\n        setAntecedentesLista(getAntecedentesLista);\r\n        var nombre = `${getAntecedentesLista[0].attributes.descripcion}`;\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosNombre(parametro, id_campo) {\r\n        setEntidadInvestigadoLista(getEntidadesInvestigadoLista);\r\n        var nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosCargo(parametro, id_campo) {\r\n        setCargosInvestigadoLista(getCargosInvestigadoLista);\r\n        var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    function checkeoAutomaticoInvestigadosEntidad(parametro, id_campo) {\r\n        setEntidadesInvestigadoLista(getEntidadInvestigadoLista);\r\n        var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n        if (nombre == \"null\") {\r\n            nombre = \"NO_APLICA\";\r\n        }\r\n        selectChangeListaCampos(parametro, id_campo, nombre);\r\n    }\r\n\r\n    const handleChangeAntecedentes = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getAntecedentesLista.map((item) => {\r\n            if (value == item.id) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setAntecedentesLista(valorId);\r\n        let val = getAntecedentesLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var nombre = `${p.attributes.descripcion}`;\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadesInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_investigado) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setEntidadesInvestigadoLista(valorId);\r\n        let val = getEntidadesInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_investigado}`;\r\n                var nombre = `${p.attributes.nombre_investigado}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeCargosInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getCargosInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.cargo) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getCargosInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.cargo}`;\r\n                var nombre = `${p.attributes.cargo}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const handleChangeEntidadesInvestigados = (e, parametro, id_campo) => {\r\n        const { value, checked } = e.target;\r\n\r\n        let valorId = getEntidadInvestigadoLista.map((item) => {\r\n            if (value == item.attributes.nombre_entidad) {\r\n                item.checked = checked;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setCargosInvestigadoLista(valorId);\r\n        let val = getEntidadInvestigadoLista.map((p) => {\r\n            if (p.checked == true) {\r\n                var value = `${p.attributes.nombre_entidad}`;\r\n                var nombre = `${p.attributes.nombre_entidad}`;\r\n\r\n                return nombre;\r\n            }\r\n        }).filter(x => x != undefined);\r\n        selectChangeListaCampos(parametro, id_campo, val.toString());\r\n\r\n    }\r\n\r\n    const selectAntecedentes = (parametro, id_campo) => {\r\n        if (Array.isArray(getAntecedentesLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getAntecedentesLista && getAntecedentesLista.length == 1) {\r\n                checkeoAutomaticoAntecedentes(parametro, id_campo);\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getAntecedentesLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getAntecedentesLista[0].id}\r\n                            name={'check' + getAntecedentesLista[0].id}\r\n                            value={getAntecedentesLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {getAntecedentesLista[0].attributes.descripcion}\r\n                    </div >\r\n                )\r\n            } else if (getAntecedentesLista.length > 1) {\r\n                return (\r\n                    getAntecedentesLista.map((item, i) => {\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + item.id}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + item.id}\r\n                                    name={'check' + item.id}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeAntecedentes(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {item.attributes.descripcion}\r\n                            </div>\r\n                            // <option key={item.attributes.descripcion} value={item.attributes.descripcion}>{item.attributes.descripcion}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInteresados = (parametro, id_campo) => {\r\n        if (Array.isArray(getInteresadosLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getInteresadosLista && getInteresadosLista.length == 1) {\r\n                checkeoAutomaticoInteresados(parametro, id_campo);\r\n                var nombre = `${getInteresadosLista[0].attributes.sujeto_procesal_nombre} ${getInteresadosLista[0].attributes.primer_apellido} ${getInteresadosLista[0].attributes.segundo_apellido} ${getInteresadosLista[0].attributes.primer_nombre} ${getInteresadosLista[0].attributes.segundo_nombre}`;\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getInteresadosLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getInteresadosLista[0].id}\r\n                            name={'check' + getInteresadosLista[0].id}\r\n                            value={getInteresadosLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getInteresadosLista.length > 1) {\r\n                return (\r\n                    getInteresadosLista.map((item, i) => {\r\n                        var nombre = `${item.attributes.sujeto_procesal_nombre} ${item.attributes.primer_apellido} ${item.attributes.segundo_apellido} ${item.attributes.primer_nombre} ${item.attributes.segundo_nombre}`;\r\n                        return (\r\n                            <div className=\"col-md-12\" key={'keyCheck' + nombre}>\r\n                                <input type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id={'check' + nombre}\r\n                                    name={'check' + nombre}\r\n                                    value={item.id}\r\n                                    onChange={(e) => handleChangeInteresados(e, parametro, id_campo)}\r\n                                    defaultChecked={item.checked} /> {nombre}\r\n                            </div>\r\n                            // <option key={nombre} value={nombre}>{nombre}</option>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadesInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadesInvestigadoLista && getEntidadesInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosNombre(parametro, id_campo);\r\n                let nombre = `${getEntidadesInvestigadoLista[0].attributes.nombre_investigado}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadesInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadesInvestigadoLista[0].id}\r\n                            value={getEntidadesInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadesInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadesInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_investigado}`;\r\n                        var nombre = `${item.attributes.nombre_investigado}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectCargosInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getCargosInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getCargosInvestigadoLista && getCargosInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosCargo(parametro, id_campo);\r\n                var nombre = `${getCargosInvestigadoLista[0].attributes.cargo}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getCargosInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getCargosInvestigadoLista[0].id}\r\n                            name={'check' + getCargosInvestigadoLista[0].id}\r\n                            value={getCargosInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getCargosInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getCargosInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.cargo}`;\r\n                        var nombre = `${item.attributes.cargo}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeCargosInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                // <option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectEntidadesInvestigados = (parametro, id_campo) => {\r\n        if (Array.isArray(getEntidadInvestigadoLista)) {\r\n\r\n            // Se valida que sea un array la lista y que su longitud sea igual a 1\r\n            if (getEntidadInvestigadoLista && getEntidadInvestigadoLista.length == 1) {\r\n                checkeoAutomaticoInvestigadosEntidad(parametro, id_campo);\r\n                var nombre = `${getEntidadInvestigadoLista[0].attributes.nombre_entidad}`;\r\n                if (nombre == \"null\") {\r\n                    nombre = \"NO_APLICA\";\r\n                }\r\n                return (\r\n                    <div className=\"col-md-12\" key={'keyCheck' + getEntidadInvestigadoLista[0].id} >\r\n                        <input type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id={'check' + getEntidadInvestigadoLista[0].id}\r\n                            name={'check' + getEntidadInvestigadoLista[0].id}\r\n                            value={getEntidadInvestigadoLista[0].id}\r\n                            //onChange={(e) => handleChangeInteresados(0, parametro, id_campo)}\r\n                            defaultChecked={true}\r\n                            disabled /> {nombre}\r\n                    </div >\r\n                )\r\n            } else if (getEntidadInvestigadoLista.length > 1) {\r\n\r\n                return (\r\n                    getEntidadInvestigadoLista.map((item, i) => {\r\n                        var value = `${item.attributes.nombre_entidad}`;\r\n                        var nombre = `${item.attributes.nombre_entidad}`;\r\n\r\n                        if (nombre != \"null\") {\r\n                            return (\r\n                                <div className=\"col-md-12\" key={nombre}>\r\n                                    <input type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        id={nombre}\r\n                                        name={nombre}\r\n                                        value={nombre}\r\n                                        onChange={(e) => handleChangeEntidadesInvestigados(e, parametro, id_campo)}\r\n                                        defaultChecked={item.checked} /> {nombre}\r\n                                </div>\r\n                                //<option key={value} value={value}>{nombre}</option>\r\n                            )\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const cargarValoresDeParametro = (parametro) => {\r\n\r\n        const arrayOtherElements = [\r\n            \"Dependencia Origen\",\r\n            \"Delegada\",\r\n            \"Radicado\",\r\n            \"Radicación\",\r\n            \"Auto\"\r\n        ];\r\n\r\n        var campoParametro = getListaCamposPorParametroTemporal.data.filter(item => {\r\n            return item.parametro == parametro;\r\n        });\r\n\r\n        var tempCampo = campoParametro[0];\r\n\r\n        if (tempCampo != undefined && getListaParametrosBaseDatos[tempCampo.id_campo] != undefined) {\r\n            var itemCampo = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n\r\n            // Tiene un valor por defecto\r\n            if (itemCampo.value != null) {\r\n\r\n                // Se asigna el valor a la lista temporal\r\n                var newParamsItem = getListaCamposPorParametroTemporal.data.map(item => {\r\n                    if (item.parametro == parametro) {\r\n                        item.id_campo = tempCampo.id_campo;\r\n                        var itemCampoId = getListaParametrosBaseDatos[tempCampo.id_campo];\r\n                        item.valor = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                        item.valorTemporal = (itemCampoId.value != null) ? itemCampoId.value : \"\";\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                // Se deshabilita cuando es sinproc o dependencia\r\n                var validarElemento = document.getElementById('id' + itemCampo.title);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <>{itemCampo.value}</>\r\n                )\r\n            } else if (itemCampo.type == \"Antecedentes\") {\r\n\r\n                var validarElemento = document.getElementById('id' + tempCampo.parametro);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <div className=\"custom-control custom-switch custom-control-lg mb-2\">\r\n                        {selectAntecedentes(parametro, tempCampo.id_campo)}\r\n                    </div>\r\n                )\r\n            } else {\r\n                var validarElemento = document.getElementById('id' + itemCampo.title);\r\n                if (validarElemento && !validarElemento.hasAttribute(\"disabled\")) {\r\n                    validarElemento.setAttribute(\"disabled\", \"true\");\r\n                }\r\n\r\n                return (\r\n                    <label>Campo Inactivo</label>\r\n                )\r\n            }\r\n        }\r\n\r\n        // let idLabelParametro = 'idValorSeleccionado' + tempCampo.parametro;\r\n\r\n        return (<label> El campo debe estar dentro de la lista parametrizable para asignarle un valor</label >)\r\n\r\n    }\r\n\r\n    const cargarCheckParametro = (parametro) => {\r\n\r\n        return (\r\n            <div className=\"col-md-12\" key={'keyCheck' + parametro + '1'} >\r\n                <input type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    id={'check' + parametro + '1'}\r\n                    name={'check' + parametro + '1'}\r\n                    value={parametro + '1'}\r\n                    onChange={(e) => handleChangeStatus(e, parametro)}\r\n                />\r\n            </div >\r\n        )\r\n    }\r\n\r\n    const handleChangeStatus = (e, parametro) => {\r\n\r\n        // Se captura el elemento enviado por parametros\r\n        var itemFilter = getListaCamposPorParametroTemporal.data.filter(x => x.parametro == parametro);\r\n\r\n        // Se valida si esta checkeado\r\n        if (e.target.checked) {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a vacio\r\n                    item.valor = \"\";\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n\r\n\r\n        } else {\r\n\r\n            // Se devuelve el valor a vacio\r\n            var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n                // Se valida que el item recorrido sea igual al parametro checkeado\r\n                if (item.parametro == parametro) {\r\n\r\n                    // Se captura el id del campo\r\n                    item.id_campo = itemFilter[0].id_campo;\r\n                    var itemCampo = getListaParametrosBaseDatos[itemFilter[0].id_campo];\r\n\r\n                    // Se redefine el valor del item a su valor original\r\n                    item.valor = item.valorTemporal;\r\n                    item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : itemFilter[0].value;\r\n                }\r\n\r\n                // Se retorna el item\r\n                return item;\r\n            });\r\n        }\r\n    }\r\n\r\n    const selectChangeListaCampos = (parametro, id_campo, value) => {\r\n\r\n        // console.log(\"selectChangeListaCampos >> \" + parametro + \" \" + id_campo + \" \" + value);\r\n\r\n        var newParams = getListaCamposPorParametroTemporal.data.map(item => {\r\n\r\n            if (item.parametro == parametro) {\r\n                item.id_campo = id_campo;\r\n                var itemCampo = getListaParametrosBaseDatos[id_campo];\r\n\r\n                item.valor = (itemCampo.value != null) ? itemCampo.value : value;\r\n                item.valorTemporal = (itemCampo.value != null) ? itemCampo.value : value;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        //setListaCamposPorParametroDefinitiva({ data: newParams });\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Parametros de la plantilla',\r\n            cell: parametro => <div><strong>{parametro}</strong></div>,\r\n            sortable: true,\r\n            width: \"20%\",\r\n        },\r\n        {\r\n            name: 'Campo',\r\n            cell: parametro =>\r\n                <select className=\"form-control\" id={`id${parametro}`} name={`name${parametro}`}\r\n                    onChange={e => selectChangeListaCampos(parametro, e.target.value, \"\")}>\r\n                    <option value=\"\">Por favor seleccione</option>\r\n                    {selectCampos(parametro)}\r\n                </select>,\r\n            sortable: false,\r\n            width: \"25%\",\r\n        },\r\n        {\r\n            name: 'Valor seleccionado',\r\n            width: \"50%\",\r\n            cell: parametro =>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        {cargarValoresDeParametro(parametro)}\r\n                    </div>\r\n                </div>,\r\n        },\r\n        // {\r\n        //     name: 'Activar/Inactivar',\r\n        //     width: \"10%\",\r\n        //     cell: parametro =>\r\n        //         <div className='row'>\r\n        //             <div className='col'>\r\n        //                 {cargarCheckParametro(parametro)}\r\n        //             </div>\r\n        //         </div>\r\n        // }\r\n    ];\r\n\r\n    // Metodo encargado de cargar los parametros generales de la plantilla de la BD\r\n    const cargarTablaParametrosCaratula = () => {\r\n\r\n        // Se inicializa el array\r\n        var array = [];\r\n\r\n        // Se inicializa la API\r\n        GenericApi.getGeneric('parametro_campos_caratula').then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se recorre el array para insertar los valores necesarios\r\n                    for (let index = 0; index < datos.data.length; index++) {\r\n\r\n                        // Se captura los datos por posicion\r\n                        const element = datos.data[index].attributes;\r\n                        const title = element.nombre_campo;\r\n                        const estado = element.estado == \"1\" ? true : false;\r\n                        const type = element.type;\r\n                        const value = validarValueParametros(type, estado);\r\n\r\n                        // Se añade el dato al array general\r\n                        array.push({ title: title, value: value, type: type, check: estado });\r\n                    }\r\n\r\n                    // Se setea la respuesta en la constante\r\n                    setListaParametrosBaseDatos(array);\r\n\r\n                    // Se generan la lista de parametros del documento\r\n                    cargarParametros(array);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Metodo encargado de retorna el valor por el elemento\r\n    const validarValueParametros = (element, estado) => {\r\n\r\n        // Se inicializa la variable\r\n        let valor;\r\n\r\n        // Se valida por el elemento\r\n        if (element == \"Sinproc\" && estado) {\r\n            valor = radicado;\r\n        } else if (element == \"Usuario\" && estado) {\r\n            valor = registradoPor;\r\n        } else if (element == \"Dependencia\" && estado) {\r\n            valor = dependencia;\r\n        } else if (element == \"Vigencia\" && estado) {\r\n            valor = vigencia;\r\n        } else if (element == \"Fecha Registro\" && estado) {\r\n            valor = fechaRegistro;\r\n        } else if (element == \"Fecha Ingreso\" && estado) {\r\n            valor = fechaIngreso;\r\n        } else if (element == \"Generado\" && estado) {\r\n            valor = generadoPor;\r\n        }\r\n\r\n        // Se retorna el valor\r\n        return valor;\r\n    }\r\n\r\n    // Metodo encargado de cargar la lista de parametros de la plantilla\r\n    const cargarParametros = (listaParametrosBaseDatos) => {\r\n\r\n        // Se setea el array en null\r\n        setListaParametros(null);\r\n\r\n        // Se inicializa la data\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'caratulas',\r\n                \"attributes\": {\r\n                    \"id\": caratulaId\r\n                }\r\n            }\r\n        }\r\n\r\n        // Se inicializa la API que carga la lisata de parametros de la plantilla\r\n        GenericApi.getByDataGeneric('caratulas/parametros-plantilla/' + caratulaId, data).then(\r\n\r\n            // Se inicializa la variable de respuesta\r\n            datos => {\r\n\r\n                // Se valida que no haya error\r\n                if (!datos.error) {\r\n\r\n                    // Se setea la lista\r\n                    setListaParametros(datos);\r\n\r\n                    // Se recorre el array de datos\r\n                    var parametrosCampos = datos.params.map((item, i) => {\r\n\r\n                        // Se ejecuta una busqueda del elemento\r\n                        var indexCampo = listaParametrosBaseDatos.findIndex(\r\n                            x =>\r\n                                x.title == item);\r\n\r\n                        if (indexCampo >= 0) {\r\n                            return { parametro: item, id_campo: indexCampo, valor: \"\" };\r\n                        } else {\r\n                            return { parametro: item, id_campo: \"\", valor: \"\" };\r\n                        }\r\n                    });\r\n\r\n                    setListaCamposPorParametroTemporal({ data: parametrosCampos });\r\n\r\n                    // Se cargan los antecedentes, interesados y entidades del investigado\r\n                    cargarEntidadesInvestigado();\r\n                    cargarAntecedentes();\r\n                    cargarInteresados();\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarAntecedentes = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": 'antecedente',\r\n                \"attributes\": {\r\n                    \"antecedentes\": \"antecedentes\",\r\n                    \"descripcion\": \"descripcion\",\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"fecha_registro\": Date.now(),\r\n                    \"id_dependencia\": -1,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n        GenericApi.getByDataGeneric('antecedentes/get-antecedentes/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n\r\n                    setAntecedentesLista(parametrosCampos);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarInteresados = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"interesado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"tipo_documento\": \"1\",\r\n                    \"numero_documento\": \"1\",\r\n                    \"primer_nombre\": \"1\",\r\n                    \"segundo_nombre\": \"1\",\r\n                    \"primer_apellido\": \"1\",\r\n                    \"segundo_apellido\": \"1\",\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric('datos-interesado/datos-interesado/' + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setInteresadosLista(parametrosCampos);\r\n                } else {\r\n                    setModalState({ title: \"Datos del interesado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const cargarEntidadesInvestigado = () => {\r\n        const data = {\r\n            \"data\": {\r\n                \"type\": \"entidad_investigado\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_etapa\": \"1\",\r\n                    \"requiere_registro\": true,\r\n                    \"estado\": \"1\",\r\n                    'per_page': 100,\r\n                    'current_page': 1\r\n                }\r\n            }\r\n        }\r\n\r\n        GenericApi.getByDataGeneric(\"entidad-investigado/get-entidad-investigado/\" + procesoDisciplinarioId, data).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    var parametrosCampos = datos.data.map((item) => {\r\n\r\n                        var nombreInvestigado = item.attributes.nombre_investigado;\r\n                        var cargoInvestigado = item.attributes.cargo;\r\n                        var entidadInvestigado = item.attributes.nombre_entidad;\r\n\r\n                        if (nombreInvestigado == null) {\r\n                            item.attributes.nombre_investigado = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (cargoInvestigado == null) {\r\n                            item.attributes.cargo = \"NO_APLICA\";\r\n                        }\r\n\r\n                        if (entidadInvestigado == null) {\r\n                            item.attributes.nombre_entidad = \"NO_APLICA\";\r\n                        }\r\n\r\n                        item.checked = false;\r\n                        return item;\r\n                    });\r\n                    setEntidadesInvestigadoLista(parametrosCampos);\r\n                    setCargosInvestigadoLista(parametrosCampos);\r\n                    setEntidadInvestigadoLista(parametrosCampos);\r\n                }\r\n                else {\r\n                    setModalState({ title: \"Entidades del investigado\", message: datos.error.toString(), show: true, redirect: null, from: { from } });\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const descargarArchivo = () => {\r\n        try {\r\n            window.showSpinner(true);\r\n\r\n            var params = getListaCamposPorParametroTemporal.data.map(item => {\r\n                return {\r\n                    \"param\": item.parametro,\r\n                    \"value\": item.valor\r\n                };\r\n            });\r\n            // console.log(\"######params#####\");\r\n            // console.log(params);\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": \"caratulas\",\r\n                    \"attributes\": {\r\n                        \"params\": params,\r\n                    }\r\n                }\r\n            }\r\n            GenericApi.getByDataGeneric('caratulas/plantilla-diligenciada/' + caratulaId, data).then(\r\n                datos => {\r\n                    window.showSpinner(false);\r\n                    if (!datos.error) {\r\n                        downloadBase64File(datos.content_type, datos.base_64, datos.file_name, \"pdf\");\r\n                    }\r\n                    else {\r\n                        setModalState({ title: \"SINPROC No \" + radicado + \" :: \", message: datos.error.toString(), show: true, redirect: null, from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    function downloadBase64File(contentType, base64Data, fileName) {\r\n        const linkSource = `data:${contentType};base64,${base64Data}`;\r\n        const downloadLink = document.createElement(\"a\");\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.click();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner />\r\n            <ModalGen data={modalState} />\r\n            {getListaParametros != null ?\r\n                <>\r\n                    <div className='col-md-12'>\r\n                        <label>PARÁMETROS DE LA PLANTILLA</label>\r\n                    </div>\r\n                    <div className='col-md-12 mt-2 mb-2'>\r\n                        <DataTable className=\"table table-bordered table-striped table-vcenter js-dataTable-full\"\r\n                            columns={columns}\r\n                            data={getListaParametros.params}\r\n                            noDataComponent={global.Constants.DATA_TABLE.SIN_DATOS_TABLE}\r\n                            striped\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='col-md-12 mt-4 mb-2 text-center'>\r\n                        <button type=\"button\" onClick={() => descargarArchivo()} className=\"btn btn-rounded btn-primary\" title='Descargar'><i className=\"fas fa-file-pdf\"></i> Descargar carátula</button>\r\n                    </div>\r\n                </>\r\n                :\r\n                <div className='col-md-12'>\r\n                    <label>Cargando parametros de la plantilla...</label>\r\n                </div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CaratulasParametrosPlantillaForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}