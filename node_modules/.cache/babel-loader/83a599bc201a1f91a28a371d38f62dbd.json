{"ast":null,"code":"var _jsxFileName = \"C:\\\\w2d\\\\personeria\\\\personeria-ui\\\\src\\\\components\\\\RamasProceso\\\\Transacciones\\\\EnviarAotraDependencia.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useLocation } from 'react-router-dom';\nimport Spinner from '../../Utils/Spinner';\nimport GenericApi from '../../Api/Services/GenericApi';\nimport { getUser } from '../../Utils/Common';\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EnviarAotraDependencia() {\n  _s();\n  const [getUsuarioSleccionado, setUsuarioSleccionado] = useState(\"\");\n  const [getListaUusariosDependencia, setListaUusariosDependencia] = useState({\n    data: [],\n    links: [],\n    meta: []\n  });\n  const [countTextArea, setCountTextArea] = useState(0);\n  const [getMaximoTextArea, setMaximoTextArea] = useState(0);\n  const [getMinimoTextArea, setMinimoTextArea] = useState(0);\n  const [getModalState, setModalState] = useState({\n    title: \"\",\n    message: \"\",\n    show: false\n  });\n  const [getDependenciaSeleccionada, setDependenciaSeleccionada] = useState(\"\");\n  const [getTextoTitulo, setTextoTitulo] = useState('');\n  const [getDependenciaDestino, setDependenciaDestino] = useState('');\n  const [getEnviaaJefe, setEnviaaJefe] = useState(false);\n  const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\n  const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\n  const [getUsuarioName, setUsuarioName] = useState(\"\");\n  const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\n  const [getUsuarioId, setUsuarioId] = useState();\n  const [getListaDependenciaDestino, setListaDependenciaDestino] = useState({\n    data: {}\n  });\n  const [getRespuestaDependenciaDestino, setRespuestaDependenciaDestino] = useState(false);\n  const [getListaSemaforosActivosSecretaria, setListaSemaforosActivosSecretaria] = useState([]);\n  const [getHabilitarBotonRemitir, setHabilitarBotonRemitir] = useState(false);\n  const [getHabilitarEstadoRemitir, setHabilitarEstadoRemitir] = useState('');\n  const location = useLocation();\n  const {\n    from,\n    selected_id_etapa\n  } = location.state;\n  let numeroLlamadosFinalizar = 0;\n  let numeroTotalLlamadosFinalizar = 3;\n  let procesoDisciplinarioId = from.procesoDisciplinarioId;\n\n  // Constante de modal general\n  const getMensajeTituloModal = from.nombreProcesoTransacciones && from.nombreProcesoTransacciones.length > 0 ? from.nombreProcesoTransacciones : \"\";\n\n  //Funcion principal\n  useEffect(() => {\n    async function fetchData() {\n      window.showSpinner(true);\n      obtenerParametros();\n      GenericApi.getGeneric('mas-dependencia-actuacion/' + getUser()[\"id_dependencia\"]).then(datos => !datos.error ? (setListaDependenciaDestino(datos), setRespuestaDependenciaDestino(true), window.showSpinner(false)) : window.showModal(1));\n      obtenerParametros();\n      obtenerSemaforosProcesoDisciplinario();\n    }\n    fetchData();\n  }, []);\n\n  // Funcion para validar y detener el spinner\n  const validacionSpinnerFinalizar = () => {\n    numeroLlamadosFinalizar++;\n    console.log(\"Daticos finalizar \", numeroLlamadosFinalizar, numeroTotalLlamadosFinalizar);\n    if (numeroLlamadosFinalizar >= numeroTotalLlamadosFinalizar) {\n      window.showSpinner(false);\n      // Constante de mensaje\n      const mensajeModalExito = 'El proceso con radicado: ' + from.radicado + ' fue asignado al usuario: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ') jefe de la dependencia: ' + getUsuarioDependenciaNombre + '';\n      setModalState({\n        title: getMensajeTituloModal.toUpperCase() + \" :: ENVIAR A OTRA DEPENDENCIA\",\n        message: mensajeModalExito.toUpperCase(),\n        show: true,\n        redirect: '/MisPendientes',\n        alert: global.Constants.TIPO_ALERTA.EXITO\n      });\n    }\n  };\n\n  // Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisión-\n  function containsSpecialChars(str) {\n    const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\n      if (str.includes(specialChar)) {\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n\n  // consultamos la cantidad maxima de caracteres para el textarea\n  const obtenerParametros = () => {\n    try {\n      const data = {\n        \"data\": {\n          \"type\": 'mas_parametro',\n          \"attributes\": {\n            \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\n          }\n        }\n      };\n\n      //buscamos el parametro\n      GenericApi.getByDataGeneric('parametro/parametro-nombre', data).then(datos => {\n        if (!datos.error) {\n          if (datos[\"data\"].length > 0) {\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => setMinimoTextArea(filteredName[\"attributes\"][\"valor\"]));\n            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => setMaximoTextArea(filteredName[\"attributes\"][\"valor\"]));\n          }\n        } else {\n          window.showModal(1);\n        }\n      });\n    } catch (error) {\n      // console.log(error);\n    }\n  };\n  const obtenerSemaforosProcesoDisciplinario = () => {\n    GenericApi.getAllGeneric(\"semaforo/get-semaforo-proceso-disciplinario/\" + global.Constants.SEMAFORO_EVENTOS.EVENTO_DEPENDENCIA + \"/\" + procesoDisciplinarioId).then(datos => {\n      if (!datos.error) {\n        setListaSemaforosActivosSecretaria(datos);\n      }\n      window.showSpinner(false);\n    });\n  };\n  const enviarDatos = valores => {\n    const iduserdependencia = getUser().id_dependencia;\n    if (getDependenciaSeleccionada == getUser()[\"id_dependencia\"]) setModalState({\n      title: getMensajeTituloModal.toUpperCase() + \" :: ENVIAR A OTRA DEPENDENCIA\",\n      message: '¡SU USUARIO ESTÁ CONFIGURADO COMO EL JEFE DE LA DEPENDENCIA!',\n      show: true,\n      redirect: null,\n      from: {\n        from: from,\n        selected_id_etapa: selected_id_etapa\n      },\n      alert: global.Constants.TIPO_ALERTA.ERROR\n    });\n    window.showSpinner(true);\n    let data;\n    data = {\n      \"data\": {\n        \"type\": \"transacciones\",\n        \"attributes\": {\n          \"id_proceso_disciplinario\": procesoDisciplinarioId,\n          \"id_dependencia_origen\": iduserdependencia,\n          \"usuario_a_remitir\": getUsuarioSleccionado,\n          \"descripcion_a_remitir\": valores.informacion,\n          \"id_etapa\": 3\n        }\n      }\n    };\n\n    //Finalizando semaforo que inicia por grupo de trabajo\n    GenericApi.getByIdGeneric('get-semaforo-evento', 4).then(datosSemaforoFinaliza => {\n      validacionSpinnerFinalizar();\n      if (datosSemaforoFinaliza.data.length >= 1) {\n        datosSemaforoFinaliza.data.forEach(element => {\n          numeroTotalLlamadosFinalizar++;\n          let data = {\n            \"data\": {\n              \"type\": \"semaforo\",\n              \"attributes\": {\n                \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\n                \"id_semaforo\": element.id,\n                \"id_actuacion_finaliza\": null,\n                \"id_dependencia_finaliza\": null,\n                \"id_usuario_finaliza\": getUsuarioId\n              }\n            }\n          };\n          GenericApi.getByDataGeneric('set-finaliza-semaforo', data).then(datos => {\n            validacionSpinnerFinalizar();\n          });\n        });\n      }\n    });\n\n    //Finalizando semaforo que inicia por dependencia y vuelve a iniciar uno nuevo\n    GenericApi.getByIdGeneric('get-semaforo-evento', 5).then(datosSemaforoFinaliza => {\n      validacionSpinnerFinalizar();\n      if (datosSemaforoFinaliza.data.length >= 1) {\n        datosSemaforoFinaliza.data.forEach(element => {\n          var _element$attributes, _element$attributes2, _element$attributes2$, _element$attributes3;\n          if (element !== null && element !== void 0 && (_element$attributes = element.attributes) !== null && _element$attributes !== void 0 && _element$attributes.id_mas_dependencia_inicia && (element === null || element === void 0 ? void 0 : (_element$attributes2 = element.attributes) === null || _element$attributes2 === void 0 ? void 0 : (_element$attributes2$ = _element$attributes2.id_mas_dependencia_inicia) === null || _element$attributes2$ === void 0 ? void 0 : _element$attributes2$.id) != getDependenciaSeleccionada) {\n            let data = {\n              \"data\": {\n                \"type\": \"semaforo\",\n                \"attributes\": {\n                  \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\n                  \"id_semaforo\": element.id,\n                  \"id_actuacion_finaliza\": null,\n                  \"id_dependencia_finaliza\": getDependenciaSeleccionada,\n                  \"id_usuario_finaliza\": null\n                }\n              }\n            };\n            numeroTotalLlamadosFinalizar++;\n            GenericApi.getByDataGeneric('set-finaliza-semaforo', data).then(datos => {\n              validacionSpinnerFinalizar();\n            });\n          }\n          //if (getListaSemaforosActivosSecretaria element?.attributes?.id_mas_dependencia_inicia == null) {\n          if (!getListaSemaforosActivosSecretaria.some(objeto => objeto.id.toString() === element.id.toString()) && !(element !== null && element !== void 0 && (_element$attributes3 = element.attributes) !== null && _element$attributes3 !== void 0 && _element$attributes3.id_mas_dependencia_inicia)) {\n            console.log(element);\n            let date = new Date();\n            let datapdxsemaforo = {\n              \"data\": {\n                \"type\": \"pdxsemaforo\",\n                \"attributes\": {\n                  \"id_semaforo\": element.id,\n                  \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\n                  \"id_actuacion\": \"\",\n                  \"fecha_inicio\": date.toLocaleDateString('zh-Hans-CN'),\n                  \"estado\": 1\n                }\n              }\n            };\n            numeroTotalLlamadosFinalizar++;\n            GenericApi.addGeneric('pdxsemaforo', datapdxsemaforo).then(datos => {\n              validacionSpinnerFinalizar();\n            });\n          }\n        });\n      }\n    });\n    GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(datos => {\n      validacionSpinnerFinalizar();\n      if (!datos.error) {\n        numeroTotalLlamadosFinalizar++;\n        GenericApi.getByIdGeneric('get-semaforo-evento', 5).then(datosSemaforo => {\n          validacionSpinnerFinalizar();\n          if (!datosSemaforo.error) {\n            datosSemaforo.data.forEach(element => {\n              var _element$attributes4, _element$attributes4$;\n              if ((element === null || element === void 0 ? void 0 : (_element$attributes4 = element.attributes) === null || _element$attributes4 === void 0 ? void 0 : (_element$attributes4$ = _element$attributes4.id_mas_evento_inicio) === null || _element$attributes4$ === void 0 ? void 0 : _element$attributes4$.id) == 5) {\n                var _element$attributes5, _element$attributes5$;\n                if ((element === null || element === void 0 ? void 0 : (_element$attributes5 = element.attributes) === null || _element$attributes5 === void 0 ? void 0 : (_element$attributes5$ = _element$attributes5.id_mas_dependencia_inicia) === null || _element$attributes5$ === void 0 ? void 0 : _element$attributes5$.id) == getDependenciaSeleccionada) {\n                  let date = new Date();\n                  let datapdxsemaforo = {\n                    \"data\": {\n                      \"type\": \"pdxsemaforo\",\n                      \"attributes\": {\n                        \"id_semaforo\": element.id,\n                        \"id_proceso_disciplinario\": procesoDisciplinarioId,\n                        \"id_actuacion\": \"\",\n                        \"fecha_inicio\": date.toLocaleDateString('zh-Hans-CN'),\n                        \"estado\": 1\n                      }\n                    }\n                  };\n                  numeroTotalLlamadosFinalizar++;\n                  GenericApi.addGeneric('pdxsemaforo', datapdxsemaforo).then(datos => {\n                    validacionSpinnerFinalizar();\n                  });\n                }\n              }\n            });\n          } else {\n            setModalState({\n              title: getMensajeTituloModal.toUpperCase() + \" :: ENVIAR A OTRA DEPENDENCIA\",\n              message: \"HA OCURRIDO UN ERROR CON LA SEMAFORIZACIÓN\",\n              show: true,\n              alert: global.Constants.TIPO_ALERTA.ERROR\n            });\n          }\n        });\n      } else {\n        setModalState({\n          title: getMensajeTituloModal.toUpperCase() + \" :: ENVIAR A OTRA DEPENDENCIA\",\n          message: datos.error.toString(),\n          show: true,\n          redirect: '/AntecedentesLista',\n          from: {\n            from: from,\n            selected_id_etapa: selected_id_etapa\n          },\n          alert: global.Constants.TIPO_ALERTA.ERROR\n        });\n      }\n    });\n  };\n  const selectChangeDependencia = e => {\n    if (e.target.value === \"\") {\n      return;\n    }\n    setDependenciaDestino(\"\");\n    setUsuarioSleccionado(\"\");\n    const idUusario = getListaDependenciaDestino.data.find(element => {\n      return element.id === e.target.value;\n    });\n    if (idUusario) {\n      window.showSpinner(true);\n      GenericApi.getAllGeneric('proceso-diciplinario/usuario-habilitado-transacciones/' + procesoDisciplinarioId + '/' + idUusario.attributes.id_usuario_jefe).then(datos_respuesta => {\n        if (!datos_respuesta.error) {\n          if (datos_respuesta) {\n            setHabilitarBotonRemitir(true);\n            setHabilitarEstadoRemitir('');\n          }\n        } else {\n          setHabilitarBotonRemitir(false);\n          setHabilitarEstadoRemitir(datos_respuesta.error);\n          //setModalState({ title: getMensajeTituloModal.toUpperCase(), message: datos_respuesta.error.toUpperCase(), show: true, redirect: '/Transacciones', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\n        }\n\n        window.showSpinner(false);\n      });\n      if (idUusario.attributes.nombre) {\n        setDependenciaDestino(idUusario.attributes.nombre);\n      }\n    }\n    setDependenciaSeleccionada(e.target.value);\n    setListaUusariosDependencia({\n      data: [],\n      links: [],\n      meta: []\n    });\n    if (e.target.value == getUser()[\"id_dependencia\"]) {\n      setEnviaaJefe(false);\n      setTextoTitulo(\"Seleccione el usuario al cual desea remitir el proceso\");\n    } else {\n      setEnviaaJefe(true);\n      getListaDependenciaDestino.data.find(element => {\n        if (element.id === e.target.value) {\n          if (element.attributes.nombre_solo_usuario_jefe) {\n            // console.log(element.attributes.nombre_solo_usuario_jefe);\n            setUsuarioSleccionado(element.attributes.nombre_solo_usuario_jefe);\n            datosDelUsuarioARemitir(element.attributes.nombre_solo_usuario_jefe);\n          }\n        }\n      });\n      setTextoTitulo(\"El expediente será enviado al jefe de la dependencia:\");\n    }\n  };\n  const datosDelUsuarioARemitir = name => {\n    GenericApi.getGeneric('usuario/get-usuario-por-name/' + name).then(datos => {\n      if (!datos.error) {\n        // console.log(datos);                    \n        if (datos.data.length > 0) {\n          setUsuarioId(datos.data[0].id);\n          setUsuarioNombre(datos.data[0].attributes.nombre);\n          setUsuarioApellido(datos.data[0].attributes.apellido);\n          setUsuarioName(datos.data[0].attributes.name);\n          setUsuarioDependenciaNombre(datos.data[0].attributes.dependencia.nombre);\n        }\n      } else {}\n    });\n  };\n  const selectDependenciaDestino = () => {\n    return getListaDependenciaDestino.data.map((dependencia, i) => {\n      if (dependencia.id != getUser()[\"id_dependencia\"]) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dependencia.id,\n          children: dependencia.attributes.nombre\n        }, dependencia.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 25\n        }, this);\n      }\n    });\n  };\n  const handleInputChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    if (name == \"usuario\") {\n      setUsuarioSleccionado(value);\n    }\n  };\n  const listaUsuariosDependencia = () => {\n    return getListaUusariosDependencia.data.map((usuario, i) => {\n      if (usuario.attributes.reparto_habilitado) {\n        if (usuario.attributes.reparto_habilitado !== \"0\") {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: usuario.attributes.name,\n            children: [usuario.attributes.nombre, \" (\", usuario.attributes.name, \")\"]\n          }, usuario.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 29\n          }, this);\n        }\n      } else {\n        let usuarioActual = getUser() != null ? getUser().nombre : \"SIN ESPECIFICAR\";\n        if (usuarioActual != usuario.attributes.name) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: usuario.attributes.name,\n            children: [usuario.attributes.nombre, \" (\", usuario.attributes.name, \")\"]\n          }, usuario.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 29\n          }, this);\n        }\n      }\n    });\n  };\n  const cargarUsuuarioJefe = () => {\n    const idUusario = getListaDependenciaDestino.data.find(element => {\n      return element.id === getDependenciaSeleccionada;\n    });\n    if (idUusario != undefined) {\n      if (idUusario.attributes.nombre_usuario_jefe) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: getHabilitarBotonRemitir ? 'bg-success text-white' : 'bg-warning text-dark',\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [idUusario.attributes.nombre_usuario_jefe, \" \", !getHabilitarBotonRemitir ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\" - \", getHabilitarEstadoRemitir]\n              }, void 0, true) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"bg-warning text-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"LA DEPENDENCIA NO CUENTA CON JEFE ENCARGADO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 68\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 21\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"bg-warning text-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"LA DEPENDENCIA NO CUENTA CON JEFE ENCARGADO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalGen, {\n      data: getModalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        informacion: '',\n        dependenciaDestino: '',\n        usuario: ''\n      },\n      enableReinitialize: true,\n      validate: valores => {\n        setCountTextArea(valores.informacion.length);\n        let errores = {};\n        if (getUsuarioSleccionado == undefined || getUsuarioSleccionado == \"\") errores.usuario = 'LA DEPENDENCIA SELECCIONADA NO TIENE UN JEFE ASIGNADO';\n        if (!valores.informacion) {\n          errores.informacion = 'Debe ingresar un valor';\n        } else if (valores.informacion.length <= getMinimoTextArea) {\n          errores.informacion = 'La descripción debe tener almenos ' + getMinimoTextArea + ' caracteres';\n        }\n        if (valores.informacion) {\n          if (containsSpecialChars(valores.informacion)) errores.informacion = 'Tiene caracteres inválidos';\n        }\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        enviarDatos(valores);\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w2d_block let\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"breadcrumb\",\n              children: /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"breadcrumb breadcrumb-alt push\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/MisPendientes`,\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Mis Pendientes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 501,\n                      columnNumber: 138\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                    underline: \"hover\",\n                    className: \"text-dark\",\n                    to: `/RamasProceso/`,\n                    state: {\n                      from: from\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: \"Ramas del proceso\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 161\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"breadcrumb-item\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"Enviar a otra dependencia\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 70\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block block-themed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"block-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"block-title\",\n                children: [\"SINPROC NO \", from.radicado, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\" VIGENCIA: \", from.vigencia, \" :: ENVIAR A OTRA DEPENDENCIA\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 88\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 29\n            }, this), (getListaDependenciaDestino === null || getListaDependenciaDestino === void 0 ? void 0 : getListaDependenciaDestino.data.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"dependenciaDestino\",\n                        children: [\"SELECCIONE LA DEPENDENCIA DESTINO\", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 519,\n                          columnNumber: 126\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 519,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        as: \"select\",\n                        className: \"form-control\",\n                        id: \"dependenciaDestino\",\n                        name: \"dependenciaDestino\",\n                        value: getDependenciaSeleccionada,\n                        onChange: selectChangeDependencia,\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Por favor seleccione\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 521,\n                          columnNumber: 61\n                        }, this), getRespuestaDependenciaDestino ? selectDependenciaDestino() : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 520,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"dependenciaDestino\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: errors.dependenciaDestino\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 524,\n                          columnNumber: 115\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 524,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 518,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 49\n                  }, this), !getEnviaaJefe && getDependenciaSeleccionada != '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: getTextoTitulo.toUpperCase()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 106\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(Field, {\n                        value: getUsuarioSleccionado,\n                        onChange: handleInputChange,\n                        as: \"select\",\n                        className: \"form-control\",\n                        id: \"usuario\",\n                        name: \"usuario\",\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Por favor seleccione\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 533,\n                          columnNumber: 69\n                        }, this), listaUsuariosDependencia()]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 532,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"usuario\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: errors.usuario\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 536,\n                          columnNumber: 112\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 536,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        className: \"bg-primary text-white\",\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"DEPENDENCIA ORIGEN\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 541,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"DEPENDENCIA DESTINO\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 542,\n                            columnNumber: 73\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 540,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 539,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getUser().nombre_dependencia != null ? getUser().nombre_dependencia.nombre : \"SIN ESPECIFICAR\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 547,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getDependenciaDestino ? getDependenciaDestino : \"SIN ESPECIFICAR\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 552,\n                            columnNumber: 73\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 546,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 545,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 538,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 57\n                  }, this) : null, getEnviaaJefe && getDependenciaSeleccionada != '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: getTextoTitulo.toUpperCase()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 106\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"usuario\",\n                      component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-danger\",\n                        children: errors.usuario\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 565,\n                        columnNumber: 108\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 565,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: cargarUsuuarioJefe()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 567,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 566,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"table table-bordered table-striped table-vcenter js-dataTable-full\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"DEPENDENCIA ORIGEN\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 574,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"DEPENDENCIA DESTINO\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 575,\n                            columnNumber: 73\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 573,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 572,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getUser().nombre_dependencia != null ? getUser().nombre_dependencia.nombre : \"SIN ESPECIFICAR\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 580,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getDependenciaDestino ? getDependenciaDestino : \"SIN ESPECIFICAR\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 585,\n                            columnNumber: 73\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 579,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 578,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 57\n                  }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"informacion\",\n                        children: [\"OBSERVACIONES \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 596,\n                          columnNumber: 100\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 596,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        as: \"textarea\",\n                        className: \"form-control\",\n                        id: \"informacion\",\n                        name: \"informacion\",\n                        rows: \"6\",\n                        placeholder: \"INFORMACI\\xD3N PARA SU REMISI\\xD3N...\",\n                        maxLength: getMaximoTextArea,\n                        minLength: getMinimoTextArea\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 597,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-right\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-primary\",\n                          children: [countTextArea, \" / \", getMaximoTextArea]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 600,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 599,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        name: \"informacion\",\n                        component: () => /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-danger\",\n                          children: errors.informacion\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 602,\n                          columnNumber: 108\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 602,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 595,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 594,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block-content block-content-full text-right\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-rounded btn-primary\",\n                    disabled: !getHabilitarBotonRemitir,\n                    children: \"REMITIR\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: '/Transacciones',\n                    state: {\n                      from: from,\n                      selected_id_etapa: selected_id_etapa\n                    },\n                    className: \"font-size-h5 font-w600\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn btn-rounded btn-outline-primary\",\n                      children: global.Constants.BOTON_NOMBRE.CANCELAR\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 609,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 41\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-warning alert-dismissable\",\n                role: \"alert\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"alert-heading font-size-h4 my-2\",\n                  children: \"INFORMACI\\xD3N\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Para enviar el proceso disciplinario, es necesario configurar al menos una dependencia de destino. Si no se configura ninguna, no ser\\xE1 posible remitir el expediente a otras dependencias.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EnviarAotraDependencia, \"FlcrS/jWx8Uj3MNmgI4kQbPAoXU=\", false, function () {\n  return [useLocation];\n});\n_c = EnviarAotraDependencia;\nexport default EnviarAotraDependencia;\nvar _c;\n$RefreshReg$(_c, \"EnviarAotraDependencia\");","map":{"version":3,"names":["React","useEffect","useState","ErrorMessage","Field","Form","Formik","useLocation","Spinner","GenericApi","getUser","ModalGen","Link","EnviarAotraDependencia","getUsuarioSleccionado","setUsuarioSleccionado","getListaUusariosDependencia","setListaUusariosDependencia","data","links","meta","countTextArea","setCountTextArea","getMaximoTextArea","setMaximoTextArea","getMinimoTextArea","setMinimoTextArea","getModalState","setModalState","title","message","show","getDependenciaSeleccionada","setDependenciaSeleccionada","getTextoTitulo","setTextoTitulo","getDependenciaDestino","setDependenciaDestino","getEnviaaJefe","setEnviaaJefe","getUsuarioNombre","setUsuarioNombre","getUsuarioApellido","setUsuarioApellido","getUsuarioName","setUsuarioName","getUsuarioDependenciaNombre","setUsuarioDependenciaNombre","getUsuarioId","setUsuarioId","getListaDependenciaDestino","setListaDependenciaDestino","getRespuestaDependenciaDestino","setRespuestaDependenciaDestino","getListaSemaforosActivosSecretaria","setListaSemaforosActivosSecretaria","getHabilitarBotonRemitir","setHabilitarBotonRemitir","getHabilitarEstadoRemitir","setHabilitarEstadoRemitir","location","from","selected_id_etapa","state","numeroLlamadosFinalizar","numeroTotalLlamadosFinalizar","procesoDisciplinarioId","getMensajeTituloModal","nombreProcesoTransacciones","length","fetchData","window","showSpinner","obtenerParametros","getGeneric","then","datos","error","showModal","obtenerSemaforosProcesoDisciplinario","validacionSpinnerFinalizar","console","log","mensajeModalExito","radicado","toUpperCase","redirect","alert","global","Constants","TIPO_ALERTA","EXITO","containsSpecialChars","str","result","TEXT_AREA","CARACTERES_ESPECIALES","split","some","specialChar","includes","getByDataGeneric","filter","map","filteredName","getAllGeneric","SEMAFORO_EVENTOS","EVENTO_DEPENDENCIA","enviarDatos","valores","iduserdependencia","id_dependencia","ERROR","informacion","getByIdGeneric","datosSemaforoFinaliza","forEach","element","id","attributes","id_mas_dependencia_inicia","objeto","toString","date","Date","datapdxsemaforo","toLocaleDateString","addGeneric","datosSemaforo","id_mas_evento_inicio","selectChangeDependencia","e","target","value","idUusario","find","id_usuario_jefe","datos_respuesta","nombre","nombre_solo_usuario_jefe","datosDelUsuarioARemitir","name","apellido","dependencia","selectDependenciaDestino","i","handleInputChange","event","type","checked","listaUsuariosDependencia","usuario","reparto_habilitado","usuarioActual","cargarUsuuarioJefe","undefined","nombre_usuario_jefe","dependenciaDestino","errores","resetForm","errors","vigencia","nombre_dependencia","BOTON_NOMBRE","CANCELAR"],"sources":["C:/w2d/personeria/personeria-ui/src/components/RamasProceso/Transacciones/EnviarAotraDependencia.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport GenericApi from '../../Api/Services/GenericApi';\r\nimport { getUser } from '../../Utils/Common';\r\nimport ModalGen from '../../Utils/Modals/ModalGeneric';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction EnviarAotraDependencia() {\r\n\r\n    const [getUsuarioSleccionado, setUsuarioSleccionado] = useState(\"\");\r\n    const [getListaUusariosDependencia, setListaUusariosDependencia] = useState({ data: [], links: [], meta: [] });\r\n\r\n    const [countTextArea, setCountTextArea] = useState(0);\r\n    const [getMaximoTextArea, setMaximoTextArea] = useState(0);\r\n    const [getMinimoTextArea, setMinimoTextArea] = useState(0);\r\n    const [getModalState, setModalState] = useState({ title: \"\", message: \"\", show: false });\r\n    const [getDependenciaSeleccionada, setDependenciaSeleccionada] = useState(\"\");\r\n    const [getTextoTitulo, setTextoTitulo] = useState('');\r\n    const [getDependenciaDestino, setDependenciaDestino] = useState('');\r\n    const [getEnviaaJefe, setEnviaaJefe] = useState(false);\r\n\r\n    const [getUsuarioNombre, setUsuarioNombre] = useState(\"\");\r\n    const [getUsuarioApellido, setUsuarioApellido] = useState(\"\");\r\n    const [getUsuarioName, setUsuarioName] = useState(\"\");\r\n    const [getUsuarioDependenciaNombre, setUsuarioDependenciaNombre] = useState(\"\");\r\n    const [getUsuarioId, setUsuarioId] = useState();\r\n\r\n    const [getListaDependenciaDestino, setListaDependenciaDestino] = useState({ data: {} });\r\n    const [getRespuestaDependenciaDestino, setRespuestaDependenciaDestino] = useState(false);\r\n    const [getListaSemaforosActivosSecretaria, setListaSemaforosActivosSecretaria] = useState([]);\r\n\r\n    const [getHabilitarBotonRemitir, setHabilitarBotonRemitir] = useState(false);\r\n    const [getHabilitarEstadoRemitir, setHabilitarEstadoRemitir] = useState('');\r\n\r\n    const location = useLocation();\r\n    const { from, selected_id_etapa } = location.state;\r\n\r\n    let numeroLlamadosFinalizar = 0;\r\n    let numeroTotalLlamadosFinalizar = 3;\r\n\r\n    let procesoDisciplinarioId = from.procesoDisciplinarioId;\r\n\r\n    // Constante de modal general\r\n    const getMensajeTituloModal = from.nombreProcesoTransacciones && from.nombreProcesoTransacciones.length > 0 ? from.nombreProcesoTransacciones : \"\";\r\n\r\n    //Funcion principal\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            window.showSpinner(true);\r\n            obtenerParametros();\r\n            GenericApi.getGeneric('mas-dependencia-actuacion/'+getUser()[\"id_dependencia\"]).then(\r\n                datos => !datos.error ? (setListaDependenciaDestino(datos), setRespuestaDependenciaDestino(true), window.showSpinner(false)) : window.showModal(1)\r\n            )\r\n            obtenerParametros();\r\n            obtenerSemaforosProcesoDisciplinario()\r\n\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Funcion para validar y detener el spinner\r\n    const validacionSpinnerFinalizar = () => {\r\n        numeroLlamadosFinalizar++\r\n        console.log(\"Daticos finalizar \", numeroLlamadosFinalizar, numeroTotalLlamadosFinalizar);\r\n        if(numeroLlamadosFinalizar >= numeroTotalLlamadosFinalizar){\r\n            window.showSpinner(false);\r\n            // Constante de mensaje\r\n            const mensajeModalExito = 'El proceso con radicado: ' + from.radicado + ' fue asignado al usuario: ' + getUsuarioNombre + ' ' + getUsuarioApellido + ' (' + getUsuarioName + ') jefe de la dependencia: ' + getUsuarioDependenciaNombre + '';\r\n            setModalState({ title: getMensajeTituloModal.toUpperCase() + \" :: ENVIAR A OTRA DEPENDENCIA\", message: mensajeModalExito.toUpperCase(), show: true, redirect: '/MisPendientes', alert: global.Constants.TIPO_ALERTA.EXITO });\r\n        }\r\n    }\r\n\r\n    // Funcion que nos ayuda a ver si existen caracteres especiales en el textarea de -Informacion para su remisión-\r\n    function containsSpecialChars(str) {\r\n\r\n        const result = global.Constants.TEXT_AREA.CARACTERES_ESPECIALES.split('').some(specialChar => {\r\n            if (str.includes(specialChar)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    // consultamos la cantidad maxima de caracteres para el textarea\r\n    const obtenerParametros = () => {\r\n        try {\r\n            const data = {\r\n                \"data\": {\r\n                    \"type\": 'mas_parametro',\r\n                    \"attributes\": {\r\n                        \"nombre\": \"minimo_caracteres_textarea|maximo_caracteres_textarea\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            //buscamos el parametro\r\n            GenericApi.getByDataGeneric('parametro/parametro-nombre', data).then(\r\n                datos => {\r\n                    if (!datos.error) {\r\n                        if (datos[\"data\"].length > 0) {\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('minimo_caracteres_textarea')).map(filteredName => (\r\n                                setMinimoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ));\r\n                            datos[\"data\"].filter(data => data[\"attributes\"][\"nombre\"].includes('maximo_caracteres_textarea')).map(filteredName => (\r\n                                setMaximoTextArea(filteredName[\"attributes\"][\"valor\"])\r\n                            ));\r\n                        }\r\n                    } else {\r\n                        window.showModal(1);\r\n                    }\r\n                }\r\n            )\r\n        } catch (error) {\r\n            // console.log(error);\r\n        }\r\n    }\r\n\r\n    const obtenerSemaforosProcesoDisciplinario = () => {\r\n\r\n        GenericApi.getAllGeneric(\"semaforo/get-semaforo-proceso-disciplinario/\"+global.Constants.SEMAFORO_EVENTOS.EVENTO_DEPENDENCIA+\"/\"+procesoDisciplinarioId).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    setListaSemaforosActivosSecretaria(datos)\r\n                }\r\n                window.showSpinner(false);\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const enviarDatos = (valores) => {\r\n        const iduserdependencia = getUser().id_dependencia;\r\n\r\n        if (getDependenciaSeleccionada == getUser()[\"id_dependencia\"])\r\n            setModalState({ title: getMensajeTituloModal.toUpperCase() + \" :: ENVIAR A OTRA DEPENDENCIA\", message: '¡SU USUARIO ESTÁ CONFIGURADO COMO EL JEFE DE LA DEPENDENCIA!', show: true, redirect: null, from: { from: from, selected_id_etapa: selected_id_etapa }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n\r\n        window.showSpinner(true);\r\n        let data;\r\n\r\n        data = {\r\n            \"data\": {\r\n                \"type\": \"transacciones\",\r\n                \"attributes\": {\r\n                    \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                    \"id_dependencia_origen\": iduserdependencia,\r\n                    \"usuario_a_remitir\": getUsuarioSleccionado,\r\n                    \"descripcion_a_remitir\": valores.informacion,\r\n                    \"id_etapa\": 3\r\n                }\r\n            }\r\n        }\r\n\r\n        //Finalizando semaforo que inicia por grupo de trabajo\r\n        GenericApi.getByIdGeneric('get-semaforo-evento', 4).then(\r\n            datosSemaforoFinaliza => {\r\n                validacionSpinnerFinalizar();\r\n                if (datosSemaforoFinaliza.data.length >= 1) {\r\n                    datosSemaforoFinaliza.data.forEach(element => {\r\n                        numeroTotalLlamadosFinalizar++\r\n\r\n                        let data = {\r\n                            \"data\": {\r\n                                \"type\": \"semaforo\",\r\n                                \"attributes\": {\r\n                                    \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                                    \"id_semaforo\": element.id,\r\n                                    \"id_actuacion_finaliza\": null,\r\n                                    \"id_dependencia_finaliza\": null,\r\n                                    \"id_usuario_finaliza\": getUsuarioId\r\n                                }\r\n                            }\r\n                        }\r\n                        \r\n                        GenericApi.getByDataGeneric('set-finaliza-semaforo', data).then(\r\n                            datos => {\r\n                                validacionSpinnerFinalizar()\r\n                            }\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n        )\r\n\r\n        //Finalizando semaforo que inicia por dependencia y vuelve a iniciar uno nuevo\r\n        GenericApi.getByIdGeneric('get-semaforo-evento', 5).then(\r\n            datosSemaforoFinaliza => {\r\n                \r\n                validacionSpinnerFinalizar();\r\n\r\n                if (datosSemaforoFinaliza.data.length >= 1) {\r\n                    datosSemaforoFinaliza.data.forEach(element => {                        \r\n                        if (element?.attributes?.id_mas_dependencia_inicia && element?.attributes?.id_mas_dependencia_inicia?.id != getDependenciaSeleccionada) {\r\n                           let data = {\r\n                            \"data\": {\r\n                                \"type\": \"semaforo\",\r\n                                \"attributes\": {\r\n                                    \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                                    \"id_semaforo\": element.id,\r\n                                    \"id_actuacion_finaliza\": null,\r\n                                    \"id_dependencia_finaliza\": getDependenciaSeleccionada,\r\n                                    \"id_usuario_finaliza\": null\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        numeroTotalLlamadosFinalizar++\r\n                        \r\n                        GenericApi.getByDataGeneric('set-finaliza-semaforo', data).then(\r\n                            datos => {\r\n                                validacionSpinnerFinalizar()\r\n                            }\r\n                        );\r\n                        }\r\n                        //if (getListaSemaforosActivosSecretaria element?.attributes?.id_mas_dependencia_inicia == null) {\r\n                        if (\r\n                                (!getListaSemaforosActivosSecretaria.some(objeto => objeto.id.toString() === element.id.toString())) &&\r\n                                !element?.attributes?.id_mas_dependencia_inicia\r\n                            )\r\n                        {\r\n                            console.log(element);\r\n                            let date = new Date();\r\n                            let datapdxsemaforo = {\r\n                                \"data\": {\r\n                                    \"type\": \"pdxsemaforo\",\r\n                                    \"attributes\": {\r\n                                        \"id_semaforo\": element.id,\r\n                                        \"id_proceso_disciplinario\": from.procesoDisciplinarioId,\r\n                                        \"id_actuacion\": \"\",\r\n                                        \"fecha_inicio\": date.toLocaleDateString('zh-Hans-CN'),\r\n                                        \"estado\": 1,\r\n                                    }\r\n                                }\r\n                            }\r\n                            numeroTotalLlamadosFinalizar++\r\n                            GenericApi.addGeneric('pdxsemaforo', datapdxsemaforo).then(\r\n                                datos => { \r\n                                    validacionSpinnerFinalizar() \r\n                                }\r\n                            )\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        )\r\n\r\n        GenericApi.addGeneric('transacciones/cambiar-usuario-proceso-disciplinario', data).then(\r\n            datos => {\r\n\r\n                validacionSpinnerFinalizar();\r\n\r\n                if (!datos.error) {\r\n                    numeroTotalLlamadosFinalizar++\r\n                    GenericApi.getByIdGeneric('get-semaforo-evento', 5).then(\r\n                        datosSemaforo => {\r\n\r\n                            validacionSpinnerFinalizar()\r\n\r\n                            if (!datosSemaforo.error) {\r\n                                datosSemaforo.data.forEach(element => {\r\n                                    if (element?.attributes?.id_mas_evento_inicio?.id == 5) {\r\n                                        if (element?.attributes?.id_mas_dependencia_inicia?.id == getDependenciaSeleccionada) {\r\n                                            let date = new Date();\r\n                                            let datapdxsemaforo = {\r\n                                                \"data\": {\r\n                                                    \"type\": \"pdxsemaforo\",\r\n                                                    \"attributes\": {\r\n                                                        \"id_semaforo\": element.id,\r\n                                                        \"id_proceso_disciplinario\": procesoDisciplinarioId,\r\n                                                        \"id_actuacion\": \"\",\r\n                                                        \"fecha_inicio\": date.toLocaleDateString('zh-Hans-CN'),\r\n                                                        \"estado\": 1,\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            numeroTotalLlamadosFinalizar++\r\n                                            GenericApi.addGeneric('pdxsemaforo', datapdxsemaforo).then(\r\n                                                datos => {\r\n                                                    validacionSpinnerFinalizar()\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                setModalState({ title: getMensajeTituloModal.toUpperCase() + \" :: ENVIAR A OTRA DEPENDENCIA\", message: \"HA OCURRIDO UN ERROR CON LA SEMAFORIZACIÓN\", show: true, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                            }\r\n                        }\r\n                    )                    \r\n                }\r\n                else {\r\n                    setModalState({ title: getMensajeTituloModal.toUpperCase() + \" :: ENVIAR A OTRA DEPENDENCIA\", message: datos.error.toString(), show: true, redirect: '/AntecedentesLista', from: { from: from, selected_id_etapa: selected_id_etapa }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const selectChangeDependencia = (e) => {\r\n        if (e.target.value === \"\") {\r\n            return\r\n        }\r\n        setDependenciaDestino(\"\");\r\n        setUsuarioSleccionado(\"\");\r\n\r\n\r\n        const idUusario = getListaDependenciaDestino.data.find((element) => {\r\n            return element.id === e.target.value;\r\n        })\r\n        if (idUusario) {\r\n            window.showSpinner(true);\r\n            GenericApi.getAllGeneric('proceso-diciplinario/usuario-habilitado-transacciones/' + procesoDisciplinarioId + '/' + idUusario.attributes.id_usuario_jefe).then(\r\n                datos_respuesta => {\r\n                    if (!datos_respuesta.error) {\r\n                        if (datos_respuesta) {\r\n                            setHabilitarBotonRemitir(true)\r\n                            setHabilitarEstadoRemitir('')\r\n                        }\r\n                    }\r\n                    else {\r\n                        setHabilitarBotonRemitir(false)\r\n                        setHabilitarEstadoRemitir(datos_respuesta.error)\r\n                        //setModalState({ title: getMensajeTituloModal.toUpperCase(), message: datos_respuesta.error.toUpperCase(), show: true, redirect: '/Transacciones', from: { from }, alert: global.Constants.TIPO_ALERTA.ERROR });\r\n                    }                    \r\n                    window.showSpinner(false);\r\n                }\r\n            )\r\n\r\n            if (idUusario.attributes.nombre) {\r\n                setDependenciaDestino(idUusario.attributes.nombre);\r\n            }\r\n        }\r\n\r\n        setDependenciaSeleccionada(e.target.value);\r\n        setListaUusariosDependencia({ data: [], links: [], meta: [] });\r\n        if (e.target.value == getUser()[\"id_dependencia\"]) {\r\n            setEnviaaJefe(false);\r\n            setTextoTitulo(\"Seleccione el usuario al cual desea remitir el proceso\");\r\n        }\r\n        else {\r\n            setEnviaaJefe(true);\r\n            getListaDependenciaDestino.data.find((element) => {\r\n                if (element.id === e.target.value) {\r\n                    if (element.attributes.nombre_solo_usuario_jefe) {\r\n                        // console.log(element.attributes.nombre_solo_usuario_jefe);\r\n                        setUsuarioSleccionado(element.attributes.nombre_solo_usuario_jefe);\r\n                        datosDelUsuarioARemitir(element.attributes.nombre_solo_usuario_jefe);\r\n                    }\r\n\r\n                }\r\n            })\r\n            setTextoTitulo(\"El expediente será enviado al jefe de la dependencia:\");\r\n        }\r\n    }\r\n\r\n    const datosDelUsuarioARemitir = (name) => {\r\n\r\n        GenericApi.getGeneric('usuario/get-usuario-por-name/' + name).then(\r\n            datos => {\r\n                if (!datos.error) {\r\n                    // console.log(datos);                    \r\n                    if(datos.data.length > 0){\r\n                        setUsuarioId(datos.data[0].id);\r\n                        setUsuarioNombre(datos.data[0].attributes.nombre);\r\n                        setUsuarioApellido(datos.data[0].attributes.apellido);\r\n                        setUsuarioName(datos.data[0].attributes.name);\r\n                        setUsuarioDependenciaNombre(datos.data[0].attributes.dependencia.nombre);\r\n                    }\r\n                }\r\n                else {\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const selectDependenciaDestino = () => {\r\n        return (\r\n            getListaDependenciaDestino.data.map((dependencia, i) => {\r\n                if (dependencia.id != getUser()[\"id_dependencia\"]) {\r\n                    return (\r\n                        <option key={dependencia.id} value={dependencia.id}>{dependencia.attributes.nombre}</option>\r\n                    )\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if (name == \"usuario\") {\r\n            setUsuarioSleccionado(value);\r\n        }\r\n    }\r\n\r\n\r\n    const listaUsuariosDependencia = () => {\r\n        return (\r\n            getListaUusariosDependencia.data.map((usuario, i) => {\r\n                if (usuario.attributes.reparto_habilitado) {\r\n\r\n                    if (usuario.attributes.reparto_habilitado !== \"0\") {\r\n                        return (\r\n                            <option key={usuario.id} value={usuario.attributes.name}>{usuario.attributes.nombre} ({usuario.attributes.name})</option>\r\n                        )\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    let usuarioActual = (getUser() != null) ? (getUser().nombre) : \"SIN ESPECIFICAR\"\r\n\r\n                    if (usuarioActual != usuario.attributes.name) {\r\n                        return (\r\n\r\n                            <option key={usuario.id} value={usuario.attributes.name}>{usuario.attributes.nombre} ({usuario.attributes.name})</option>\r\n                        )\r\n                    }\r\n\r\n                }\r\n\r\n            })\r\n        )\r\n    }\r\n\r\n    const cargarUsuuarioJefe = () => {\r\n        const idUusario = getListaDependenciaDestino.data.find((element) => {\r\n            return element.id === getDependenciaSeleccionada;\r\n        })\r\n        if (idUusario != undefined) {\r\n            if (idUusario.attributes.nombre_usuario_jefe) {\r\n                return (\r\n                    <tr>\r\n                        <td className={ getHabilitarBotonRemitir ? 'bg-success text-white' : 'bg-warning text-dark' }>\r\n                            <strong>{idUusario.attributes.nombre_usuario_jefe} {!getHabilitarBotonRemitir ? <> - {getHabilitarEstadoRemitir}</> : null}</strong>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <tr><td className='bg-warning text-dark'><div ><strong>LA DEPENDENCIA NO CUENTA CON JEFE ENCARGADO</strong></div></td></tr>\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            return (\r\n                <tr><td className='bg-warning text-dark'><div ><strong>LA DEPENDENCIA NO CUENTA CON JEFE ENCARGADO</strong></div></td></tr>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {<Spinner />}\r\n            {<ModalGen data={getModalState} />}\r\n            <Formik\r\n                initialValues={{\r\n                    informacion: '',\r\n                    dependenciaDestino: '',\r\n                    usuario: '',\r\n                }}\r\n                enableReinitialize\r\n                validate={(valores) => {\r\n\r\n                    setCountTextArea(valores.informacion.length)\r\n\r\n                    let errores = {}\r\n\r\n                    if (getUsuarioSleccionado == undefined || getUsuarioSleccionado == \"\")\r\n                        errores.usuario = 'LA DEPENDENCIA SELECCIONADA NO TIENE UN JEFE ASIGNADO';\r\n\r\n                    if (!valores.informacion) {\r\n                        errores.informacion = 'Debe ingresar un valor';\r\n                    } else if (valores.informacion.length <= getMinimoTextArea) {\r\n                        errores.informacion = 'La descripción debe tener almenos ' + getMinimoTextArea + ' caracteres';\r\n                    }\r\n\r\n                    if (valores.informacion) {\r\n                        if (containsSpecialChars(valores.informacion))\r\n                            errores.informacion = 'Tiene caracteres inválidos';\r\n                    }\r\n\r\n                    return errores;\r\n                }}\r\n                onSubmit={(valores, { resetForm }) => {\r\n                    enviarDatos(valores);\r\n                }}\r\n            >\r\n                {({ errors }) => (\r\n                    <Form>\r\n                        <div className=\"w2d_block let\">\r\n                            <nav aria-label=\"breadcrumb\">\r\n                                <ol className=\"breadcrumb breadcrumb-alt push\">\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/MisPendientes`}><small>Mis Pendientes</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <Link underline=\"hover\" className=\"text-dark\" to={`/RamasProceso/`} state={{ from: from }}><small>Ramas del proceso</small></Link></li>\r\n                                    <li className=\"breadcrumb-item\"> <small>Enviar a otra dependencia</small></li>\r\n                                </ol>\r\n                            </nav>\r\n                        </div>\r\n                        <div className=\"block block-themed\">\r\n                            <div className=\"block-header\">\r\n                                <h3 className=\"block-title\">SINPROC NO {from.radicado} <strong> VIGENCIA: {from.vigencia} :: ENVIAR A OTRA DEPENDENCIA</strong></h3>\r\n                            </div>\r\n                            {\r\n                                getListaDependenciaDestino?.data.length > 0\r\n                                ?\r\n                                    <>\r\n                                        <div className=\"block-content\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"dependenciaDestino\">SELECCIONE LA DEPENDENCIA DESTINO<span className=\"text-danger\">*</span></label>\r\n                                                        <Field as=\"select\" className=\"form-control\" id=\"dependenciaDestino\" name=\"dependenciaDestino\" value={getDependenciaSeleccionada} onChange={selectChangeDependencia}>\r\n                                                            <option value=\"\">Por favor seleccione</option>\r\n                                                            {getRespuestaDependenciaDestino ? selectDependenciaDestino() : null}\r\n                                                        </Field>\r\n                                                        <ErrorMessage name=\"dependenciaDestino\" component={() => (<span className=\"text-danger\">{errors.dependenciaDestino}</span>)} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                {\r\n                                                    (!getEnviaaJefe && getDependenciaSeleccionada != '') ? (\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <label>{getTextoTitulo.toUpperCase()}</label><br />\r\n                                                            <div className=\"form-group\">\r\n                                                                <Field value={getUsuarioSleccionado} onChange={handleInputChange} as=\"select\" className=\"form-control\" id=\"usuario\" name=\"usuario\">\r\n                                                                    <option value=\"\">Por favor seleccione</option>\r\n                                                                    {listaUsuariosDependencia()}\r\n                                                                </Field>\r\n                                                                <ErrorMessage name=\"usuario\" component={() => (<span className=\"text-danger\">{errors.usuario}</span>)} />\r\n                                                            </div>\r\n                                                            <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                                                <thead className='bg-primary text-white'>\r\n                                                                    <tr>\r\n                                                                        <th>DEPENDENCIA ORIGEN</th>\r\n                                                                        <th>DEPENDENCIA DESTINO</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <td>\r\n                                                                            {\r\n                                                                                (getUser().nombre_dependencia != null) ? (getUser().nombre_dependencia.nombre) : \"SIN ESPECIFICAR\"\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {getDependenciaDestino ? getDependenciaDestino : \"SIN ESPECIFICAR\"}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                }\r\n                                                {\r\n                                                    (getEnviaaJefe && getDependenciaSeleccionada != '') ? (\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <label>{getTextoTitulo.toUpperCase()}</label><br />\r\n                                                            <ErrorMessage name=\"usuario\" component={() => (<span className=\"text-danger\">{errors.usuario}</span>)} />\r\n                                                            <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                                                <tbody>\r\n                                                                    {cargarUsuuarioJefe()}\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                            <table className=\"table table-bordered table-striped table-vcenter js-dataTable-full\">\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        <th>DEPENDENCIA ORIGEN</th>\r\n                                                                        <th>DEPENDENCIA DESTINO</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <td>\r\n                                                                            {\r\n                                                                                (getUser().nombre_dependencia != null) ? (getUser().nombre_dependencia.nombre) : \"SIN ESPECIFICAR\"\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                        <td>\r\n                                                                            {getDependenciaDestino ? getDependenciaDestino : \"SIN ESPECIFICAR\"}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                }\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"informacion\">OBSERVACIONES <span className=\"text-danger\">*</span></label>\r\n                                                        <Field as=\"textarea\" className=\"form-control\" id=\"informacion\" name=\"informacion\" rows=\"6\" placeholder=\"INFORMACIÓN PARA SU REMISIÓN...\"\r\n                                                            maxLength={getMaximoTextArea} minLength={getMinimoTextArea}></Field>\r\n                                                        <div className=\"text-right\">\r\n                                                            <span className=\"text-primary\">{countTextArea} / {getMaximoTextArea}</span>\r\n                                                        </div>\r\n                                                        <ErrorMessage name=\"informacion\" component={() => (<span className=\"text-danger\">{errors.informacion}</span>)} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"block-content block-content-full text-right\">\r\n                                                <button type=\"submit\" className=\"btn btn-rounded btn-primary\" disabled={!getHabilitarBotonRemitir} >REMITIR</button>\r\n                                                <Link to={'/Transacciones'} state={{ from: from, selected_id_etapa: selected_id_etapa }} className=\"font-size-h5 font-w600\" >\r\n                                                    <button type=\"button\" className=\"btn btn-rounded btn-outline-primary\">{global.Constants.BOTON_NOMBRE.CANCELAR}</button>\r\n                                                </Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                :\r\n                                <>\r\n                                    <br></br>\r\n                                    <div className=\"alert alert-warning alert-dismissable\" role=\"alert\">\r\n                                        <h3 className=\"alert-heading font-size-h4 my-2\">INFORMACIÓN</h3>\r\n                                        <p>Para enviar el proceso disciplinario, es necesario configurar al menos una dependencia de destino. Si no se configura ninguna, no será posible remitir el expediente a otras dependencias.</p>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EnviarAotraDependencia;"],"mappings":"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"},"metadata":{},"sourceType":"module"}